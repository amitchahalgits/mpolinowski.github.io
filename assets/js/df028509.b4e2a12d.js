"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[93581],{3905:(t,a,n)=>{n.d(a,{Zo:()=>m,kt:()=>N});var e=n(67294);function l(t,a,n){return a in t?Object.defineProperty(t,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[a]=n,t}function r(t,a){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(t);a&&(e=e.filter((function(a){return Object.getOwnPropertyDescriptor(t,a).enumerable}))),n.push.apply(n,e)}return n}function i(t){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){l(t,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(t,a,Object.getOwnPropertyDescriptor(n,a))}))}return t}function p(t,a){if(null==t)return{};var n,e,l=function(t,a){if(null==t)return{};var n,e,l={},r=Object.keys(t);for(e=0;e<r.length;e++)n=r[e],a.indexOf(n)>=0||(l[n]=t[n]);return l}(t,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(e=0;e<r.length;e++)n=r[e],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(l[n]=t[n])}return l}var d=e.createContext({}),u=function(t){var a=e.useContext(d),n=a;return t&&(n="function"==typeof t?t(a):i(i({},a),t)),n},m=function(t){var a=u(t.components);return e.createElement(d.Provider,{value:a},t.children)},k={inlineCode:"code",wrapper:function(t){var a=t.children;return e.createElement(e.Fragment,{},a)}},g=e.forwardRef((function(t,a){var n=t.components,l=t.mdxType,r=t.originalType,d=t.parentName,m=p(t,["components","mdxType","originalType","parentName"]),g=u(n),N=l,o=g["".concat(d,".").concat(N)]||g[N]||k[N]||r;return n?e.createElement(o,i(i({ref:a},m),{},{components:n})):e.createElement(o,i({ref:a},m))}));function N(t,a){var n=arguments,l=a&&a.mdxType;if("string"==typeof t||l){var r=n.length,i=new Array(r);i[0]=g;var p={};for(var d in a)hasOwnProperty.call(a,d)&&(p[d]=a[d]);p.originalType=t,p.mdxType="string"==typeof t?t:l,i[1]=p;for(var u=2;u<r;u++)i[u]=n[u];return e.createElement.apply(null,i)}return e.createElement.apply(null,n)}g.displayName="MDXCreateElement"},45986:(t,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>i,default:()=>k,frontMatter:()=>r,metadata:()=>p,toc:()=>u});var e=n(87462),l=(n(67294),n(3905));const r={sidebar_position:4630,slug:"2023-06-18",title:"AutoML with AutoGluon for Tabular Data",authors:"mpolinowski",tags:["Python","Machine Learning","AutoGluon","Cheating"],description:"Using Amazon SageMaker / AutoGluon to find your perfect model fit."},i=void 0,p={unversionedId:"IoT-and-Machine-Learning/AIOps/2023-06-18-automl-with-autogluon-tabular-data/index",id:"IoT-and-Machine-Learning/AIOps/2023-06-18-automl-with-autogluon-tabular-data/index",title:"AutoML with AutoGluon for Tabular Data",description:"Using Amazon SageMaker / AutoGluon to find your perfect model fit.",source:"@site/docs/IoT-and-Machine-Learning/AIOps/2023-06-18-automl-with-autogluon-tabular-data/index.md",sourceDirName:"IoT-and-Machine-Learning/AIOps/2023-06-18-automl-with-autogluon-tabular-data",slug:"/IoT-and-Machine-Learning/AIOps/2023-06-18-automl-with-autogluon-tabular-data/2023-06-18",permalink:"/docs/IoT-and-Machine-Learning/AIOps/2023-06-18-automl-with-autogluon-tabular-data/2023-06-18",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IoT-and-Machine-Learning/AIOps/2023-06-18-automl-with-autogluon-tabular-data/index.md",tags:[{label:"Python",permalink:"/docs/tags/python"},{label:"Machine Learning",permalink:"/docs/tags/machine-learning"},{label:"AutoGluon",permalink:"/docs/tags/auto-gluon"},{label:"Cheating",permalink:"/docs/tags/cheating"}],version:"current",sidebarPosition:4630,frontMatter:{sidebar_position:4630,slug:"2023-06-18",title:"AutoML with AutoGluon for Tabular Data",authors:"mpolinowski",tags:["Python","Machine Learning","AutoGluon","Cheating"],description:"Using Amazon SageMaker / AutoGluon to find your perfect model fit."},sidebar:"tutorialSidebar",previous:{title:"AutoML with AutoGluon for Multi-Modal Data NLP",permalink:"/docs/IoT-and-Machine-Learning/AIOps/2023-06-21-automl-with-autogluon-multiclass-nlp/2023-06-21"},next:{title:"Serving your SciKit Learn Model as a Prediction API",permalink:"/docs/IoT-and-Machine-Learning/AIOps/2023-06-17-scikit-learn-model-deployment/2023-06-17"}},d={},u=[{value:"Installation",id:"installation",level:2},{value:"Tabular Data Classification",id:"tabular-data-classification",level:2},{value:"Classification Model",id:"classification-model",level:3},{value:"Data Preprocessing",id:"data-preprocessing",level:4},{value:"Model Training",id:"model-training",level:4},{value:"Model Loading",id:"model-loading",level:4},{value:"Model Testing Model Testing",id:"model-testing-model-testing",level:4},{value:"Feature Interpretability",id:"feature-interpretability",level:4},{value:"Running Predictions",id:"running-predictions",level:4},{value:"Tabular Data Regression",id:"tabular-data-regression",level:2},{value:"Data Preprocessing",id:"data-preprocessing-1",level:3},{value:"Model Training",id:"model-training-1",level:3},{value:"Model Loading",id:"model-loading-1",level:4},{value:"Model Testing Model Testing",id:"model-testing-model-testing-1",level:4},{value:"Feature Interpretability",id:"feature-interpretability-1",level:4},{value:"Running Predictions",id:"running-predictions-1",level:4},{value:"Customizations",id:"customizations",level:2},{value:"Inference Constraints",id:"inference-constraints",level:3},{value:"Hyperparameter Tuning",id:"hyperparameter-tuning",level:3},{value:"AutoGluon Presets",id:"autogluon-presets",level:3},{value:"Model Deployment",id:"model-deployment",level:2}],m={toc:u};function k(t){let{components:a,...r}=t;return(0,l.kt)("wrapper",(0,e.Z)({},m,r,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"TST, HongKong",src:n(15158).Z,width:"1500",height:"575"})),(0,l.kt)("h1",{id:"automl-with-autogluon-for-tabular-data"},"AutoML with AutoGluon for Tabular Data"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Part 1: AutoML with AutoGluon for Tabular Data"),(0,l.kt)("li",{parentName:"ul"},"Part 2: ",(0,l.kt)("a",{parentName:"li",href:"/docs/IoT-and-Machine-Learning/AIOps/2023-06-21-automl-with-autogluon-multiclass-nlp/2023-06-21"},"AutoML with AutoGluon for Multi-Modal Data")),(0,l.kt)("li",{parentName:"ul"},"Part 3: ",(0,l.kt)("a",{parentName:"li",href:"/docs/IoT-and-Machine-Learning/AIOps/2023-06-23-automl-with-autogluon-timeseries-forecast/2023-06-23"},"AutoML with AutoGluon for Timeseries Forecasts"))),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/autogluon/autogluon"},"AutoGluon")," automates machine learning tasks enabling you to easily achieve strong predictive performance in your applications. With just a few lines of code, you can train and deploy high-accuracy machine learning and deep learning models on image, text, time series, and tabular data."),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/mpolinowski/automl-gluon-tabular-data"},"Github Repository")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#automl-with-autogluon-for-tabular-data"},"AutoML with AutoGluon for Tabular Data"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#installation"},"Installation")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#tabular-data-classification"},"Tabular Data Classification"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#classification-model"},"Classification Model"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#data-preprocessing"},"Data Preprocessing")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#model-training"},"Model Training")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#model-loading"},"Model Loading")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#model-testing-model-testing"},"Model Testing Model Testing")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#feature-interpretability"},"Feature Interpretability")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#running-predictions"},"Running Predictions")))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#tabular-data-regression"},"Tabular Data Regression"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#data-preprocessing-1"},"Data Preprocessing")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#model-training-1"},"Model Training"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#model-loading-1"},"Model Loading")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#model-testing-model-testing-1"},"Model Testing Model Testing")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#feature-interpretability-1"},"Feature Interpretability")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#running-predictions-1"},"Running Predictions")))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#customizations"},"Customizations"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#inference-constraints"},"Inference Constraints")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#hyperparameter-tuning"},"Hyperparameter Tuning")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#autogluon-presets"},"AutoGluon Presets")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#model-deployment"},"Model Deployment"))))),(0,l.kt)("h2",{id:"installation"},"Installation"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://auto.gluon.ai/stable/install.html"},"Installing AutoGluon")," with GPU support:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'pip install -U pip\npip install -U setuptools wheel\npip install torch==1.13.1+cu117 torchvision==0.14.1+cu117 --extra-index-url https://download.pytorch.org/whl/cu117\npip install autogluon\n# for visualizations\npip install bokeh==2.0.1"\n')),(0,l.kt)("h2",{id:"tabular-data-classification"},"Tabular Data Classification"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# get dataset\n!wget https://github.com/mpolinowski/hotel-booking-dataset/raw/master/datasets/hotel_bookings.csv -P datase\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"from autogluon.tabular import TabularDataset, TabularPredictor\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"SEED = 42\nMODEL_PATH = 'model'\n")),(0,l.kt)("h3",{id:"classification-model"},"Classification Model"),(0,l.kt)("h4",{id:"data-preprocessing"},"Data Preprocessing"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data = TabularDataset('dataset/hotel_bookings.csv')\ndata.head(5).transpose()\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"0"),(0,l.kt)("th",{parentName:"tr",align:null},"1"),(0,l.kt)("th",{parentName:"tr",align:null},"2"),(0,l.kt)("th",{parentName:"tr",align:null},"3"),(0,l.kt)("th",{parentName:"tr",align:null},"4"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"hotel"),(0,l.kt)("td",{parentName:"tr",align:null},"Resort Hotel"),(0,l.kt)("td",{parentName:"tr",align:null},"Resort Hotel"),(0,l.kt)("td",{parentName:"tr",align:null},"Resort Hotel"),(0,l.kt)("td",{parentName:"tr",align:null},"Resort Hotel"),(0,l.kt)("td",{parentName:"tr",align:null},"Resort Hotel")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"is_canceled"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"lead_time"),(0,l.kt)("td",{parentName:"tr",align:null},"342"),(0,l.kt)("td",{parentName:"tr",align:null},"737"),(0,l.kt)("td",{parentName:"tr",align:null},"7"),(0,l.kt)("td",{parentName:"tr",align:null},"13"),(0,l.kt)("td",{parentName:"tr",align:null},"14")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"arrival_date_year"),(0,l.kt)("td",{parentName:"tr",align:null},"2015"),(0,l.kt)("td",{parentName:"tr",align:null},"2015"),(0,l.kt)("td",{parentName:"tr",align:null},"2015"),(0,l.kt)("td",{parentName:"tr",align:null},"2015"),(0,l.kt)("td",{parentName:"tr",align:null},"2015")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"arrival_date_month"),(0,l.kt)("td",{parentName:"tr",align:null},"July"),(0,l.kt)("td",{parentName:"tr",align:null},"July"),(0,l.kt)("td",{parentName:"tr",align:null},"July"),(0,l.kt)("td",{parentName:"tr",align:null},"July"),(0,l.kt)("td",{parentName:"tr",align:null},"July")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"arrival_date_week_number"),(0,l.kt)("td",{parentName:"tr",align:null},"27"),(0,l.kt)("td",{parentName:"tr",align:null},"27"),(0,l.kt)("td",{parentName:"tr",align:null},"27"),(0,l.kt)("td",{parentName:"tr",align:null},"27"),(0,l.kt)("td",{parentName:"tr",align:null},"27")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"arrival_date_day_of_month"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"stays_in_weekend_nights"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"stays_in_week_nights"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"2")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"adults"),(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"2")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"children"),(0,l.kt)("td",{parentName:"tr",align:null},"0.0"),(0,l.kt)("td",{parentName:"tr",align:null},"0.0"),(0,l.kt)("td",{parentName:"tr",align:null},"0.0"),(0,l.kt)("td",{parentName:"tr",align:null},"0.0"),(0,l.kt)("td",{parentName:"tr",align:null},"0.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"babies"),(0,l.kt)("td",{parentName:"tr",align:null},"Model Testingype"),(0,l.kt)("td",{parentName:"tr",align:null},"No Deposit"),(0,l.kt)("td",{parentName:"tr",align:null},"No Deposit"),(0,l.kt)("td",{parentName:"tr",align:null},"No Deposit"),(0,l.kt)("td",{parentName:"tr",align:null},"No Deposit")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"agent"),(0,l.kt)("td",{parentName:"tr",align:null},"NaN"),(0,l.kt)("td",{parentName:"tr",align:null},"NaN"),(0,l.kt)("td",{parentName:"tr",align:null},"NaN"),(0,l.kt)("td",{parentName:"tr",align:null},"304.0"),(0,l.kt)("td",{parentName:"tr",align:null},"240.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"company"),(0,l.kt)("td",{parentName:"tr",align:null},"NaN"),(0,l.kt)("td",{parentName:"tr",align:null},"NaN"),(0,l.kt)("td",{parentName:"tr",align:null},"NaN"),(0,l.kt)("td",{parentName:"tr",align:null},"NaN"),(0,l.kt)("td",{parentName:"tr",align:null},"NaN")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"days_in_waiting_list"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"customer_type"),(0,l.kt)("td",{parentName:"tr",align:null},"Transient"),(0,l.kt)("td",{parentName:"tr",align:null},"Transient"),(0,l.kt)("td",{parentName:"tr",align:null},"Transient"),(0,l.kt)("td",{parentName:"tr",align:null},"Transient"),(0,l.kt)("td",{parentName:"tr",align:null},"Transient")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"adr"),(0,l.kt)("td",{parentName:"tr",align:null},"0.0"),(0,l.kt)("td",{parentName:"tr",align:null},"0.0"),(0,l.kt)("td",{parentName:"tr",align:null},"75.0"),(0,l.kt)("td",{parentName:"tr",align:null},"75.0"),(0,l.kt)("td",{parentName:"tr",align:null},"98.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"required_car_parking_spaces"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"total_of_special_requests"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"reservation_status"),(0,l.kt)("td",{parentName:"tr",align:null},"Check-Out"),(0,l.kt)("td",{parentName:"tr",align:null},"Check-Out"),(0,l.kt)("td",{parentName:"tr",align:null},"Check-Out"),(0,l.kt)("td",{parentName:"tr",align:null},"Check-Out"),(0,l.kt)("td",{parentName:"tr",align:null},"Check-Out")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"reservation_status_date"),(0,l.kt)("td",{parentName:"tr",align:null},"01-07-15"),(0,l.kt)("td",{parentName:"tr",align:null},"01-07-15"),(0,l.kt)("td",{parentName:"tr",align:null},"02-07-15"),(0,l.kt)("td",{parentName:"tr",align:null},"02-07-15"),(0,l.kt)("td",{parentName:"tr",align:null},"03-07-15")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# the are two columns for the lable is_canceled and reservation_status\n# only keep one and make it the true label\ndata = data.drop(['is_canceled'], axis=1)\ndata = data.drop(['reservation_status_date'], axis=1)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data.info()\n# <class 'autogluon.core.dataset.TabularDataset'>\n# RangeIndex: 119390 entries, 0 to 119389\n# Data columns (total 30 columns)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# take small random sample to get started => 10%\ndata_sample = data.sample(frac=0.1 , random_state=SEED)\ndata_sample.describe()\n")),(0,l.kt)("p",null,"|  | lead_time | arrival_date_year | arrival_date_week_number | arrival_date_day_of_month | stays_in_weekend_nights | stays_in_week_nights | adults | children | babies | is_repeated_guest | previous_cancellations | pr_Reg\n| min | 0.000000 | 2015.000000 | 1.000000 | 1.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 1.000000 | 9.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 |\n| 25% | 19.000000 | 2016.000000 | 16.000000 | 8.000000 | 0.000000 | 1.000000 | 2.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 9.000000 | 67.000000 | 0.000000 | 69.000000 | 0.000000 | 0.000000 |\n| 50% | 70.000000 | 2016.000000 | 27.000000 | 16.000000 | 1.000000 | 2.000000 | 2.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 14.000000 | 178.000000 | 0.000000 | 95.000000 | 0.000000 | 0.000000 |\n| 75% | 162.000000 | 2017.000000 | 38.000000 | 24.000000 | 2.000000 | 3.000000 | 2.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 0.000000 | 229.000000 | 254.000000 | 0.000000 | 126.000000 | 0.000000 | 1.000000 |\n| max | 629.000000 | 2017.000000 | 53.000000 | 31.000000 | 12.000000 | 30.000000 | 55.000000 | 3.000000 | 9.000000 | 1.000000 | 26.000000 | 56.000000 | 14.000000 | 531.000000 | 525.000000 | 391.000000 | 451.500000 | 3.000000 | 5.000000 |"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# train/test split\nprint(len(data_sample)*0.8)\n# 9551.2\ntrain_size = 9550\ntrain_data = data_sample.sample(n=train_size, random_state=SEED)\ntest_data = data_sample.drop(train_data.index)\nprint(len(train_data), len(test_data))\n# 9550 2389\n")),(0,l.kt)("h4",{id:"model-training"},"Model Training"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# train a binary classification model on booking cancellation\npredictor = TabularPredictor(label='reservation_status', path=MODEL_PATH)\npredictor.fit(train_data)\n\n# AutoGluon infers your prediction problem is: 'multiclass' (because dtype of label-column == object).\n# 3 unique label values:  ['Check-Out', 'Canceled', 'No-Show']\n    \n# AutoGluon training complete, total runtime = 56.25s ... Best model: \"WeightedEnsemble_L2\"\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"predictor.fit_summary()\n")),(0,l.kt)("p",null,"Estimated performance of each model:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"model"),(0,l.kt)("th",{parentName:"tr",align:null},"score_val"),(0,l.kt)("th",{parentName:"tr",align:null},"pred_time_val"),(0,l.kt)("th",{parentName:"tr",align:null},"fit_time"),(0,l.kt)("th",{parentName:"tr",align:null},"pred_time_val_marginal"),(0,l.kt)("th",{parentName:"tr",align:null},"fit_time_marginal"),(0,l.kt)("th",{parentName:"tr",align:null},"stack_level"),(0,l.kt)("th",{parentName:"tr",align:null},"can_infer"),(0,l.kt)("th",{parentName:"tr",align:null},"fit_order"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"WeightedEnsemble_L2"),(0,l.kt)("td",{parentName:"tr",align:null},"0.875393"),(0,l.kt)("td",{parentName:"tr",align:null},"0.047837"),(0,l.kt)("td",{parentName:"tr",align:null},"17.448067"),(0,l.kt)("td",{parentName:"tr",align:null},"0.000508"),(0,l.kt)("td",{parentName:"tr",align:null},"0.399006"),(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"14")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"XGBoost"),(0,l.kt)("td",{parentName:"tr",align:null},"0.874346"),(0,l.kt)("td",{parentName:"tr",align:null},"0.028096"),(0,l.kt)("td",{parentName:"tr",align:null},"3.322933"),(0,l.kt)("td",{parentName:"tr",align:null},"0.028096"),(0,l.kt)("td",{parentName:"tr",align:null},"3.322933"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"11")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"LightGBMLarge"),(0,l.kt)("td",{parentName:"tr",align:null},"0.869110"),(0,l.kt)("td",{parentName:"tr",align:null},"0.036332"),(0,l.kt)("td",{parentName:"tr",align:null},"4.947290"),(0,l.kt)("td",{parentName:"tr",align:null},"0.036332"),(0,l.kt)("td",{parentName:"tr",align:null},"4.947290"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"13")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"LightGBM"),(0,l.kt)("td",{parentName:"tr",align:null},"0.865969"),(0,l.kt)("td",{parentName:"tr",align:null},"0.037277"),(0,l.kt)("td",{parentName:"tr",align:null},"2.222120"),(0,l.kt)("td",{parentName:"tr",align:null},"0.037277"),(0,l.kt)("td",{parentName:"tr",align:null},"2.222120"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"5")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"LightGBMXT"),(0,l.kt)("td",{parentName:"tr",align:null},"0.863874"),(0,l.kt)("td",{parentName:"tr",align:null},"0.055051"),(0,l.kt)("td",{parentName:"tr",align:null},"2.591614"),(0,l.kt)("td",{parentName:"tr",align:null},"0.055051"),(0,l.kt)("td",{parentName:"tr",align:null},"2.591614"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"4")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"RandomForestGini"),(0,l.kt)("td",{parentName:"tr",align:null},"0.857592"),(0,l.kt)("td",{parentName:"tr",align:null},"0.061962"),(0,l.kt)("td",{parentName:"tr",align:null},"0.840476"),(0,l.kt)("td",{parentName:"tr",align:null},"0.061962"),(0,l.kt)("td",{parentName:"tr",align:null},"0.840476"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"6")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"6"),(0,l.kt)("td",{parentName:"tr",align:null},"CatBoost"),(0,l.kt)("td",{parentName:"tr",align:null},"0.856545"),(0,l.kt)("td",{parentName:"tr",align:null},"0.011194"),(0,l.kt)("td",{parentName:"tr",align:null},"14.661669"),(0,l.kt)("td",{parentName:"tr",align:null},"0.011194"),(0,l.kt)("td",{parentName:"tr",align:null},"14.661669"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"8")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"7"),(0,l.kt)("td",{parentName:"tr",align:null},"RandomForestEntr"),(0,l.kt)("td",{parentName:"tr",align:null},"0.854450"),(0,l.kt)("td",{parentName:"tr",align:null},"0.062001"),(0,l.kt)("td",{parentName:"tr",align:null},"0.905256"),(0,l.kt)("td",{parentName:"tr",align:null},"0.062001"),(0,l.kt)("td",{parentName:"tr",align:null},"0.905256"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"7")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"8"),(0,l.kt)("td",{parentName:"tr",align:null},"ExtraTreesEntr"),(0,l.kt)("td",{parentName:"tr",align:null},"0.850262"),(0,l.kt)("td",{parentName:"tr",align:null},"0.062787"),(0,l.kt)("td",{parentName:"tr",align:null},"0.729818"),(0,l.kt)("td",{parentName:"tr",align:null},"0.062787"),(0,l.kt)("td",{parentName:"tr",align:null},"0.729818"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"10")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"9"),(0,l.kt)("td",{parentName:"tr",align:null},"ExtraTreesGini"),(0,l.kt)("td",{parentName:"tr",align:null},"0.849215"),(0,l.kt)("td",{parentName:"tr",align:null},"0.063442"),(0,l.kt)("td",{parentName:"tr",align:null},"0.799020"),(0,l.kt)("td",{parentName:"tr",align:null},"0.063442"),(0,l.kt)("td",{parentName:"tr",align:null},"0.799020"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"9")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"10"),(0,l.kt)("td",{parentName:"tr",align:null},"NeuralNetTorch"),(0,l.kt)("td",{parentName:"tr",align:null},"0.847120"),(0,l.kt)("td",{parentName:"tr",align:null},"0.019233"),(0,l.kt)("td",{parentName:"tr",align:null},"13.726129"),(0,l.kt)("td",{parentName:"tr",align:null},"0.019233"),(0,l.kt)("td",{parentName:"tr",align:null},"13.726129"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"12")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"11"),(0,l.kt)("td",{parentName:"tr",align:null},"NeuralNetFastAI"),(0,l.kt)("td",{parentName:"tr",align:null},"0.838743"),(0,l.kt)("td",{parentName:"tr",align:null},"0.018830"),(0,l.kt)("td",{parentName:"tr",align:null},"7.619330"),(0,l.kt)("td",{parentName:"tr",align:null},"0.018830"),(0,l.kt)("td",{parentName:"tr",align:null},"7.619330"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"12"),(0,l.kt)("td",{parentName:"tr",align:null},"KNeighborsDist"),(0,l.kt)("td",{parentName:"tr",align:null},"0.707853"),(0,l.kt)("td",{parentName:"tr",align:null},"0.013923"),(0,l.kt)("td",{parentName:"tr",align:null},"0.007954"),(0,l.kt)("td",{parentName:"tr",align:null},"0.013923"),(0,l.kt)("td",{parentName:"tr",align:null},"0.007954"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"2")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"13"),(0,l.kt)("td",{parentName:"tr",align:null},"KNeighborsUnif"),(0,l.kt)("td",{parentName:"tr",align:null},"0.689005"),(0,l.kt)("td",{parentName:"tr",align:null},"0.034556"),(0,l.kt)("td",{parentName:"tr",align:null},"0.009681"),(0,l.kt)("td",{parentName:"tr",align:null},"0.034556"),(0,l.kt)("td",{parentName:"tr",align:null},"0.009681"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"1")))),(0,l.kt)("p",null,"Number of models trained: 14\nTypes of models trained:\n{'XTModel', 'CatBoostModel', 'RFModel', 'TabularNeuralNetTorchModel', 'NNFastAiTabularModel', 'LGBModel', 'KNNModel', 'XGBoostModel', 'WeightedEnsembleModel'}"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"leaderboard=pd.DataFrame(predictor.leaderboard())\n\nplt.figure(figsize=(8, 7))\n\nsns.set(style='darkgrid')\n\nsns.scatterplot(\n    x='pred_time_val',\n    y='score_val',\n    data=leaderboard,\n    s=300,\n    alpha=0.5,\n    hue='model',\n    palette='tab20',\n    style='fit_time'\n)\n\nplt.title('Prediction Time vs Accuracy Score')\nplt.xlabel('Average Time for Predictions')\nplt.ylabel('Accuracy Score')\nplt.legend(bbox_to_anchor=(1.01,1.01))\n\nplt.savefig('assets/AutoML_with_AutoGluon_01.webp', bbox_inches='tight')\n")),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"AutoML with AutoGluon for Tabular Data",src:n(45840).Z,width:"977",height:"730"})),(0,l.kt)("h4",{id:"model-loading"},"Model Loading"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'# load best model\npredictor = TabularPredictor.load("model/")\n')),(0,l.kt)("h4",{id:"model-testing-model-testing"},"Model Testing Model Testing"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"X_test = test_data.drop(columns=['reservation_status'] )\ny_test = test_data['reservation_status']\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"y_pred = predictor.predict(X_test)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"eval_metrics = predictor.evaluate_predictions(y_true=y_test, y_pred=y_pred, auxiliary_metrics=True)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"array = np.array(list(eval_metrics.items()))\ndf = pd.DataFrame(array, columns = ['metric','value']).sort_values(by='value')\n\nplt.figure(figsize=(12,5))\nplt.bar(df['metric'], df['value'])\nplt.title('Evaluation Metrics')\n\nplt.savefig('assets/AutoML_with_AutoGluon_02.webp', bbox_inches='tight')\n")),(0,l.kt)("p",null," TrainingoGluon for Tabular Data](./AutoML_with_AutoGluon_02.webp)"),(0,l.kt)("h4",{id:"feature-interpretability"},"Feature Interpretability"),(0,l.kt)("p",null,"Get feature importance by conducting a ",(0,l.kt)("strong",{parentName:"p"},"Permutation-Shuffling")," test in AutoGluon. Shuffle one feature column, test how this effects prediction accuracy. The higher the effect the higher the features / columns importance. Negative effects show features that confuse the model, decrease the prediction accuracy and should be removed."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# add test dataset that must include the classifier (is_cancelled):\npredictor.feature_importance(test_data)\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"importance"),(0,l.kt)("th",{parentName:"tr",align:null},"stddev"),(0,l.kt)("th",{parentName:"tr",align:null},"p_value"),(0,l.kt)("th",{parentName:"tr",align:null},"n"),(0,l.kt)("th",{parentName:"tr",align:null},"p99_high"),(0,l.kt)("th",{parentName:"tr",align:null},"p99_low"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"country"),(0,l.kt)("td",{parentName:"tr",align:null},"0.061532"),(0,l.kt)("td",{parentName:"tr",align:null},"0.003076"),(0,l.kt)("td",{parentName:"tr",align:null},"7.468850e-07"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.067865"),(0,l.kt)("td",{parentName:"tr",align:null},"0.055199")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"deposit_type"),(0,l.kt)("td",{parentName:"tr",align:null},"0.058183"),(0,l.kt)("td",{parentName:"tr",align:null},"0.008815"),(0,l.kt)("td",{parentName:"tr",align:null},"6.133847e-05"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.076334"),(0,l.kt)("td",{parentName:"tr",align:null},"0.040033")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"total_of_special_requests"),(0,l.kt)("td",{parentName:"tr",align:null},"0.045626"),(0,l.kt)("td",{parentName:"tr",align:null},"0.006532"),(0,l.kt)("td",{parentName:"tr",align:null},"4.905663e-05"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.059075"),(0,l.kt)("td",{parentName:"tr",align:null},"0.032177")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"lead_time"),(0,l.kt)("td",{parentName:"tr",align:null},"0.038677"),(0,l.kt)("td",{parentName:"tr",align:null},"0.007045"),(0,l.kt)("td",{parentName:"tr",align:null},"1.264772e-04"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.053184"),(0,l.kt)("td",{parentName:"tr",align:null},"0.024171")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"agent"),(0,l.kt)("td",{parentName:"tr",align:null},"0.031394"),(0,l.kt)("td",{parentName:"tr",align:null},"0.003362"),(0,l.kt)("td",{parentName:"tr",align:null},"1.553978e-05"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.038316"),(0,l.kt)("td",{parentName:"tr",align:null},"0.024472")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"previous_cancellations"),(0,l.kt)("td",{parentName:"tr",align:null},"0.030222"),(0,l.kt)("td",{parentName:"tr",align:null},"0.002891"),(0,l.kt)("td",{parentName:"tr",align:null},"9.926338e-06"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.036174"),(0,l.kt)("td",{parentName:"tr",align:null},"0.024269")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"assigned_room_type"),(0,l.kt)("td",{parentName:"tr",align:null},"0.029217"),(0,l.kt)("td",{parentName:"tr",align:null},"0.003010"),(0,l.kt)("td",{parentName:"tr",align:null},"1.332357e-05"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.035414"),(0,l.kt)("td",{parentName:"tr",align:null},"0.023020")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"market_segment"),(0,l.kt)("td",{parentName:"tr",align:null},"0.028213"),(0,l.kt)("td",{parentName:"tr",align:null},"0.005106"),(0,l.kt)("td",{parentName:"tr",align:null},"1.233146e-04"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.038726"),(0,l.kt)("td",{parentName:"tr",align:null},"0.017699")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"reserved_room_type"),(0,l.kt)("td",{parentName:"tr",align:null},"0.023022"),(0,l.kt)("td",{parentName:"tr",align:null},"0.002529"),(0,l.kt)("td",{parentName:"tr",align:null},"1.719338e-05"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.028229"),(0,l.kt)("td",{parentName:"tr",align:null},"0.017815")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"required_car_parking_spaces"),(0,l.kt)("td",{parentName:"tr",align:null},"0.011469"),(0,l.kt)("td",{parentName:"tr",align:null},"0.001909"),(0,l.kt)("td",{parentName:"tr",align:null},"8.880361e-05"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.015400"),(0,l.kt)("td",{parentName:"tr",align:null},"0.007538")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"customer_type"),(0,l.kt)("td",{parentName:"tr",align:null},"0.010130"),(0,l.kt)("td",{parentName:"tr",align:null},"0.003593"),(0,l.kt)("td",{parentName:"tr",align:null},"1.619134e-03"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.017529"),(0,l.kt)("td",{parentName:"tr",align:null},"0.002731")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"arrival_date_year"),(0,l.kt)("td",{parentName:"tr",align:null},"0.007032"),(0,l.kt)("td",{parentName:"tr",align:null},"0.002703"),(0,l.kt)("td",{parentName:"tr",align:null},"2.173517e-03"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.012598"),(0,l.kt)("td",{parentName:"tr",align:null},"0.001467")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"booking_changes"),(0,l.kt)("td",{parentName:"tr",align:null},"0.006195"),(0,l.kt)("td",{parentName:"tr",align:null},"0.001711"),(0,l.kt)("td",{parentName:"tr",align:null},"6.319167e-04"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.009717"),(0,l.kt)("td",{parentName:"tr",align:null},"0.002673")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"adr"),(0,l.kt)("td",{parentName:"tr",align:null},"0.004604"),(0,l.kt)("td",{parentName:"tr",align:null},"0.002476"),(0,l.kt)("td",{parentName:"tr",align:null},"7.086297e-03"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.009703"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.000494")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"previous_bookings_not_canceled"),(0,l.kt)("td",{parentName:"tr",align:null},"0.003767"),(0,l.kt)("td",{parentName:"tr",align:null},"0.001751"),(0,l.kt)("td",{parentName:"tr",align:null},"4.290459e-03"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.007373"),(0,l.kt)("td",{parentName:"tr",align:null},"0.000162")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"company"),(0,l.kt)("td",{parentName:"tr",align:null},"0.003684"),(0,l.kt)("td",{parentName:"tr",align:null},"0.001761"),(0,l.kt)("td",{parentName:"tr",align:null},"4.733895e-03"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.007310"),(0,l.kt)("td",{parentName:"tr",align:null},"0.000058")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"children"),(0,l.kt)("td",{parentName:"tr",align:null},"0.003014"),(0,l.kt)("td",{parentName:"tr",align:null},"0.000546"),(0,l.kt)("td",{parentName:"tr",align:null},"1.235932e-04"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.004138"),(0,l.kt)("td",{parentName:"tr",align:null},"0.001890")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"arrival_date_week_number"),(0,l.kt)("td",{parentName:"tr",align:null},"0.002260"),(0,l.kt)("td",{parentName:"tr",align:null},"0.002706"),(0,l.kt)("td",{parentName:"tr",align:null},"6.760071e-02"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.007833"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.003312")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"meal"),(0,l.kt)("td",{parentName:"tr",align:null},"0.001005"),(0,l.kt)("td",{parentName:"tr",align:null},"0.001008"),(0,l.kt)("td",{parentName:"tr",align:null},"4.488794e-02"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.003080"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.001071")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"stays_in_weekend_nights"),(0,l.kt)("td",{parentName:"tr",align:null},"0.000921"),(0,l.kt)("td",{parentName:"tr",align:null},"0.001659"),(0,l.kt)("td",{parentName:"tr",align:null},"1.411190e-01"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.004336"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.002494")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"arrival_date_month"),(0,l.kt)("td",{parentName:"tr",align:null},"0.000670"),(0,l.kt)("td",{parentName:"tr",align:null},"0.001555"),(0,l.kt)("td",{parentName:"tr",align:null},"1.950213e-01"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.003871"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.002532")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"is_repeated_guest"),(0,l.kt)("td",{parentName:"tr",align:null},"0.000419"),(0,l.kt)("td",{parentName:"tr",align:null},"0.001184"),(0,l.kt)("td",{parentName:"tr",align:null},"2.367137e-01"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.002856"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.002019")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"distribution_channel"),(0,l.kt)("td",{parentName:"tr",align:null},"0.000335"),(0,l.kt)("td",{parentName:"tr",align:null},"0.001042"),(0,l.kt)("td",{parentName:"tr",align:null},"2.561126e-01"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.002481"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.001811")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"days_in_waiting_list"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.000335"),(0,l.kt)("td",{parentName:"tr",align:null},"0.000350"),(0,l.kt)("td",{parentName:"tr",align:null},"9.503497e-01"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.000386"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.001056")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"babies"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.000335"),(0,l.kt)("td",{parentName:"tr",align:null},"0.000459"),(0,l.kt)("td",{parentName:"tr",align:null},"9.110961e-01"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.000609"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.001279")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"adults"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.000753"),(0,l.kt)("td",{parentName:"tr",align:null},"0.002163"),(0,l.kt)("td",{parentName:"tr",align:null},"7.602366e-01"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.003700"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.005207")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"stays_in_week_nights"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.001005"),(0,l.kt)("td",{parentName:"tr",align:null},"0.002939"),(0,l.kt)("td",{parentName:"tr",align:null},"7.563611e-01"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.005047"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.007056")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"arrival_date_day_of_month"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.001005"),(0,l.kt)("td",{parentName:"tr",align:null},"0.002397"),(0,l.kt)("td",{parentName:"tr",align:null},"7.991062e-01"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.003931"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.005941")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"hotel"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.001088"),(0,l.kt)("td",{parentName:"tr",align:null},"0.002147"),(0,l.kt)("td",{parentName:"tr",align:null},"8.398613e-01"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.003332"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.005508")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"importance_df = predictor.feature_importance(test_data).reset_index()\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"plt.figure(figsize=(8,8))\nplt.title('Feature Importance')\nsns.set(style='darkgrid')\nsns.barplot(\n    data=importance_df,\n    y='index',\n    x='importance',\n    orient='horizontal'\n).set_ylabel('Feature')\n\nplt.savefig('assets/AutoML_with_AutoGluon_03.webp', bbox_inches='tight')\n")),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"AutoML with AutoGluon for Tabular Data",src:n(17156).Z,width:"928",height:"710"})),(0,l.kt)("h4",{id:"running-predictions"},"Running Predictions"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'test_booking = {\n  "hotel": "City Hotel",\n  "is_canceled": 0,\n  "lead_time": 214,\n  "arrival_date_year": 2017,\n  "arrival_date_month": "June",\n  "arrival_date_week_number": 23,\n  "arrival_date_day_of_month": 9,\n  "stays_in_weekend_nights": 1,\n  "stays_in_week_nights": 2,\n  "adults": 2,\n  "children": 0,\n  "babies": 0,\n  "meal": "BB",\n  "country": "GBR",\n  "market_segment": "Groups",\n  "distribution_channel": "Direct",\n  "is_repeated_guest": 0,\n  "previous_cancellations": 0,\n  "previous_bookings_not_canceled": 0,\n  "reserved_room_type": "D",\n  "assigned_room_type": "D",\n  "booking_changes": 1,\n  "deposit_type": "No Deposit",\n  "agent": 28,\n  "company": 153,\n  "days_in_waiting_list": 0,\n  "customer_type": "Transient",\n  "adr": 118.13,\n  "required_car_parking_spaces": 0,\n  "total_of_special_requests": 0,\n  "reservation_status": "Check-Out",\n  "reservation_status_date": "12-06-17"\n}\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# load booking into dataset\ntest_booking_df = TabularDataset.from_dict([test_booking])\ntest_booking_from_csv_df = TabularDataset('dataset/test_booking.csv')\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"predictor.predict(test_booking_df)\n# 0    Check-Out <- not cancelled\n# Name: is_canceled, dtype: int64\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"predictor.predict(test_booking_from_csv_df)\n# 0    Check-Out <- not cancelled\n# Name: is_canceled, dtype: int64\n")),(0,l.kt)("h2",{id:"tabular-data-regression"},"Tabular Data Regression"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# get dataset\n! wget https://raw.githubusercontent.com/mgrafals/Uber-Data-Engineering-Project/main/uber_data.csv -P dataset\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"from autogluon.tabular import TabularDataset, TabularPredictor\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"SEED = 42\nMODEL_PATH = 'model'\n")),(0,l.kt)("h3",{id:"data-preprocessing-1"},"Data Preprocessing"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data = TabularDataset('dataset/uber_data.csv')\ndata.head().transpose()\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"0"),(0,l.kt)("th",{parentName:"tr",align:null},"1"),(0,l.kt)("th",{parentName:"tr",align:null},"2"),(0,l.kt)("th",{parentName:"tr",align:null},"3"),(0,l.kt)("th",{parentName:"tr",align:null},"4"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"VendorID"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"2")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"tpep_pickup_datetime"),(0,l.kt)("td",{parentName:"tr",align:null},"2016-03-01 00:00:00"),(0,l.kt)("td",{parentName:"tr",align:null},"2016-03-01 00:00:00"),(0,l.kt)("td",{parentName:"tr",align:null},"2016-03-01 00:00:00"),(0,l.kt)("td",{parentName:"tr",align:null},"2016-03-01 00:00:00"),(0,l.kt)("td",{parentName:"tr",align:null},"2016-03-01 00:00:00")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"tpep_dropoff_datetime"),(0,l.kt)("td",{parentName:"tr",align:null},"2016-03-01 00:07:55"),(0,l.kt)("td",{parentName:"tr",align:null},"2016-03-01 00:11:06"),(0,l.kt)("td",{parentName:"tr",align:null},"2016-03-01 00:31:06"),(0,l.kt)("td",{parentName:"tr",align:null},"2016-03-01 00:00:00"),(0,l.kt)("td",{parentName:"tr",align:null},"2016-03-01 00:00:00")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"passenger_count"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"5")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"trip_distance"),(0,l.kt)("td",{parentName:"tr",align:null},"2.5"),(0,l.kt)("td",{parentName:"tr",align:null},"2.9"),(0,l.kt)("td",{parentName:"tr",align:null},"19.98"),(0,l.kt)("td",{parentName:"tr",align:null},"10.78"),(0,l.kt)("td",{parentName:"tr",align:null},"30.43")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"pickup_longitude"),(0,l.kt)("td",{parentName:"tr",align:null},"-73.976746"),(0,l.kt)("td",{parentName:"tr",align:null},"-73.983482"),(0,l.kt)("td",{parentName:"tr",align:null},"-73.782021"),(0,l.kt)("td",{parentName:"tr",align:null},"-73.863419"),(0,l.kt)("td",{parentName:"tr",align:null},"-73.971741")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"pickup_latitude"),(0,l.kt)("td",{parentName:"tr",align:null},"40.765152"),(0,l.kt)("td",{parentName:"tr",align:null},"40.767925"),(0,l.kt)("td",{parentName:"tr",align:null},"40.64481"),(0,l.kt)("td",{parentName:"tr",align:null},"40.769814"),(0,l.kt)("td",{parentName:"tr",align:null},"40.792183")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"RatecodeID"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"store_and_fwd_flag"),(0,l.kt)("td",{parentName:"tr",align:null},"N"),(0,l.kt)("td",{parentName:"tr",align:null},"N"),(0,l.kt)("td",{parentName:"tr",align:null},"N"),(0,l.kt)("td",{parentName:"tr",align:null},"N"),(0,l.kt)("td",{parentName:"tr",align:null},"N")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"dropoff_longitude"),(0,l.kt)("td",{parentName:"tr",align:null},"-74.004265"),(0,l.kt)("td",{parentName:"tr",align:null},"-74.005943"),(0,l.kt)("td",{parentName:"tr",align:null},"-73.974541"),(0,l.kt)("td",{parentName:"tr",align:null},"-73.96965"),(0,l.kt)("td",{parentName:"tr",align:null},"-74.17717")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"dropoff_latitude"),(0,l.kt)("td",{parentName:"tr",align:null},"40.746128"),(0,l.kt)("td",{parentName:"tr",align:null},"40.733166"),(0,l.kt)("td",{parentName:"tr",align:null},"40.67577"),(0,l.kt)("td",{parentName:"tr",align:null},"40.757767"),(0,l.kt)("td",{parentName:"tr",align:null},"40.695053")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"payment_type"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"fare_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"9.0"),(0,l.kt)("td",{parentName:"tr",align:null},"11.0"),(0,l.kt)("td",{parentName:"tr",align:null},"54.5"),(0,l.kt)("td",{parentName:"tr",align:null},"31.5"),(0,l.kt)("td",{parentName:"tr",align:null},"98.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"extra"),(0,l.kt)("td",{parentName:"tr",align:null},"0.5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.0"),(0,l.kt)("td",{parentName:"tr",align:null},"0.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"mta_tax"),(0,l.kt)("td",{parentName:"tr",align:null},"0.5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.5"),(0,l.kt)("td",{parentName:"tr",align:null},"0.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"tip_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"2.05"),(0,l.kt)("td",{parentName:"tr",align:null},"3.05"),(0,l.kt)("td",{parentName:"tr",align:null},"8.0"),(0,l.kt)("td",{parentName:"tr",align:null},"3.78"),(0,l.kt)("td",{parentName:"tr",align:null},"0.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"tolls_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"0.0"),(0,l.kt)("td",{parentName:"tr",align:null},"0.0"),(0,l.kt)("td",{parentName:"tr",align:null},"0.0"),(0,l.kt)("td",{parentName:"tr",align:null},"5.54"),(0,l.kt)("td",{parentName:"tr",align:null},"15.5")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"improvement_surcharge"),(0,l.kt)("td",{parentName:"tr",align:null},"0.3"),(0,l.kt)("td",{parentName:"tr",align:null},"0.3"),(0,l.kt)("td",{parentName:"tr",align:null},"0.3"),(0,l.kt)("td",{parentName:"tr",align:null},"0.3"),(0,l.kt)("td",{parentName:"tr",align:null},"0.3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"total_amount"),(0,l.kt)("td",{parentName:"tr",align:null},"12.35"),(0,l.kt)("td",{parentName:"tr",align:null},"15.35"),(0,l.kt)("td",{parentName:"tr",align:null},"63.8"),(0,l.kt)("td",{parentName:"tr",align:null},"41.62"),(0,l.kt)("td",{parentName:"tr",align:null},"113.8")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# there are two values that directly scale with the label\n# of of passenger fare: fare_amount and total_amount -> drop the latter\ndata = data.drop('total_amount', axis=1)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data.info()\n# RangeIndex: 100000 entries, 0 to 99999\n# Data columns (total 18 columns):\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data_sample = data.sample(frac=0.5 , random_state=SEED)\ndata_sample.describe()\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"VendorID"),(0,l.kt)("th",{parentName:"tr",align:null},"passenger_count"),(0,l.kt)("th",{parentName:"tr",align:null},"trip_distance"),(0,l.kt)("th",{parentName:"tr",align:null},"pickup_longitude"),(0,l.kt)("th",{parentName:"tr",align:null},"pickup_latitude"),(0,l.kt)("th",{parentName:"tr",align:null},"RatecodeID"),(0,l.kt)("th",{parentName:"tr",align:null},"dropoff_longitude"),(0,l.kt)("th",{parentName:"tr",align:null},"dropoff_latitude"),(0,l.kt)("th",{parentName:"tr",align:null},"payment_type"),(0,l.kt)("th",{parentName:"tr",align:null},"fare_amount"),(0,l.kt)("th",{parentName:"tr",align:null},"extra"),(0,l.kt)("th",{parentName:"tr",align:null},"mta_tax"),(0,l.kt)("th",{parentName:"tr",align:null},"tip_amount"),(0,l.kt)("th",{parentName:"tr",align:null},"tolls_amount"),(0,l.kt)("th",{parentName:"tr",align:null},"improvement_surcharge"),(0,l.kt)("th",{parentName:"tr",align:null},"total_amount"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"count"),(0,l.kt)("td",{parentName:"tr",align:null},"50000.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"50000.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"50000.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"50000.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"50000.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"50000.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"50000.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"50000.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"50000.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"50000.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"50000.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"50000.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"50000.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"50000.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"50000.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"50000.000000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"mean"),(0,l.kt)("td",{parentName:"tr",align:null},"1.883160"),(0,l.kt)("td",{parentName:"tr",align:null},"1.926360"),(0,l.kt)("td",{parentName:"tr",align:null},"3.039138"),(0,l.kt)("td",{parentName:"tr",align:null},"-73.252772"),(0,l.kt)("td",{parentName:"tr",align:null},"40.355400"),(0,l.kt)("td",{parentName:"tr",align:null},"1.040780"),(0,l.kt)("td",{parentName:"tr",align:null},"-73.274211"),(0,l.kt)("td",{parentName:"tr",align:null},"40.367544"),(0,l.kt)("td",{parentName:"tr",align:null},"1.337420"),(0,l.kt)("td",{parentName:"tr",align:null},"13.287511"),(0,l.kt)("td",{parentName:"tr",align:null},"0.101730"),(0,l.kt)("td",{parentName:"tr",align:null},"0.496980"),(0,l.kt)("td",{parentName:"tr",align:null},"1.881304"),(0,l.kt)("td",{parentName:"tr",align:null},"0.367985"),(0,l.kt)("td",{parentName:"tr",align:null},"0.299484"),(0,l.kt)("td",{parentName:"tr",align:null},"16.434978")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"std"),(0,l.kt)("td",{parentName:"tr",align:null},"0.321233"),(0,l.kt)("td",{parentName:"tr",align:null},"1.586212"),(0,l.kt)("td",{parentName:"tr",align:null},"3.851644"),(0,l.kt)("td",{parentName:"tr",align:null},"7.268226"),(0,l.kt)("td",{parentName:"tr",align:null},"4.002437"),(0,l.kt)("td",{parentName:"tr",align:null},"0.284462"),(0,l.kt)("td",{parentName:"tr",align:null},"7.156534"),(0,l.kt)("td",{parentName:"tr",align:null},"3.940944"),(0,l.kt)("td",{parentName:"tr",align:null},"0.482423"),(0,l.kt)("td",{parentName:"tr",align:null},"12.104265"),(0,l.kt)("td",{parentName:"tr",align:null},"0.202674"),(0,l.kt)("td",{parentName:"tr",align:null},"0.042906"),(0,l.kt)("td",{parentName:"tr",align:null},"2.582070"),(0,l.kt)("td",{parentName:"tr",align:null},"1.521707"),(0,l.kt)("td",{parentName:"tr",align:null},"0.016749"),(0,l.kt)("td",{parentName:"tr",align:null},"14.779261")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"min"),(0,l.kt)("td",{parentName:"tr",align:null},"1.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"0.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"0.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"-121.933151"),(0,l.kt)("td",{parentName:"tr",align:null},"0.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"1.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"-121.933327"),(0,l.kt)("td",{parentName:"tr",align:null},"0.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"1.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"-7.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.500000"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.500000"),(0,l.kt)("td",{parentName:"tr",align:null},"-2.700000"),(0,l.kt)("td",{parentName:"tr",align:null},"0.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.300000"),(0,l.kt)("td",{parentName:"tr",align:null},"-10.140000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"25%"),(0,l.kt)("td",{parentName:"tr",align:null},"2.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"1.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"1.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"-73.990921"),(0,l.kt)("td",{parentName:"tr",align:null},"40.738933"),(0,l.kt)("td",{parentName:"tr",align:null},"1.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"-73.990410"),(0,l.kt)("td",{parentName:"tr",align:null},"40.738776"),(0,l.kt)("td",{parentName:"tr",align:null},"1.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"6.500000"),(0,l.kt)("td",{parentName:"tr",align:null},"0.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"0.500000"),(0,l.kt)("td",{parentName:"tr",align:null},"0.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"0.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"0.300000"),(0,l.kt)("td",{parentName:"tr",align:null},"8.300000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"50%"),(0,l.kt)("td",{parentName:"tr",align:null},"2.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"1.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"1.670000"),(0,l.kt)("td",{parentName:"tr",align:null},"-73.980164"),(0,l.kt)("td",{parentName:"tr",align:null},"40.755428"),(0,l.kt)("td",{parentName:"tr",align:null},"1.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"-73.978409"),(0,l.kt)("td",{parentName:"tr",align:null},"40.755249"),(0,l.kt)("td",{parentName:"tr",align:null},"1.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"9.500000"),(0,l.kt)("td",{parentName:"tr",align:null},"0.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"0.500000"),(0,l.kt)("td",{parentName:"tr",align:null},"1.360000"),(0,l.kt)("td",{parentName:"tr",align:null},"0.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"0.300000"),(0,l.kt)("td",{parentName:"tr",align:null},"11.800000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"75%"),(0,l.kt)("td",{parentName:"tr",align:null},"2.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"2.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"3.200000"),(0,l.kt)("td",{parentName:"tr",align:null},"-73.964142"),(0,l.kt)("td",{parentName:"tr",align:null},"40.769090"),(0,l.kt)("td",{parentName:"tr",align:null},"1.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"-73.962097"),(0,l.kt)("td",{parentName:"tr",align:null},"40.768002"),(0,l.kt)("td",{parentName:"tr",align:null},"2.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"15.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"0.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"0.500000"),(0,l.kt)("td",{parentName:"tr",align:null},"2.460000"),(0,l.kt)("td",{parentName:"tr",align:null},"0.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"0.300000"),(0,l.kt)("td",{parentName:"tr",align:null},"18.300000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"max"),(0,l.kt)("td",{parentName:"tr",align:null},"2.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"6.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"160.800000"),(0,l.kt)("td",{parentName:"tr",align:null},"0.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"41.204548"),(0,l.kt)("td",{parentName:"tr",align:null},"6.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"0.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"42.666893"),(0,l.kt)("td",{parentName:"tr",align:null},"4.000000"),(0,l.kt)("td",{parentName:"tr",align:null},"819.500000"),(0,l.kt)("td",{parentName:"tr",align:null},"4.500000"),(0,l.kt)("td",{parentName:"tr",align:null},"0.500000"),(0,l.kt)("td",{parentName:"tr",align:null},"47.560000"),(0,l.kt)("td",{parentName:"tr",align:null},"22.040000"),(0,l.kt)("td",{parentName:"tr",align:null},"0.300000"),(0,l.kt)("td",{parentName:"tr",align:null},"832.800000")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# 80:20 train test split\ntrain_data = data_sample.sample(n=40000, random_state=SEED)\ntest_data = data_sample.drop(train_data.index)\n")),(0,l.kt)("h3",{id:"model-training-1"},"Model Training"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"predictor = TabularPredictor(label='fare_amount', path=MODEL_PATH)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"predictor.fit(train_data)\n\n# AutoGluon infers your prediction problem is: 'regression' (because dtype of label-column == float and label-values can't be converted to int).\n# Label info (max, min, mean, stddev): (819.5, -7.0, 13.23572, 11.96267)\n\n# AutoGluon training complete, total runtime = 89.72s ... Best model: \"WeightedEnsemble_L2\"\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"leaderboard=pd.DataFrame(predictor.leaderboard())\n\nplt.figure(figsize=(8, 7))\n\nsns.set(style='darkgrid')\n\nsns.scatterplot(\n    x='pred_time_val',\n    y='score_val',\n    data=leaderboard,\n    s=300,\n    alpha=0.5,\n    hue='model',\n    palette='tab20',\n    style='fit_time'\n)\n\nplt.title('Prediction Time vs Accuracy Score')\nplt.xlabel('Average Time for Predictions')\nplt.ylabel('Validation Score (-RMSE)')\nplt.legend(bbox_to_anchor=(1.01,1.01))\n\nplt.savefig('assets/AutoML_with_AutoGluon_01.webp', bbox_inches='tight')\n")),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"AutoML with AutoGluon for Tabular Data",src:n(97562).Z,width:"956",height:"640"})),(0,l.kt)("h4",{id:"model-loading-1"},"Model Loading"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'# load best model\npredictor = TabularPredictor.load("model/")\n')),(0,l.kt)("h4",{id:"model-testing-model-testing-1"},"Model Testing Model Testing"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"X_test = test_data.drop(columns=['fare_amount'] )\ny_test = test_data['fare_amount']\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"y_pred = predictor.predict(X_test)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"eval_metrics = predictor.evaluate_predictions(y_true=y_test, y_pred=y_pred, auxiliary_metrics=True)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"array = np.array(list(eval_metrics.items()))\ndf = pd.DataFrame(array, columns = ['metric','value']).sort_values(by='value')\n\nplt.figure(figsize=(15,5))\nplt.bar(df['metric'], df['value'])\nplt.title('Evaluation Metrics')\n\nplt.savefig('assets/AutoML_with_AutoGluon_02.webp', bbox_inches='tight')\n")),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"AutoML with AutoGluon for Tabular Data",src:n(88645).Z,width:"1370",height:"456"})),(0,l.kt)("h4",{id:"feature-interpretability-1"},"Feature Interpretability"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# add test dataset that must include the classifier (fare_amount):\nimportance_df = predictor.feature_importance(test_data).reset_index()\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"plt.figure(figsize=(8,8))\nplt.title('Feature Importance')\nsns.set(style='darkgrid')\nsns.barplot(\n    data=importance_df,\n    y='index',\n    x='importance',\n    orient='horizontal'\n).set_ylabel('Feature')\n\nplt.savefig('assets/AutoML_with_AutoGluon_03.webp', bbox_inches='tight')\n")),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"AutoML with AutoGluon for Tabular Data",src:n(23407).Z,width:"863",height:"710"})),(0,l.kt)("h4",{id:"running-predictions-1"},"Running Predictions"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'test_drive = {\n  "VendorID": 2,\n  "tpep_pickup_datetime": "2016-03-01 01:12:39",\n  "tpep_dropoff_datetime": "2016-03-01 01:16:48",\n  "passenger_count": 5,\n  "trip_distance": 1.28,\n  "pickup_longitude": -73.97952270507811,\n  "pickup_latitude": 40.76089096069336,\n  "RatecodeID": 1,\n  "store_and_fwd_flag": "N",\n  "dropoff_longitude": -73.99040985107422,\n  "dropoff_latitude": 40.77185821533203,\n  "payment_type": 1,\n  "fare_amount": 5.5,\n  "extra": 0.5,\n  "mta_tax": 0.5,\n  "tip_amount": 0.0,\n  "tolls_amount": 0.0,\n  "improvement_surcharge": 0.3,\n  "total_amount": 6.8\n}\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# load booking into dataset\ntest_drive_df = TabularDataset.from_dict([test_drive])\ntest_drive_from_csv_df = TabularDataset('dataset/test_data.csv')\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"predictor.predict(test_drive_df)\n# 0    6.403378\n# Name: fare_amount, dtype: float32\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"predictor.predict(test_drive_from_csv_df)\n# 0    20.392935\n# Name: fare_amount, dtype: float32\n")),(0,l.kt)("h2",{id:"customizations"},"Customizations"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"leaderboard_results = predictor.leaderboard(test_data)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"results_df = leaderboard_results[['model', 'score_test', 'score_val', 'pred_time_test', 'fit_time']]\nresults_df\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"model"),(0,l.kt)("th",{parentName:"tr",align:null},"score_test"),(0,l.kt)("th",{parentName:"tr",align:null},"score_val"),(0,l.kt)("th",{parentName:"tr",align:null},"pred_time_test"),(0,l.kt)("th",{parentName:"tr",align:null},"fit_time"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"ExtraTreesMSE"),(0,l.kt)("td",{parentName:"tr",align:null},"-3.424482"),(0,l.kt)("td",{parentName:"tr",align:null},"-2.967295"),(0,l.kt)("td",{parentName:"tr",align:null},"0.336113"),(0,l.kt)("td",{parentName:"tr",align:null},"4.152885")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"RandomForestMSE"),(0,l.kt)("td",{parentName:"tr",align:null},"-3.496445"),(0,l.kt)("td",{parentName:"tr",align:null},"-3.421289"),(0,l.kt)("td",{parentName:"tr",align:null},"0.635791"),(0,l.kt)("td",{parentName:"tr",align:null},"14.147954")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"LightGBMLarge"),(0,l.kt)("td",{parentName:"tr",align:null},"-3.711858"),(0,l.kt)("td",{parentName:"tr",align:null},"-3.338691"),(0,l.kt)("td",{parentName:"tr",align:null},"0.114917"),(0,l.kt)("td",{parentName:"tr",align:null},"1.717049")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"WeightedEnsemble_L2"),(0,l.kt)("td",{parentName:"tr",align:null},"-3.869480"),(0,l.kt)("td",{parentName:"tr",align:null},"-2.766400"),(0,l.kt)("td",{parentName:"tr",align:null},"0.870554"),(0,l.kt)("td",{parentName:"tr",align:null},"56.528128")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"CatBoost"),(0,l.kt)("td",{parentName:"tr",align:null},"-3.875734"),(0,l.kt)("td",{parentName:"tr",align:null},"-3.246665"),(0,l.kt)("td",{parentName:"tr",align:null},"0.012133"),(0,l.kt)("td",{parentName:"tr",align:null},"26.307805")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"XGBoost"),(0,l.kt)("td",{parentName:"tr",align:null},"-4.003582"),(0,l.kt)("td",{parentName:"tr",align:null},"-3.211102"),(0,l.kt)("td",{parentName:"tr",align:null},"0.026592"),(0,l.kt)("td",{parentName:"tr",align:null},"0.405672")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"6"),(0,l.kt)("td",{parentName:"tr",align:null},"LightGBM"),(0,l.kt)("td",{parentName:"tr",align:null},"-4.547570"),(0,l.kt)("td",{parentName:"tr",align:null},"-3.245028"),(0,l.kt)("td",{parentName:"tr",align:null},"0.013185"),(0,l.kt)("td",{parentName:"tr",align:null},"0.341916")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"7"),(0,l.kt)("td",{parentName:"tr",align:null},"NeuralNetFastAI"),(0,l.kt)("td",{parentName:"tr",align:null},"-4.767402"),(0,l.kt)("td",{parentName:"tr",align:null},"-3.300341"),(0,l.kt)("td",{parentName:"tr",align:null},"0.160983"),(0,l.kt)("td",{parentName:"tr",align:null},"25.395540")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"8"),(0,l.kt)("td",{parentName:"tr",align:null},"LightGBMXT"),(0,l.kt)("td",{parentName:"tr",align:null},"-5.297554"),(0,l.kt)("td",{parentName:"tr",align:null},"-3.430323"),(0,l.kt)("td",{parentName:"tr",align:null},"0.016557"),(0,l.kt)("td",{parentName:"tr",align:null},"0.359552")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"9"),(0,l.kt)("td",{parentName:"tr",align:null},"NeuralNetTorch"),(0,l.kt)("td",{parentName:"tr",align:null},"-7.383115"),(0,l.kt)("td",{parentName:"tr",align:null},"-5.649417"),(0,l.kt)("td",{parentName:"tr",align:null},"0.050529"),(0,l.kt)("td",{parentName:"tr",align:null},"10.426494")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"10"),(0,l.kt)("td",{parentName:"tr",align:null},"KNeighborsUnif"),(0,l.kt)("td",{parentName:"tr",align:null},"-7.793495"),(0,l.kt)("td",{parentName:"tr",align:null},"-6.159739"),(0,l.kt)("td",{parentName:"tr",align:null},"0.330812"),(0,l.kt)("td",{parentName:"tr",align:null},"0.019789")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"11"),(0,l.kt)("td",{parentName:"tr",align:null},"KNeighborsDist"),(0,l.kt)("td",{parentName:"tr",align:null},"-8.238958"),(0,l.kt)("td",{parentName:"tr",align:null},"-7.202982"),(0,l.kt)("td",{parentName:"tr",align:null},"0.276046"),(0,l.kt)("td",{parentName:"tr",align:null},"0.018064")))),(0,l.kt)("h3",{id:"inference-constraints"},"Inference Constraints"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"WeightedEnsemble_L2")," model - which is an ensemble of different models used by AutoGluon - has the highest test accuracy but also takes by far the longest to return predictions. The 'non-ensembled' model ",(0,l.kt)("inlineCode",{parentName:"p"},"ExtraTreesMSE")," is not that far off when it comes to accuracy but more than twice as fast with predictions. We can set a restraint how much time is acceptable to remove 'slow' models from the created weighted ensemble model."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"fast_predictor = TabularPredictor(label='fare_amount', path='model_fast')\nfast_predictor.fit(train_data, time_limit=30, infer_limit=0.000004, infer_limit_batch_size=10000)\n\n# Removing 5/6 base models to satisfy inference constraint (constraint=1.651\u03bcs) ...\n#   0.092ms -> 0.058ms  (KNeighborsUnif)\n#   0.058ms -> 0.022ms  (KNeighborsDist)\n#   0.022ms -> 3.321\u03bcs  (RandomForestMSE)\n#   3.321\u03bcs -> 1.871\u03bcs  (LightGBMXT)\n#   1.871\u03bcs -> 1.177\u03bcs  (CatBoost)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"eval_metrics_fast = fast_predictor.fit_summary()\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"model"),(0,l.kt)("th",{parentName:"tr",align:null},"score_val"),(0,l.kt)("th",{parentName:"tr",align:null},"pred_time_val"),(0,l.kt)("th",{parentName:"tr",align:null},"fit_time"),(0,l.kt)("th",{parentName:"tr",align:null},"pred_time_val_marginal"),(0,l.kt)("th",{parentName:"tr",align:null},"fit_time_marginal"),(0,l.kt)("th",{parentName:"tr",align:null},"stack_level"),(0,l.kt)("th",{parentName:"tr",align:null},"can_infer"),(0,l.kt)("th",{parentName:"tr",align:null},"fit_order"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"LightGBM"),(0,l.kt)("td",{parentName:"tr",align:null},"-3.245028"),(0,l.kt)("td",{parentName:"tr",align:null},"0.003834"),(0,l.kt)("td",{parentName:"tr",align:null},"0.588395"),(0,l.kt)("td",{parentName:"tr",align:null},"0.003834"),(0,l.kt)("td",{parentName:"tr",align:null},"0.588395"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"4")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"WeightedEnsemble_L2"),(0,l.kt)("td",{parentName:"tr",align:null},"-3.245028"),(0,l.kt)("td",{parentName:"tr",align:null},"0.004205"),(0,l.kt)("td",{parentName:"tr",align:null},"0.594806"),(0,l.kt)("td",{parentName:"tr",align:null},"0.000371"),(0,l.kt)("td",{parentName:"tr",align:null},"0.006411"),(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"7")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"CatBoost"),(0,l.kt)("td",{parentName:"tr",align:null},"-3.266919"),(0,l.kt)("td",{parentName:"tr",align:null},"0.003005"),(0,l.kt)("td",{parentName:"tr",align:null},"8.212242"),(0,l.kt)("td",{parentName:"tr",align:null},"0.003005"),(0,l.kt)("td",{parentName:"tr",align:null},"8.212242"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"6")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"RandomForestMSE"),(0,l.kt)("td",{parentName:"tr",align:null},"-3.421289"),(0,l.kt)("td",{parentName:"tr",align:null},"0.073429"),(0,l.kt)("td",{parentName:"tr",align:null},"15.412317"),(0,l.kt)("td",{parentName:"tr",align:null},"0.073429"),(0,l.kt)("td",{parentName:"tr",align:null},"15.412317"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"5")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"LightGBMXT"),(0,l.kt)("td",{parentName:"tr",align:null},"-3.430323"),(0,l.kt)("td",{parentName:"tr",align:null},"0.004597"),(0,l.kt)("td",{parentName:"tr",align:null},"0.667201"),(0,l.kt)("td",{parentName:"tr",align:null},"0.004597"),(0,l.kt)("td",{parentName:"tr",align:null},"0.667201"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"KNeighborsUnif"),(0,l.kt)("td",{parentName:"tr",align:null},"-6.159739"),(0,l.kt)("td",{parentName:"tr",align:null},"0.134967"),(0,l.kt)("td",{parentName:"tr",align:null},"0.365208"),(0,l.kt)("td",{parentName:"tr",align:null},"0.134967"),(0,l.kt)("td",{parentName:"tr",align:null},"0.365208"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"6"),(0,l.kt)("td",{parentName:"tr",align:null},"KNeighborsDist"),(0,l.kt)("td",{parentName:"tr",align:null},"-7.202982"),(0,l.kt)("td",{parentName:"tr",align:null},"0.120473"),(0,l.kt)("td",{parentName:"tr",align:null},"0.394391"),(0,l.kt)("td",{parentName:"tr",align:null},"0.120473"),(0,l.kt)("td",{parentName:"tr",align:null},"0.394391"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"2")))),(0,l.kt)("p",null,"Number of models trained: 7\nTypes of models trained:\n{'RFModel', 'WeightedEnsembleModel', 'LGBModel', 'KNNModel', 'CatBoostModel'}"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"eval_metrics = predictor.fit_summary()\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"model"),(0,l.kt)("th",{parentName:"tr",align:null},"score_val"),(0,l.kt)("th",{parentName:"tr",align:null},"pred_time_val"),(0,l.kt)("th",{parentName:"tr",align:null},"fit_time"),(0,l.kt)("th",{parentName:"tr",align:null},"pred_time_val_marginal"),(0,l.kt)("th",{parentName:"tr",align:null},"fit_time_marginal"),(0,l.kt)("th",{parentName:"tr",align:null},"stack_level"),(0,l.kt)("th",{parentName:"tr",align:null},"can_infer"),(0,l.kt)("th",{parentName:"tr",align:null},"fit_order"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"WeightedEnsemble_L2"),(0,l.kt)("td",{parentName:"tr",align:null},"-2.766400"),(0,l.kt)("td",{parentName:"tr",align:null},"0.244695"),(0,l.kt)("td",{parentName:"tr",align:null},"56.528128"),(0,l.kt)("td",{parentName:"tr",align:null},"0.000308"),(0,l.kt)("td",{parentName:"tr",align:null},"0.246437"),(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"12")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"ExtraTreesMSE"),(0,l.kt)("td",{parentName:"tr",align:null},"-2.967295"),(0,l.kt)("td",{parentName:"tr",align:null},"0.060220"),(0,l.kt)("td",{parentName:"tr",align:null},"4.152885"),(0,l.kt)("td",{parentName:"tr",align:null},"0.060220"),(0,l.kt)("td",{parentName:"tr",align:null},"4.152885"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"7")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"XGBoost"),(0,l.kt)("td",{parentName:"tr",align:null},"-3.211102"),(0,l.kt)("td",{parentName:"tr",align:null},"0.005235"),(0,l.kt)("td",{parentName:"tr",align:null},"0.405672"),(0,l.kt)("td",{parentName:"tr",align:null},"0.005235"),(0,l.kt)("td",{parentName:"tr",align:null},"0.405672"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"9")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"LightGBM"),(0,l.kt)("td",{parentName:"tr",align:null},"-3.245028"),(0,l.kt)("td",{parentName:"tr",align:null},"0.003292"),(0,l.kt)("td",{parentName:"tr",align:null},"0.341916"),(0,l.kt)("td",{parentName:"tr",align:null},"0.003292"),(0,l.kt)("td",{parentName:"tr",align:null},"0.341916"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"4")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"CatBoost"),(0,l.kt)("td",{parentName:"tr",align:null},"-3.246665"),(0,l.kt)("td",{parentName:"tr",align:null},"0.004185"),(0,l.kt)("td",{parentName:"tr",align:null},"26.307805"),(0,l.kt)("td",{parentName:"tr",align:null},"0.004185"),(0,l.kt)("td",{parentName:"tr",align:null},"26.307805"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"6")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"NeuralNetFastAI"),(0,l.kt)("td",{parentName:"tr",align:null},"-3.300341"),(0,l.kt)("td",{parentName:"tr",align:null},"0.031887"),(0,l.kt)("td",{parentName:"tr",align:null},"25.395540"),(0,l.kt)("td",{parentName:"tr",align:null},"0.031887"),(0,l.kt)("td",{parentName:"tr",align:null},"25.395540"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"8")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"6"),(0,l.kt)("td",{parentName:"tr",align:null},"LightGBMLarge"),(0,l.kt)("td",{parentName:"tr",align:null},"-3.338691"),(0,l.kt)("td",{parentName:"tr",align:null},"0.024750"),(0,l.kt)("td",{parentName:"tr",align:null},"1.717049"),(0,l.kt)("td",{parentName:"tr",align:null},"0.024750"),(0,l.kt)("td",{parentName:"tr",align:null},"1.717049"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"11")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"7"),(0,l.kt)("td",{parentName:"tr",align:null},"RandomForestMSE"),(0,l.kt)("td",{parentName:"tr",align:null},"-3.421289"),(0,l.kt)("td",{parentName:"tr",align:null},"0.059909"),(0,l.kt)("td",{parentName:"tr",align:null},"14.147954"),(0,l.kt)("td",{parentName:"tr",align:null},"0.059909"),(0,l.kt)("td",{parentName:"tr",align:null},"14.147954"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"5")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"8"),(0,l.kt)("td",{parentName:"tr",align:null},"LightGBMXT"),(0,l.kt)("td",{parentName:"tr",align:null},"-3.430323"),(0,l.kt)("td",{parentName:"tr",align:null},"0.003857"),(0,l.kt)("td",{parentName:"tr",align:null},"0.359552"),(0,l.kt)("td",{parentName:"tr",align:null},"0.003857"),(0,l.kt)("td",{parentName:"tr",align:null},"0.359552"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"9"),(0,l.kt)("td",{parentName:"tr",align:null},"NeuralNetTorch"),(0,l.kt)("td",{parentName:"tr",align:null},"-5.649417"),(0,l.kt)("td",{parentName:"tr",align:null},"0.020283"),(0,l.kt)("td",{parentName:"tr",align:null},"10.426494"),(0,l.kt)("td",{parentName:"tr",align:null},"0.020283"),(0,l.kt)("td",{parentName:"tr",align:null},"10.426494"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"10")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"10"),(0,l.kt)("td",{parentName:"tr",align:null},"KNeighborsUnif"),(0,l.kt)("td",{parentName:"tr",align:null},"-6.159739"),(0,l.kt)("td",{parentName:"tr",align:null},"0.142860"),(0,l.kt)("td",{parentName:"tr",align:null},"0.019789"),(0,l.kt)("td",{parentName:"tr",align:null},"0.142860"),(0,l.kt)("td",{parentName:"tr",align:null},"0.019789"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"11"),(0,l.kt)("td",{parentName:"tr",align:null},"KNeighborsDist"),(0,l.kt)("td",{parentName:"tr",align:null},"-7.202982"),(0,l.kt)("td",{parentName:"tr",align:null},"0.113172"),(0,l.kt)("td",{parentName:"tr",align:null},"0.018064"),(0,l.kt)("td",{parentName:"tr",align:null},"0.113172"),(0,l.kt)("td",{parentName:"tr",align:null},"0.018064"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"2")))),(0,l.kt)("p",null,"Number of models trained: 12\nTypes of models trained:\n{'RFModel', 'XGBoostModel', 'WeightedEnsembleModel', 'XTModel', 'NNFastAiTabularModel', 'LGBModel', 'KNNModel', 'CatBoostModel', 'TabularNeuralNetTorchModel'}"),(0,l.kt)("p",null,"Result: ",(0,l.kt)("em",{parentName:"p"},"Much faster but less accurate")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"WeightedEnsemble","_","L2"),":",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"score_val: ",(0,l.kt)("inlineCode",{parentName:"li"},"-2.766400")," -> ",(0,l.kt)("inlineCode",{parentName:"li"},"-3.245028")),(0,l.kt)("li",{parentName:"ul"},"pred_time_val: ",(0,l.kt)("inlineCode",{parentName:"li"},"0.244695s")," -> ",(0,l.kt)("inlineCode",{parentName:"li"},"0.004205s")),(0,l.kt)("li",{parentName:"ul"},"fit_time: ",(0,l.kt)("inlineCode",{parentName:"li"},"56.528128s")," -> ",(0,l.kt)("inlineCode",{parentName:"li"},"0.594806s"))))),(0,l.kt)("h3",{id:"hyperparameter-tuning"},"Hyperparameter Tuning"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'hyperparameters_NN_Torch = {"num_epochs": 1, "learning_rate": 0.5}\nhyperparameters_XGB = {} # use XGBoost with default values\nhyperparameters = {"NN_TORCH": hyperparameters_NN_Torch, "XGB": hyperparameters_XGB}\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"tuned_predictor = TabularPredictor(label='fare_amount', path='model_tuned')\ntuned_predictor.fit(\n        train_data=train_data,\n        hyperparameters=hyperparameters\n    )\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"tuned_predictor.fit_summary()\n# AutoGluon only trained the two configured model for one epoch \n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"model"),(0,l.kt)("th",{parentName:"tr",align:null},"score_val"),(0,l.kt)("th",{parentName:"tr",align:null},"pred_time_val"),(0,l.kt)("th",{parentName:"tr",align:null},"fit_time"),(0,l.kt)("th",{parentName:"tr",align:null},"pred_time_val_marginal"),(0,l.kt)("th",{parentName:"tr",align:null},"fit_time_marginal"),(0,l.kt)("th",{parentName:"tr",align:null},"stack_level"),(0,l.kt)("th",{parentName:"tr",align:null},"can_infer"),(0,l.kt)("th",{parentName:"tr",align:null},"fit_order"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"XGBoost"),(0,l.kt)("td",{parentName:"tr",align:null},"-3.211102"),(0,l.kt)("td",{parentName:"tr",align:null},"0.003993"),(0,l.kt)("td",{parentName:"tr",align:null},"0.363999"),(0,l.kt)("td",{parentName:"tr",align:null},"0.003993"),(0,l.kt)("td",{parentName:"tr",align:null},"0.363999"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"WeightedEnsemble_L2"),(0,l.kt)("td",{parentName:"tr",align:null},"-3.211102"),(0,l.kt)("td",{parentName:"tr",align:null},"0.004304"),(0,l.kt)("td",{parentName:"tr",align:null},"0.434471"),(0,l.kt)("td",{parentName:"tr",align:null},"0.000311"),(0,l.kt)("td",{parentName:"tr",align:null},"0.070472"),(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"NeuralNetTorch"),(0,l.kt)("td",{parentName:"tr",align:null},"-23.769987"),(0,l.kt)("td",{parentName:"tr",align:null},"0.019870"),(0,l.kt)("td",{parentName:"tr",align:null},"0.935391"),(0,l.kt)("td",{parentName:"tr",align:null},"0.019870"),(0,l.kt)("td",{parentName:"tr",align:null},"0.935391"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"2")))),(0,l.kt)("h3",{id:"autogluon-presets"},"AutoGluon Presets"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Available Presets: ","[",(0,l.kt)("inlineCode",{parentName:"p"},"best_quality"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"high_quality"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"good_quality"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"medium_quality"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"optimize_for_deployment"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"interpretable"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"ignore_text"),"]")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"presets = ['medium_quality'] # accept lower accuracy for speed\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"preset_predictor = TabularPredictor(label='fare_amount', path='preset_model')\npreset_predictor.fit(\n        train_data=train_data,\n        presets=presets,\n        included_model_types=['GBM', 'FASTAI', 'NN_TORCH'], # only use those models\n        # excluded_model_types=['KNN', 'NN', 'XT', 'RF', 'FASTAI'] # use all but those models\n    )\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"preset_predictor.fit_summary()\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"model"),(0,l.kt)("th",{parentName:"tr",align:null},"score_val"),(0,l.kt)("th",{parentName:"tr",align:null},"pred_time_val"),(0,l.kt)("th",{parentName:"tr",align:null},"fit_time"),(0,l.kt)("th",{parentName:"tr",align:null},"pred_time_val_marginal"),(0,l.kt)("th",{parentName:"tr",align:null},"fit_time_marginal"),(0,l.kt)("th",{parentName:"tr",align:null},"stack_level"),(0,l.kt)("th",{parentName:"tr",align:null},"can_infer"),(0,l.kt)("th",{parentName:"tr",align:null},"fit_order"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"WeightedEnsemble_L2"),(0,l.kt)("td",{parentName:"tr",align:null},"-3.054243"),(0,l.kt)("td",{parentName:"tr",align:null},"0.083915"),(0,l.kt)("td",{parentName:"tr",align:null},"42.906133"),(0,l.kt)("td",{parentName:"tr",align:null},"0.000301"),(0,l.kt)("td",{parentName:"tr",align:null},"0.133571"),(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"6")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"LightGBM"),(0,l.kt)("td",{parentName:"tr",align:null},"-3.245028"),(0,l.kt)("td",{parentName:"tr",align:null},"0.003262"),(0,l.kt)("td",{parentName:"tr",align:null},"0.507183"),(0,l.kt)("td",{parentName:"tr",align:null},"0.003262"),(0,l.kt)("td",{parentName:"tr",align:null},"0.507183"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"2")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"NeuralNetFastAI"),(0,l.kt)("td",{parentName:"tr",align:null},"-3.300341"),(0,l.kt)("td",{parentName:"tr",align:null},"0.027946"),(0,l.kt)("td",{parentName:"tr",align:null},"26.112154"),(0,l.kt)("td",{parentName:"tr",align:null},"0.027946"),(0,l.kt)("td",{parentName:"tr",align:null},"26.112154"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"LightGBMLarge"),(0,l.kt)("td",{parentName:"tr",align:null},"-3.338691"),(0,l.kt)("td",{parentName:"tr",align:null},"0.026010"),(0,l.kt)("td",{parentName:"tr",align:null},"1.953629"),(0,l.kt)("td",{parentName:"tr",align:null},"0.026010"),(0,l.kt)("td",{parentName:"tr",align:null},"1.953629"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"5")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"LightGBMXT"),(0,l.kt)("td",{parentName:"tr",align:null},"-3.430323"),(0,l.kt)("td",{parentName:"tr",align:null},"0.004276"),(0,l.kt)("td",{parentName:"tr",align:null},"0.458992"),(0,l.kt)("td",{parentName:"tr",align:null},"0.004276"),(0,l.kt)("td",{parentName:"tr",align:null},"0.458992"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"NeuralNetTorch"),(0,l.kt)("td",{parentName:"tr",align:null},"-5.649417"),(0,l.kt)("td",{parentName:"tr",align:null},"0.022120"),(0,l.kt)("td",{parentName:"tr",align:null},"13.740605"),(0,l.kt)("td",{parentName:"tr",align:null},"0.022120"),(0,l.kt)("td",{parentName:"tr",align:null},"13.740605"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"True"),(0,l.kt)("td",{parentName:"tr",align:null},"4")))),(0,l.kt)("h2",{id:"model-deployment"},"Model Deployment"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'predictor = TabularPredictor.load("model/")\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# retain model on train + validation dataset\npredictor.refit_full()\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# strip all models not part of the `WeightedEnsemble_L2_FULL`\npredictor.clone_for_deployment('production_model')\n# Clone: Keeping minimum set of models required to predict with best model 'WeightedEnsemble_L2_FULL'...\n# To load the cloned predictor: predictor_clone = TabularPredictor.load(path=\"production_model\")\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'predictor_clone = TabularPredictor.load(path="production_model")\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"test_data = TabularDataset('dataset/test_data.csv')\npredictor_clone.predict(test_data)\n\n# 0    20.425285\n# Name: fare_amount, dtype: float32\n")))}k.isMDXComponent=!0},45840:(t,a,n)=>{n.d(a,{Z:()=>e});const e=n.p+"assets/images/AutoML_with_AutoGluon_01-c406a0ed439e3eb44650e81c3a3747a2.webp"},17156:(t,a,n)=>{n.d(a,{Z:()=>e});const e=n.p+"assets/images/AutoML_with_AutoGluon_03-2f15b95d2ca582cda792504d2af3247b.webp"},97562:(t,a,n)=>{n.d(a,{Z:()=>e});const e=n.p+"assets/images/AutoML_with_AutoGluon_Reg_01-d6285c4a73c3e9748d080319974d5bfc.webp"},88645:(t,a,n)=>{n.d(a,{Z:()=>e});const e=n.p+"assets/images/AutoML_with_AutoGluon_Reg_02-014f8ca30dec8de54d7ddfd5720a315b.webp"},23407:(t,a,n)=>{n.d(a,{Z:()=>e});const e=n.p+"assets/images/AutoML_with_AutoGluon_Reg_03-909f3c0f2a1725d865dc49b955a21499.webp"},15158:(t,a,n)=>{n.d(a,{Z:()=>e});const e=n.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-a15d7463fa71afd7563b41d830022879.jpg"}}]);