"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[84422],{486750:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>l,frontMatter:()=>a,metadata:()=>i,toc:()=>h});var s=n(785893),o=n(603905);const a={sidebar_position:9060,slug:"2018-11-13",title:"Node-RED with IFTTT",authors:"mpolinowski",tags:["Node-RED","IoT"]},r=void 0,i={id:"Automation_and_Robotics/Home_Automation/2018-11-13--nodered-ifttt/index",title:"Node-RED with IFTTT",description:"Shenzhen, China",source:"@site/docs/Automation_and_Robotics/Home_Automation/2018-11-13--nodered-ifttt/index.mdx",sourceDirName:"Automation_and_Robotics/Home_Automation/2018-11-13--nodered-ifttt",slug:"/Automation_and_Robotics/Home_Automation/2018-11-13--nodered-ifttt/2018-11-13",permalink:"/docs/Automation_and_Robotics/Home_Automation/2018-11-13--nodered-ifttt/2018-11-13",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Automation_and_Robotics/Home_Automation/2018-11-13--nodered-ifttt/index.mdx",tags:[{label:"Node-RED",permalink:"/docs/tags/node-red"},{label:"IoT",permalink:"/docs/tags/io-t"}],version:"current",sidebarPosition:9060,frontMatter:{sidebar_position:9060,slug:"2018-11-13",title:"Node-RED with IFTTT",authors:"mpolinowski",tags:["Node-RED","IoT"]},sidebar:"tutorialSidebar",previous:{title:"A Collection of Node-RED MQTT Recipes",permalink:"/docs/Automation_and_Robotics/Home_Automation/2018-11-17--nodered-mqtt-connect/2018-11-17"},next:{title:"Using SQLite with Node-RED on Windows",permalink:"/docs/Automation_and_Robotics/Home_Automation/2018-11-12--nodered-sqlite/2018-11-12"}},d={},h=[{value:"Basic Setup",id:"basic-setup",level:2},{value:"Node-RED Introduction",id:"node-red-introduction",level:3},{value:"IFTTT Setting up a Webhook",id:"ifttt-setting-up-a-webhook",level:2},{value:"Node-RED Contacting the external Webhook",id:"node-red-contacting-the-external-webhook",level:3},{value:"IFTTT Contacting a Node-RED Endpoint",id:"ifttt-contacting-a-node-red-endpoint",level:3},{value:"Real-world example",id:"real-world-example",level:2},{value:"Deactivate the Alarm when I am Home",id:"deactivate-the-alarm-when-i-am-home",level:3}];function c(e){const t={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.ah)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Shenzhen, China",src:n(538812).Z+"",width:"1500",height:"641"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"#basic-setup",children:"Basic Setup"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"#node-red-introduction",children:"Node-RED Introduction"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"#ifttt-setting-up-a-webhook",children:"IFTTT Setting up a Webhook"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"#node-red-contacting-the-external-webhook",children:"Node-RED Contacting the external Webhook"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"#ifttt-contacting-a-node-red-endpoint",children:"IFTTT Contacting a Node-RED Endpoint"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"#real-world-example",children:"Real-world example"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"#deactivate-the-alarm-when-i-am-home",children:"Deactivate the Alarm when I am Home"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"basic-setup",children:"Basic Setup"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.em,{children:"If This Then That"}),", also known as ",(0,s.jsx)(t.a,{href:"https://ifttt.com/",children:"IFTTT"})," is a free web-based service to create chains of simple conditional statements, called applets. Build your own applets to connect web services with your INSTAR IP Camera."]}),"\n",(0,s.jsx)(t.h3,{id:"node-red-introduction",children:"Node-RED Introduction"}),"\n",(0,s.jsxs)(t.p,{children:["Use your Node-RED Installation under Windows, Linux (e.g. on a Raspberry Pi) to serve as an interface between your camera and the ",(0,s.jsx)(t.a,{href:"https://ifttt.com/discover",children:"IFTTT services"}),". Node-RED will serve both to send messages to the IFTTT Webhook API when an event occurs on your local network, as well as provides an HTTP Endpoint for your IFTTT Applets to trigger events on your local network."]}),"\n",(0,s.jsx)(t.p,{children:"An example would be a camera triggers an alarm, contacts Node-RED that forwards a message to IFTTT, that in turns sends a message to your smartphone. Or the other way around - your phones GPS detects that you are arriving home, the IFTTT smartphone app contacts the IFTTT server that your local Node-RED installation should be informed to deactivate the motion detection on your INSTAR IP cameras."}),"\n",(0,s.jsx)(t.h2,{id:"ifttt-setting-up-a-webhook",children:"IFTTT Setting up a Webhook"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["First you need to ",(0,s.jsx)(t.a,{href:"https://ifttt.com/join",children:"create an account"})," on IFTTT and ",(0,s.jsx)(t.a,{href:"https://ifttt.com/login?wp_=1",children:"login to your account"}),". Then go to the ",(0,s.jsx)(t.strong,{children:"My Applets"})," tab and click on ",(0,s.jsx)(t.strong,{children:"New Applet"}),":"]}),"\n"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"IFTTT",src:n(472117).Z+"",width:"730",height:"370"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsxs)(t.ol,{start:"2",children:["\n",(0,s.jsxs)(t.li,{children:["Click on ",(0,s.jsx)(t.strong,{children:"this"})," to create the conditional part of the script - we want to select what needs to happen for this script to be executed:"]}),"\n"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"IFTTT",src:n(698123).Z+"",width:"730",height:"302"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsxs)(t.ol,{start:"3",children:["\n",(0,s.jsxs)(t.li,{children:["As mentioned above, we want to use the ",(0,s.jsx)(t.a,{href:"https://ifttt.com/services/maker_webhooks",children:"webhook service"})," - which is basically just a web address that your Node-RED installation needs to contact to trigger the IFTTT applet. Search for ",(0,s.jsx)(t.em,{children:"web"})," and select the ",(0,s.jsx)(t.strong,{children:"Webhooks Service"}),":"]}),"\n"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"IFTTT",src:n(732651).Z+"",width:"730",height:"430"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"IFTTT",src:n(117543).Z+"",width:"730",height:"480"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsxs)(t.ol,{start:"4",children:["\n",(0,s.jsx)(t.li,{children:"Then name the event - this will be part of the URL that we will later have to contact with Node-RED to trigger the event:"}),"\n"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"IFTTT",src:n(140422).Z+"",width:"730",height:"619"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsxs)(t.ol,{start:"5",children:["\n",(0,s.jsxs)(t.li,{children:["With the trigger set up we now need to assign an IFTTT service we want to trigger. To do this click on ",(0,s.jsx)(t.strong,{children:"that"}),":"]}),"\n"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"IFTTT",src:n(375303).Z+"",width:"730",height:"258"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsxs)(t.ol,{start:"6",children:["\n",(0,s.jsxs)(t.li,{children:["Let's use the ",(0,s.jsx)(t.strong,{children:"Email service"})," - when the URL (webhook) for this applet is contacted we want to receive an Email to the address that we used to register with IFTTT:"]}),"\n"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"IFTTT",src:n(713350).Z+"",width:"730",height:"414"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"IFTTT",src:n(444031).Z+"",width:"730",height:"435"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsxs)(t.ol,{start:"7",children:["\n",(0,s.jsxs)(t.li,{children:["Now we can configure the subject and body text the email should have. Notice the words that are highlighted in white - these are variables that will be filled with data before the mail is sent. ",(0,s.jsx)(t.strong,{children:"EventName"})," will be the name that you choose in step 4 above, ",(0,s.jsx)(t.strong,{children:"OccuredAt"})," will be filled with a time stamp. The ",(0,s.jsx)(t.strong,{children:"Value 1-3"})," below are variables that we can define in Node-RED and send them whenever the event is triggered in our flow - the naming, as well as the amount of variables that you want to add is up to you:"]}),"\n"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"IFTTT",src:n(465985).Z+"",width:"730",height:"831"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsxs)(t.ol,{start:"8",children:["\n",(0,s.jsx)(t.li,{children:"Confirm your setup and save your applet:"}),"\n"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"IFTTT",src:n(690129).Z+"",width:"730",height:"838"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h3,{id:"node-red-contacting-the-external-webhook",children:"Node-RED Contacting the external Webhook"}),"\n",(0,s.jsx)(t.p,{children:"Now we need to set up Node-RED to contact the webhook that we just configured whenever a local event is fired (we will be using a manual inject node to trigger it for now). The flow that we are going to build will consist of the following nodes:"}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"IFTTT",src:n(163808).Z+"",width:"730",height:"240"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"First, copy and import the following code into the Node-RED Admin Panel:"}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:"[{'id':'87f67c26.0ff7b','type':'inject','z':'b8ce5e67.23af6','name':'','topic':'','payload':'','payloadType':'str','repeat':'','crontab':'','once':false,'onceDelay':'','x':90,'y':40,'wires':[['3b378299.bdbede']]},{'id':'e8acbbcd.763f78','type':'http request','z':'b8ce5e67.23af6','name':'Web Req','method':'POST','ret':'txt','url':'https://maker.ifttt.com/trigger/{{event}}/with/key/API_KEY','tls':'','x':374,'y':40,'wires':[['9fe779e1.db2bb8']]},{'id':'9fe779e1.db2bb8','type':'debug','z':'b8ce5e67.23af6','name':'','active':true,'tosidebar':true,'console':false,'complete':'false','x':521,'y':40,'wires':[]},{'id':'3b378299.bdbede','type':'function','z':'b8ce5e67.23af6','name':'Req Params','func':'msg.event = \\'test_request\\';\\nmsg.payload = {\\'value1\\': \\'testvalue1\\', \\'value2\\': \\'testvalue2\\', \\'value3\\': \\'testvalue3\\'};\\nreturn msg;','outputs':1,'noerr':0,'x':226,'y':40,'wires':[['e8acbbcd.763f78']]}]\n"})}),"\n",(0,s.jsxs)(t.ol,{start:"2",children:["\n",(0,s.jsxs)(t.li,{children:["The Inject Node is set up to insert an empty string when clicked manually. It follows a ",(0,s.jsx)(t.strong,{children:"Function Node"})," that has to set the ",(0,s.jsx)(t.strong,{children:"Event Name"})," - needed to set the right URL for our IFTTT Webhook and a message payload that carries our three variables ",(0,s.jsx)(t.strong,{children:"Value 1-3"})," that we want to display in the IFTTT Email notification:"]}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"msg.event = 'test_request';\r\nmsg.payload = {'value1': 'testvalue1', 'value2': 'testvalue2', 'value3': 'testvalue3'};\r\nreturn msg;\r\n\n"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"IFTTT",src:n(544483).Z+"",width:"730",height:"311"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsxs)(t.ol,{start:"3",children:["\n",(0,s.jsxs)(t.li,{children:["Next we have a ",(0,s.jsx)(t.strong,{children:"HTTP Request Node"})," that sets the URL for our IFTTT Webhook as a ",(0,s.jsx)(t.strong,{children:"POST"})," message:"]}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"https://maker.ifttt.com/trigger/{{event}}/with/key/API_KEY\n"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Note"})," that this is using the ",(0,s.jsx)(t.strong,{children:"Event Name"})," that we set as ",(0,s.jsx)(t.code,{children:"msg.event"})," in the previous ",(0,s.jsx)(t.strong,{children:"Function Node"}),". But to identify our IFTTT account we first need to find out our personal ",(0,s.jsx)(t.strong,{children:"API_KEY"})," and add it at the end of the URL:"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"IFTTT",src:n(164157).Z+"",width:"730",height:"381"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsxs)(t.ol,{start:"4",children:["\n",(0,s.jsxs)(t.li,{children:["To get access to our personal API key we first have to sign in to our IFTTT account and open the following page ",(0,s.jsx)(t.code,{children:"https://ifttt.com/services/maker_webhooks/settings"}),". Copy the alpha-numeric key in the Account Info - e.g. if you find the ",(0,s.jsx)(t.code,{children:"URL: https://maker.ifttt.com/use/c3oL9WnAbz8Z08KumJWS"}),", then ",(0,s.jsx)(t.code,{children:"c3oL9WnAbz8Z08KumJWS"})," is your API key:"]}),"\n"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"IFTTT",src:n(711653).Z+"",width:"730",height:"561"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsxs)(t.ol,{start:"5",children:["\n",(0,s.jsxs)(t.li,{children:["Copy your API key and replace the ",(0,s.jsx)(t.code,{children:"API_KEY"})," part in the URL for the ",(0,s.jsx)(t.strong,{children:"HTTP Request Node"})," in Node-RED. Then confirm the edit by hitting ",(0,s.jsx)(t.strong,{children:"Done"})," and the ",(0,s.jsx)(t.strong,{children:"Deploy"})," your flow:"]}),"\n"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"IFTTT",src:n(917126).Z+"",width:"730",height:"450"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsxs)(t.ol,{start:"6",children:["\n",(0,s.jsxs)(t.li,{children:["Hit the ",(0,s.jsx)(t.strong,{children:"Inject Node"})," to trigger an event. The ",(0,s.jsx)(t.strong,{children:"HTTP Request Node"})," will contact your IFTTT webhook and you will see a ",(0,s.jsx)(t.em,{children:"success message"})," outputted into the debug panel from the ",(0,s.jsx)(t.strong,{children:"Debug Node"})," connected to the request node - ",(0,s.jsx)(t.code,{children:"Congratulation! You fired the test_request event"})," - telling you that the IFTTT server was contacted and your Applet was executed:"]}),"\n"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"IFTTT",src:n(504091).Z+"",width:"730",height:"243"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsxs)(t.ol,{start:"7",children:["\n",(0,s.jsx)(t.li,{children:"Check your Email (the one you used to register your IFTTT account) - you will have received a message from IFTTT that follows the structure we set up in the Applet configuration:"}),"\n"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"IFTTT",src:n(285375).Z+"",width:"730",height:"284"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h3,{id:"ifttt-contacting-a-node-red-endpoint",children:"IFTTT Contacting a Node-RED Endpoint"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["We now want to set up a Node-RED sequence that contacts an IFTTT Webhook - just as in the step before - but instead of sending an Email, we want IFTTT to contact our own Webhook in Node-RED and trigger an event there that we can consume in a Flow. ",(0,s.jsx)(t.strong,{children:"Note"})," that this is just a proof of concept - later we want to use one of the many IFTTT services to replace the manual trigger, enabling us to connect the Node-RED webhook to services like ",(0,s.jsx)(t.em,{children:"Amazon Alexa"}),", ",(0,s.jsx)(t.em,{children:"Google Home"}),", ",(0,s.jsx)(t.em,{children:"Nest Home Automation"}),", etc."]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["To set up the manual trigger, we could simply recycle the node sequence we build previously. But to explore a different approach, we are going to install a third-party node called ",(0,s.jsx)(t.a,{href:"https://www.npmjs.com/package/node-red-contrib-ifttt",children:"node-red-contrib-ifttt"})," - that basically just combines the ",(0,s.jsx)(t.strong,{children:"Function Node"})," and ",(0,s.jsx)(t.strong,{children:"HTTP Request Node"})," that we used earlier (",(0,s.jsx)(t.strong,{children:"Note"})," with this setup, we cannot send custom variables with the message payload - we still would have to add another function node to realize the same sequence we created earlier.):"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:"[{'id':'2efd9020.529d9','type':'inject','z':'b8ce5e67.23af6','name':'','topic':'','payload':'','payloadType':'str','repeat':'','crontab':'','once':false,'onceDelay':'','x':92,'y':139,'wires':[['7abb924d.fcfabc']]},{'id':'7abb924d.fcfabc','type':'ifttt out','z':'b8ce5e67.23af6','eventName':'ifttt_webhook','key':'d6390bcb.c9fc08','x':236,'y':139,'wires':[]},{'id':'d6390bcb.c9fc08','type':'ifttt-key','z':''}]\n"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"IFTTT",src:n(439444).Z+"",width:"730",height:"169"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsxs)(t.ol,{start:"2",children:["\n",(0,s.jsxs)(t.li,{children:["Double-Click the ",(0,s.jsx)(t.strong,{children:"IFTT Node"})," to add an ",(0,s.jsx)(t.strong,{children:"Event Name"})," - we choose ",(0,s.jsx)(t.code,{children:"ifttt_webhook"})," -  and click on the pencil icon to add your ",(0,s.jsx)(t.strong,{children:"API key"}),", that we determined earlier:"]}),"\n"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"IFTTT",src:n(502932).Z+"",width:"730",height:"296"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsxs)(t.ol,{start:"3",children:["\n",(0,s.jsxs)(t.li,{children:["Just as in the ",(0,s.jsx)(t.a,{href:"#ifttt-setting-up-a-webhook",children:"previous example"}),", we now create an Applet on IFTTT that will use a ",(0,s.jsx)(t.strong,{children:"Webhook"})," to listen to the ",(0,s.jsx)(t.code,{children:"ifttt_webhook"})," event. Go to the ",(0,s.jsx)(t.strong,{children:"My Applets"})," tab on IFTTT and click on ",(0,s.jsx)(t.strong,{children:"New Applet"}),". Click on ",(0,s.jsx)(t.strong,{children:"this"})," and choose a ",(0,s.jsx)(t.strong,{children:"Webhook"})," as trigger:"]}),"\n"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"IFTTT",src:n(852461).Z+"",width:"730",height:"775"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsxs)(t.ol,{start:"4",children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["You have to give this ",(0,s.jsx)(t.strong,{children:"Webhook"})," the ",(0,s.jsx)(t.strong,{children:"Event Name"})," that you choose in Node-RED in the previous step and give it the URL to your Node-RED server. This can be done via the WAN IP address (",(0,s.jsx)(t.strong,{children:"Note"})," that this usually changes every 24hrs) or via your INSTAR cameras DDNS address (as long as it is on the same network as your Node-RED server!). This is followed by the port used by your Node-RED installation - by default this is the ",(0,s.jsx)(t.strong,{children:"Port 1880"}),". ",(0,s.jsx)(t.strong,{children:"Note"})," that this port needs to be forwarded in your router for IFTTT to be able to access it! We complete the URL by adding ",(0,s.jsx)(t.code,{children:"/pushalarm/trigger/recording"})," to identify the Node-RED webhook that we will have to create later."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["We can also add a message payload to the webhook request by IFTTT - this way we will be able to use the same webhook in Node-RED for more than one IFTTT Applet - e.g. when I leave home ",(0,s.jsx)(t.strong,{children:"Applet 1"})," sends the payload ",(0,s.jsx)(t.code,{children:"{'val': 'on'}"})," to activate the Motion Detection on my IP cameras. But if I arrive home and you receive ",(0,s.jsx)(t.code,{children:"{'val': 'off'}"})," from ",(0,s.jsx)(t.strong,{children:"Applet 2"}),", switch it off again. For this we have to switch to the ",(0,s.jsx)(t.strong,{children:"POST Method"}),", choose the ",(0,s.jsx)(t.strong,{children:"JSON Content Type"})," and the value that we need - like ",(0,s.jsx)(t.code,{children:"{'val': 'on'}"})," :"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"IFTTT",src:n(61124).Z+"",width:"730",height:"664"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsxs)(t.ol,{start:"6",children:["\n",(0,s.jsxs)(t.li,{children:["We now created an IFTTT Applet that, when triggered, will try to contact a webhook (",(0,s.jsx)(t.strong,{children:"HTTP IN Node"}),") in our Node-RED installation - make sure that the URL is reachable from the internet before you continue in step 4). Let's create that HTTP Endpoint in our Node-RED Flow:"]}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:"[{'id':'988f4c1b.cfac3','type':'http in','z':'b8ce5e67.23af6','name':'IFTTT Trigger','url':'/pushalarm/trigger/recording','method':'post','upload':false,'swaggerDoc':'','x':86,'y':238,'wires':[['650a9d50.1e9294','df518ee6.55111']]},{'id':'df518ee6.55111','type':'http response','z':'b8ce5e67.23af6','name':'','x':242,'y':239,'wires':[]},{'id':'650a9d50.1e9294','type':'json','z':'b8ce5e67.23af6','name':'','property':'payload','action':'','pretty':false,'x':242,'y':203,'wires':[['c2531a9f.8b5378']]},{'id':'c2531a9f.8b5378','type':'debug','z':'b8ce5e67.23af6','name':'','active':true,'tosidebar':true,'console':false,'tostatus':false,'complete':'false','x':381,'y':203,'wires':[]}]\n"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"IFTTT",src:n(948392).Z+"",width:"730",height:"232"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsxs)(t.p,{children:["The sequence starts with an ",(0,s.jsx)(t.strong,{children:"HTTP IN Node"})," that expects a ",(0,s.jsx)(t.strong,{children:"POST Request"})," on ",(0,s.jsx)(t.code,{children:"/pushalarm/trigger/recording"})," - that is the URL we added to our IFTTT Applet as the webhook that needs to be contacted. We need to add an empty ",(0,s.jsx)(t.strong,{children:"HTTP Response Node"})," at the end for the webhook to be operational:"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"IFTTT",src:n(106641).Z+"",width:"730",height:"335"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsxs)(t.p,{children:["Beside the  ",(0,s.jsx)(t.strong,{children:"HTTP Response Node"}),", we also connect a ",(0,s.jsx)(t.strong,{children:"Debug Node"})," that receives the payload that we set in the IFTTT Applet - the JSON payload ",(0,s.jsx)(t.code,{children:"{'val': 'on'}"})," will be received as a JavaScript Object that can be used by following nodes."]}),"\n",(0,s.jsxs)(t.p,{children:["We can now test the chain that we build. Clicking on the ",(0,s.jsx)(t.strong,{children:"Inject Node"})," will contact the ",(0,s.jsx)(t.strong,{children:"IFTTT Webhook"})," that ",(0,s.jsx)(t.strong,{children:"IFTTT Applet"})," is listening at. The Applet, when triggered, will then contact the ",(0,s.jsx)(t.strong,{children:"HTTP IN Node"})," in our Node-RED Flow and transmit the JSON payload ",(0,s.jsx)(t.code,{children:"{'val': 'on'}"}),", as seen in the debug panel."]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"IFTTT",src:n(892762).Z+"",width:"730",height:"318"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"real-world-example",children:"Real-world example"}),"\n",(0,s.jsxs)(t.p,{children:["We are now able to trigger IFTTT Applets from a Node-RED Flow, as well as trigger the Flow through an IFTTT Applet - which opens up the whole variety of ",(0,s.jsx)(t.a,{href:"https://ifttt.com/services",children:"services IFTTT"})," offers to automate our INSTAR IP camera."]}),"\n",(0,s.jsx)(t.h3,{id:"deactivate-the-alarm-when-i-am-home",children:"Deactivate the Alarm when I am Home"}),"\n",(0,s.jsxs)(t.p,{children:["IFTTT offers an ",(0,s.jsx)(t.a,{href:"https://play.google.com/store/apps/details?id=com.ifttt.ifttt",children:"Android"})," and ",(0,s.jsx)(t.a,{href:"https://itunes.apple.com/jp/app/ifttt/id660944635?mt=8",children:"iOS"})," App that can use the sensors on your phone to trigger your IFTTT Applets. For example, create a new Applet, choose ",(0,s.jsx)(t.strong,{children:"this"})," to add a trigger and search for ",(0,s.jsx)(t.strong,{children:"location"}),":"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"IFTTT",src:n(544060).Z+"",width:"730",height:"480"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsxs)(t.p,{children:["Select the ",(0,s.jsx)(t.strong,{children:"Location Trigger"})," and choose if you want this trigger to go off when you enter an area or when you are leaving it - in the end we will have to add two applets for both cases. They can be combined into one Node-RED sequence later on. Choose ",(0,s.jsx)(t.em,{children:"Enter Condition"})," for now and point it to your home:"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"IFTTT",src:n(259967).Z+"",width:"730",height:"736"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsxs)(t.p,{children:["Now we have to select a ",(0,s.jsx)(t.strong,{children:"Webhook"})," as the ",(0,s.jsx)(t.strong,{children:"that"})," condition - just as we have done in the earlier example. We will create a new ",(0,s.jsx)(t.strong,{children:"HTTP IN Node"})," listening on ",(0,s.jsx)(t.code,{children:"/alarm/md/areas"})," in Node-RED for it - the URL for the webhook will be ",(0,s.jsx)(t.code,{children:"https://<DDNS Address>:1880/alarm/md/areas"})," accordingly. The Applet has to use this URL to ",(0,s.jsx)(t.strong,{children:"POST"})," the ",(0,s.jsx)(t.code,{children:"{'val':'off'}"})," message:"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"IFTTT",src:n(567366).Z+"",width:"731",height:"927"})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsxs)(t.p,{children:["Repeat those steps for a second Applet that posts ",(0,s.jsx)(t.code,{children:"{'val':'on'}"}),", whenever you leave the area."]}),"\n",(0,s.jsxs)(t.p,{children:["We can now use a variation of the Alarm Flow that we ",(0,s.jsx)(t.a,{href:"https://wiki.instar.com/en/Advanced_User/OpenHAB_Home_Automation/IP_Camera_Control/#setting-up-node-red",children:"already used a couple of times"})," to switch the alarm areas of our INSTAR IP camera on and off when the message ",(0,s.jsx)(t.code,{children:"{'val':'on'}"})," or ",(0,s.jsx)(t.code,{children:"{'val':'off'}"})," is posted to our ",(0,s.jsx)(t.strong,{children:"HTTP IN Node"})," webhook - you can ",(0,s.jsx)(t.a,{href:"https://wiki.instar.com/en/Node-RED_Flows/nodered_flow_alarm_areas_IFTTT.json",children:"download the Flow from here"})," and add your camera login to the ",(0,s.jsx)(t.strong,{children:"Login Node"}),". When the IFTTT Applets triggers our Node-RED webhook, the CGI commands for activating or deactivating the alarm areas will be send to your camera. ",(0,s.jsx)(t.strong,{children:"Note"})," that the commands used here only work with HD and Full HD cameras and you can replace them with every other CGI command you need:"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"IFTTT",src:n(883522).Z+"",width:"730",height:"289"})}),"\n",(0,s.jsx)(t.hr,{})]})}function l(e={}){const{wrapper:t}={...(0,o.ah)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},603905:(e,t,n)=>{n.d(t,{ah:()=>h});var s=n(667294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,s,o=function(e,t){if(null==e)return{};var n,s,o={},a=Object.keys(e);for(s=0;s<a.length;s++)n=a[s],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(s=0;s<a.length;s++)n=a[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var d=s.createContext({}),h=function(e){var t=s.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},l=s.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,d=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),p=h(n),T=o,g=p["".concat(d,".").concat(T)]||p[T]||c[T]||a;return n?s.createElement(g,r(r({ref:t},l),{},{components:n})):s.createElement(g,r({ref:t},l))}));l.displayName="MDXCreateElement"},472117:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/IFTTT_01-d41e5d547bc2df834915e2894d46f335.png"},698123:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/IFTTT_02-beefdd808c49ce34ed825e72bd71ac73.png"},732651:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/IFTTT_03-60b5b50651f1117b6a85f2cf85cd17d5.png"},117543:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/IFTTT_04-4c91ba5e722946ca9c52e6f9e704f2fd.png"},140422:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/IFTTT_05-ea23ce0fe5abdc3f728249db3e47cfee.png"},375303:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/IFTTT_06-6f8638345d099115b615206157972718.png"},713350:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/IFTTT_07-acc7fa24dd04f67fc9a3055add8ba770.png"},444031:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/IFTTT_08-0d5dad87a60a10aad5fcd40400754a7e.png"},465985:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/IFTTT_09-c990d5589454af8e70b6dc9aea868cd3.png"},690129:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/IFTTT_10-7da02e82dfbfb05c88b6f504327f0ab4.png"},163808:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/IFTTT_11-1732a6f1808fe1d3f9cbc16d49fc4ea5.png"},544483:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/IFTTT_12-2268d1d1331212ad71a38c4acb158e22.png"},164157:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/IFTTT_13-78db208c523f90364f64da963bccb04e.png"},711653:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/IFTTT_14-8b0e437d17ccf998062041092ad3a94e.png"},917126:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/IFTTT_15-1c7640c05ae58ee8c34d97785ff44cb2.png"},504091:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/IFTTT_16-308e146875590d2fede1898ab4e0ceac.png"},285375:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/IFTTT_17-d2d2b3afe8f3e9cd2c0d95bfdb7a6652.png"},439444:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/IFTTT_18-ee843e3e17946265dc31eab27b9cfdd4.png"},502932:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/IFTTT_19-a69a3c74e6cf7fd770a144521d23f545.png"},852461:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/IFTTT_20-6daee532e13014f5b85f6cde6ba24f4b.png"},61124:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/IFTTT_21-11bceec2d861dfe671a9ad5074590808.png"},948392:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/IFTTT_22-4272bcf25cda75a83637623715205d79.png"},106641:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/IFTTT_23-2fcc662ee5e816ff92302ccd6313d5c1.png"},892762:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/IFTTT_24-af3a44fba6c7bb9b429846c21ffb3434.gif"},544060:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/IFTTT_25-fdeab40d5596ecf0a7ec3f2e8fd66988.png"},259967:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/IFTTT_26-4f59994ee179eb91bfd68ed57d6eebc5.png"},567366:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/IFTTT_27-01d492c79eda338edf634f3afb6422c0.png"},883522:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/IFTTT_28-0d77d528196d8c9b732453c84bc41db0.gif"},538812:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/photo-15491736416_6abd8de751_o-b6acc423fc2fd175cd430638e4ea1ef2.png"}}]);