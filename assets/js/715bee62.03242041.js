"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[53264],{555745:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>t,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var a=n(785893),i=n(603905);const s={sidebar_position:3865,slug:"2023-10-22",title:"Hashicorp Terraform - Docker Provider 2023",authors:"mpolinowski",tags:["Terraform","LINUX"],description:"Build, change, and destroy Docker infrastructure using Terraform."},t=void 0,l={id:"DevOps/Hashicorp/2023-10-22-hashicorp-terraform-docker-2023/index",title:"Hashicorp Terraform - Docker Provider 2023",description:"Build, change, and destroy Docker infrastructure using Terraform.",source:"@site/docs/DevOps/Hashicorp/2023-10-22-hashicorp-terraform-docker-2023/index.md",sourceDirName:"DevOps/Hashicorp/2023-10-22-hashicorp-terraform-docker-2023",slug:"/DevOps/Hashicorp/2023-10-22-hashicorp-terraform-docker-2023/2023-10-22",permalink:"/docs/DevOps/Hashicorp/2023-10-22-hashicorp-terraform-docker-2023/2023-10-22",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Hashicorp/2023-10-22-hashicorp-terraform-docker-2023/index.md",tags:[{label:"Terraform",permalink:"/docs/tags/terraform"},{label:"LINUX",permalink:"/docs/tags/linux"}],version:"current",sidebarPosition:3865,frontMatter:{sidebar_position:3865,slug:"2023-10-22",title:"Hashicorp Terraform - Docker Provider 2023",authors:"mpolinowski",tags:["Terraform","LINUX"],description:"Build, change, and destroy Docker infrastructure using Terraform."},sidebar:"tutorialSidebar",previous:{title:"Hashicorp",permalink:"/docs/category/hashicorp"},next:{title:"Hashicorp Vault - Certificate Authority",permalink:"/docs/DevOps/Hashicorp/2022-12-07-hashicorp-vault-ca-certificates/2022-12-07"}},o={},c=[{value:"Installation Linux",id:"installation-linux",level:2},{value:"Get Started - Docker",id:"get-started---docker",level:2},{value:"Hello World",id:"hello-world",level:3},{value:"Deployment",id:"deployment",level:3},{value:"Update Infrastructure",id:"update-infrastructure",level:3},{value:"Destroy Infrastructure",id:"destroy-infrastructure",level:3},{value:"Variables",id:"variables",level:2},{value:"Variables File",id:"variables-file",level:3},{value:"Override Default Variables",id:"override-default-variables",level:3},{value:"Variables by String Input",id:"variables-by-string-input",level:3},{value:".tfvsrs File",id:"tfvsrs-file",level:3},{value:"Environment Variables",id:"environment-variables",level:3},{value:"Variables Precedence",id:"variables-precedence",level:3},{value:"Query Data with Outputs",id:"query-data-with-outputs",level:2},{value:"Terraform Modules",id:"terraform-modules",level:2},{value:"Shared Local",id:"shared-local",level:3}];function d(e){const r={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.ah)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.p,{children:(0,a.jsx)(r.img,{alt:"Shen Zhen, China",src:n(162235).Z+"",width:"2230",height:"839"})}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.a,{href:"#installation-linux",children:"Installation Linux"})}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.a,{href:"#get-started---docker",children:"Get Started - Docker"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.a,{href:"#hello-world",children:"Hello World"})}),"\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.a,{href:"#deployment",children:"Deployment"})}),"\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.a,{href:"#update-infrastructure",children:"Update Infrastructure"})}),"\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.a,{href:"#destroy-infrastructure",children:"Destroy Infrastructure"})}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.a,{href:"#variables",children:"Variables"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.a,{href:"#variables-file",children:"Variables File"})}),"\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.a,{href:"#override-default-variables",children:"Override Default Variables"})}),"\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.a,{href:"#variables-by-string-input",children:"Variables by String Input"})}),"\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.a,{href:"#tfvsrs-file",children:".tfvsrs File"})}),"\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.a,{href:"#environment-variables",children:"Environment Variables"})}),"\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.a,{href:"#variables-precedence",children:"Variables Precedence"})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.a,{href:"#query-data-with-outputs",children:"Query Data with Outputs"})}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.a,{href:"#terraform-modules",children:"Terraform Modules"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.a,{href:"#shared-local",children:"Shared Local"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(r.h2,{id:"installation-linux",children:"Installation Linux"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"wget https://releases.hashicorp.com/terraform/1.6.2/terraform_1.6.2_linux_amd64.zip\nwget https://releases.hashicorp.com/terraform/1.6.2/terraform_1.6.2_SHA256SUMS\n"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"sha256sum terraform_1.6.2_linux_amd64.zip\nsha256sum -c terraform_1.6.2_SHA256SUMS\n\n> terraform_1.6.2_linux_amd64.zip: OK\n"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"unzip terraform_1.6.2_linux_amd64.zip\nrm terraform_1.6.2_linux_amd64.zip\n\nsudo mv terraform /usr/bin/terraform\n"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"terraform -v\n\nTerraform v1.6.2\non linux_amd64\n"})}),"\n",(0,a.jsx)(r.p,{children:"Add auto-completion to bash or zsh:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"terraform -install-autocomplete\n"})}),"\n",(0,a.jsx)(r.h2,{id:"get-started---docker",children:"Get Started - Docker"}),"\n",(0,a.jsx)(r.p,{children:"Build, change, and destroy Docker infrastructure using Terraform. Step-by-step, command-line tutorials will walk you through the Terraform basics for the first time."}),"\n",(0,a.jsx)(r.h3,{id:"hello-world",children:"Hello World"}),"\n",(0,a.jsxs)(r.p,{children:["Create a file ",(0,a.jsx)(r.code,{children:"main.tf"})," inside a sub-dir (all job files need to be located in their own directory):"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-json",children:'terraform {\n  required_providers {\n    docker = {\n      source  = "kreuzwerker/docker"\n      version = "~> 3.0.2"\n    }\n  }\n}\n\nprovider "docker" {}\n\nresource "docker_image" "nginx" {\n  name         = "nginx:latest"\n  keep_locally = false\n}\n\nresource "docker_container" "nginx" {\n  image = docker_image.nginx.image_id\n  name  = "tutorial"\n  ports {\n    internal = 80\n    external = 8000\n  }\n}\n'})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"terraform fmt\n> main.tf\n\nterraform validate\n> Success! The configuration is valid.\n"})}),"\n",(0,a.jsx)(r.h3,{id:"deployment",children:"Deployment"}),"\n",(0,a.jsx)(r.p,{children:"In the terminal, initialize the project, which downloads a plugin that allows Terraform to interact with Docker:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"terraform init\n\n> Terraform has been successfully initialized!\n"})}),"\n",(0,a.jsx)(r.p,{children:"Provision the NGINX server container with apply. When Terraform asks you to confirm, type yes and press ENTER:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"terraform apply\n"})}),"\n",(0,a.jsx)(r.p,{children:"Inspect the current state using:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"terraform show\nterraform state list\n"})}),"\n",(0,a.jsx)(r.p,{children:"Run `docker ps`` to view the NGINX container running in Docker via Terraform:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"docker ps\n\nCONTAINER ID   IMAGE          STATUS         PORTS                  NAMES\n1a62207b5026   bc649bab30d1   Up 3 minutes   0.0.0.0:8000->80/tcp   tutorial\n"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"curl localhost:8000\n\n<!DOCTYPE html>\n<html>\n<head>\n<title>Welcome to nginx!</title>\n...\n"})}),"\n",(0,a.jsx)(r.h3,{id:"update-infrastructure",children:"Update Infrastructure"}),"\n",(0,a.jsx)(r.p,{children:"Change the docker_container.nginx resource under the provider block in main.tf by replacing the ports.external value of 8000 with 8080:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-json",children:'resource "docker_container" "nginx" {\n  image = docker_image.nginx.image_id\n  name  = "tutorial"\n  hostname = "learn-terraform-docker"\n  ports {\n    internal = 80\n    external = 8080\n  }\n}\n'})}),"\n",(0,a.jsxs)(r.p,{children:["After changing the configuration, run ",(0,a.jsx)(r.code,{children:"terraform apply"})," again to see how Terraform will apply this change to the existing resources:"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"terraform apply\n"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"docker ps\n\nCONTAINER ID   IMAGE          STATUS         PORTS                   NAMES\n1a62207b5026   bc649bab30d1   Up 3 minutes   0.0.0.0:8080--\x3e80/tcp   tutorial\n"})}),"\n",(0,a.jsx)(r.h3,{id:"destroy-infrastructure",children:"Destroy Infrastructure"}),"\n",(0,a.jsx)(r.p,{children:"To stop the container and destroy the resources created in this tutorial, run terraform destroy. When Terraform asks you to confirm, type yes and press ENTER:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"terraform destroy\n"})}),"\n",(0,a.jsx)(r.p,{children:"You have now provisioned and destroyed an NGINX webserver with Terraform."}),"\n",(0,a.jsx)(r.h2,{id:"variables",children:"Variables"}),"\n",(0,a.jsx)(r.h3,{id:"variables-file",children:"Variables File"}),"\n",(0,a.jsxs)(r.p,{children:["Create a new file called ",(0,a.jsx)(r.code,{children:"variables.tf"})," with a block defining a new ",(0,a.jsx)(r.code,{children:"container_name"})," variable:"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-json",children:'variable "container_name" {\n  description = "Value of the name for the Docker container"\n  type        = string\n  default     = "ExampleNginxContainer"\n}\n'})}),"\n",(0,a.jsxs)(r.p,{children:["In ",(0,a.jsx)(r.code,{children:"main.tf"}),", update the docker_container resource block to use the new variable. The container_name variable block will default to its default value (",(0,a.jsx)(r.code,{children:"ExampleNginxContainer"}),") unless you declare a different value:"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-json",children:'resource "docker_container" "nginx" {\n  image = docker_image.nginx.image_id\n  name  = var.container_name\n  ports {\n    internal = 80\n    external = 8080\n  }\n}\n'})}),"\n",(0,a.jsxs)(r.p,{children:["Apply the configuration. Respond to the confirmation prompt with a ",(0,a.jsx)(r.code,{children:"yes"}),":"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"terraform apply\n"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"docker ps\n\nCONTAINER ID   IMAGE          STATUS         PORTS                   NAMES\nf1188cbea686   bc649bab30d1   Up 39 seconds  0.0.0.0:8080--\x3e80/tcp   ExampleNginxContainer\n"})}),"\n",(0,a.jsx)(r.h3,{id:"override-default-variables",children:"Override Default Variables"}),"\n",(0,a.jsxs)(r.p,{children:["Now apply the configuration again, this time overriding the default container name by passing in a variable using the ",(0,a.jsx)(r.code,{children:"-var"})," flag. Terraform will update the container's name attribute with the new name. Respond to the confirmation prompt with ",(0,a.jsx)(r.code,{children:"yes"}),":"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"terraform apply -var 'container_name=nginx-ingress'\n"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"docker ps\n\nCONTAINER ID   IMAGE          STATUS        PORTS                   NAMES\n79eb40cfe38c   bc649bab30d1   Up 4 seconds  0.0.0.0:8080--\x3e80/tcp   nginx-ingress\n"})}),"\n",(0,a.jsx)(r.h3,{id:"variables-by-string-input",children:"Variables by String Input"}),"\n",(0,a.jsx)(r.p,{children:"Remove the default value to force a user input when the job is started:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-json",children:'variable "container_name" {\n  description = "Value of the name for the Docker container"\n  type        = string\n}\n'})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"terraform apply\n\nvar.container_name\n  Value of the name for the Docker container\n\n  Enter a value:\n"})}),"\n",(0,a.jsx)(r.h3,{id:"tfvsrs-file",children:".tfvsrs File"}),"\n",(0,a.jsxs)(r.p,{children:["Instead of specifying the variables inside the variables file we can create a ",(0,a.jsx)(r.code,{children:"terraform.tfvars"})," file with all the information. We still need to instantiate the variable inside ",(0,a.jsx)(r.code,{children:"variables.tf"}),":"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-json",children:'variable "container_name" {\n  description = "Value of the name for the Docker container"\n  type        = string\n}\n'})}),"\n",(0,a.jsxs)(r.p,{children:["But all the user editable information will be inside the ",(0,a.jsx)(r.code,{children:"terraform.tfvars"})," file:"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-json",children:'container_name = "nginx-ingress"\n'})}),"\n",(0,a.jsx)(r.h3,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,a.jsx)(r.p,{children:"To avoid leaking - e.g. credentials - to your source management system you can use environment variables instead of adding those values to your tf code. In the following example I edited the hostname and external port that Docker should use for my container:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-json",children:'resource "docker_container" "nginx" {\n  image    = docker_image.nginx.image_id\n  name     = var.container_name\n  hostname = var.HOSTNAME\n  ports {\n    internal = 80\n    external = var.EXT_PORT\n  }\n}\n'})}),"\n",(0,a.jsxs)(r.p,{children:["These variables need to be declared in the ",(0,a.jsx)(r.code,{children:"variables.tf"})," file:"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-json",children:'variable "HOSTNAME" {\n  description = "Name of the Docker host"\n  type        = string\n}\n\nvariable "EXT_PORT" {\n  description = "External port forwarded to the ingress container"\n  type        = string\n}\n'})}),"\n",(0,a.jsx)(r.p,{children:"Now export the values you want to set for those variables from your terminal:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"export TF_VAR_HOSTNAME=docker_hostname\nexport TF_VAR_EXT_PORT=7777\n"})}),"\n",(0,a.jsx)(r.p,{children:"Apply the changes and verify that the container is now using the new external port:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"terraform apply\ndocker ps\n\nCONTAINER ID   IMAGE          STATUS        PORTS                   NAMES\n5cd4ef649771   bc649bab30d1   Up 5 seconds  0.0.0.0:7777--\x3e80/tcp   nginx-ingress\n"})}),"\n",(0,a.jsx)(r.h3,{id:"variables-precedence",children:"Variables Precedence"}),"\n",(0,a.jsxs)(r.ol,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.code,{children:"-var"})," and ",(0,a.jsx)(r.code,{children:"-var-file"})," option for ",(0,a.jsx)(r.code,{children:"terraform apply"})]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.code,{children:"*.auto.tfvars"})," | ",(0,a.jsx)(r.code,{children:"*.auto.tfvars.json"})]}),"\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.code,{children:"terraform.tfvars.json"})}),"\n",(0,a.jsx)(r.li,{children:(0,a.jsx)(r.code,{children:"terraform.tfvars"})}),"\n",(0,a.jsx)(r.li,{children:"Environment variables"}),"\n"]}),"\n",(0,a.jsx)(r.h2,{id:"query-data-with-outputs",children:"Query Data with Outputs"}),"\n",(0,a.jsxs)(r.p,{children:["Create a file called ",(0,a.jsx)(r.code,{children:"outputs.tf"})," and add the configuration below to define outputs for your container's ID and the image ID:"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-json",children:'output "container_id" {\n  description = "ID of the Docker container"\n  value       = docker_container.nginx.id\n}\n\noutput "image_id" {\n  description = "ID of the Docker image"\n  value       = docker_image.nginx.id\n}\n'})}),"\n",(0,a.jsxs)(r.p,{children:["You must apply this configuration before you can use these output values. Apply your configuration now. Respond to the confirmation prompt with ",(0,a.jsx)(r.code,{children:"yes"}),":"]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:'terraform apply\n\nApply complete! Resources: 1 added, 0 changed, 1 destroyed.\n\nOutputs:\n\ncontainer_id = "c437b5c58531a9b3c4e2eb8486d54960093faff1e4996a6d7445b19742d32f38"\nimage_id = "sha256:bc649bab30d150c10a84031a7f54c99a8c31069c7bc324a7899d7125d59cc973nginx:latest"\n'})}),"\n",(0,a.jsxs)(r.p,{children:["Terraform prints output values to the screen when you apply your configuration. Query the outputs with the ",(0,a.jsx)(r.code,{children:"terraform output"})," command."]}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:'container_id = "c437b5c58531a9b3c4e2eb8486d54960093faff1e4996a6d7445b19742d32f38"\nimage_id = "sha256:bc649bab30d150c10a84031a7f54c99a8c31069c7bc324a7899d7125d59cc973nginx:latest"\n'})}),"\n",(0,a.jsx)(r.h2,{id:"terraform-modules",children:"Terraform Modules"}),"\n",(0,a.jsx)(r.h3,{id:"shared-local",children:"Shared Local"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"mkdir -p {modules/webserver,dev-config,prod-config}\ntouch {modules/webserver/main.tf,modules/webserver/variables.tf}\n"})}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.a,{href:"https://registry.terraform.io/providers/kreuzwerker/docker/latest/docs",children:"https://registry.terraform.io/providers/kreuzwerker/docker/latest/docs"}),"\n",(0,a.jsx)(r.a,{href:"https://adamtheautomator.com/terraform-docker/",children:"https://adamtheautomator.com/terraform-docker/"})]}),"\n",(0,a.jsx)(r.p,{children:(0,a.jsx)(r.em,{children:"modules/webserver/main.tf"})})]})}function h(e={}){const{wrapper:r}={...(0,i.ah)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},603905:(e,r,n)=>{n.d(r,{ah:()=>c});var a=n(667294);function i(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function s(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,a)}return n}function t(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?s(Object(n),!0).forEach((function(r){i(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,a,i=function(e,r){if(null==e)return{};var n,a,i={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],r.indexOf(n)>=0||(i[n]=e[n]);return i}(e,r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=a.createContext({}),c=function(e){var r=a.useContext(o),n=r;return e&&(n="function"==typeof e?e(r):t(t({},r),e)),n},d={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},h=a.forwardRef((function(e,r){var n=e.components,i=e.mdxType,s=e.originalType,o=e.parentName,h=l(e,["components","mdxType","originalType","parentName"]),u=c(n),p=i,m=u["".concat(o,".").concat(p)]||u[p]||d[p]||s;return n?a.createElement(m,t(t({ref:r},h),{},{components:n})):a.createElement(m,t({ref:r},h))}));h.displayName="MDXCreateElement"},162235:(e,r,n)=>{n.d(r,{Z:()=>a});const a=n.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-6c1edb088dfea3a7d39f8eebb8e9dc23.jpg"}}]);