"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[61027],{141097:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var t=s(474848),r=s(28453);const i={sidebar_position:9090,slug:"2020-11-19",title:"Ansible Playbooks",authors:"mpolinowski",tags:["LINUX","NGINX","Ansible"]},a=void 0,o={id:"DevOps/Ansible/2020-11-19--ansible-playbooks/index",title:"Ansible Playbooks",description:"Shenzhen, China",source:"@site/docs/DevOps/Ansible/2020-11-19--ansible-playbooks/index.md",sourceDirName:"DevOps/Ansible/2020-11-19--ansible-playbooks",slug:"/DevOps/Ansible/2020-11-19--ansible-playbooks/2020-11-19",permalink:"/docs/DevOps/Ansible/2020-11-19--ansible-playbooks/2020-11-19",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Ansible/2020-11-19--ansible-playbooks/index.md",tags:[{label:"LINUX",permalink:"/docs/tags/linux"},{label:"NGINX",permalink:"/docs/tags/nginx"},{label:"Ansible",permalink:"/docs/tags/ansible"}],version:"current",sidebarPosition:9090,frontMatter:{sidebar_position:9090,slug:"2020-11-19",title:"Ansible Playbooks",authors:"mpolinowski",tags:["LINUX","NGINX","Ansible"]},sidebar:"tutorialSidebar",previous:{title:"Ansible Copy Cheat Sheet",permalink:"/docs/DevOps/Ansible/2020-11-20--ansible-copy-cheat-sheet/2020-11-20"},next:{title:"Setting up a Ansible on Debian Buster",permalink:"/docs/DevOps/Ansible/2020-11-18--ansible-on-debian-buster/2020-11-18"}},l={},c=[{value:"Sections",id:"sections",level:2},{value:"Loops",id:"loops",level:3},{value:"Handler",id:"handler",level:2},{value:"Copy Loop",id:"copy-loop",level:3}];function d(n){const e={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"Shenzhen, China",src:s(834287).A+"",width:"1500",height:"520"})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.a,{href:"#sections",children:"Sections"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"#loops",children:"Loops"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.a,{href:"#handler",children:"Handler"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"#copy-loop",children:"Copy Loop"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"sections",children:"Sections"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Mandatory Sections"})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Target Section => Specify host group"}),"\n",(0,t.jsx)(e.li,{children:"Variable Section => List all variables used by the playbook"}),"\n",(0,t.jsx)(e.li,{children:"Task Section => List all tasks that need to be performed on hosts"}),"\n"]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.strong,{children:"Optional Sections"})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"Handler Section"}),"\n",(0,t.jsx)(e.li,{children:"Loops"}),"\n",(0,t.jsx)(e.li,{children:"Conditionals"}),"\n",(0,t.jsx)(e.li,{children:"Until"}),"\n",(0,t.jsx)(e.li,{children:"Notify"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"nano test.yml\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yml",children:'---\r\n- hosts: test\r\n\r\n  vars:\r\n    package1 : "nginx"\r\n    package2 : "wget"\r\n\r\n  tasks:\r\n  \r\n    - name: Installing NGINX\r\n      apt: pkg=nginx state=installed update_cache=true\r\n      become: true\r\n\r\n    - name: Installing WGET\r\n      apt: pkg={{ package2 }} state=installed update_cache=true\r\n      become: true\n'})}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsxs)(e.p,{children:["Check ",(0,t.jsx)(e.code,{children:"ansible-doc apt"})," for details on what arguments can be used."]}),"\n"]}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsxs)(e.p,{children:["The value of ",(0,t.jsx)(e.code,{children:"state"})," can be one of: ",(0,t.jsx)(e.code,{children:"absent"}),", ",(0,t.jsx)(e.code,{children:"build-dep"}),", ",(0,t.jsx)(e.code,{children:"fixed"}),", ",(0,t.jsx)(e.code,{children:"latest"}),", ",(0,t.jsx)(e.code,{children:"present"})]}),"\n"]}),"\n",(0,t.jsxs)(e.p,{children:["In the example above I am installing ",(0,t.jsx)(e.code,{children:"wget"})," from the variable ",(0,t.jsx)(e.code,{children:"package2"})," as defined above. THis does not make a difference here, but will become important when you start writing playbooks for different host systems where the same package is listed under a different name. We can than use a JinJa script to determine the host system from the Ansible facts and set the variable ",(0,t.jsx)(e.code,{children:"package2"})," for example to ",(0,t.jsx)(e.code,{children:"httpd"})," or ",(0,t.jsx)(e.code,{children:"apache2"})," to install Apache on a CentOS and Debian system with the same playbook."]}),"\n",(0,t.jsxs)(e.p,{children:["The ",(0,t.jsx)(e.code,{children:"become: true"})," directive means that the package is installed with ",(0,t.jsx)(e.code,{children:"sudo"})," - since I am locked in with my root account this is not necessary. But I will leave it in here. Going to need this in the future."]}),"\n",(0,t.jsx)(e.p,{children:"I can run this playbook with:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"ansible-playbook test.yml\n"})}),"\n",(0,t.jsx)(e.p,{children:"Before I used the copy command to copy a file from my host to the remote system. We can now re-write this ad hoc command as a task inside the playbook:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yml",children:'---\r\n- hosts: test\r\n\r\n  vars:\r\n    package1 : "nginx"\r\n    package2 : "wget"\r\n\r\n  tasks:\r\n    - name: Installing NGINX\r\n      apt: pkg={{ package1 }} state=present update_cache=true\r\n      become: true\r\n\r\n    - name: Installing WGET\r\n      apt: pkg={{ package2 }} state=present update_cache=true\r\n      become: true\r\n\r\n    - name: Copying test config file\r\n      copy: src=/opt/ansible/playbooks dest=/opt/test2\n'})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"ansible-playbook test.yml\r\n\r\n\r\nPLAY [test] *********************************************************\r\n\r\nTASK [Gathering Facts] **********************************************\r\nok: [192.168.2.111]\r\n\r\nTASK [Installing NGINX] *********************************************\r\nchanged: [192.168.2.111]\r\n\r\nTASK [Installing WGET] **********************************************\r\nok: [192.168.2.111]\r\n\r\nTASK [Copying test config file] *************************************\r\nchanged: [192.168.2.111]\r\n\r\nPLAY RECAP **********************************************************\r\n2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\n"})}),"\n",(0,t.jsx)(e.h3,{id:"loops",children:"Loops"}),"\n",(0,t.jsx)(e.p,{children:"We can also combine the two install steps using a loop:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yml",children:"---\r\n- hosts: test\r\n  tasks:\r\n\r\n    - name: Installing NGINX, wget\r\n      apt: name={{ item }} state=present update_cache=true\r\n      with_items:\r\n        - nginx\r\n        - wget\r\n\r\n    - name: Copying test config file\r\n      copy: src=/opt/ansible/playbooks dest=/opt/test2\n"})}),"\n",(0,t.jsx)(e.h2,{id:"handler",children:"Handler"}),"\n",(0,t.jsxs)(e.p,{children:["I now want to stop the NGINX service after the installation, copy over configuration files and than instruct a handler to restart the service - for this I created a new file ",(0,t.jsx)(e.code,{children:"nginx-ingress.yml"})," in ",(0,t.jsx)(e.code,{children:"/opt/ansible/playbooks"}),"."]}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsxs)(e.p,{children:["The NGINX configuration files can be found here: ",(0,t.jsx)(e.a,{href:"https://github.com/mpolinowski/gatsby-multilang-template",children:"gatsby-multilang-template"})]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yml",children:"---\r\n- hosts: test\r\n  tasks:\r\n    - name: Aptitude Update\r\n      apt: update_cache=yes\r\n\r\n    - name: Installing NGINX\r\n      apt: pkg=nginx state=present update_cache=no\r\n\r\n    - name: Stop NGINX Service\r\n      service: name=nginx state=stopped \r\n      \r\n    - name: Copying nginx.conf\r\n      copy:\r\n        src=/opt/test-static/nginx/nginx.conf\r\n        dest=/etc/nginx/nginx.conf\r\n      notify:\r\n        - Start NGINX\r\n\r\n    - name: Copy the entire content of the conf.d directory\r\n      copy:\r\n        src=/opt/test-static/nginx/conf.d/\r\n        dest=/etc/nginx/conf.d\r\n      notify:\r\n        - Start NGINX\r\n\r\n    - name: Copy only the applicable certificates from the ssl directory\r\n      copy:\r\n        src=/opt/test-static/nginx/ssl/{{item}}\r\n        dest=/etc/nginx/ssl/\r\n      with_items:\r\n        ['dhparam.pem','nginx-selfsigned.crt','nginx-selfsigned.key']\r\n      notify:\r\n        - Start NGINX\r\n\r\n  handlers:\r\n    - name: Start NGINX\r\n      service: name=nginx state=started\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"ansible-playbook nginx-ingress.yml\r\n\r\n\r\nPLAY [test] ************************************************************\r\nTASK [Gathering Facts] *************************************************\r\nok: [192.168.2.111]\r\n\r\nTASK [Installing NGINX] ************************************************\r\nchanged: [192.168.2.111]\r\n\r\nTASK [Stop NGINX Service] **********************************************\r\nchanged: [192.168.2.111]\r\n\r\nTASK [Copying nginx.conf] **********************************************\r\nchanged: [192.168.2.111]\r\n\r\nTASK [Copy the entire content of the conf.d directory] *****************\r\nchanged: [192.168.2.111]\r\n\r\nTASK [Copy only the applicable certificates from the ssl directory] ************************************************************************\r\nchanged: [192.168.2.111] => (item=dhparam.pem)\r\nchanged: [192.168.2.111] => (item=nginx-selfsigned.crt)\r\nchanged: [192.168.2.111] => (item=nginx-selfsigned.key)\r\n\r\nRUNNING HANDLER [Start NGINX] ******************************************\r\nchanged: [192.168.2.111]\r\n\r\nPLAY RECAP ***************************************************************\r\n192.168.2.111: ok=1    changed=8    unreachable=0    failed=0    skipped=0\n"})}),"\n",(0,t.jsx)(e.h3,{id:"copy-loop",children:"Copy Loop"}),"\n",(0,t.jsx)(e.p,{children:"Combining the Copy commands using an Ansible loop."}),"\n",(0,t.jsxs)(e.blockquote,{children:["\n",(0,t.jsxs)(e.p,{children:["I also had to add the ",(0,t.jsx)(e.code,{children:"nginx"})," user required by the NGINX configuration file that I am using."]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yml",children:"---\r\n- hosts: test\r\n  tasks:\r\n    - name: Aptitude Update\r\n      apt: update_cache=yes\r\n\r\n    - name: Add NGINX user\r\n      user:\r\n        name: nginx\r\n        comment: NGINX User\r\n        group: nginx\r\n        shell: /bin/sh\r\n        home: /home/nginx\r\n\r\n    - name: Installing NGINX\r\n      apt: pkg=nginx state=present update_cache=no\r\n\r\n    - name: Stop NGINX Service\r\n      service: name=nginx state=stopped \r\n        \r\n    - name: Copy the NGINX Configuration\r\n      copy:\r\n        src: \"{{ item.src }}\"\r\n        dest: \"{{ item.dest }}\"\r\n        mode: \"{{item.mode}}\"\r\n      with_items:\r\n        - { src: '/opt/test-static/nginx/nginx.conf',dest: '/etc/nginx/nginx.conf', mode: '0664'}\r\n        - { src: '/opt/test-static/nginx/conf.d/',dest: '/etc/nginx/conf.d', mode: '0664'}\r\n        - { src: '/opt/test-static/nginx/ssl/',dest: '/etc/nginx/ssl', mode: '0664'}\r\n      notify:\r\n        - Start NGINX    \r\n\r\n  handlers:\r\n    - name: Start NGINX\r\n      service: name=nginx state=restarted\r\n      # notify:\r\n      #   - Verify that NGINX did not crash\r\n\r\n    # - name: Verify that NGINX did not crash\r\n    #   shell: service nginx status\r\n    #   register: result\r\n    #   until: result.stdout.find(\"active (running)\") != -1\r\n    #   retries: 5\r\n    #   delay: 5\n"})})]})}function h(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}},834287:(n,e,s)=>{s.d(e,{A:()=>t});const t=s.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-2215e4912b7f3d1beed1d8b83bac94aa.jpg"},28453:(n,e,s)=>{s.d(e,{R:()=>a,x:()=>o});var t=s(296540);const r={},i=t.createContext(r);function a(n){const e=t.useContext(i);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:a(n.components),t.createElement(i.Provider,{value:e},n.children)}}}]);