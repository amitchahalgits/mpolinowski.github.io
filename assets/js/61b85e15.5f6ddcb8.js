"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[15094],{145007:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>l});var s=a(474848),i=a(28453);const t={sidebar_position:5020,slug:"2022-05-28",title:"Hashicorp Nomad to set up an Elasticsearch Cluster Part II",authors:"mpolinowski",tags:["Nomad","Consul","LINUX","Elasticsearch"]},o="Kibana",r={id:"DevOps/Hashicorp/2022-05-28-hashicorp-nomad-for-elastic-part-2/index",title:"Hashicorp Nomad to set up an Elasticsearch Cluster Part II",description:"Shen Zhen, China",source:"@site/docs/DevOps/Hashicorp/2022-05-28-hashicorp-nomad-for-elastic-part-2/index.md",sourceDirName:"DevOps/Hashicorp/2022-05-28-hashicorp-nomad-for-elastic-part-2",slug:"/DevOps/Hashicorp/2022-05-28-hashicorp-nomad-for-elastic-part-2/2022-05-28",permalink:"/docs/DevOps/Hashicorp/2022-05-28-hashicorp-nomad-for-elastic-part-2/2022-05-28",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Hashicorp/2022-05-28-hashicorp-nomad-for-elastic-part-2/index.md",tags:[{label:"Nomad",permalink:"/docs/tags/nomad"},{label:"Consul",permalink:"/docs/tags/consul"},{label:"LINUX",permalink:"/docs/tags/linux"},{label:"Elasticsearch",permalink:"/docs/tags/elasticsearch"}],version:"current",sidebarPosition:5020,frontMatter:{sidebar_position:5020,slug:"2022-05-28",title:"Hashicorp Nomad to set up an Elasticsearch Cluster Part II",authors:"mpolinowski",tags:["Nomad","Consul","LINUX","Elasticsearch"]},sidebar:"tutorialSidebar",previous:{title:"Hashicorp Nomad with NGINX Loadbalancer",permalink:"/docs/DevOps/Hashicorp/2022-05-29-hashicorp-nomad-with-nginx-loadbalancer/2022-05-29"},next:{title:"Hashicorp Nomad to set up an Elasticsearch Cluster",permalink:"/docs/DevOps/Hashicorp/2022-05-27-hashicorp-nomad-for-elastic/2022-05-27"}},c={},l=[{value:"Nomad Job",id:"nomad-job",level:2},{value:"Docker-Compose",id:"docker-compose",level:3},{value:"Job Specification",id:"job-specification",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Shen Zhen, China",src:a(37077).A+"",width:"2230",height:"839"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#kibana",children:"Kibana"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#nomad-job",children:"Nomad Job"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#docker-compose",children:"Docker-Compose"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#job-specification",children:"Job Specification"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h1,{id:"kibana",children:"Kibana"}),"\n",(0,s.jsxs)(n.p,{children:["I already setup ",(0,s.jsx)(n.a,{href:"/docs/DevOps/Hashicorp/2022-05-27-hashicorp-nomad-for-elastic/2022-05-27",children:"Elasticsearch"})," and now want to add the Kibana Dashboard. To get started I first have to ",(0,s.jsx)(n.code,{children:"exec"})," into the Elasticsearch container - in my case it is called ",(0,s.jsx)(n.code,{children:"elastic_container-e6d43a0a-300b-ffa7-55f8-7883bee7a412"})," - and add my Kibana user login:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker exec -ti elastic_container-e6d43a0a-300b-ffa7-55f8-7883bee7a412 /bin/bash\n/usr/share/elasticsearch/bin/elasticsearch-reset-password --interactive --username kibana_system\n"})}),"\n",(0,s.jsxs)(n.p,{children:["I will set the password to ",(0,s.jsx)(n.code,{children:"mykibanapassword"})," and will have to supply this in my ",(0,s.jsx)(n.code,{children:"kibana.yml"})," configuration file."]}),"\n",(0,s.jsx)(n.h2,{id:"nomad-job",children:"Nomad Job"}),"\n",(0,s.jsx)(n.h3,{id:"docker-compose",children:"Docker-Compose"}),"\n",(0,s.jsxs)(n.p,{children:["I have been using a ",(0,s.jsx)(n.code,{children:"docker-compose.yml"})," file before to set up a ELK cluster. The Kibana part of looks like:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:'kibana:\n    container_name: kibana\n    restart: unless-stopped\n    build:\n      context: kibana/\n      args:\n        ELK_VERSION: $ELK_VERSION\n    volumes:\n      - type: bind\n        source: ./kibana/config/kibana.yml\n        target: /usr/share/kibana/config/kibana.yml\n        read_only: true\n    # ports:\n    #   - "5601:5601"\n    networks:\n      - wikinet\n    depends_on:\n      - elasticsearch\n'})}),"\n",(0,s.jsxs)(n.p,{children:["And the ",(0,s.jsx)(n.code,{children:"kibana.yml"})," that is included in the image during the build process is:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"---\n## Default Kibana configuration from Kibana base image.\n## https://github.com/elastic/kibana/blob/master/src/dev/build/tasks/os_packages/docker_generator/templates/kibana_yml.template.js\n#\nserver.name: kibana\nserver.host: 0.0.0.0\nserver.publicBaseUrl: https://my.kibana.com\nelasticsearch.hosts: [ \"http://elasticsearch:9200\" ]\nmonitoring.ui.container.elasticsearch.enabled: true\n\nelasticsearch.username: kibana_system\nelasticsearch.password: 'mykibanapassword'\n"})}),"\n",(0,s.jsx)(n.h3,{id:"job-specification",children:"Job Specification"}),"\n",(0,s.jsx)(n.p,{children:"The translation into a Nomad job file is:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'job "wiki_kibana" {\n  type        = "service"\n  datacenters = ["wiki_search"]\n\n  update {\n    max_parallel     = 1\n    health_check     = "checks"\n    min_healthy_time = "180s"\n    healthy_deadline = "5m"\n    progress_deadline = "10m"\n    auto_revert = true\n    auto_promote = true\n    canary = 1\n  }\n\n  group "wiki_kibana" {\n    count = 1\n\n    network {\n        port "ki_http" {\n              static = 5601\n          }\n    }\n\n    task "kibana_container" {\n      driver = "docker"\n      kill_timeout = "600s"\n      kill_signal = "SIGTERM"\n\n      template {\n          data = <<EOH\nserver.name: kibana\nserver.host: 0.0.0.0\nserver.publicBaseUrl: https://my.kibana.com\nelasticsearch.hosts: [ "http://my.server.ip:9200" ]\nmonitoring.ui.container.elasticsearch.enabled: true\nelasticsearch.username: kibana_system\nelasticsearch.password: \'mykibanapassword\'\n          EOH\n  \n          destination = "local/kibana/kibana.yml"\n        }\n\n      config {\n        network_mode = "host"\n        image = "docker.elastic.co/kibana/kibana:8.3.2"\n        command = "kibana"\n        ports = ["ki_http"]\n        volumes = [\n          "local/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml",\n        ]\n\n        ulimit {\n            memlock = "-1"\n            nofile  = "65536"\n            nproc   = "8192"\n          }\n      }\n\n      service {\n        name = "kibana"\n        check {\n          name     = "http-tcp"\n          port     = "ki_http"\n          type     = "tcp"\n          interval = "30s"\n          timeout  = "4s"\n        }\n        \n        # check {\n        #     name     = "rest-http"\n        #     type     = "http"\n        #     port     = "ki_http"\n        #     path     = "/"\n        #     interval = "30s"\n        #     timeout  = "4s"\n        #     header {\n        #       Authorization = ["Basic myelasticpassword"]\n        #     }\n        #   }\n        }\n  \n        resources {\n          cpu    = 1024\n          memory = 2048\n        }\n    }\n  }\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},37077:(e,n,a)=>{a.d(n,{A:()=>s});const s=a.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-6c1edb088dfea3a7d39f8eebb8e9dc23.jpg"},28453:(e,n,a)=>{a.d(n,{R:()=>o,x:()=>r});var s=a(296540);const i={},t=s.createContext(i);function o(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);