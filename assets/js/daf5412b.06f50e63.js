"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[75113],{675053:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var r=n(785893),o=n(603905);const s={sidebar_position:8950,slug:"2022-10-15",title:"Python - Build a REST API",authors:"mpolinowski",tags:["Python"],description:"Using Flask to deploy an JSON REST API."},i=void 0,a={id:"Development/Python/2022-10-15-python-rest-server/index",title:"Python - Build a REST API",description:"Using Flask to deploy an JSON REST API.",source:"@site/docs/Development/Python/2022-10-15-python-rest-server/index.md",sourceDirName:"Development/Python/2022-10-15-python-rest-server",slug:"/Development/Python/2022-10-15-python-rest-server/2022-10-15",permalink:"/docs/Development/Python/2022-10-15-python-rest-server/2022-10-15",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Development/Python/2022-10-15-python-rest-server/index.md",tags:[{label:"Python",permalink:"/docs/tags/python"}],version:"current",sidebarPosition:8950,frontMatter:{sidebar_position:8950,slug:"2022-10-15",title:"Python - Build a REST API",authors:"mpolinowski",tags:["Python"],description:"Using Flask to deploy an JSON REST API."},sidebar:"tutorialSidebar",previous:{title:"Python - Natural Language Processing",permalink:"/docs/Development/Python/2022-10-22-python-nlp/2022-10-22"},next:{title:"Python - Working with the Elasticsearch REST API",permalink:"/docs/Development/Python/2022-10-14-python-rest-elastic/2022-10-14"}},c={},l=[{value:"Beautiful Soup",id:"beautiful-soup",level:2},{value:"Flask",id:"flask",level:2}];function u(e){const t={a:"a",code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.ah)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Sham Sui Po, Hong Kong",src:n(438152).Z+"",width:"1500",height:"548"})}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"#beautiful-soup",children:"Beautiful Soup"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"#flask",children:"Flask"})}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://github.com/mpolinowski/python-rest-server",children:"Github Repository"})}),"\n",(0,r.jsx)(t.h2,{id:"beautiful-soup",children:"Beautiful Soup"}),"\n",(0,r.jsxs)(t.p,{children:["Using Beautiful Soup to scrape conversion rates from ",(0,r.jsx)(t.code,{children:"www.x-rates.com"}),":"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-py",children:"from flask import Flask, jsonify\nfrom bs4 import BeautifulSoup\nimport requests\n\ndef get_conversion(in_cur, out_cur):\n    url = f'https://www.x-rates.com/calculator/?from={in_cur}&to={out_cur}&ammount=1'\n    content = requests.get(url).text\n    soup = BeautifulSoup(content, 'html.parser')\n    rate = soup.find(\"span\", class_=\"ccOutputRslt\").get_text()\n    rate = float(rate[:-4])\n\n    return rate\n"})}),"\n",(0,r.jsx)(t.h2,{id:"flask",children:"Flask"}),"\n",(0,r.jsx)(t.p,{children:"Flask to return the JSON data through our REST API:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-py",children:"app = Flask(__name__)\n\n@app.route('/')\ndef home():\n    return '<h1>Currency Rate API</h1><p><small>API Endpoint Example: <em>/api/v1/eur_cny</em></small></p>'\n\n@app.route('/api/v1/<in_cur>_<out_cur>')\ndef api(in_cur, out_cur):\n    conversion = get_conversion(in_cur, out_cur)\n    response ={'input_currency': in_cur, 'output_currency': out_cur, 'conversion_rate': conversion}\n\n    return jsonify(response)\n\n\napp.run(host='0.0.0.0')\n"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Python - Build a REST API",src:n(365817).Z+"",width:"1043",height:"156"})})]})}function p(e={}){const{wrapper:t}={...(0,o.ah)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},603905:(e,t,n)=>{n.d(t,{ah:()=>l});var r=n(667294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),d=l(n),h=o,f=d["".concat(c,".").concat(h)]||d[h]||u[h]||s;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));p.displayName="MDXCreateElement"},365817:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/Python_Flask_REST_Server_01-d5535db6601ccbfbfb9d3143ef10726b.png"},438152:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-5f44d483789c3ce79f05418f930f5cd2.jpg"}}]);