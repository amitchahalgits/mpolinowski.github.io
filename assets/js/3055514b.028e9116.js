"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[93140],{81136:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var o=r(474848),s=r(28453);const a={sidebar_position:1e4,slug:"2020-05-01",title:"Getting to Know Neo4j",authors:"mpolinowski",tags:["Databases","Neo4j","Docker"]},t=void 0,i={id:"Development/Graphs/2020-05-01--getting-to-know-neo4j/index",title:"Getting to Know Neo4j",description:"Mongkok, Hong Kong",source:"@site/docs/Development/Graphs/2020-05-01--getting-to-know-neo4j/index.mdx",sourceDirName:"Development/Graphs/2020-05-01--getting-to-know-neo4j",slug:"/Development/Graphs/2020-05-01--getting-to-know-neo4j/2020-05-01",permalink:"/docs/Development/Graphs/2020-05-01--getting-to-know-neo4j/2020-05-01",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Development/Graphs/2020-05-01--getting-to-know-neo4j/index.mdx",tags:[{label:"Databases",permalink:"/docs/tags/databases"},{label:"Neo4j",permalink:"/docs/tags/neo-4-j"},{label:"Docker",permalink:"/docs/tags/docker"}],version:"current",sidebarPosition:1e4,frontMatter:{sidebar_position:1e4,slug:"2020-05-01",title:"Getting to Know Neo4j",authors:"mpolinowski",tags:["Databases","Neo4j","Docker"]},sidebar:"tutorialSidebar",previous:{title:"Neo4j Movie Graph",permalink:"/docs/Development/Graphs/2020-05-02--neo4j-movie-graph/2020-05-02"},next:{title:"React Native",permalink:"/docs/category/react-native"}},l={},c=[{value:"Running in Docker",id:"running-in-docker",level:2},{value:"Cypher",id:"cypher",level:2},{value:"CREATE",id:"create",level:3},{value:"MATCH",id:"match",level:3},{value:"MERGE",id:"merge",level:3},{value:"WHERE, WITH and AND",id:"where-with-and-and",level:3},{value:"SET",id:"set",level:3},{value:"REMOVE",id:"remove",level:3},{value:"WITH",id:"with",level:3},{value:"DELETE",id:"delete",level:3},{value:"NULL",id:"null",level:3},{value:"Nth Degree Relationships",id:"nth-degree-relationships",level:3},{value:"Importing Scripts",id:"importing-scripts",level:2}];function h(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Mongkok, Hong Kong",src:r(565086).A+"",width:"1500",height:"607"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#running-in-docker",children:"Running in Docker"})}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"#cypher",children:"Cypher"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#create",children:"CREATE"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#match",children:"MATCH"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#merge",children:"MERGE"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#where-with-and-and",children:"WHERE, WITH and AND"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#set",children:"SET"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#remove",children:"REMOVE"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#with",children:"WITH"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#delete",children:"DELETE"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#null",children:"NULL"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#nth-degree-relationships",children:"Nth Degree Relationships"})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#importing-scripts",children:"Importing Scripts"})}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"running-in-docker",children:"Running in Docker"}),"\n",(0,o.jsx)(n.p,{children:"Create the folders Neo4j will need to persists it's data:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"mkdir /opt/neo4j/data\r\nmkdir /opt/neo4j/logs\r\nmkdir /opt/neo4j/import\r\nmkdir /opt/neo4j/plugins\n"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"chown 101:101"})," all folders to make them available for your Docker user."]}),"\n",(0,o.jsx)(n.p,{children:"Pull and run the latest version of Neo4j from Docker Hub."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker run \\\r\n    --name neo4j \\\r\n    -p7474:7474 -p7687:7687 \\\r\n    -d \\\r\n    -v /opt/neo4j/data:/data \\\r\n    -v /opt/neo4j/logs:/logs \\\r\n    -v /opt/neo4j/import:/var/lib/neo4j/import \\\r\n    -v /opt/neo4j/plugins:/plugins \\\r\n    --env NEO4J_AUTH=neo4j/password \\\r\n    neo4j:latest\n"})}),"\n",(0,o.jsx)(n.p,{children:"By default, the Docker image exposes three ports for remote access:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"7474 for HTTP"}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"7473 for HTTPS"}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"7687 for Bolt"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Now head over to ",(0,o.jsx)(n.code,{children:"localhost:7474"})," with your browser and login with ",(0,o.jsx)(n.code,{children:"neo4j/password"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"cypher",children:"Cypher"}),"\n",(0,o.jsx)(n.h3,{id:"create",children:"CREATE"}),"\n",(0,o.jsxs)(n.p,{children:["Use the ",(0,o.jsx)(n.strong,{children:"Create"})," command to create nodes with properties and relationships."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"CREATE(p1: Person{name:'Susanne Colgate'}) -[r:UNIVERSITY_BERKELEY{attr:'Susanne followed Simon'}]-> (p2: Person{name: 'Simon Scabourough'}) RETURN p1,p2,r\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Create two nodes of type ",(0,o.jsx)(n.strong,{children:"Person"})," and the property ",(0,o.jsx)(n.strong,{children:"Name"})," and set them into a ",(0,o.jsx)(n.strong,{children:"Relationship"}),", e.g. both persons went to the same university. The return command allows us to see a visualization of the result of our query."]}),"\n",(0,o.jsx)(n.h3,{id:"match",children:"MATCH"}),"\n",(0,o.jsxs)(n.p,{children:["Use the ",(0,o.jsx)(n.strong,{children:"Match"})," command to find pattern among your nodes."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"MATCH (p1: Person {name:'Simon Scabourough'}), (p2:Person {name: 'Susanne Colgate'})\r\nCREATE (p1) -[r:APPLIED_PHYSICS{attr:'Susanne invited Simon'}]-> (p2)\r\nRETURN p1,p2,r\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Find two nodes of type ",(0,o.jsx)(n.strong,{children:"Person"})," with specific ",(0,o.jsx)(n.strong,{children:"Name"})," properties and add a new relationship between them - a shared course at the university."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"MATCH (p1:Person {name: 'Simon Scabourough'})-[r:APPLIED_PHYSICS]->(p2)\r\nRETURN p2\n"})}),"\n",(0,o.jsx)(n.p,{children:"Show me who joined Simon in his AP1 course."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"MATCH ()-[r:UNIVERSITY_BERKLY]->(p2)\r\nRETURN p2\n"})}),"\n",(0,o.jsx)(n.p,{children:"Show me everyone who was invited into Berkley."}),"\n",(0,o.jsx)(n.h3,{id:"merge",children:"MERGE"}),"\n",(0,o.jsx)(n.p,{children:"Just like the match operator you get the nodes or relationships returned. But unlike match, if the node, property or relationship does not exist it will be created by the merge query:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"MATCH (person:Person{name:'Josefine Strudelb\xe4cker'})\r\nRETURN person\n"})}),"\n",(0,o.jsx)(n.p,{children:"Does not find anything - Merge creates the node for you:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"MERGE (person:Person{name:'Josefine Strudelb\xe4cker'})\r\nMERGE (b\xe4ckerei:Work{name:'Zum Zipfelkratsch'})\r\nMERGE (person)-[:Worked_IN]->(b\xe4ckerei)\r\nRETURN person, b\xe4ckerei\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"ON CREATE SET"})}),"\n",(0,o.jsx)(n.p,{children:"The Merge Operator will either create the node or update it if it already exists. Everything after On Create will only be executed if the node does not yet exists:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"MERGE (location:Location{name: 'Linz'})\r\nON CREATE SET location.created_at = timestamp(), location.created_by = 'GPS100x5'\r\nRETURN location\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"ON MATCH SET"})}),"\n",(0,o.jsx)(n.p,{children:"If we want to update a property every time we get a match:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"MERGE (location:Location{name: 'Linz'})\r\nON CREATE SET location.created_at = timestamp(), location.update_count = 0\r\nON MATCH SET location.modified_at = timestamp(), location.update_count = (location.update_count + 1)\r\nRETURN location\n"})}),"\n",(0,o.jsx)(n.p,{children:"How often die Keanu Reeves watch Top Gun? Increment a relationship property every time a query is run:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"MATCH (actor:Person{name: 'Keanu Reeves'})\r\nMATCH (movie:Movie{title: 'Top Gun'})\r\nMERGE (actor)-[rel:VIEWED]->(movie)\r\nON CREATE SET rel.count = 1\r\nON MATCH SET rel.count = (rel.count + 1) \r\nRETURN actor, movie\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Getting to know Neo4j",src:r(664908).A+"",width:"1142",height:"603"})}),"\n",(0,o.jsx)(n.h3,{id:"where-with-and-and",children:"WHERE, WITH and AND"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"MATCH (a:Person),(b:Person)\r\nWHERE a.name='Simon Scabourough' AND b.name='Susanne Colgate'\r\nWITH a,b\r\nCREATE (a) -[r:ANALYTICAL_CHEMISTRY]->(b)\r\nRETURN a,b,r\n"})}),"\n",(0,o.jsx)(n.h3,{id:"set",children:"SET"}),"\n",(0,o.jsxs)(n.p,{children:["Use the ",(0,o.jsx)(n.strong,{children:"Set"})," command to change a property of a node."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"MATCH (p:Person{name: 'Susanne Colgate'})\r\nSET p.name= 'Susan Colgate'\r\nRETURN p\n"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Set"})," can also be used to create an property:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"MATCH (p:Person {name: 'Susan Colgate'})\r\nSET p.title = 'Freshman'\r\nRETURN p\n"})}),"\n",(0,o.jsx)(n.p,{children:"Or to set a relationship:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"MATCH (director:Person{name:'Clint Eastwood'}),\r\n(movies:Movie)<-[rel:DIRECTED]-(director)\r\nSET rel.rating = 5\n"})}),"\n",(0,o.jsx)(n.p,{children:"Or to set another label:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"MATCH (director:Person{name:'Clint Eastwood'}),\r\n(movies:Movie)<-[rel:DIRECTED]-(director)\r\nSET director:Hero\n"})}),"\n",(0,o.jsx)(n.p,{children:"Setting a relationship to a new type is not supported by Neo4j. But you can create a new relationship and copy over the old properties:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"MATCH (actor1:Person{name:'Tom Hanks'})-[old_rel:HAS_CONTACT]->(actor2:Person{name:'Al Pacino'})\r\nCREATE (actor1)-[new_rel:OLD_CONTACT]->(actor2)\r\nSET new_rel=old_rel\r\nDELETE old_rel\r\nRETURN actor1, actor2\n"})}),"\n",(0,o.jsx)(n.h3,{id:"remove",children:"REMOVE"}),"\n",(0,o.jsx)(n.p,{children:"Remove a relationship:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"MATCH (director:Person{name:'Clint Eastwood'}),\r\n(movies:Movie)<-[rel:DIRECTED]-(director)\r\nREMOVE rel.rating\n"})}),"\n",(0,o.jsx)(n.p,{children:"Remove a label:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"MATCH (director:Person{name:'Clint Eastwood'}),\r\n(movies:Movie)<-[rel:DIRECTED]-(director)\r\nREMOVE director:Hero\n"})}),"\n",(0,o.jsx)(n.h3,{id:"with",children:"WITH"}),"\n",(0,o.jsxs)(n.p,{children:["Set dynamic properties to nodes with the ",(0,o.jsx)(n.strong,{children:"WITH"})," operator:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"MATCH (actor:Person{name:'Tom Hanks'})-[rel:ACTED_IN]->(movie)\r\nWITH actor, count(movie) AS num_of_movies\r\nSET actor.num_of_movies = num_of_movies\r\nRETURN actor\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Getting to know Neo4j",src:r(34005).A+"",width:"1416",height:"929"})}),"\n",(0,o.jsx)(n.h3,{id:"delete",children:"DELETE"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"MATCH (n)\r\nDELETE n\n"})}),"\n",(0,o.jsx)(n.p,{children:"Only works if Nodes don't have any relations - otherwise those have to be selected and deleted as well."}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Delete All"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"MATCH (n)\r\nOPTIONAL MATCH (n)-[r]-()\r\nDELETE n,r\n"})}),"\n",(0,o.jsx)(n.p,{children:"Select all nodes and relationships and delete the selection."}),"\n",(0,o.jsx)(n.p,{children:"Or short - remove node and cut all relations that were attached to it:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"MATCH (node)\r\nDETACH DELETE node\n"})}),"\n",(0,o.jsx)(n.p,{children:"Selective delete:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"MATCH (actor:Person{name:'Tom Cruise'}),\r\n(movies:Movie)<-[:ACTED_IN]-(actor)\r\nDETACH DELETE movies\n"})}),"\n",(0,o.jsx)(n.h3,{id:"null",children:"NULL"}),"\n",(0,o.jsx)(n.p,{children:"Give me all person nodes that have a earnings property that is not undefined:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"MATCH (person:Person)\r\nWHERE person.earnings IS NOT NULL\r\nRETURN person\n"})}),"\n",(0,o.jsx)(n.h3,{id:"nth-degree-relationships",children:"Nth Degree Relationships"}),"\n",(0,o.jsx)(n.p,{children:"Get all 1st degree contacts of actor Keanu Reeves:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"MATCH (actor:Person{name:'Keanu Reeves'})-[:HAS_CONTACT]->(contact)\r\nRETURN actor, contact\n"})}),"\n",(0,o.jsx)(n.p,{children:"Get all 2nd degree contacts:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"MATCH (actor:Person{name:'Keanu Reeves'})-[:HAS_CONTACT]->(contact)-[:HAS_CONTACT]->(contact2)\r\nRETURN actor, contact2\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Get the nth degree contacts by simply adding ",(0,o.jsx)(n.strong,{children:"*n"})," to the relationship in question - e.g. get the 5th degree contacts:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"MATCH (actor:Person{name:'Keanu Reeves'})-[rel:HAS_CONTACT*5]->(contact)\r\nRETURN actor, rel, contact\r\nLIMIT 1\n"})}),"\n",(0,o.jsx)(n.p,{children:"Show all 0 - 2nd degree contacts:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"MATCH (actor:Person{name:'Keanu Reeves'})-[rel:HAS_CONTACT*0..2]->(contact)\r\nRETURN actor, rel, contact\r\nLIMIT 5\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"PATH"})}),"\n",(0,o.jsx)(n.p,{children:"How many contacts are between Keanu Reeves and Tom Cruise:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"MATCH (neo:Person{name:'Keanu Reeves'})\r\nMATCH (maverick:Person{name:'Tom Cruise'})\r\nMATCH path=((neo)-[rel:HAS_CONTACT*]->(maverick))\r\nRETURN length(path)\r\nLIMIT 1\n"})}),"\n",(0,o.jsx)(n.p,{children:"To find the shortest path limit the degree of contact until no path can be found anymore:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"MATCH (neo:Person{name:'Keanu Reeves'})\r\nMATCH (maverick:Person{name:'Tom Cruise'})\r\nMATCH path=((neo)-[rel:HAS_CONTACT*..2]->(maverick))\r\nRETURN length(path) AS path_length\r\nLIMIT 1\n"})}),"\n",(0,o.jsx)(n.p,{children:"The minimum path length is 2."}),"\n",(0,o.jsxs)(n.p,{children:["The easier way to find the path length is the ",(0,o.jsx)(n.strong,{children:"SHORTEST PATH"})," function:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"MATCH (neo:Person{name:'Keanu Reeves'})\r\nMATCH (maverick:Person{name:'Tom Cruise'})\r\nMATCH path=shortestPath((neo)-[rel:HAS_CONTACT*..20]->(maverick))\r\nRETURN length(path) AS path_length\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Since there might be several shortest paths we can use the ",(0,o.jsx)(n.strong,{children:"allShortestPath"})," function to resolve all of them:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"MATCH (neo:Person{name:'Keanu Reeves'})\r\nMATCH (maverick:Person{name:'Tom Cruise'})\r\nMATCH path=allShortestPaths((neo)-[rel:HAS_CONTACT*..20]->(maverick))\r\nRETURN path, length(path) AS path_length\n"})}),"\n",(0,o.jsx)(n.p,{children:"Get the shortest path between actors that acted in the movie The Matrix and actors from the movie Top Gun:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"MATCH (actor1:Person)-[:ACTED_IN]->(movie1:Movie{title:'Top Gun'}),(actor2:Person)-[:ACTED_IN]->(movie2:Movie{title:'The Matrix'}), path = shortestPath((actor1)-[:HAS_CONTACT*..20]->(actor2))\r\nRETURN path, movie1, movie2, length(path) AS pathLength\r\nORDER BY pathLength\r\nLIMIT 2\n"})}),"\n",(0,o.jsx)(n.p,{children:"To exclude path where an actor worked in both movies:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"MATCH (actor1:Person)-[:ACTED_IN]->(movie1:Movie{title:'Top Gun'}),(actor2:Person)-[:ACTED_IN]->(movie2:Movie{title:'The Matrix'}), path = shortestPath((actor1)-[:HAS_CONTACT*..20]->(actor2))\r\nWHERE actor1 <> actor2\r\nRETURN path, movie1, movie2, length(path) AS pathLength\r\nORDER BY pathLength\r\nLIMIT 1\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Getting to know Neo4j",src:r(78723).A+"",width:"1143",height:"729"})}),"\n",(0,o.jsx)(n.h2,{id:"importing-scripts",children:"Importing Scripts"}),"\n",(0,o.jsx)(n.p,{children:"Just write down all your Cypher queries into a text file. Add a comment on top to name the script:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"// Neo4j Sample Data\r\nCREATE(p1: Person{name:'Susanne Colgate'}) -[r:UNIVERSITY_BERKELEY{attr:'Susanne followed Simon'}]-> (p2: Person{name: 'Simon Scabourough'})\r\nMATCH (p1: Person {name:'Simon Scabourough'}), (p2:Person {name: 'Susanne Colgate'})\r\nCREATE (p1) -[r:APPLIED_PHYSICS{attr:'Susanne invited Simon'}]-> (p2)\r\nMATCH (p1:Person {name: 'Simon Scabourough'})-[r:APPLIED_PHYSICS]->(p2)\r\nMATCH (a:Person),(b:Person)\r\nWHERE a.name='Simon Scabourough' AND b.name='Susanne Colgate'\r\nWITH a,b\r\nCREATE (a) -[r:ANALYTICAL_CHEMISTRY]->(b)\r\nMATCH (p:Person{name: 'Susanne Colgate'})\r\nSET p.name= 'Susan Colgate'\r\nMATCH (p:Person {name: 'Susan Colgate'})\r\nSET p.title = 'Freshman'\n"})}),"\n",(0,o.jsx)(n.p,{children:"And drag&drop them into the favorite section of the Neo4j web interface:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Getting to know Neo4j",src:r(866654).A+"",width:"1185",height:"621"})}),"\n",(0,o.jsx)(n.p,{children:"You can run all scripts at once by clicking on the play button next to your scripts name."})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},866654:(e,n,r)=>{r.d(n,{A:()=>o});const o=r.p+"assets/images/Getting_to_know_Cypher_01-8cd9e3a0c10843f7daee34a6dff3eab1.png"},34005:(e,n,r)=>{r.d(n,{A:()=>o});const o=r.p+"assets/images/Getting_to_know_Cypher_02-398c07f9fcba1cdc3c71dc109672fd0e.png"},664908:(e,n,r)=>{r.d(n,{A:()=>o});const o=r.p+"assets/images/Getting_to_know_Cypher_03-e4e99a1fb150824abd04fe243248b487.png"},78723:(e,n,r)=>{r.d(n,{A:()=>o});const o=r.p+"assets/images/Getting_to_know_Cypher_04-e4c5578c61c2b3134ed19a5b482e2fa8.png"},565086:(e,n,r)=>{r.d(n,{A:()=>o});const o=r.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-cfa958512a1425cc02b1dd65aee8b14b.jpg"},28453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>i});var o=r(296540);const s={},a=o.createContext(s);function t(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);