"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[74109],{747487:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var s=t(474848),r=t(28453);const o={sidebar_position:6030,slug:"2021-09-10",title:"Reconnecting Websockets",authors:"mpolinowski",tags:["Javascript"]},c=void 0,i={id:"Development/Javascript/2021-09-10--websocket-recconects/index",title:"Reconnecting Websockets",description:"Shenzhen, China",source:"@site/docs/Development/Javascript/2021-09-10--websocket-recconects/index.md",sourceDirName:"Development/Javascript/2021-09-10--websocket-recconects",slug:"/Development/Javascript/2021-09-10--websocket-recconects/2021-09-10",permalink:"/docs/Development/Javascript/2021-09-10--websocket-recconects/2021-09-10",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Development/Javascript/2021-09-10--websocket-recconects/index.md",tags:[{label:"Javascript",permalink:"/docs/tags/javascript"}],version:"current",sidebarPosition:6030,frontMatter:{sidebar_position:6030,slug:"2021-09-10",title:"Reconnecting Websockets",authors:"mpolinowski",tags:["Javascript"]},sidebar:"tutorialSidebar",previous:{title:"Working with JSON APIs",permalink:"/docs/Development/Javascript/2022-03-01--json-apis-training/2022-03-01"},next:{title:"Convert Alerts into Toasts",permalink:"/docs/Development/Javascript/2021-09-10--notifications-alerts-as-toast/2021-09-10"}},a={},l=[{value:"Usage",id:"usage",level:2},{value:"Serve Static Files",id:"serve-static-files",level:3},{value:"Importing the Script",id:"importing-the-script",level:3},{value:"Using the Script",id:"using-the-script",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Display the Connection Status",id:"display-the-connection-status",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Shenzhen, China",src:t(638349).A+"",width:"1500",height:"385"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#usage",children:"Usage"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#serve-static-files",children:"Serve Static Files"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#importing-the-script",children:"Importing the Script"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#using-the-script",children:"Using the Script"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#parameters",children:"Parameters"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#display-the-connection-status",children:"Display the Connection Status"})}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://github.com/joewalnes/reconnecting-websocket",children:"ReconnectingWebSocket"}),": A small JavaScript library that decorates the WebSocket API to provide a WebSocket connection that will automatically reconnect if the connection is dropped."]}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["See ",(0,s.jsx)(n.a,{href:"https://github.com/mpolinowski/go_gorilla_websockets/blob/master/html/home.jet",children:"Github Repository"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Download the minified JS file to your static directory ",(0,s.jsx)(n.a,{href:"https://raw.githubusercontent.com/joewalnes/reconnecting-websocket/master/reconnecting-websocket.min.js",children:"Download"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"serve-static-files",children:"Serve Static Files"}),"\n",(0,s.jsxs)(n.p,{children:["Prepare your app to serve static files from the ",(0,s.jsx)(n.code,{children:"static"})," directory - e.g. in a Go app using ",(0,s.jsx)(n.a,{href:"https://golang.hotexamples.com/examples/github.com.bmizerany.pat/-/New/golang-new-function-examples.html#0x73832a4a85086717d10b81f4f000d8d18bfaa11765bb899269e6f405254749ba-81,,109,",children:"pat"})," add the following to your routing file:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:'package main\r\n\r\nimport (\r\n\t"go_gorilla_websocket/internal/handlers"\r\n\t"net/http"\r\n\r\n\t"github.com/bmizerany/pat"\r\n)\r\n\r\nfunc routes() http.Handler {\r\n\tm := pat.New()\r\n\r\n\tm.Get("/", http.HandlerFunc(handlers.Home))\r\n\tm.Get("/ws", http.HandlerFunc(handlers.WsEndpoint))\r\n\r\n\tfileServer := http.FileServer(http.Dir("./static/"))\r\n\tm.Get("/static/", http.StripPrefix("/static", fileServer))\r\n\r\n\treturn m\r\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Or in ",(0,s.jsx)(n.a,{href:"https://expressjs.com/en/starter/static-files.html",children:"Express.js"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const path = require('path')\r\napp.use('/static', express.static(path.join(__dirname, '/static')))\n"})}),"\n",(0,s.jsx)(n.h3,{id:"importing-the-script",children:"Importing the Script"}),"\n",(0,s.jsx)(n.p,{children:"Just add a script tag to the HTML landing page of your application:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<script src="/static/reconnecting-websocket.min.js"><\/script>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"using-the-script",children:"Using the Script"}),"\n",(0,s.jsx)(n.p,{children:"The script allows us to simply replace our client side Websocket JS code:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'document.addEventListener("DOMContentLoaded", function() {\r\n    socket = new WebSocket("ws://127.0.0.1:8080/ws");\r\n\r\n    socket.onopen = () => {\r\n        console.log("Websocket connection established")\r\n    }\r\n\r\n    socket.onclose = () => {\r\n        console.log("Websocket connection closed")\r\n    }\r\n\r\n    socket.onerror = error => {\r\n        console.log(error)\r\n    }\r\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Instead of using ",(0,s.jsx)(n.code,{children:'new WebSocket("ws://127.0.0.1:8080/ws")'})," we can now use ",(0,s.jsx)(n.code,{children:'new ReconnectingWebSocket("ws://127.0.0.1:8080/ws")'}),":"]}),"\n",(0,s.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"var socket = new ReconnectingWebSocket(url, protocols, options);\n"})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{}),(0,s.jsx)(n.th,{})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"url"}),(0,s.jsxs)(n.td,{children:["The ",(0,s.jsx)(n.a,{href:"https://html.spec.whatwg.org/multipage/comms.html#network",children:"URL"})," you are connecting to."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"protocols"}),(0,s.jsxs)(n.td,{children:["Optional string or array of ",(0,s.jsx)(n.a,{href:"https://tools.ietf.org/html/rfc6455",children:"protocols"})," per the WebSocket spec."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"options"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://github.com/joewalnes/reconnecting-websocket#options-1",children:"Options"})})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"Options can either be passed as the 3rd parameter upon instantiation or set directly on the object after instantiation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"var socket = new ReconnectingWebSocket(url, null, {debug: true, reconnectInterval: 3000});\n"})}),"\n",(0,s.jsx)(n.p,{children:"or"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"var socket = new ReconnectingWebSocket(url);\r\nsocket.debug = true;\r\nsocket.timeoutInterval = 3000;\n"})}),"\n",(0,s.jsx)(n.p,{children:"The result then looks like this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'document.addEventListener("DOMContentLoaded", function() {\r\n    socket = new ReconnectingWebSocket("ws://127.0.0.1:8080/ws");\r\n    socket.debug = true;\r\n    socket.timeoutInterval = 3000;\r\n\r\n    socket.onopen = () => {\r\n        console.log("Websocket connection established")\r\n    }\r\n\r\n    socket.onclose = () => {\r\n        console.log("Websocket connection closed")\r\n    }\r\n\r\n    socket.onerror = error => {\r\n        console.log(error)\r\n    }\r\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["If you stop your WS server now your app will continue to try to reconnect every ",(0,s.jsx)(n.code,{children:"3000ms"})," until you start the server back up and a connection can be re-established:"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Reconnecting Websockets",src:t(610376).A+"",width:"1521",height:"393"})}),"\n",(0,s.jsx)(n.h2,{id:"display-the-connection-status",children:"Display the Connection Status"}),"\n",(0,s.jsx)(n.p,{children:"We can now use the status of our ws connection to display either a red or green batch - depending on whether or not we are connected to our server:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<div class="d-flex justify-content-between">\r\n    <h3>Who is online?</h3>\r\n    <div id="status"></div>\r\n</div>\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The inner HTML of this container with ID ",(0,s.jsx)(n.code,{children:"status"})," will be set by the connection state:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'document.addEventListener("DOMContentLoaded", function() {\r\n    socket = new ReconnectingWebSocket("ws://127.0.0.1:8080/ws");\r\n    socket.debug = true;\r\n    socket.timeoutInterval = 3000;\r\n\r\n    const offline = `<span class="badge rounded-pill bg-danger">Disconnected</span>`\r\n    const online = `<span class="badge rounded-pill bg-primary">Connected</span>`\r\n    let statusBadge = document.getElementById("status");\r\n    \r\n    socket.onopen = () => {\r\n        console.log("Websocket connection established")\r\n        statusBadge.innerHTML = online\r\n    }\r\n\r\n    socket.onclose = () => {\r\n        console.log("Websocket connection closed")\r\n        statusBadge.innerHTML = offline\r\n    }\r\n\r\n    socket.onerror = error => {\r\n        console.log(error)\r\n        statusBadge.innerHTML = offline\r\n    }\r\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},610376:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/Reconnecting_Websocket_01-87d6e62156efc5cf6eb5bb331e250504.png"},638349:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-a074e88afd2103a14684a3454129e7d0.jpg"},28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>i});var s=t(296540);const r={},o=s.createContext(r);function c(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);