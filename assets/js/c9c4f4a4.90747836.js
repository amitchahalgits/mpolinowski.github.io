"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[18267],{759689:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>l});var o=a(474848),i=a(28453);const s={sidebar_position:3980,slug:"2022-11-15",title:"Hashicorp Nomad for NGINX Load-balancing",authors:"mpolinowski",tags:["Nomad","Consul","LINUX","NTS"],description:"Following along the official NGINX load-balancing tutorial."},r=void 0,t={id:"DevOps/Hashicorp/2022-11-15-hashicorp-nomad-nginx-load-balancing/index",title:"Hashicorp Nomad for NGINX Load-balancing",description:"Following along the official NGINX load-balancing tutorial.",source:"@site/docs/DevOps/Hashicorp/2022-11-15-hashicorp-nomad-nginx-load-balancing/index.md",sourceDirName:"DevOps/Hashicorp/2022-11-15-hashicorp-nomad-nginx-load-balancing",slug:"/DevOps/Hashicorp/2022-11-15-hashicorp-nomad-nginx-load-balancing/2022-11-15",permalink:"/docs/DevOps/Hashicorp/2022-11-15-hashicorp-nomad-nginx-load-balancing/2022-11-15",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Hashicorp/2022-11-15-hashicorp-nomad-nginx-load-balancing/index.md",tags:[{label:"Nomad",permalink:"/docs/tags/nomad"},{label:"Consul",permalink:"/docs/tags/consul"},{label:"LINUX",permalink:"/docs/tags/linux"},{label:"NTS",permalink:"/docs/tags/nts"}],version:"current",sidebarPosition:3980,frontMatter:{sidebar_position:3980,slug:"2022-11-15",title:"Hashicorp Nomad for NGINX Load-balancing",authors:"mpolinowski",tags:["Nomad","Consul","LINUX","NTS"],description:"Following along the official NGINX load-balancing tutorial."},sidebar:"tutorialSidebar",previous:{title:"Deploy Mautic with Hashicorp Nomad",permalink:"/docs/DevOps/Hashicorp/2022-11-16-hashicorp-nomad-mautic/2022-11-16"},next:{title:"Hashicorp Nomad Secure & Balanced NTS Time Service",permalink:"/docs/DevOps/Hashicorp/2022-11-15-hashicorp-nomad-balanced-nts/2022-11-15"}},c={},l=[{value:"Load Balancing with NGINX",id:"load-balancing-with-nginx",level:2},{value:"Demo Web App",id:"demo-web-app",level:3},{value:"NGINX Load Balancer",id:"nginx-load-balancer",level:3}];function d(n){const e={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{alt:"Shen Zhen, China",src:a(374847).A+"",width:"2230",height:"839"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.a,{href:"#load-balancing-with-nginx",children:"Load Balancing with NGINX"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#demo-web-app",children:"Demo Web App"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#nginx-load-balancer",children:"NGINX Load Balancer"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(e.h2,{id:"load-balancing-with-nginx",children:"Load Balancing with NGINX"}),"\n",(0,o.jsxs)(e.p,{children:["You can use Nomad's template stanza to configure NGINX so that it can dynamically update its ",(0,o.jsx)(e.a,{href:"https://developer.hashicorp.com/nomad/tutorials/load-balancing",children:"load balancer configuration"})," to scale along with your services. The main use case for NGINX in this scenario is to distribute incoming HTTP(S) and TCP requests from the Internet to front-end services that can handle these requests."]}),"\n",(0,o.jsx)(e.h3,{id:"demo-web-app",children:"Demo Web App"}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.em,{children:"webapp.tf"})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'job "demo_webapp" {\n  datacenters = ["dc1"]\n\n  group "demo" {\n    count = 3\n    network {\n      port "http" {\n        to = -1\n      }\n    }\n\n    service {\n      name = "demo-webapp"\n      port = "http"\n\n      check {\n        type     = "http"\n        path     = "/"\n        interval = "2s"\n        timeout  = "2s"\n      }\n    }\n\n    task "server" {\n      env {\n        PORT    = "${NOMAD_PORT_http}"\n        NODE_IP = "${NOMAD_IP_http}"\n      }\n\n      driver = "docker"\n\n      config {\n        image = "hashicorp/demo-webapp-lb-guide"\n        ports = ["http"]\n      }\n    }\n  }\n}\n\n'})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'nomad plan webapp.tf                                                                                            [\xb1master \u25cf]\n+ Job: "demo_webapp"\n+ Task Group: "demo" (3 create)\n  + Task: "server" (forces create)\n\nScheduler dry-run:\n- All tasks successfully allocated.\n\nJob Modify Index: 0\nTo submit the job with version verification run:\n\nnomad job run -check-index 0 webapp.tf\n'})}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{alt:"Hashicorp Nomad for NGINX Load-balancing",src:a(771218).A+"",width:"1171",height:"246"})}),"\n",(0,o.jsx)(e.p,{children:"The 3 instances have now been deployed to the host system exposing random port:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"docker ps\nCONTAINER ID   IMAGE                          PORTS\n17288d176334   hashicorp/demo-webapp-lb-guide server-ip:30809->30809/tcp\n17c426f00330   hashicorp/demo-webapp-lb-guide server-ip:24931->24931/tcp\n3f863e8dc822   hashicorp/demo-webapp-lb-guide server-ip:27252->27252/tcp\n"})}),"\n",(0,o.jsx)(e.h3,{id:"nginx-load-balancer",children:"NGINX Load Balancer"}),"\n",(0,o.jsx)(e.p,{children:"This NGINX instance balances requests across the deployed instances of the web application:"}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.em,{children:"nginx.tf"})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'job "nginx" {\n  datacenters = ["dc1"]\n\n  group "nginx" {\n    count = 1\n\n    network {\n      port "http" {\n        static = 80\n      }\n    }\n\n    service {\n      name = "nginx"\n      port = "http"\n    }\n\n    task "nginx" {\n      driver = "docker"\n\n      config {\n        image = "nginx:alpine"\n        network_mode = "host"\n\n        volumes = [\n          "local:/etc/nginx/conf.d",\n        ]\n      }\n\n      template {\n        data = <<EOF\nupstream backend {\n{{ range service "demo-webapp" }}\n  server {{ .Address }}:{{ .Port }};\n{{ else }}server 127.0.0.1:65535; # force a 502\n{{ end }}\n}\n\nserver {\n   listen 80;\n\n   location / {\n      proxy_pass http://backend;\n   }\n}\nEOF\n\n        destination   = "local/load-balancer.conf"\n        change_mode   = "signal"\n        change_signal = "SIGHUP"\n      }\n    }\n  }\n}\n'})}),"\n",(0,o.jsxs)(e.blockquote,{children:["\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"NOTE"})," I kept getting a ",(0,o.jsx)(e.strong,{children:"502 Bad Gateway"})," error from NGINX when following the ",(0,o.jsx)(e.a,{href:"https://developer.hashicorp.com/nomad/tutorials/load-balancing/load-balancing-nginx",children:"official tutorial"}),'. This happened because - unlike with Docker-Compose where I would add all container to the same virtual network and use the internal DNS service to connect them - here the container are unable to "see" each other directly. Communication always has to leave the local environment using the WAN IP of my host server - which is where my firewall sabotaged my efforts. I am not sure what the recommended way is to handle this issue - don\'t you use firewalls, or should I try to dynamically configure it using Nomads ',(0,o.jsx)(e.code,{children:"exec_raw"})," driver? I solved the issue for now by lifting the Load-Balancer onto my host network stack using ",(0,o.jsx)(e.code,{children:'network_mode = "host"'}),"."]}),"\n"]}),"\n",(0,o.jsxs)(e.p,{children:["This configuration uses Nomad's template to populate the load balancer configuration for NGINX. It uses Consul to get the address and port of services named ",(0,o.jsx)(e.code,{children:"demo-webapp"}),", which are created in the demo web application's job specification. It then makes those services available over static port of 8080 from the load balancer."]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'nomad plan nginx.tf                                                                                             [\xb1master \u25cf]\n+ Job: "nginx"\n+ Task Group: "nginx" (1 create)\n  + Task: "nginx" (forces create)\n\nScheduler dry-run:\n- All tasks successfully allocated.\n\nJob Modify Index: 0\nTo submit the job with version verification run:\n\nnomad job run -check-index 0 nginx.tf\n'})}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{alt:"Hashicorp Nomad for NGINX Load-balancing",src:a(319401).A+"",width:"1175",height:"246"})}),"\n",(0,o.jsx)(e.p,{children:"Testing the round-robin load-balancing:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"curl server-ip\nWelcome! You are on node server-ip:25447\ncurl server-ip\nWelcome! You are on node server-ip:29597\ncurl server-ip\nWelcome! You are on node server-ip:29709\ncurl server-ip\nWelcome! You are on node server-ip:25447\n"})})]})}function h(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}},771218:(n,e,a)=>{a.d(e,{A:()=>o});const o=a.p+"assets/images/Hashicorp_Nomad_for_NGINX_Load-balancing_01-af05ef13977114a22d8d3257c5cc46c7.png"},319401:(n,e,a)=>{a.d(e,{A:()=>o});const o=a.p+"assets/images/Hashicorp_Nomad_for_NGINX_Load-balancing_02-cb1c55f543924f884c4f04372d8e1793.png"},374847:(n,e,a)=>{a.d(e,{A:()=>o});const o=a.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-6c1edb088dfea3a7d39f8eebb8e9dc23.jpg"},28453:(n,e,a)=>{a.d(e,{R:()=>r,x:()=>t});var o=a(296540);const i={},s=o.createContext(i);function r(n){const e=o.useContext(s);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function t(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:r(n.components),o.createElement(s.Provider,{value:e},n.children)}}}]);