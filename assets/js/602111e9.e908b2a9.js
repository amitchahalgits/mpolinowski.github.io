"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[81502],{150425:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>r,contentTitle:()=>o,default:()=>m,frontMatter:()=>t,metadata:()=>l,toc:()=>d});var a=i(785893),s=i(603905);const t={sidebar_position:4430,slug:"2023-04-14",title:"Dimensionality Reduction for Image Segmentation",authors:"mpolinowski",tags:["Python","Machine Learning"],description:"Use Manifold Learning and the LD Analysis to Visualize Image Datasets."},o="Dimensionality Reduction for Image Segmentation",l={id:"IoT-and-Machine-Learning/ML/2023-04-14-manifold-learning-for-image-segmentation/index",title:"Dimensionality Reduction for Image Segmentation",description:"Use Manifold Learning and the LD Analysis to Visualize Image Datasets.",source:"@site/docs/IoT-and-Machine-Learning/ML/2023-04-14-manifold-learning-for-image-segmentation/index.md",sourceDirName:"IoT-and-Machine-Learning/ML/2023-04-14-manifold-learning-for-image-segmentation",slug:"/IoT-and-Machine-Learning/ML/2023-04-14-manifold-learning-for-image-segmentation/2023-04-14",permalink:"/docs/IoT-and-Machine-Learning/ML/2023-04-14-manifold-learning-for-image-segmentation/2023-04-14",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IoT-and-Machine-Learning/ML/2023-04-14-manifold-learning-for-image-segmentation/index.md",tags:[{label:"Python",permalink:"/docs/tags/python"},{label:"Machine Learning",permalink:"/docs/tags/machine-learning"}],version:"current",sidebarPosition:4430,frontMatter:{sidebar_position:4430,slug:"2023-04-14",title:"Dimensionality Reduction for Image Segmentation",authors:"mpolinowski",tags:["Python","Machine Learning"],description:"Use Manifold Learning and the LD Analysis to Visualize Image Datasets."},sidebar:"tutorialSidebar",previous:{title:"3D Image Classification",permalink:"/docs/IoT-and-Machine-Learning/ML/2023-04-16-deep-3d-image-segmentation/2023-04-16"},next:{title:"Fisher Linear Discriminant Analysis (LDA)",permalink:"/docs/IoT-and-Machine-Learning/ML/2023-04-13-fisher-discriminant-analysis/2023-04-13"}},r={},d=[{value:"Local Linear Embedding",id:"local-linear-embedding",level:2},{value:"Digits Dataset",id:"digits-dataset",level:3},{value:"2-Dimensional Plot",id:"2-dimensional-plot",level:3},{value:"3-Dimensional Plot",id:"3-dimensional-plot",level:3},{value:"Principal Component Analysis",id:"principal-component-analysis",level:2},{value:"2-Dimensional Plot",id:"2-dimensional-plot-1",level:3},{value:"3-Dimensional Plot",id:"3-dimensional-plot-1",level:3},{value:"Fisher Discriminant Analysis",id:"fisher-discriminant-analysis",level:2},{value:"2-Dimensional Plot",id:"2-dimensional-plot-2",level:3},{value:"3-Dimensional Plot",id:"3-dimensional-plot-2",level:3},{value:"Isometric Mapping",id:"isometric-mapping",level:2},{value:"2-Dimensional Plot",id:"2-dimensional-plot-3",level:3},{value:"3-Dimensional Plot",id:"3-dimensional-plot-3",level:3}];function c(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.ah)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{alt:"Victoria Harbour, Hongkong",src:i(551838).Z+"",width:"2385",height:"858"})}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.a,{href:"#dimensionality-reduction-for-image-segmentation",children:"Dimensionality Reduction for Image Segmentation"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.a,{href:"#local-linear-embedding",children:"Local Linear Embedding"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"#digits-dataset",children:"Digits Dataset"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"#2-dimensional-plot",children:"2-Dimensional Plot"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"#3-dimensional-plot",children:"3-Dimensional Plot"})}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.a,{href:"#principal-component-analysis",children:"Principal Component Analysis"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"#2-dimensional-plot-1",children:"2-Dimensional Plot"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"#3-dimensional-plot-1",children:"3-Dimensional Plot"})}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.a,{href:"#fisher-discriminant-analysis",children:"Fisher Discriminant Analysis"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"#2-dimensional-plot-2",children:"2-Dimensional Plot"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"#3-dimensional-plot-2",children:"3-Dimensional Plot"})}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.a,{href:"#isometric-mapping",children:"Isometric Mapping"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"#2-dimensional-plot-3",children:"2-Dimensional Plot"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"#3-dimensional-plot-3",children:"3-Dimensional Plot"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.a,{href:"https://github.com/mpolinowski/manifold-learning-for-image-segmentation",children:"Github Repository"})}),"\n",(0,a.jsx)(e.h1,{id:"dimensionality-reduction-for-image-segmentation",children:"Dimensionality Reduction for Image Segmentation"}),"\n",(0,a.jsxs)(e.p,{children:["Use ",(0,a.jsx)(e.a,{href:"https://scikit-learn.org/stable/auto_examples/manifold/plot_lle_digits.html",children:"Manifold Learning"})," and the ",(0,a.jsx)(e.a,{href:"https://mpolinowski.github.io/docs/IoT-and-Machine-Learning/ML/2023-04-13-fisher-discriminant-analysis/2023-04-13",children:"LD Analysis"})," to Visualize Image Datasets."]}),"\n",(0,a.jsx)(e.h2,{id:"local-linear-embedding",children:"Local Linear Embedding"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"import matplotlib.pyplot as plt\nimport plotly.express as px\nimport pandas as pd\nimport seaborn as sns\nfrom sklearn.datasets import load_digits\nfrom sklearn.manifold import LocallyLinearEmbedding\n"})}),"\n",(0,a.jsx)(e.h3,{id:"digits-dataset",children:"Digits Dataset"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# load digits dataset with labels\nX,y = load_digits(return_X_y=True)\nX.shape\n# (images, features)\n# (1797, 64)\n"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"plt.figure(figsize=(8,8))\nplt.title('Image Label: ' + str(y[888]))\nplt.imshow(X[888].reshape(8,8))\n"})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{alt:"Dimensionality Reduction for Image Segmentation",src:i(637282).Z+"",width:"654",height:"682"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"fig, axes = plt.subplots(nrows=3, ncols=3, sharex=True, sharey=True, figsize=(12,12))\naxes[0,0].title.set_text('Image Label: ' + str(y[111]))\naxes[0,0].imshow(X[111].reshape(8,8), cmap='Greens')\naxes[0,1].title.set_text('Image Label: ' + str(y[222]))\naxes[0,1].imshow(X[222].reshape(8,8), cmap='Blues')\naxes[0,2].title.set_text('Image Label: ' + str(y[333]))\naxes[0,2].imshow(X[333].reshape(8,8), cmap='Reds')\naxes[1,0].title.set_text('Image Label: ' + str(y[444]))\naxes[1,0].imshow(X[444].reshape(8,8), cmap='Blues')\naxes[1,1].title.set_text('Image Label: ' + str(y[555]))\naxes[1,1].imshow(X[555].reshape(8,8))\naxes[1,2].title.set_text('Image Label: ' + str(y[666]))\naxes[1,2].imshow(X[666].reshape(8,8), cmap='Blues')\naxes[2,0].title.set_text('Image Label: ' + str(y[777]))\naxes[2,0].imshow(X[777].reshape(8,8), cmap='Reds')\naxes[2,1].title.set_text('Image Label: ' + str(y[888]))\naxes[2,1].imshow(X[888].reshape(8,8), cmap='Blues')\naxes[2,2].title.set_text('Image Label: ' + str(y[999]))\naxes[2,2].imshow(X[999].reshape(8,8), cmap='Greens')\nplt.tight_layout()\n"})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{alt:"Dimensionality Reduction for Image Segmentation",src:i(985533).Z+"",width:"1165",height:"1190"})}),"\n",(0,a.jsx)(e.h3,{id:"2-dimensional-plot",children:"2-Dimensional Plot"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"# the dataset has 1797 images with 64 dimensions\n# we use LLE to reduce the dimensionality of the dataset\n# to help us visualize / classify it\nno_components=2\nno_neighbors=10\n\nlle = LocallyLinearEmbedding(n_components=no_components, n_neighbors=no_neighbors)\nX_lle = lle.fit_transform(X, y=y)\n\ndata = pd.DataFrame({'LLE1': X_lle[ :,0], 'LLE2': X_lle[ :,1], 'Class': y})\n\nplt.figure(figsize=(12, 10))\nplt.title('2d Plot with 10 nearest neighbors')\nsns.scatterplot(x='LLE1', y='LLE2', hue='Class', data=data, palette='tab10')\n"})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{alt:"Dimensionality Reduction for Image Segmentation",src:i(716369).Z+"",width:"1021",height:"855"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"no_neighbors=15\n\nlle = LocallyLinearEmbedding(n_components=no_components, n_neighbors=no_neighbors)\nX_lle = lle.fit_transform(X, y=y)\n\ndata = pd.DataFrame({'LLE1': X_lle[ :,0], 'LLE2': X_lle[ :,1], 'Class': y})\n\nplt.figure(figsize=(12, 10))\nplt.title('2d Plot with 15 nearest neighbors')\nsns.scatterplot(x='LLE1', y='LLE2', hue='Class', data=data, palette='tab10')\n"})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{alt:"Dimensionality Reduction for Image Segmentation",src:i(186269).Z+"",width:"1021",height:"855"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"no_neighbors=20\n\nlle = LocallyLinearEmbedding(n_components=no_components, n_neighbors=no_neighbors)\nX_lle = lle.fit_transform(X, y=y)\n\ndata = pd.DataFrame({'LLE1': X_lle[ :,0], 'LLE2': X_lle[ :,1], 'Class': y})\n\nplt.figure(figsize=(12, 10))\nplt.title('2d Plot with 20 nearest neighbors')\nsns.scatterplot(x='LLE1', y='LLE2', hue='Class', data=data, palette='tab10')\n"})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{alt:"Dimensionality Reduction for Image Segmentation",src:i(693197).Z+"",width:"1021",height:"855"})}),"\n",(0,a.jsx)(e.h3,{id:"3-dimensional-plot",children:"3-Dimensional Plot"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"no_components=3\nno_neighbors=10\n\nlle = LocallyLinearEmbedding(n_components=no_components, n_neighbors=no_neighbors)\nX_lle = lle.fit_transform(X, y=y)\n\ndata = pd.DataFrame({\n    'LLE1': X_lle[ :,0],\n    'LLE2': X_lle[ :,1],\n    'LLE3': X_lle[ :,2],\n    'Class': y})\n\n# data.head()\n\nplot = px.scatter_3d(\n    data,\n    x = 'LLE1',\n    y = 'LLE2',\n    z = 'LLE3',\n    color='Class')\n\nplot.show()\n"})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{alt:"Dimensionality Reduction for Image Segmentation",src:i(928033).Z+"",width:"859",height:"525"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"no_components=3\nno_neighbors=15\n\nlle = LocallyLinearEmbedding(n_components=no_components, n_neighbors=no_neighbors)\nX_lle = lle.fit_transform(X, y=y)\n\ndata = pd.DataFrame({\n    'LLE1': X_lle[ :,0],\n    'LLE2': X_lle[ :,1],\n    'LLE3': X_lle[ :,2],\n    'Class': y})\n\n# data.head()\n\nplot = px.scatter_3d(\n    data,\n    x = 'LLE1',\n    y = 'LLE2',\n    z = 'LLE3',\n    color='Class')\n\nplot.show()\n"})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{alt:"Dimensionality Reduction for Image Segmentation",src:i(595441).Z+"",width:"859",height:"525"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"no_components=3\nno_neighbors=20\n\nlle = LocallyLinearEmbedding(n_components=no_components, n_neighbors=no_neighbors)\nX_lle = lle.fit_transform(X, y=y)\n\ndata = pd.DataFrame({\n    'LLE1': X_lle[ :,0],\n    'LLE2': X_lle[ :,1],\n    'LLE3': X_lle[ :,2],\n    'Class': y})\n\n# data.head()\n\nplot = px.scatter_3d(\n    data,\n    x = 'LLE1',\n    y = 'LLE2',\n    z = 'LLE3',\n    color='Class')\n\nplot.show()\n"})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{alt:"Dimensionality Reduction for Image Segmentation",src:i(616728).Z+"",width:"859",height:"525"})}),"\n",(0,a.jsx)(e.h2,{id:"principal-component-analysis",children:"Principal Component Analysis"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"import matplotlib.pyplot as plt\nimport plotly.express as px\nimport pandas as pd\nimport seaborn as sns\nfrom sklearn.datasets import load_digits\nfrom sklearn.decomposition import PCA\n"})}),"\n",(0,a.jsx)(e.h3,{id:"2-dimensional-plot-1",children:"2-Dimensional Plot"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"no_components = 2\npca = PCA(n_components=no_components).fit(X)\nX_pca = pca.transform(X)\n\ndata = pd.DataFrame({\n    'PCA1': X_pca[:,0],\n    'PCA2': X_pca[:,1],\n    'Class': y})\n\nfig = plt.figure(figsize=(10, 8))\nsns.scatterplot(\n    x='PCA1',\n    y='PCA2',\n    hue='Class',\n    palette='tab10',\n    data=data)\n"})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{alt:"Principal Component Analysis",src:i(687531).Z+"",width:"853",height:"679"})}),"\n",(0,a.jsx)(e.h3,{id:"3-dimensional-plot-1",children:"3-Dimensional Plot"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"no_components = 3\npca = PCA(n_components=no_components).fit(X)\nX_pca = pca.transform(X)\n\ndata = pd.DataFrame({\n    'PCA1': X_pca[:,0],\n    'PCA2': X_pca[:,1],\n    'PCA3': X_pca[:,2],\n    'Class': y})\n\nplot = px.scatter_3d(\n    data,\n    x = 'PCA1',\n    y = 'PCA2',\n    z = 'PCA3',\n    color='Class')\n\nplot.show()\n"})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{alt:"Principal Component Analysis",src:i(524524).Z+"",width:"1643",height:"420"})}),"\n",(0,a.jsx)(e.h2,{id:"fisher-discriminant-analysis",children:"Fisher Discriminant Analysis"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"import matplotlib.pyplot as plt\nimport plotly.express as px\nimport pandas as pd\nimport seaborn as sns\nfrom sklearn.datasets import load_digits\nfrom sklearn.discriminant_analysis import LinearDiscriminantAnalysis\n"})}),"\n",(0,a.jsx)(e.h3,{id:"2-dimensional-plot-2",children:"2-Dimensional Plot"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"no_components = 2\n\nlda = LinearDiscriminantAnalysis(n_components = no_components)\nX_lda = lda.fit_transform(X , y=y)\n\ndata = pd.DataFrame({\n    'LDA1': X_lda[:,0],\n    'LDA2': X_lda[:,1],\n    'Class': y})\n"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"fig = plt.figure(figsize=(10, 8))\nsns.scatterplot(\n    x='LDA1',\n    y='LDA2',\n    hue='Class',\n    data=data,\n    palette='tab10')\n"})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{alt:"Fisher Discriminant Analysis",src:i(447525).Z+"",width:"844",height:"679"})}),"\n",(0,a.jsx)(e.h3,{id:"3-dimensional-plot-2",children:"3-Dimensional Plot"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"no_components = 3\n\nlda = LinearDiscriminantAnalysis(n_components = no_components)\nX_lda = lda.fit_transform(X , y=y)\n\ndata = pd.DataFrame({\n    'LDA1': X_lda[:,0],\n    'LDA2': X_lda[:,1],\n    'LDA3': X_lda[:,2],\n    'Class': y})\n\nplot = px.scatter_3d(\n    data,\n    x = 'LDA1',\n    y = 'LDA2',\n    z = 'LDA3',\n    color='Class')\n\nplot.show()\n"})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{alt:"Fisher Discriminant Analysis",src:i(999298).Z+"",width:"1308",height:"406"})}),"\n",(0,a.jsx)(e.h2,{id:"isometric-mapping",children:"Isometric Mapping"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"import matplotlib.pyplot as plt\nimport plotly.express as px\nimport pandas as pd\nimport seaborn as sns\nfrom sklearn.datasets import load_digits\nfrom sklearn.manifold import Isomap\n"})}),"\n",(0,a.jsx)(e.h3,{id:"2-dimensional-plot-3",children:"2-Dimensional Plot"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"no_components = 2\nk_nearest_neighbors = 10\n\nisomap = Isomap(\n    n_components=no_components,\n    n_neighbors=k_nearest_neighbors)\n\nX_iso = isomap.fit_transform(X)\nprint('Reconstruction Error: ', isomap.reconstruction_error())\n# Reconstruction Error:  3092.669294495556\n\ndata = pd.DataFrame({\n    'ISOMAP1': X_iso[:,0],\n    'ISOMAP2': X_iso[:,1],\n    'Class': y})\n"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"fig = plt.figure(figsize=(10, 8))\nsns.scatterplot(\n    x='ISOMAP1',\n    y='ISOMAP2',\n    hue='Class',\n    data=data,\n    palette='tab10')\n"})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{alt:"Isometric Mapping",src:i(693138).Z+"",width:"862",height:"679"})}),"\n",(0,a.jsx)(e.h3,{id:"3-dimensional-plot-3",children:"3-Dimensional Plot"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"no_components = 3\nk_nearest_neighbors = 10\n\nisomap = Isomap(\n    n_components=no_components,\n    n_neighbors=k_nearest_neighbors)\n\nX_iso = isomap.fit_transform(X)\nprint('Reconstruction Error: ', isomap.reconstruction_error())\n# Reconstruction Error:  2522.73434274533\n\ndata = pd.DataFrame({\n    'ISOMAP1': X_iso[:,0],\n    'ISOMAP2': X_iso[:,1],\n    'ISOMAP3': X_iso[:,2],\n    'Class': y})\n"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-python",children:"plot = px.scatter_3d(\n    data,\n    x = 'ISOMAP1',\n    y = 'ISOMAP2',\n    z = 'ISOMAP3',\n    color='Class')\n\nplot.show()\n"})}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{alt:"Isometric Mapping",src:i(990559).Z+"",width:"1600",height:"407"})})]})}function m(n={}){const{wrapper:e}={...(0,s.ah)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(c,{...n})}):c(n)}},603905:(n,e,i)=>{i.d(e,{ah:()=>d});var a=i(667294);function s(n,e,i){return e in n?Object.defineProperty(n,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):n[e]=i,n}function t(n,e){var i=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),i.push.apply(i,a)}return i}function o(n){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?t(Object(i),!0).forEach((function(e){s(n,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(i)):t(Object(i)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(i,e))}))}return n}function l(n,e){if(null==n)return{};var i,a,s=function(n,e){if(null==n)return{};var i,a,s={},t=Object.keys(n);for(a=0;a<t.length;a++)i=t[a],e.indexOf(i)>=0||(s[i]=n[i]);return s}(n,e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);for(a=0;a<t.length;a++)i=t[a],e.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(n,i)&&(s[i]=n[i])}return s}var r=a.createContext({}),d=function(n){var e=a.useContext(r),i=e;return n&&(i="function"==typeof n?n(e):o(o({},e),n)),i},c={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(n,e){var i=n.components,s=n.mdxType,t=n.originalType,r=n.parentName,m=l(n,["components","mdxType","originalType","parentName"]),p=d(i),h=s,g=p["".concat(r,".").concat(h)]||p[h]||c[h]||t;return i?a.createElement(g,o(o({ref:e},m),{},{components:i})):a.createElement(g,o({ref:e},m))}));m.displayName="MDXCreateElement"},637282:(n,e,i)=>{i.d(e,{Z:()=>a});const a=i.p+"assets/images/Dimensionality_Reduction_for_Image_Segmentation_01-a3f0c4ceaddd89dc1bb6051986c848d6.png"},985533:(n,e,i)=>{i.d(e,{Z:()=>a});const a=i.p+"assets/images/Dimensionality_Reduction_for_Image_Segmentation_02-7fdb477703f831d55cfac5230cda1570.png"},716369:(n,e,i)=>{i.d(e,{Z:()=>a});const a=i.p+"assets/images/Dimensionality_Reduction_for_Image_Segmentation_03-16af8569d3eead81b4b3d0b85c11c20a.png"},186269:(n,e,i)=>{i.d(e,{Z:()=>a});const a=i.p+"assets/images/Dimensionality_Reduction_for_Image_Segmentation_04-3a869e901a65e2b52d8de646b8d479eb.png"},693197:(n,e,i)=>{i.d(e,{Z:()=>a});const a=i.p+"assets/images/Dimensionality_Reduction_for_Image_Segmentation_05-96e0dfe50d5bc99f26cc86094ca79218.png"},928033:(n,e,i)=>{i.d(e,{Z:()=>a});const a=i.p+"assets/images/Dimensionality_Reduction_for_Image_Segmentation_06-1e4195490eedab9be8d3ad1bc92d84af.png"},595441:(n,e,i)=>{i.d(e,{Z:()=>a});const a=i.p+"assets/images/Dimensionality_Reduction_for_Image_Segmentation_07-8cdbf99f1b207b78a24528833b3e722c.png"},616728:(n,e,i)=>{i.d(e,{Z:()=>a});const a=i.p+"assets/images/Dimensionality_Reduction_for_Image_Segmentation_08-bfe5ca8f945a447f8907776b5549ae53.png"},687531:(n,e,i)=>{i.d(e,{Z:()=>a});const a=i.p+"assets/images/Dimensionality_Reduction_for_Image_Segmentation_09-c65fe1a599820b615e85dcfd3ddfc00c.png"},524524:(n,e,i)=>{i.d(e,{Z:()=>a});const a=i.p+"assets/images/Dimensionality_Reduction_for_Image_Segmentation_10-76d8132765406101c14aaf454e3bd622.png"},447525:(n,e,i)=>{i.d(e,{Z:()=>a});const a=i.p+"assets/images/Dimensionality_Reduction_for_Image_Segmentation_11-08c5457f86b94015987777d7077435f4.png"},999298:(n,e,i)=>{i.d(e,{Z:()=>a});const a=i.p+"assets/images/Dimensionality_Reduction_for_Image_Segmentation_12-d8cca3e2fbd1994aa68ab66192692943.png"},693138:(n,e,i)=>{i.d(e,{Z:()=>a});const a=i.p+"assets/images/Dimensionality_Reduction_for_Image_Segmentation_13-f78726b7d934515f05ac7aafe85abbc8.png"},990559:(n,e,i)=>{i.d(e,{Z:()=>a});const a=i.p+"assets/images/Dimensionality_Reduction_for_Image_Segmentation_14-2c48ee766dbaed64aa1300623885ffd3.png"},551838:(n,e,i)=>{i.d(e,{Z:()=>a});const a=i.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-936fe81d44bf1beb4563551aafeb5788.jpg"}}]);