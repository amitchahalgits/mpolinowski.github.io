"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[28458],{649842:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>i,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var s=n(785893),a=n(603905);const o={sidebar_position:7040,slug:"2022-10-11",title:"Opensearch & Dashboard",authors:"mpolinowski",tags:["LINUX","Elasticsearch","Opensearch"],description:"Run a single Opensearch node + Dashboard cluster with Docker-Compose."},t=void 0,c={id:"DevOps/Elasticsearch/2022-10-11--opensearch-docker-compose/index",title:"Opensearch & Dashboard",description:"Run a single Opensearch node + Dashboard cluster with Docker-Compose.",source:"@site/docs/DevOps/Elasticsearch/2022-10-11--opensearch-docker-compose/index.md",sourceDirName:"DevOps/Elasticsearch/2022-10-11--opensearch-docker-compose",slug:"/DevOps/Elasticsearch/2022-10-11--opensearch-docker-compose/2022-10-11",permalink:"/docs/DevOps/Elasticsearch/2022-10-11--opensearch-docker-compose/2022-10-11",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Elasticsearch/2022-10-11--opensearch-docker-compose/index.md",tags:[{label:"LINUX",permalink:"/docs/tags/linux"},{label:"Elasticsearch",permalink:"/docs/tags/elasticsearch"},{label:"Opensearch",permalink:"/docs/tags/opensearch"}],version:"current",sidebarPosition:7040,frontMatter:{sidebar_position:7040,slug:"2022-10-11",title:"Opensearch & Dashboard",authors:"mpolinowski",tags:["LINUX","Elasticsearch","Opensearch"],description:"Run a single Opensearch node + Dashboard cluster with Docker-Compose."},sidebar:"tutorialSidebar",previous:{title:"Opensearch Rest API",permalink:"/docs/DevOps/Elasticsearch/2022-10-12--opensearch-rest-api/2022-10-12"},next:{title:"Elasticsearch v8, Filebeat (Docker) and Apache",permalink:"/docs/DevOps/Elasticsearch/2022-02-06--elasticsearch-v8-data-ingestion-apache/2022-02-06"}},i={},p=[{value:"Setup",id:"setup",level:2}];function l(e){const r={a:"a",blockquote:"blockquote",code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.ah)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.p,{children:(0,s.jsx)(r.img,{alt:"Shenzhen, China",src:n(955829).Z+"",width:"1500",height:"403"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:(0,s.jsx)(r.a,{href:"#setup",children:"Setup"})}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"setup",children:"Setup"}),"\n",(0,s.jsx)(r.p,{children:"Run the Docker-Compose file for a single Opensearch node + Dashboard cluster:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-yml",children:'version: \'3\'\r\nservices:\r\n  opensearch-node1:\r\n    image: opensearchproject/opensearch:latest\r\n    container_name: opensearch-node1\r\n    environment:\r\n      - cluster.name=opensearch-cluster\r\n      - node.name=opensearch-node1\r\n      - discovery.seed_hosts=opensearch-node1\r\n      - cluster.initial_cluster_manager_nodes=opensearch-node1\r\n      - bootstrap.memory_lock=true # along with the memlock settings below, disables swapping\r\n      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # minimum and maximum Java heap size, recommend setting both to 50% of system RAM\r\n    ulimits:\r\n      memlock:\r\n        soft: -1\r\n        hard: -1\r\n      nofile:\r\n        soft: 65536 # maximum number of open files for the OpenSearch user, set to at least 65536 on modern systems\r\n        hard: 65536\r\n    volumes:\r\n      - opensearch-data1:/usr/share/opensearch/data\r\n    ports:\r\n      - 9200:9200\r\n      - 9600:9600 # required for Performance Analyzer\r\n    networks:\r\n      - opensearch-net\r\n  opensearch-dashboards:\r\n    image: opensearchproject/opensearch-dashboards:latest\r\n    container_name: opensearch-dashboards\r\n    ports:\r\n      - 5601:5601\r\n    expose:\r\n      - "5601"\r\n    environment:\r\n      OPENSEARCH_HOSTS: \'["https://opensearch-node1:9200"]\'\r\n    networks:\r\n      - opensearch-net\r\n\r\nvolumes:\r\n  opensearch-data1:\r\n  opensearch-data2:\r\n\r\nnetworks:\r\n  opensearch-net:\n'})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"docker-compose up\n"})}),"\n",(0,s.jsxs)(r.blockquote,{children:["\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"ERROR"})," message: Virtual memory is too low:"]}),"\n"]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"opensearch-node1         | ERROR: [1] bootstrap checks failed\r\nopensearch-node1         | [1]: max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]\r\nopensearch-node1         | ERROR: OpenSearch did not exit normally - check the logs at /usr/share/opensearch/logs/opensearch-cluster.log\r\nopensearch-node1         | Killing performance analyzer process 103\r\nopensearch-node1         | OpenSearch exited with code 78\r\nopensearch-node1         | Performance analyzer exited with code 143\r\nopensearch-node1 exited with code 0\n"})}),"\n",(0,s.jsx)(r.p,{children:"Increase the virtual memory for Elasticsearch on the host machine by running this command:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-bash",children:"sudo sysctl -w vm.max_map_count=262144\n"})}),"\n",(0,s.jsxs)(r.p,{children:["and then restart your docker-containers and login with ",(0,s.jsx)(r.code,{children:"admin"}),"/",(0,s.jsx)(r.code,{children:"admin"})," on ",(0,s.jsx)(r.code,{children:"http://localhost:5601/app/home"}),":"]}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.img,{alt:"Opensearch",src:n(309782).Z+"",width:"1186",height:"455"})})]})}function h(e={}){const{wrapper:r}={...(0,a.ah)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},603905:(e,r,n)=>{n.d(r,{ah:()=>p});var s=n(667294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);r&&(s=s.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,s)}return n}function t(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function c(e,r){if(null==e)return{};var n,s,a=function(e,r){if(null==e)return{};var n,s,a={},o=Object.keys(e);for(s=0;s<o.length;s++)n=o[s],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(s=0;s<o.length;s++)n=o[s],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=s.createContext({}),p=function(e){var r=s.useContext(i),n=r;return e&&(n="function"==typeof e?e(r):t(t({},r),e)),n},l={inlineCode:"code",wrapper:function(e){var r=e.children;return s.createElement(s.Fragment,{},r)}},h=s.forwardRef((function(e,r){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,h=c(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,u=d["".concat(i,".").concat(m)]||d[m]||l[m]||o;return n?s.createElement(u,t(t({ref:r},h),{},{components:n})):s.createElement(u,t({ref:r},h))}));h.displayName="MDXCreateElement"},309782:(e,r,n)=>{n.d(r,{Z:()=>s});const s=n.p+"assets/images/Opensearch_01-f227994fe897509974fdefc0859d99f2.png"},955829:(e,r,n)=>{n.d(r,{Z:()=>s});const s=n.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-94d62ec3ff079da54fce88aad4901707.jpg"}}]);