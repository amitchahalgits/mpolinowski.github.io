"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[85833],{51156:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var t=n(785893),s=n(603905);const i={sidebar_position:6010,slug:"2022-09-21",title:"Secure Timeserver - NTP with NTS with Docker",authors:"mpolinowski",tags:["LINUX","Security","NTS"],description:"NTS is a method for using TLS/SSL to authenticate NTP traffic on the net."},c=void 0,o={id:"DevOps/Linux/2022-09-15--ntp-over-nts-timeserver/index",title:"Secure Timeserver - NTP with NTS with Docker",description:"NTS is a method for using TLS/SSL to authenticate NTP traffic on the net.",source:"@site/docs/DevOps/Linux/2022-09-15--ntp-over-nts-timeserver/index.md",sourceDirName:"DevOps/Linux/2022-09-15--ntp-over-nts-timeserver",slug:"/DevOps/Linux/2022-09-15--ntp-over-nts-timeserver/2022-09-21",permalink:"/docs/DevOps/Linux/2022-09-15--ntp-over-nts-timeserver/2022-09-21",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Linux/2022-09-15--ntp-over-nts-timeserver/index.md",tags:[{label:"LINUX",permalink:"/docs/tags/linux"},{label:"Security",permalink:"/docs/tags/security"},{label:"NTS",permalink:"/docs/tags/nts"}],version:"current",sidebarPosition:6010,frontMatter:{sidebar_position:6010,slug:"2022-09-21",title:"Secure Timeserver - NTP with NTS with Docker",authors:"mpolinowski",tags:["LINUX","Security","NTS"],description:"NTS is a method for using TLS/SSL to authenticate NTP traffic on the net."},sidebar:"tutorialSidebar",previous:{title:"NTS-Service and Authenticated Time Synchronization",permalink:"/docs/DevOps/Linux/2022-09-28--nts-client-setup/2022-09-28"},next:{title:"nmap Cheat Sheet",permalink:"/docs/DevOps/Linux/2022-03-10--nmap-network-scanner/2022-03-10"}},a={},l=[{value:"Running an NTP Server in Docker",id:"running-an-ntp-server-in-docker",level:2},{value:"Configuration",id:"configuration",level:3},{value:"Logging",id:"logging",level:3},{value:"Testing",id:"testing",level:2},{value:"Enable NTS on the server",id:"enable-nts-on-the-server",level:2},{value:"Preparing the Certificate",id:"preparing-the-certificate",level:3},{value:"Certbot",id:"certbot",level:4},{value:"Public NTS-capable servers",id:"public-nts-capable-servers",level:2}];function d(e){const r={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.ah)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{alt:"TST, Hong Kong",src:n(691265).Z+"",width:"1500",height:"517"})}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"#running-an-ntp-server-in-docker",children:"Running an NTP Server in Docker"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"#configuration",children:"Configuration"})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"#logging",children:"Logging"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"#testing",children:"Testing"})}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"#enable-nts-on-the-server",children:"Enable NTS on the server"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"#preparing-the-certificate",children:"Preparing the Certificate"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"#certbot",children:"Certbot"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"#public-nts-capable-servers",children:"Public NTS-capable servers"})}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"running-an-ntp-server-in-docker",children:"Running an NTP Server in Docker"}),"\n",(0,t.jsxs)(r.p,{children:["The docker image ",(0,t.jsx)(r.a,{href:"https://hub.docker.com/r/cturra/ntp",children:"cturra/ntp"})," is build on Alpine Linux and uses ",(0,t.jsx)(r.a,{href:"https://chrony.tuxfamily.org/examples.html",children:"Chrony"}),". Chrony is a versatile implementation of the Network Time Protocol (NTP). It can synchronise the system clock with NTP servers. It can also operate as an NTPv4 (RFC 5905) server and peer to provide a time service to other computers in the network."]}),"\n",(0,t.jsxs)(r.p,{children:["We can run the container using ",(0,t.jsx)(r.strong,{children:"Docker-Compose"}),". Create the ",(0,t.jsx)(r.code,{children:"docker-compose.yml"})," file:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"cd /opt\r\ngit clone https://github.com/cturra/docker-ntp.git && cd docker-ntp\r\ncat ./docker-compose.yml\n"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-yml",children:"version: '3.9'\r\n\r\nservices:\r\n  ntp:\r\n    build: .\r\n    image: cturra/ntp:latest\r\n    container_name: ntp\r\n    restart: always\r\n    ports:\r\n      - 123:123/udp\r\n    environment:\r\n      - NTP_SERVERS=time.cloudflare.com\r\n      - LOG_LEVEL=0\n"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"docker compose up -d ntp\r\ndocker compose logs ntp\n"})}),"\n",(0,t.jsx)(r.h3,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsxs)(r.p,{children:["To configure ",(0,t.jsx)(r.a,{href:"https://www.advtimesync.com/docs/manual/stratum1.html",children:"more than one server"}),", you must use a comma delimited list WITHOUT spaces:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-yml",children:'# (default) cloudflare\r\nNTP_SERVERS="time.cloudflare.com"\r\n\r\n# google\r\nNTP_SERVERS="time1.google.com,time2.google.com,time3.google.com,time4.google.com"\r\n\r\n# alibaba\r\nNTP_SERVERS="ntp1.aliyun.com,ntp2.aliyun.com,ntp3.aliyun.com,ntp4.aliyun.com"\r\n\r\n# local (offline)\r\nNTP_SERVER="127.127.1.1"\n'})}),"\n",(0,t.jsx)(r.h3,{id:"logging",children:"Logging"}),"\n",(0,t.jsxs)(r.p,{children:["By default, this project logs informational messages to stdout. The ",(0,t.jsx)(r.strong,{children:"LOG_LEVEL"})," option matches the ",(0,t.jsx)(r.code,{children:"chrony -L"})," option, which support the following levels can to specified: ",(0,t.jsx)(r.code,{children:"0"})," (",(0,t.jsx)(r.em,{children:"informational"}),"), ",(0,t.jsx)(r.code,{children:"1"})," (",(0,t.jsx)(r.em,{children:"warning"}),"), ",(0,t.jsx)(r.code,{children:"2"})," (",(0,t.jsx)(r.em,{children:"non-fatal error"}),"), and ",(0,t.jsx)(r.code,{children:"3"})," (",(0,t.jsx)(r.em,{children:"fatal error"}),")."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"docker logs -f ntp \r\n\r\n2022-09-20T11:03:54Z chronyd version 4.1 starting (+CMDMON +NTP +REFCLOCK +RTC +PRIVDROP -SCFILTER +SIGND +ASYNCDNS +NTS +SECHASH +IPV6 -DEBUG)\r\n2022-09-20T11:03:54Z Disabled control of system clock\r\n2022-09-20T11:03:54Z Could not read valid frequency and skew from driftfile /var/lib/chrony/chrony.drift\r\n2022-09-20T11:03:58Z Selected source 162.159.200.1 (time.cloudflare.com)\n"})}),"\n",(0,t.jsx)(r.h2,{id:"testing",children:"Testing"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"apt install sntp\r\n\r\nsntp my.server.domain\r\nsntp 4.2.8p15@1.3728-o Wed Sep 23 11:46:38 UTC 2020 (1)\r\n2022-09-21 09:55:24.522074 (+0000) -0.002317 +/- 0.005741 my.server.domain my.server.domain s2 no-leap\n"})}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"ERROR"})," message ",(0,t.jsx)(r.code,{children:"no server suitable for synchronization found"})," - wait a while for your service to contact your selected upstream time server."]}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"To see details on the ntp status of your container, you can check with the command below on your docker host:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"docker exec ntp chronyc tracking\r\n\r\nReference ID    : A29FC801 (time.cloudflare.com)\r\nStratum         : 4\r\nRef time (UTC)  : Tue Sep 20 11:13:43 2022\r\nSystem time     : 0.002932649 seconds fast of NTP time\r\nLast offset     : +0.000029569 seconds\r\nRMS offset      : 0.001531294 seconds\r\nFrequency       : 0.329 ppm slow\r\nResidual freq   : +0.009 ppm\r\nSkew            : 0.553 ppm\r\nRoot delay      : 0.031447832 seconds\r\nRoot dispersion : 0.000492193 seconds\r\nUpdate interval : 64.8 seconds\r\nLeap status     : Normal\n"})}),"\n",(0,t.jsx)(r.p,{children:"Here is how you can see a peer list to verify the state of each ntp source configured:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"docker exec ntp chronyc sources\r\n\r\nMS Name/IP address         Stratum Poll Reach LastRx Last sample               \r\n===============================================================================\r\n^* time.cloudflare.com           3   7   377    34    +18us[  +24us] +/-   16ms\n"})}),"\n",(0,t.jsx)(r.p,{children:"The Reach column should have a non-zero value; ideally 377. The value 377 shown above is an octal number. It indicates that the last eight requests all had a valid response. To see statistics about the collected measurements of each ntp source configured:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"docker exec ntp chronyc sourcestats\r\n\r\nName/IP Address            NP  NR  Span  Frequency  Freq Skew  Offset  Std Dev\r\n==============================================================================\r\ntime.cloudflare.com        20  10  1106     +0.001      0.195   +121ns    78us\n"})}),"\n",(0,t.jsx)(r.h2,{id:"enable-nts-on-the-server",children:"Enable NTS on the server"}),"\n",(0,t.jsxs)(r.p,{children:["If you have your own NTP server running chronyd, you can enable server NTS support to allow its clients to be synchronized securely.  The ",(0,t.jsx)(r.strong,{children:"Chrony"})," configuration file is located in ",(0,t.jsx)(r.code,{children:"/etc/chrony/chrony.conf"})," inside the Docker container:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"docker exec -ti ntp cat /etc/chrony/chrony.conf\n"})}),"\n",(0,t.jsx)(r.p,{children:"But it is being generated by a shell script:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-conf",children:"# https://github.com/cturra/docker-ntp\r\n\r\n# chrony.conf file generated by startup script\r\n# located at /opt/startup.sh\r\n\r\n# time servers provided by NTP_SERVER environment variables.\r\nserver time.cloudflare.com iburst\r\n\r\ndriftfile /var/lib/chrony/chrony.drift\r\nmakestep 0.1 3\r\nrtcsync\r\n\r\nallow all\n"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"docker exec -ti ntp cat /opt/startup.sh\n"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-sh",children:'## dynamically populate chrony config file.\r\n{\r\n  echo "# https://github.com/cturra/docker-ntp"\r\n  echo\r\n  echo "# chrony.conf file generated by startup script"\r\n  echo "# located at /opt/startup.sh"\r\n  echo\r\n  echo "# time servers provided by NTP_SERVER environment variables."\r\n} > ${CHRONY_CONF_FILE}\r\n\r\n...\r\n\r\n# final bits for the config file\r\n{\r\n  echo\r\n  echo "driftfile /var/lib/chrony/chrony.drift"\r\n  echo "makestep 0.1 3"\r\n  echo "rtcsync"\r\n  echo\r\n  echo "allow all"\r\n} >> ${CHRONY_CONF_FILE}\n'})}),"\n",(0,t.jsxs)(r.p,{children:["You just need a private key and certificate. we need to add the ",(0,t.jsx)(r.a,{href:"https://chrony.tuxfamily.org/doc/4.3/chrony.conf.html",children:"following parameter"})," to use encryption:"]}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{}),(0,t.jsx)(r.th,{})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"nts"})}),(0,t.jsx)(r.td,{children:"This option enables authentication using the Network Time Security (NTS) mechanism. Unlike with the key option, the server and client do not need to share a key in a key file. NTS has a Key Establishment (NTS-KE) protocol using the Transport Layer Security (TLS) protocol to get the keys and cookies required by NTS for authentication of NTP packets."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"certset ID"})}),(0,t.jsx)(r.td,{children:"This option specifies which set of trusted certificates should be used to verify the server\u2019s certificate when the nts option is enabled. Sets of certificates can be specified with the ntstrustedcerts directive. The default set is 0, which by default contains certificates of the system\u2019s default trusted certificate authorities."})]})]})]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-conf",children:"ntsserverkey /etc/letsencrypt/live/my.server.domain/privkey.pem\r\nntsservercert /etc/letsencrypt/live/my.server.domain/fullchain.pem\n"})}),"\n",(0,t.jsxs)(r.p,{children:["Make sure the ",(0,t.jsx)(r.code,{children:"ntsdumpdir"})," directive is present in ",(0,t.jsx)(r.code,{children:"chrony.conf"}),". It allows the server to save its keys to disk, so the clients of the server don\u2019t have to get new keys and cookies when the server is restarted."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"ntsdumpdir /var/lib/chrony\n"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-sh",children:'# final bits for the config file\r\n{\r\n  echo\r\n  echo "driftfile /var/lib/chrony/chrony.drift"\r\n  echo "makestep 0.1 3"\r\n  echo "rtcsync"\r\n  echo\r\n  echo "ntsserverkey /opt/privkey.pem"\r\n  echo "ntsservercert /opt/fullchain.pem"\r\n  echo "ntsprocesses 3"\r\n  echo "maxntsconnections 512"\r\n  echo "ntsdumpdir /var/lib/chrony"\r\n  echo\r\n  echo "allow all"\r\n} >> ${CHRONY_CONF_FILE}\n'})}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsxs)(r.p,{children:["If the server has a firewall, it needs to allow both the ",(0,t.jsx)(r.strong,{children:"UDP"})," ",(0,t.jsx)(r.code,{children:"123"})," and ",(0,t.jsx)(r.strong,{children:"TCP"})," ",(0,t.jsx)(r.code,{children:"4460"})," ports for NTP and NTS-KE respectively."]}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"preparing-the-certificate",children:"Preparing the Certificate"}),"\n",(0,t.jsx)(r.h4,{id:"certbot",children:"Certbot"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"apt install certbot python3-certbot-nginx\r\ncertbot certonly --standalone\n"})}),"\n",(0,t.jsxs)(r.p,{children:["Once the certificates are created we have to link them in using the Docker Compose file - ",(0,t.jsx)(r.strong,{children:"Note"})," I am also binding the startup script I just edited. This will over-write the original one inside the docker container."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-yml",children:"version: '3.9'\r\n\r\nservices:\r\n  chrony:\r\n    build: .\r\n    image: cturra/ntp:latest\r\n    container_name: chrony\r\n    restart: unless-stopped\r\n    volumes:\r\n      - type: bind\r\n        source: /opt/docker-ntp/assets/startup.sh\r\n        target: /opt/startup.sh\r\n      - type: bind\r\n        source: /etc/letsencrypt/live/my.server.domain/fullchain.pem\r\n        target: /opt/fullchain.pem\r\n      - type: bind\r\n        source: /etc/letsencrypt/live/my.server.domain/privkey.pem\r\n        target: /opt/privkey.pem\r\n    ports:\r\n      - 123:123/udp\r\n      - 4460:4460/tcp\r\n    environment:\r\n      - NTP_SERVERS=0.de.pool.ntp.org,time.cloudflare.com,time1.google.com\r\n      - LOG_LEVEL=0\n"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"docker compose up -d chrony\n"})}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"ERROR"})," message after restarting the docker container I was unable to connect to using the TLS port. This is because the container was unable to read the certificate files:"]}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"docker logs -f chrony\r\n2022-09-21T10:19:47Z chronyd version 4.1 starting (+CMDMON +NTP +REFCLOCK +RTC +PRIVDROP -SCFILTER +SIGND +ASYNCDNS +NTS +SECHASH +IPV6 -DEBUG)\r\n2022-09-21T10:19:47Z Disabled control of system clock\r\n2022-09-21T10:19:47Z Could not read valid frequency and skew from driftfile /var/lib/chrony/chrony.drift\r\n2022-09-21T10:19:47Z Could not set credentials : Error while reading file.\r\n2022-09-21T10:19:47Z Could not set credentials : Error while reading file.\r\n2022-09-21T10:19:47Z Could not set credentials : Error while reading file.\r\n2022-09-21T10:19:52Z Selected source 216.239.35.0 (time1.google.com)\n"})}),"\n",(0,t.jsx)(r.p,{children:"I had to adjust the permissions to match the ones that were given by default to the startup script:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"-rw-r--r--    1 root     root          5595 Sep 21 08:37 fullchain.pem\r\n-rw-------    1 root     root          1704 Sep 21 08:37 privkey.pem\r\n-rwxr-xr-x    1 root     root          2277 Sep 21 08:48 startup.sh\n"})}),"\n",(0,t.jsxs)(r.p,{children:["This time the container starts without error messages and I am able to query the ",(0,t.jsx)(r.strong,{children:"NTS"})," service without an TLS error message:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"docker exec -ti chrony chronyd -Q -t 3 'server my.server.domain iburst nts maxsamples 1'\r\n\r\n2022-09-21T10:29:37Z chronyd version 4.1 starting (+CMDMON +NTP +REFCLOCK +RTC +PRIVDROP -SCFILTER +SIGND +ASYNCDNS +NTS +SECHASH +IPV6 -DEBUG)\r\n2022-09-21T10:29:37Z Disabled control of system clock\r\n2022-09-21T10:29:40Z chronyd exiting\n"})}),"\n",(0,t.jsxs)(r.p,{children:["Checking the server stats tells me that he accepted the ",(0,t.jsx)(r.strong,{children:"NTS connection"})," and received an ",(0,t.jsx)(r.strong,{children:"authenticated NTP"})," package - looks alright?"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"docker exec -ti chrony chronyc serverstats\r\n\r\nNTP packets received       : 1\r\nNTP packets dropped        : 0\r\nCommand packets received   : 4\r\nCommand packets dropped    : 0\r\nClient log records dropped : 0\r\nNTS-KE connections accepted: 1\r\nNTS-KE connections dropped : 0\r\nAuthenticated NTP packets  : 1\n"})}),"\n",(0,t.jsx)(r.h2,{id:"public-nts-capable-servers",children:"Public NTS-capable servers"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["Github ",(0,t.jsx)(r.a,{href:"https://github.com/jauderho",children:"@jauderho"}),": ",(0,t.jsx)(r.a,{href:"https://github.com/jauderho/nts-servers",children:"NTP servers with NTS support"})]}),"\n"]}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Location/Country"}),(0,t.jsx)(r.th,{children:"Servers"}),(0,t.jsx)(r.th,{children:"Notes"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Global"}),(0,t.jsx)(r.td,{children:"time.cloudflare.com"}),(0,t.jsx)(r.td,{children:"Anycast"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Brasil"}),(0,t.jsx)(r.td,{children:"a\u2026d.st1.ntp.br"}),(0,t.jsx)(r.td,{})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Canada"}),(0,t.jsx)(r.td,{children:"time.0xt.ca"}),(0,t.jsx)(r.td,{children:"Tanner Ryan"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Germany"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"https://www.ptb.de/cms/en/ptb/fachabteilungen/abtq/gruppe-q4/ref-q42/time-synchronization-of-computers-using-the-network-time-protocol-ntp.html",children:"ptbtime1\u20264.ptb.de"})}),(0,t.jsx)(r.td,{})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Germany"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"https://ntstime.de/",children:"ntstime.de"})}),(0,t.jsx)(r.td,{children:"Patrick Jansen"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Germany"}),(0,t.jsxs)(r.td,{children:[(0,t.jsx)(r.a,{href:"http://www.jabber-germany.de",children:"www.jabber-germany.de"})," ",(0,t.jsx)(r.a,{href:"http://www.masters-of-cloud.de",children:"www.masters-of-cloud.de"})]}),(0,t.jsx)(r.td,{children:"J\xf6rg Morbitzer"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Germany"}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.a,{href:"https://www.rrze.fau.de/serverdienste/infrastruktur/zeitserver/",children:"ntp0.fau.de, ntp0.ipv6.fau.de, ntp3.fau.de, ntp3.ipv6.fau.de"})}),(0,t.jsx)(r.td,{children:"\u22643 clients per user/org; DCF77"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Netherlands"}),(0,t.jsx)(r.td,{children:"ntppool1\u20262.time.nl"}),(0,t.jsx)(r.td,{})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Singapore"}),(0,t.jsx)(r.td,{children:"ntpmon.dcs1.biz"}),(0,t.jsx)(r.td,{children:"Sanjeev Gupta"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Sweden"}),(0,t.jsx)(r.td,{children:"nts.netnod.se"}),(0,t.jsx)(r.td,{children:"Anycast"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Sweden"}),(0,t.jsx)(r.td,{children:"sth1\u20262.nts.netnod.se"}),(0,t.jsx)(r.td,{children:"STH area use only"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Switzerland"}),(0,t.jsx)(r.td,{children:"(Zurich)"}),(0,t.jsx)(r.td,{children:"ntp.3eck.net"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Switzerland (Winterthur"}),(0,t.jsx)(r.td,{children:"ntp.trifence.ch ntp.zeitgitter.net"}),(0,t.jsx)(r.td,{children:"Marcel Waldvogel"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"Switzerland (Ticino)"}),(0,t.jsx)(r.td,{children:"time.signorini.ch"}),(0,t.jsx)(r.td,{children:"Attilio Signorini (Dynamic, Chrony-only)"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:"USA"}),(0,t.jsxs)(r.td,{children:[(0,t.jsx)(r.code,{children:"{virginia,ohio,oregon}"}),".time.system76.com"]}),(0,t.jsx)(r.td,{children:"Mike Cifelli"})]})]})]})]})}function h(e={}){const{wrapper:r}={...(0,s.ah)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},603905:(e,r,n)=>{n.d(r,{ah:()=>l});var t=n(667294);function s(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function c(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){s(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function o(e,r){if(null==e)return{};var n,t,s=function(e,r){if(null==e)return{};var n,t,s={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(s[n]=e[n]);return s}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var a=t.createContext({}),l=function(e){var r=t.useContext(a),n=r;return e&&(n="function"==typeof e?e(r):c(c({},r),e)),n},d={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},h=t.forwardRef((function(e,r){var n=e.components,s=e.mdxType,i=e.originalType,a=e.parentName,h=o(e,["components","mdxType","originalType","parentName"]),p=l(n),u=s,m=p["".concat(a,".").concat(u)]||p[u]||d[u]||i;return n?t.createElement(m,c(c({ref:r},h),{},{components:n})):t.createElement(m,c({ref:r},h))}));h.displayName="MDXCreateElement"},691265:(e,r,n)=>{n.d(r,{Z:()=>t});const t=n.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-ec671595d585b88a85b017a7908fb619.jpg"}}]);