"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[95031],{11824:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var n=o(785893),i=o(603905);const a={sidebar_position:7e3,slug:"2022-07-16",title:"OpenHab - MQTT Homie Convention",authors:"mpolinowski",tags:["IoT"],image:"https://mpolinowski.github.io/img/search/mqtt.png",description:"I want to use OpenHab 3 to explore how to configure devices using the Homie Convention with the goal of adding this feature to INSTAR MQTT cameras. I already set-up the OpenHab MQTT Binding which supports the convention. So all I have to do is to add a few configuration topics to register a Homie Device with our MQTT broker using the MQTT Explorer."},r=void 0,s={id:"Automation_and_Robotics/Home_Automation/2022-07-16-openhab-mqtt-homie/index",title:"OpenHab - MQTT Homie Convention",description:"I want to use OpenHab 3 to explore how to configure devices using the Homie Convention with the goal of adding this feature to INSTAR MQTT cameras. I already set-up the OpenHab MQTT Binding which supports the convention. So all I have to do is to add a few configuration topics to register a Homie Device with our MQTT broker using the MQTT Explorer.",source:"@site/docs/Automation_and_Robotics/Home_Automation/2022-07-16-openhab-mqtt-homie/index.md",sourceDirName:"Automation_and_Robotics/Home_Automation/2022-07-16-openhab-mqtt-homie",slug:"/Automation_and_Robotics/Home_Automation/2022-07-16-openhab-mqtt-homie/2022-07-16",permalink:"/docs/Automation_and_Robotics/Home_Automation/2022-07-16-openhab-mqtt-homie/2022-07-16",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Automation_and_Robotics/Home_Automation/2022-07-16-openhab-mqtt-homie/index.md",tags:[{label:"IoT",permalink:"/docs/tags/io-t"}],version:"current",sidebarPosition:7e3,frontMatter:{sidebar_position:7e3,slug:"2022-07-16",title:"OpenHab - MQTT Homie Convention",authors:"mpolinowski",tags:["IoT"],image:"https://mpolinowski.github.io/img/search/mqtt.png",description:"I want to use OpenHab 3 to explore how to configure devices using the Homie Convention with the goal of adding this feature to INSTAR MQTT cameras. I already set-up the OpenHab MQTT Binding which supports the convention. So all I have to do is to add a few configuration topics to register a Homie Device with our MQTT broker using the MQTT Explorer."},sidebar:"tutorialSidebar",previous:{title:"Grafana IoT Dashboard",permalink:"/docs/Automation_and_Robotics/Home_Automation/2022-12-22--grafana-for-iot/2022-12-22"},next:{title:"Node-RED - MQTT Homie Convention",permalink:"/docs/Automation_and_Robotics/Home_Automation/2022-07-15-node-red-mqtt-homie/2022-07-15"}},c={},d=[{value:"Communication according to the MQTT HOMIE Convention",id:"communication-according-to-the-mqtt-homie-convention",level:2},{value:"Adding a Thing",id:"adding-a-thing",level:2}];function h(e){const t={a:"a",blockquote:"blockquote",code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.ah)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"Abashiri, Japan",src:o(750506).Z+"",width:"1500",height:"594"})}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"#communication-according-to-the-mqtt-homie-convention",children:"Communication according to the MQTT HOMIE Convention"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"#adding-a-thing",children:"Adding a Thing"})}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"communication-according-to-the-mqtt-homie-convention",children:"Communication according to the MQTT HOMIE Convention"}),"\n",(0,n.jsx)(t.p,{children:"The Homie convention defines a standardized way of how IoT devices and services announce themselves and their data on the MQTT broker. It is thereby a crucial aspect on top of the MQTT protocol for automatic discovery, configuration and usage of devices and services."}),"\n",(0,n.jsxs)(t.p,{children:["Devices that follow the Homie convention ",(0,n.jsx)(t.strong,{children:"3.x"})," and better are auto-discovered and represented by this binding and the Homie Thing."]}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:["Details of the homie convention are available here ",(0,n.jsx)(t.a,{href:"https://homieiot.github.io/",children:"Homie IoT"}),"."]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["I want to use OpenHab 3 to explore how to configure devices using the ",(0,n.jsx)(t.strong,{children:"Homie Convention"})," with the goal of adding this feature to INSTAR MQTT cameras. I already set-up the ",(0,n.jsx)(t.a,{href:"/docs/IoT-and-Machine-Learning/Home_Automation/2020-12-02--openhab3-mqtt-binding/2020-12-02",children:"OpenHab MQTT Binding"})," which supports the convention. So all I have to do is to add a few configuration topics to register a ",(0,n.jsx)(t.strong,{children:"Homie Device"})," with our MQTT broker using the MQTT Explorer:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"# Thing Definition\nhomie/TestDevices/$homie \u2192 4.0.0\nhomie/TestDevices/$name \u2192 This is a Test\nhomie/TestDevices/$state \u2192 ready # init,ready,disconnected,sleeping,lost,alert\nhomie/TestDevices/$extensions \u2192 ''\nhomie/TestDevices/$nodes \u2192 my_thermostat\n# Channel Definition\nhomie/TestDevices/my_thermostat/$name \u2192 My Thermostat\nhomie/TestDevices/my_thermostat/$properties \u2192 temperature\n# Channel Properties\nhomie/TestDevices/my_thermostat/temperature \u2192 22 \nhomie/TestDevices/my_thermostat/temperature/$name \u2192 Temperature\nhomie/TestDevices/my_thermostat/temperature/$unit \u2192 \xb0C\nhomie/TestDevices/my_thermostat/temperature/$datatype \u2192 integer  # integer, float, boolean, string, enum, color\nhomie/TestDevices/my_thermostat/temperature/$settable \u2192 true\n"})}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"OpenHab for MQTT communication according to the MQTT HOMIE convention",src:o(323165).Z+"",width:"1019",height:"598"})}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:["It is important to add the ",(0,n.jsx)(t.strong,{children:"retain"})," flag to all topics. Otherwise the device will not be picked up by the Homie service!"]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"adding-a-thing",children:"Adding a Thing"}),"\n",(0,n.jsxs)(t.p,{children:["Starting up OpenHab I already see that a new ",(0,n.jsx)(t.strong,{children:"Thing"})," was discovered and only needs to be added:"]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"OpenHab for MQTT communication according to the MQTT HOMIE convention",src:o(191548).Z+"",width:"1052",height:"674"})}),"\n",(0,n.jsxs)(t.p,{children:["As configured, the ",(0,n.jsx)(t.strong,{children:"Thing"})," comes with temperature ",(0,n.jsx)(t.strong,{children:"Channel"})," configured that we just have to assign to an ",(0,n.jsx)(t.strong,{children:"Item"}),":"]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"OpenHab for MQTT communication according to the MQTT HOMIE convention",src:o(627237).Z+"",width:"1071",height:"459"})}),"\n",(0,n.jsx)(t.p,{children:"Create a new Item for the temperature channel:"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"OpenHab for MQTT communication according to the MQTT HOMIE convention",src:o(975150).Z+"",width:"1073",height:"548"})}),"\n",(0,n.jsxs)(t.p,{children:["And just like this, our ",(0,n.jsx)(t.strong,{children:"Item"})," is receiving updates from the auto-configured Homie device:"]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"OpenHab for MQTT communication according to the MQTT HOMIE convention",src:o(667669).Z+"",width:"1339",height:"737"})}),"\n",(0,n.jsxs)(t.p,{children:["Navigate to ",(0,n.jsx)(t.strong,{children:"Pages"})," and click on the block where you would like to add the sensor read-out:"]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"OpenHab for MQTT communication according to the MQTT HOMIE convention",src:o(876575).Z+"",width:"1032",height:"783"})}),"\n",(0,n.jsxs)(t.p,{children:["We can add the ",(0,n.jsx)(t.strong,{children:"Item"})," to a page as a ",(0,n.jsx)(t.strong,{children:"Cell"})," with a ",(0,n.jsx)(t.strong,{children:"Trend Line Item"}),":"]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"OpenHab for MQTT communication according to the MQTT HOMIE convention",src:o(81049).Z+"",width:"1020",height:"574"})})]})}function m(e={}){const{wrapper:t}={...(0,i.ah)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},603905:(e,t,o)=>{o.d(t,{ah:()=>d});var n=o(667294);function i(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function r(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){i(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,n,i=function(e,t){if(null==e)return{};var o,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(i[o]=e[o]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}var c=n.createContext({}),d=function(e){var t=n.useContext(c),o=t;return e&&(o="function"==typeof e?e(t):r(r({},t),e)),o},h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var o=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),l=d(o),p=i,u=l["".concat(c,".").concat(p)]||l[p]||h[p]||a;return o?n.createElement(u,r(r({ref:t},m),{},{components:o})):n.createElement(u,r({ref:t},m))}));m.displayName="MDXCreateElement"},323165:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/OpenHab--Homie-MQTT-Auto-Discovery_01-9197a8a6df1a548612c2257023080be6.png"},191548:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/OpenHab--Homie-MQTT-Auto-Discovery_02-20cd8cdcaed5a5edb84c20e4e19b143c.png"},627237:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/OpenHab--Homie-MQTT-Auto-Discovery_03-bfbe63908b0cfce075e6f5b6e60db081.png"},975150:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/OpenHab--Homie-MQTT-Auto-Discovery_04-50309a166570d52ebe40bf2a5d231617.png"},667669:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/OpenHab--Homie-MQTT-Auto-Discovery_05-fb9e5fb490ddfe39dd78f2e8116edd3b.png"},876575:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/OpenHab--Homie-MQTT-Auto-Discovery_06-d4b036e8d4ad599541d802e74177a865.png"},81049:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/OpenHab--Homie-MQTT-Auto-Discovery_07-58a53f0de9dfa5988c50f47937317df5.png"},750506:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-877ed54046c637e78f96cc6a07569d43.jpg"}}]);