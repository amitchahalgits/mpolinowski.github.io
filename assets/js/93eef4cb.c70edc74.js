"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[680],{357106:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>c});var i=l(474848),a=l(28453);const r={sidebar_position:1e4,slug:"2020-07-26",title:"Securing Webservers - FirewallD and fail2ban",authors:"mpolinowski",tags:["LINUX","Security","FirewallD","fail2ban"]},s=void 0,t={id:"DevOps/Security/2020-07-26--firewalld-configuration/index",title:"Securing Webservers - FirewallD and fail2ban",description:"TST, Hong Kong",source:"@site/docs/DevOps/Security/2020-07-26--firewalld-configuration/index.md",sourceDirName:"DevOps/Security/2020-07-26--firewalld-configuration",slug:"/DevOps/Security/2020-07-26--firewalld-configuration/2020-07-26",permalink:"/docs/DevOps/Security/2020-07-26--firewalld-configuration/2020-07-26",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Security/2020-07-26--firewalld-configuration/index.md",tags:[{label:"LINUX",permalink:"/docs/tags/linux"},{label:"Security",permalink:"/docs/tags/security"},{label:"FirewallD",permalink:"/docs/tags/firewall-d"},{label:"fail2ban",permalink:"/docs/tags/fail-2-ban"}],version:"current",sidebarPosition:1e4,frontMatter:{sidebar_position:1e4,slug:"2020-07-26",title:"Securing Webservers - FirewallD and fail2ban",authors:"mpolinowski",tags:["LINUX","Security","FirewallD","fail2ban"]},sidebar:"tutorialSidebar",previous:{title:"Securing Webservers - FirewallD Deployment on CentOS7",permalink:"/docs/DevOps/Security/2020-07-27--firewalld-deployment-centos7/2020-07-27"},next:{title:"Linux",permalink:"/docs/category/linux"}},d={},c=[{value:"FirewallD",id:"firewalld",level:2},{value:"How to install FirewallD",id:"how-to-install-firewalld",level:3},{value:"Ubuntu",id:"ubuntu",level:4},{value:"CentOS",id:"centos",level:4},{value:"How to configure FirewallD",id:"how-to-configure-firewalld",level:3},{value:"Zones",id:"zones",level:4},{value:"Services",id:"services",level:4},{value:"Ports",id:"ports",level:4},{value:"Panic Mode",id:"panic-mode",level:4},{value:"IP Address",id:"ip-address",level:4},{value:"Prevent Bruteforce SSH attacks",id:"prevent-bruteforce-ssh-attacks",level:4},{value:"Create a Blacklist",id:"create-a-blacklist",level:4},{value:"Block and Enable ICMP",id:"block-and-enable-icmp",level:4},{value:"Lockdown Rules",id:"lockdown-rules",level:4},{value:"fail2ban-firewalld",id:"fail2ban-firewalld",level:4},{value:"fail2ban",id:"fail2ban",level:2},{value:"Blacklisting Script and Configuration",id:"blacklisting-script-and-configuration",level:2}];function o(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"TST, Hong Kong",src:l(921024).A+"",width:"1500",height:"517"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#firewalld",children:"FirewallD"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#how-to-install-firewalld",children:"How to install FirewallD"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#ubuntu",children:"Ubuntu"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#centos",children:"CentOS"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#how-to-configure-firewalld",children:"How to configure FirewallD"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#zones",children:"Zones"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#services",children:"Services"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#ports",children:"Ports"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#panic-mode",children:"Panic Mode"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#ip-address",children:"IP Address"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#prevent-bruteforce-ssh-attacks",children:"Prevent Bruteforce SSH attacks"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#create-a-blacklist",children:"Create a Blacklist"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#block-and-enable-icmp",children:"Block and Enable ICMP"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#lockdown-rules",children:"Lockdown Rules"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#fail2ban-firewalld",children:"fail2ban-firewalld"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#fail2ban",children:"fail2ban"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#blacklisting-script-and-configuration",children:"Blacklisting Script and Configuration"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"firewalld",children:"FirewallD"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"http://www.firewalld.org/",children:"FirewallD"})," provides a dynamically managed firewall with support for network/firewall zones that defines the trust level of network connections or interfaces. It has support for IPv4, IPv6 firewall settings, ethernet bridges and IP sets. There is a separation of runtime and permanent configuration options. It also provides an interface for services or applications to add firewall rules directly. It has following features:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Timed firewall rules"}),"\n",(0,i.jsx)(n.li,{children:"IPv4 and IPv6 NAT support"}),"\n",(0,i.jsx)(n.li,{children:"Firewall zones"}),"\n",(0,i.jsx)(n.li,{children:"IP set support"}),"\n",(0,i.jsx)(n.li,{children:"Simple log of denied packets"}),"\n",(0,i.jsx)(n.li,{children:"Direct interface"}),"\n",(0,i.jsx)(n.li,{children:"Lockdown: Whitelisting of applications that may modify the firewall"}),"\n",(0,i.jsx)(n.li,{children:"Support for iptables, ip6tables, ebtables and ipset firewall backends"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"how-to-install-firewalld",children:"How to install FirewallD"}),"\n",(0,i.jsx)(n.p,{children:"Before installing FirewallD, please make sure you stop iptables and also make sure that iptables are not using or working anymore. To do so:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl stop iptables\r\nsudo systemctl mask iptables\r\nsudo systemctl status iptables\n"})}),"\n",(0,i.jsx)(n.h4,{id:"ubuntu",children:"Ubuntu"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo apt-get remove ufw\r\nsudo apt-get install firewall-applet\n"})}),"\n",(0,i.jsx)(n.h4,{id:"centos",children:"CentOS"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo yum install firewalld firewall-config -y\n"})}),"\n",(0,i.jsx)(n.h3,{id:"how-to-configure-firewalld",children:"How to configure FirewallD"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl enable --now firewalld\r\nsudo systemctl status firewalld\n"})}),"\n",(0,i.jsx)(n.h4,{id:"zones",children:"Zones"}),"\n",(0,i.jsx)(n.p,{children:"Firewall-cmd uses zones as presets, giving you sane defaults to choose from. Doing this saves you from having to build a firewall from scratch. Zones apply to a network interface, so on a server with two ethernet interfaces, you may have one zone governing one ethernet interface, and a different zone governing the other."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo firewall-cmd --get-active-zones\r\nsudo firewall-cmd --get-zones\r\nsudo firewall-cmd --get-default-zone\n"})}),"\n",(0,i.jsx)(n.p,{children:"Setting Default Zone:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo firewall-cmd --set-default-zone=public\r\nsudo firewall-cmd --reload\r\nsudo firewall-cmd --get-default-zone\n"})}),"\n",(0,i.jsx)(n.p,{children:"Assigning a zone to an interface:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"firewall-cmd --change-interface ens3 --zone public --permanent\r\n\r\nThe interface is under control of NetworkManager, setting zone to 'public'.\r\nsuccess\n"})}),"\n",(0,i.jsx)(n.h4,{id:"services",children:"Services"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo firewall-cmd --get-services\n"})}),"\n",(0,i.jsx)(n.p,{children:"Adding a Service to the Public Zone:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo firewall-cmd --zone=public --add-service=http\r\nsudo firewall-cmd --zone=public --add-service=https\r\nsudo firewall-cmd --zone=public --add-service=ftp\r\nsudo firewall-cmd --zone=public --add-service=smtp\r\nsudo firewall-cmd --reload\r\n\r\nsudo firewall-cmd --zone=public --remove-service=ftp\r\nsudo firewall-cmd --zone=public --remove-service=smtp\r\nsudo firewall-cmd --reload\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Add the ",(0,i.jsx)(n.code,{children:"--permanent"})," option to make your rules permanent."]}),"\n",(0,i.jsx)(n.h4,{id:"ports",children:"Ports"}),"\n",(0,i.jsx)(n.p,{children:"Adding a Port to the Public Zone:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo firewall-cmd --permanent --zone=public --add-port=80/tcp\r\nsudo firewall-cmd --reload\r\n\r\nsudo firewall-cmd --zone=public --list-ports\r\nsudo firewall-cmd --zone=public --list-all\r\nsudo firewall-cmd --zone=public --remove-port=80/tcp\r\nsudo firewall-cmd --reload\n"})}),"\n",(0,i.jsx)(n.p,{children:"Adding multiple ports:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"firewall-cmd --permanent --add-port={80/tcp,443/tcp,9200/tcp,5601/tcp,5044/tcp}\r\nfirewall-cmd --permanent --add-port=60000-61000/udp\r\nfirewall-cmd --reload\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Add the ",(0,i.jsx)(n.code,{children:"--permanent"})," option to make your rules permanent."]}),"\n",(0,i.jsx)(n.h4,{id:"panic-mode",children:"Panic Mode"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo firewall-cmd --panic-on\r\nsudo firewall-cmd --panic-off\n"})}),"\n",(0,i.jsx)(n.h4,{id:"ip-address",children:"IP Address"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'sudo firewall-cmd --zone=public --add-rich-rule=\'rule family="ipv4" source address="192.168.1.4" accept\'\r\nsudo firewall-cmd --zone=public --add-rich-rule=\'rule family="ipv4" source address="192.168.1.5" reject\'\r\nsudo firewall-cmd --reload\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Add the ",(0,i.jsx)(n.code,{children:"--permanent"})," option to make your rules permanent."]}),"\n",(0,i.jsx)(n.h4,{id:"prevent-bruteforce-ssh-attacks",children:"Prevent Bruteforce SSH attacks"}),"\n",(0,i.jsx)(n.p,{children:"Reject new incoming ipv4 connections when more than 2 attempts per minute are made. It will also log a message about this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'firewall-cmd --add-rich-rule=\'rule family="ipv4" service name="ssh" log prefix="SSH Bruteforce:" level="warning" limit value="2/m" accept limit value="2/m"\'\n'})}),"\n",(0,i.jsx)(n.p,{children:"If you have both ipv4 and ipv6 configured you\u2019ll probably want the more generic version:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'firewall-cmd --add-rich-rule=\'rule service name="ssh" log prefix="SSH Bruteforce:" level="warning" limit value="2/m" accept limit value="2/m"\'\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Add the ",(0,i.jsx)(n.code,{children:"--permanent"})," option to make your rules permanent."]}),"\n",(0,i.jsx)(n.h4,{id:"create-a-blacklist",children:"Create a Blacklist"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"firewall-cmd --permanent --new-ipset=blacklist --type=hash:net --option=family=inet --option=hashsize=4096 --option=maxelem=200000\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"\u2013permanent"})," = use to make changes to the permanent configuration"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"\u2013new-ipset"})," = name of the new IP/net blacklist"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"\u2013type"}),' = storage hash type, "net" is for subnets, while "ip" for individual ip addresses']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"\u2013option=family"})," = IPv4 or IPv6 network, inet is for IPv4"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"\u2013option=hashsize"})," = the initial hash size of the list"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"\u2013option=maxelem"})," = max number of elements"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://www.ipdeny.com/ipblocks/",children:"Download net blocks"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"wget https://www.ipdeny.com/ipblocks/data/aggregated/ru-aggregated.zone\r\ntar -vxzf all-zones.tar.gz\n"})}),"\n",(0,i.jsx)(n.p,{children:"Populate the blacklist:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"firewall-cmd --permanent --ipset=blacklist --add-entries-from-file=./ru-aggregated.zone\n"})}),"\n",(0,i.jsx)(n.p,{children:"To add individual IP addresses or net blocks by yourself:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"firewall-cmd --permanent --ipset=blacklist --add-entry=4.46.116.112\r\nfirewall-cmd --ipset=blacklist --add-entry=4.46.116.112\n"})}),"\n",(0,i.jsx)(n.p,{children:"Redirect the blacklist to the drop zone"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"firewall-cmd --permanent --zone=drop --add-source=ipset:blacklist\r\nfirewall-cmd --reload\n"})}),"\n",(0,i.jsx)(n.h4,{id:"block-and-enable-icmp",children:"Block and Enable ICMP"}),"\n",(0,i.jsx)(n.p,{children:"First, check the type of icmp we are using with below command."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"firewall-cmd --get-icmptypes\n"})}),"\n",(0,i.jsx)(n.p,{children:"To add icmp block on any zone, you can use the following command. For example, here I am going to add icmp block on external zone, before blocking, just do a icmp ping to confirm the status of icmp block."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"firewall-cmd --zone=public --query-icmp-block=echo-reply\n"})}),"\n",(0,i.jsx)(n.p,{children:'If you get "no", that means there isn\u2019t any icmp block applied, let\u2019s enable (block) icmp.'}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"firewall-cmd --zone=public --add-icmp-block=echo-reply\n"})}),"\n",(0,i.jsx)(n.h4,{id:"lockdown-rules",children:"Lockdown Rules"}),"\n",(0,i.jsx)(n.p,{children:"It\u2019s possible to change the firewalld rules by any local applications, which have the root privileges. To avoid making changes to firewalld rules, we have to put a lock-down in \u2018firewalld.conf\u2018 file. This mostly used to protect the firewalld from any unwanted rules changes by any applications."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"nano /etc/firewalld/firewalld.conf\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cfg",children:"Lockdown=yes\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"firewall-cmd --reload\r\nfirewall-cmd --query-lockdown\n"})}),"\n",(0,i.jsx)(n.p,{children:"To On/Off lockdown mode, use the following combination."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"firewall-cmd --lockdown-on\r\nfirewall-cmd --lockdown-off\n"})}),"\n",(0,i.jsx)(n.h4,{id:"fail2ban-firewalld",children:"fail2ban-firewalld"}),"\n",(0,i.jsxs)(n.p,{children:["Configure ",(0,i.jsx)(n.a,{href:"https://fedoraproject.org/wiki/Fail2ban_with_FirewallD#fail2ban-firewalld",children:"fail2ban"})," (",(0,i.jsx)(n.strong,{children:"see below"}),") to block hosts via firewalld."]}),"\n",(0,i.jsx)(n.h2,{id:"fail2ban",children:"fail2ban"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://www.fail2ban.org/wiki/index.php/Main_Page",children:"fail2ban"})," is a daemon to ban hosts that cause multiple authentication errors."]}),"\n",(0,i.jsx)(n.p,{children:"fail2ban will monitor the SystemD journal to look for failed authentication attempts for whichever jails have been enabled. After the number of failed attempts specified it will add a firewall rule to block that specific IP address for an amount of time configured."}),"\n",(0,i.jsxs)(n.p,{children:["Start by ",(0,i.jsx)(n.a,{href:"https://www.fail2ban.org/wiki/index.php/Downloads",children:"installing the package"})," on your system - ",(0,i.jsx)(n.a,{href:"https://packages.debian.org/stable/net/fail2ban",children:"Debian"}),", ",(0,i.jsx)(n.a,{href:"https://packages.ubuntu.com/search?keywords=fail2ban",children:"Ubuntu"})," or on Centos through EPEL."]}),"\n",(0,i.jsx)(n.p,{children:"Once installed the next step is to configure a jail (a service you want to monitor and ban at whatever thresholds you\u2019ve set). By default IPs are banned for 1 hour. The best practice is to override the system defaults using _.local files instead of directly modifying the _.config files:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cfg",children:'# cat /etc/fail2ban/jail.local\r\n[DEFAULT]\r\n\r\n# "bantime" is the number of seconds that a host is banned.\r\nbantime  = 1d\r\n\r\n# A host is banned if it has generated "maxretry" during the last "findtime"\r\nfindtime  = 1h\r\n\r\n# "maxretry" is the number of failures before a host get banned.\r\nmaxretry = 5\n'})}),"\n",(0,i.jsx)(n.p,{children:"After 5 attempts within the last hour the IP will be blocked for 1 day."}),"\n",(0,i.jsxs)(n.p,{children:["The next step is to configure a jail. In this tutorial sshd is shown but the steps are more or less the same for other services. Create a configuration file inside ",(0,i.jsx)(n.code,{children:"/etc/fail2ban/jail.d"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# cat /etc/fail2ban/jail.d/sshd.local\r\n[sshd]\r\nenabled = true\n"})}),"\n",(0,i.jsx)(n.p,{children:"Next enable and start the fail2ban service."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl enable --now fail2ban\r\nsudo systemctl status fail2ban\n"})}),"\n",(0,i.jsx)(n.p,{children:"to check the status of fail2ban and make sure the jail is enabled enter:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo fail2ban-client status\r\n\r\nStatus\r\n|- Number of jail:\t1\r\n`- Jail list:\tsshd\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo fail2ban-client status sshd\r\nStatus for the jail: sshd\r\n|- Filter\r\n|  |- Currently failed:\t8\r\n|  |- Total failed:\t4399\r\n|  `- Journal matches:\t_SYSTEMD_UNIT=sshd.service + _COMM=sshd\r\n`- Actions\r\n   |- Currently banned:\t101\r\n   |- Total banned:\t684\r\n   `- Banned IP list:   ...\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo tail -f /var/log/fail2ban.log\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Check IP address geo location and add country ban lists where necessary ",(0,i.jsx)(n.code,{children:"whois ip-addrss | grep -i country"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"blacklisting-script-and-configuration",children:"Blacklisting Script and Configuration"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.a,{href:"https://fedoramagazine.org/protect-your-system-with-fail2ban-and-firewalld-blacklists/",children:"following script"})," to automate the process as much as possible:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\r\n# Based on the below article\r\n# https://www.linode.com/community/questions/11143/top-tip-firewalld-and-ipset-country-blacklist\r\n\r\n# Source the blacklisted countries from the configuration file\r\n. /etc/blacklist-by-country\r\n\r\n# Create a temporary working directory\r\nipdeny_tmp_dir=$(mktemp -d -t blacklist-XXXXXXXXXX)\r\npushd $ipdeny_tmp_dir\r\n\r\n# Download the latest network addresses by country file\r\ncurl -LO http://www.ipdeny.com/ipblocks/data/countries/all-zones.tar.gz\r\ntar xf all-zones.tar.gz\r\n\r\n# For updates, remove the ipset blacklist and recreate\r\nif firewall-cmd -q --zone=drop --query-source=ipset:blacklist; then\r\n    firewall-cmd -q --permanent --delete-ipset=blacklist\r\nfi\r\n\r\n# Create the ipset blacklist which accepts both IP addresses and networks\r\nfirewall-cmd -q --permanent --new-ipset=blacklist --type=hash:net \\\r\n    --option=family=inet --option=hashsize=4096 --option=maxelem=200000 \\\r\n    --set-description="An ipset list of networks or ips to be dropped."\r\n\r\n# Add the address ranges by country per ipdeny.com to the blacklist\r\nfor country in $countries; do\r\n    firewall-cmd -q --permanent --ipset=blacklist \\\r\n        --add-entries-from-file=./$country.zone && \\\r\n        echo "Added $country to blacklist ipset."\r\ndone\r\n\r\n# Block individual IPs if the configuration file exists and is not empty\r\nif [ -s "/etc/blacklist-by-ip" ]; then\r\n    echo "Adding IPs blacklists."\r\n    firewall-cmd -q --permanent --ipset=blacklist \\\r\n        --add-entries-from-file=/etc/blacklist-by-ip && \\\r\n        echo "Added IPs to blacklist ipset."\r\nfi\r\n\r\n# Add the blacklist ipset to the drop zone if not already setup\r\nif firewall-cmd -q --zone=drop --query-source=ipset:blacklist; then\r\n    echo "Blacklist already in firewalld drop zone."\r\nelse\r\n    echo "Adding ipset blacklist to firewalld drop zone."\r\n    firewall-cmd --permanent --zone=drop --add-source=ipset:blacklist\r\nfi\r\n\r\nfirewall-cmd -q --reload\r\n\r\npopd\r\nrm -rf $ipdeny_tmp_dir\n'})}),"\n",(0,i.jsxs)(n.p,{children:["This should be installed to ",(0,i.jsx)(n.code,{children:"/usr/local/sbin"})," and don\u2019t forget to make it executable!"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo chmod +x /usr/local/sbin/firewalld-blacklist\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Then create a configure file: ",(0,i.jsx)(n.code,{children:"/etc/blacklist-by-country"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Which countries should be blocked?\r\n# Use the two letter designation separated by a space.\r\ncountries=""\n'})}),"\n",(0,i.jsxs)(n.p,{children:["And another configuration file ",(0,i.jsx)(n.code,{children:"/etc/blacklist-by-ip"}),", which is just one IP per line without any additional formatting."]}),"\n",(0,i.jsx)(n.p,{children:"For this example 10 random countries were selected from the ipdeny zones:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# ls | shuf -n 10 | sed \"s/\\.zone//g\" | tr '\\n' ' '\r\nnl ee ie pk is sv na om gp bn\n"})}),"\n",(0,i.jsx)(n.p,{children:"Now as long as at least one country has been added to the config file it\u2019s ready to run!"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo firewalld-blacklist\r\nsudo firewall-cmd --info-zone=drop\r\nsudo firewall-cmd --info-ipset=blacklist | less\n"})}),"\n",(0,i.jsxs)(n.p,{children:["See also - auto blacklist updates: ",(0,i.jsx)(n.a,{href:"https://pagure.io/firewalld-blacklist/tree/master",children:"https://pagure.io/firewalld-blacklist/tree/master"})]}),"\n",(0,i.jsxs)(n.p,{children:["download the service file and timer to ",(0,i.jsx)(n.code,{children:"/etc/systemd/system/"})," and enable the timer:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo systemctl daemon-reload\r\nsudo systemctl enable --now firewalld-blacklist.timer\n"})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},921024:(e,n,l)=>{l.d(n,{A:()=>i});const i=l.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-ec671595d585b88a85b017a7908fb619.jpg"},28453:(e,n,l)=>{l.d(n,{R:()=>s,x:()=>t});var i=l(296540);const a={},r=i.createContext(a);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);