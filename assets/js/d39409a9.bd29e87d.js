"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[69240],{236517:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=t(474848),s=t(28453);const a={sidebar_position:5895,slug:"2023-12-14",title:"React.js with Typescript 2023",authors:"mpolinowski",tags:["Javascript","React","Cheating"],description:"Looking into using Typescript in building React.js Frontends"},o=void 0,i={id:"Development/Javascript/2023-12-14-reactjs-typescript-2023/index",title:"React.js with Typescript 2023",description:"Looking into using Typescript in building React.js Frontends",source:"@site/docs/Development/Javascript/2023-12-14-reactjs-typescript-2023/index.md",sourceDirName:"Development/Javascript/2023-12-14-reactjs-typescript-2023",slug:"/Development/Javascript/2023-12-14-reactjs-typescript-2023/2023-12-14",permalink:"/docs/Development/Javascript/2023-12-14-reactjs-typescript-2023/2023-12-14",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Development/Javascript/2023-12-14-reactjs-typescript-2023/index.md",tags:[{label:"Javascript",permalink:"/docs/tags/javascript"},{label:"React",permalink:"/docs/tags/react"},{label:"Cheating",permalink:"/docs/tags/cheating"}],version:"current",sidebarPosition:5895,frontMatter:{sidebar_position:5895,slug:"2023-12-14",title:"React.js with Typescript 2023",authors:"mpolinowski",tags:["Javascript","React","Cheating"],description:"Looking into using Typescript in building React.js Frontends"},sidebar:"tutorialSidebar",previous:{title:"Simple Redux",permalink:"/docs/Development/Javascript/2023-12-15-reactjs-typescript-redux/2023-12-15"},next:{title:"Typescript DOM Webpack",permalink:"/docs/Development/Javascript/2023-06-13-typescript-dom-webpack/2023-06-13"}},l={},c=[{value:"Foundation",id:"foundation",level:2},{value:"Typescript Basics",id:"typescript-basics",level:2},{value:"Type Declaration",id:"type-declaration",level:3},{value:"Aliases",id:"aliases",level:3},{value:"Interfaces",id:"interfaces",level:3},{value:"Enumerations",id:"enumerations",level:3},{value:"React Typescript",id:"react-typescript",level:2},{value:"Effect Hook",id:"effect-hook",level:3},{value:"Data Fetching",id:"data-fetching",level:4},{value:"State Hook",id:"state-hook",level:3},{value:"Ref Hook",id:"ref-hook",level:3},{value:"Memo Hook",id:"memo-hook",level:3},{value:"Callback Hook",id:"callback-hook",level:3},{value:"Styling React",id:"styling-react",level:2},{value:"Vanilla CSS",id:"vanilla-css",level:3},{value:"Tailwind CSS",id:"tailwind-css",level:3},{value:"ShadCN UI",id:"shadcn-ui",level:4},{value:"Importing SVGs",id:"importing-svgs",level:4},{value:"React Router",id:"react-router",level:2},{value:"Route Parameter",id:"route-parameter",level:3},{value:"Lazy Loading",id:"lazy-loading",level:3},{value:"React Router Form",id:"react-router-form",level:3},{value:"Form Hooks",id:"form-hooks",level:3},{value:"Redux State Management",id:"redux-state-management",level:2},{value:"Store",id:"store",level:3},{value:"Select State",id:"select-state",level:3},{value:"Dispatch State Updates",id:"dispatch-state-updates",level:3},{value:"Working with User Roles",id:"working-with-user-roles",level:3},{value:"RESTful APIs",id:"restful-apis",level:2},{value:"Effect Fetching",id:"effect-fetching",level:3},{value:"Effect Posting",id:"effect-posting",level:3},{value:"React Router Data Loading",id:"react-router-data-loading",level:3},{value:"Video Embedding",id:"video-embedding",level:2},{value:"hls Streams",id:"hls-streams",level:3},{value:"Video File Playback",id:"video-file-playback",level:3}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"TST, Hongkong",src:t(792307).A+"",width:"2359",height:"864"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/mpolinowski/react-typescript",children:"Github Repository"})}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#foundation",children:"Foundation"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#typescript-basics",children:"Typescript Basics"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#type-declaration",children:"Type Declaration"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#aliases",children:"Aliases"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#interfaces",children:"Interfaces"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#enumerations",children:"Enumerations"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#react-typescript",children:"React Typescript"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#effect-hook",children:"Effect Hook"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#data-fetching",children:"Data Fetching"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#state-hook",children:"State Hook"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#ref-hook",children:"Ref Hook"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#memo-hook",children:"Memo Hook"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#callback-hook",children:"Callback Hook"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#styling-react",children:"Styling React"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#vanilla-css",children:"Vanilla CSS"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#tailwind-css",children:"Tailwind CSS"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#shadcn-ui",children:"ShadCN UI"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#importing-svgs",children:"Importing SVGs"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#react-router",children:"React Router"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#route-parameter",children:"Route Parameter"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#lazy-loading",children:"Lazy Loading"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#react-router-form",children:"React Router Form"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#form-hooks",children:"Form Hooks"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#redux-state-management",children:"Redux State Management"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#store",children:"Store"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#select-state",children:"Select State"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#dispatch-state-updates",children:"Dispatch State Updates"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#working-with-user-roles",children:"Working with User Roles"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#restful-apis",children:"RESTful APIs"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#effect-fetching",children:"Effect Fetching"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#effect-posting",children:"Effect Posting"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#react-router-data-loading",children:"React Router Data Loading"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#video-embedding",children:"Video Embedding"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#hls-streams",children:"hls Streams"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#video-file-playback",children:"Video File Playback"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"foundation",children:"Foundation"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://vitejs.dev/",children:"Vite.js"}),": ",(0,r.jsx)(n.code,{children:"npm create vite@latest react-ts -- --template react-swc-ts"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://tailwindcss.com/docs/installation",children:"TailwindCSS"}),": ",(0,r.jsx)(n.code,{children:"npm install -D tailwindcss postcss autoprefixer"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://ui.shadcn.com/docs/installation/vite",children:"ShadCN UI"}),": ",(0,r.jsx)(n.code,{children:"npx shadcn-ui@latest init"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://reactrouter.com/en/main",children:"React Router"}),": ",(0,r.jsx)(n.code,{children:"npm install react-router-dom"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://lucide.dev/guide/packages/lucide-react",children:"Lucide Icons"}),": ",(0,r.jsx)(n.code,{children:"npm install lucide-react"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://react-hook-form.com/",children:"Performant, flexible and extensible forms with easy-to-use validation."}),": ",(0,r.jsx)(n.code,{children:"npm install react-hook-form"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://redux-toolkit.js.org",children:"Redux State Management"}),": ",(0,r.jsx)(n.code,{children:"npm i @reduxjs/toolkit react-redux"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"typescript-basics",children:"Typescript Basics"}),"\n",(0,r.jsx)(n.h3,{id:"type-declaration",children:"Type Declaration"}),"\n",(0,r.jsx)(n.p,{children:"Assigning types when declaring variables:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"let flag: boolean;\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const numbers: number[] = [];\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"let lastOrder: Date | null;\nlastOrder = new Date();\n"})}),"\n",(0,r.jsxs)(n.p,{children:["In objects optional variables can be assigned types using a ",(0,r.jsx)(n.code,{children:"?"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'const productA: { name: string; unitPrice?: number } = {\n    name: "Product A",\n};\n'})}),"\n",(0,r.jsx)(n.p,{children:"Handling types in functions:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"function getTotal(\n    unitPrice: number,\n    quantity: number,\n    discount: number\n    ): number {\n        const priceWithoutDiscount = unitPrice * quantity;\n        const discountAmount = priceWithoutDiscount * discount;\n        return priceWithoutDiscount - discountAmount;\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Use ",(0,r.jsx)(n.code,{children:"unknown"})," instead of ",(0,r.jsx)(n.code,{children:"any"})," to be able to widen the type once it's type becomes defined:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'fetch("https://swapi.dev/api/people/1")\n  .then((response) => response.json())\n  .then((data: unknown) => {\n    if (isCharacter(data)) {\n      console.log("name", data.name);\n    }  \n  });\n\nfunction isCharacter(\n  character: any\n): character is { name: string } {\n  return "name" in character;\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Use ",(0,r.jsx)(n.code,{children:"void"})," instead of ",(0,r.jsx)(n.code,{children:"undefined"})," for functions that don't have a return statement:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"function logText(text: string): void {\n    console.log(text);\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Function with unreachable return statements should use ",(0,r.jsx)(n.code,{children:"never"})," instead:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"function taskLoop(taskName: string): never {\n    while (true) {\n        console.log(`${taskName} is running...`);\n    }\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"Working with classes:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'class Product {\n    constructor(public name: string, public unitPrice: number) {\n        this.name = name;\n        this.unitPrice = unitPrice;\n    }\n    getDiscountedPrice(discount: number): number {\n        return this.unitPrice - discount;\n    }\n}\n\nconst productA = new Product("Product A", 45);\nconsole.log(productA.getDiscountedPrice(5));\n'})}),"\n",(0,r.jsx)(n.h3,{id:"aliases",children:"Aliases"}),"\n",(0,r.jsx)(n.p,{children:"To clean-up the type declaration we can use aliases:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'type Product = { name: string; unitPrice?: number };\ntype DiscountedProduct = Product & { discount: number };\n\nlet productA: Product = { name: "Product A" };\nlet productB: DiscountedProduct = { name: "Product B", unitPrice: 299, discount: 15 };\n'})}),"\n",(0,r.jsx)(n.p,{children:"Using type aliases to represent functions:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type Purchase = (quantity: number) => void;\n\ntype Product = {\n    name: string;\n    unitPrice?: number;\n    purchase: Purchase;\n};\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'let productA: Product = {\n    name: "Product A",\n    purchase: (quantity) =>\n    console.log(`${quantity} Product A sold.`),\n};\n\ntable.purchase(4);\n'})}),"\n",(0,r.jsx)(n.h3,{id:"interfaces",children:"Interfaces"}),"\n",(0,r.jsx)(n.p,{children:"Interfaces instead of type aliases:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface Product {\n    name: string;\n    unitPrice?: number;\n}\n\ninterface DiscountedProduct extends Product {\n    discount: number;\n}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'interface Purchase {(quantity: number): void}\n\ninterface Product {\n    name: string;\n    unitPrice?: number;\n    purchase: Purchase;\n}\n\nlet productA: Product = {\n    name: "Product A",\n    purchase: (quantity) =>\n    console.log(`${quantity} Product A sold.`),\n};\n\nproductA.purchase(4);\n'})}),"\n",(0,r.jsx)(n.h3,{id:"enumerations",children:"Enumerations"}),"\n",(0,r.jsx)(n.p,{children:"You can use union types to declare sets of allowed names:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'type Colour = "red" | "green" | "blue";\n\nlet colour: Colour = "red";\nconsole.log(colour);\n'})}),"\n",(0,r.jsx)(n.p,{children:"Enumerations allow the declaration of sets like:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"enum Level {\n    Info,\n    Warning,\n    Error\n}\n\nlet level = Level.Info;\nconsole.log(level);\n\nlet level = Level[1];\nconsole.log(level);\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'enum Level {\n    Low = "L",\n    Medium = "M",\n    High = "H"\n}\n\nlet level = Level.High;\nconsole.log(level);\n'})}),"\n",(0,r.jsx)(n.h2,{id:"react-typescript",children:"React Typescript"}),"\n",(0,r.jsx)(n.h3,{id:"effect-hook",children:"Effect Hook"}),"\n",(0,r.jsx)(n.p,{children:"The effect Hook is used to execute component side effects when a component is rendered or when certain props or states change."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'import { useEffect, useState } from "react";\n\nexport function EffectHookClick() {\n\n    const [clicked, setClicked] = useState(false);\n\n    useEffect(() => {\n        if (clicked) {\n                console.log("INFO :: Effect Hooked");\n        }\n    }, [clicked]);\n\n    function handleClick() {\n        setClicked(true);\n    }\n    return <button onClick={handleClick}>Cause effect</button>;\n}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'function EffectHookCondition({someProp}) {\n    useEffect(() => {\n        if (someProp) {\n            console.log("Some effect");\n        }\n    });\n    if (!someProp) {\n        return null\n    }\n    return\n}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'function EffectHookReturnFunction({ onClickAnywhere }) {\n    useEffect(() => {\n        \n        function handleClick() {\n            onClickAnywhere();\n        }\n\n        document.addEventListener("click", listener);\n\n        return () => {\n            document.removeEventListener("click", listener);\n        };\n    });\n    return\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"data-fetching",children:"Data Fetching"}),"\n",(0,r.jsx)(n.p,{children:"A common use case for the effect Hook is fetching data:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { useEffect } from 'react';\n\ntype Person = {\n  name: string,\n};\n\nexport function simAPIRequest(): Promise<Person> {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ name: \"George Gonz\xe1lez\" }), 1000)\n  );\n}\n\nexport function DisplayAPIResponse() {\n  useEffect(() => {\n    simAPIRequest().then((person) => console.log(person));\n  }, []);\n\n  return null;\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"state-hook",children:"State Hook"}),"\n",(0,r.jsx)(n.p,{children:"State hooks can be used to store and update state. E.g. you can write the API response from above into a state variable:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"export function DisplayAPIResponse()  {\n  const [name, setName] = useState<string | undefined>();\n  const [score, setScore] = useState(0);\n  const [loading, setLoading] = useState(true);\n  \n  useEffect(() => {\n    simAPIRequest().then((person) =>  {\n      setLoading(false);\n      setName(person.name);\n    });\n  }, []);\n\n  if (loading) {\n    return <div>Loading ...</div>;\n  }\n\n  return (\n    <div>\n      <h3>{name}, {score}</h3>\n      <button onClick={() => setScore(score + 1)}>Add</button>\n      <button onClick={() => setScore(score - 1)}>Subtract</button>\n      <button onClick={() => setScore(0)}>Reset</button>\n    </div>\n  );\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"ref-hook",children:"Ref Hook"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"useRef"})," returns a variable whose value is persisted for the lifetime of a component:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const ref = useRef<Ref>(initialValue);\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'ref.current = newValue;\nconsole.log("Current ref value", ref.current);\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'import { useRef } from "react";\n\nexport function InputComponent() {\n    const inputRef = useRef<HTMLInputElement>(null);\n  \n    function logInput() {\n      console.log(inputRef.current);\n    }\n    return <input ref={inputRef} onChange={logInput} type="text" />;\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Use a ref hook to focus a HTML element after a component is loaded:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const addButtonRef = useRef<HTMLButtonElement>(null);\n\nuseEffect(() => {\n    if (!loading) {\n      addButtonRef.current?.focus();\n    }\n  }, [loading]);\n\nreturn (\n    <button ref={addButtonRef}>Add</button>\n  );\n"})}),"\n",(0,r.jsx)(n.h3,{id:"memo-hook",children:"Memo Hook"}),"\n",(0,r.jsxs)(n.p,{children:["Memo Hooks can be used to store values that have computationally expensive calculations. E.g. the following value is recalculated every time the variable ",(0,r.jsx)(n.code,{children:"a"})," or ",(0,r.jsx)(n.code,{children:"b"})," change:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { useMemo } from 'react';\n\nconst memoValue = useMemo<number>(\n  () => thisWillTakeAWhile(a, b),\n  [a, b]\n);\n"})}),"\n",(0,r.jsxs)(n.p,{children:["As long as ",(0,r.jsx)(n.code,{children:"a"})," and ",(0,r.jsx)(n.code,{children:"b"})," don't change the calculation is only done once when the component is loaded:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'function calculateScore() {\n    console.log("INFO :: Score is being calculated.");\n    let sum = 0;\n    for (let i = 0; i < 10000; i++) {\n      sum += i;\n    }\n    return sum;\n}\n\nconst getScore = useMemo(\n      () => calculateScore(),\n      []\n);\n\nreturn (\n  <p>{getScore}</p>\n);\n'})}),"\n",(0,r.jsx)(n.h3,{id:"callback-hook",children:"Callback Hook"}),"\n",(0,r.jsx)(n.p,{children:"While the Memo Hook is used to cache values the Callback Hook holds an entire function. The memo function wraps the component and memoizes the result for a given set of props preventing unnecessary  re-rendering of slow components:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const memoizedValue = useCallback< () => void > (\n  () => someFunction (),\n  []\n);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"styling-react",children:"Styling React"}),"\n",(0,r.jsx)(n.h3,{id:"vanilla-css",children:"Vanilla CSS"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      ...\n    </div>\n);\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"tailwind-css",children:"Tailwind CSS"}),"\n",(0,r.jsxs)(n.p,{children:["Install ",(0,r.jsx)(n.code,{children:"tailwindcss"})," and its peer dependencies, then generate your ",(0,r.jsx)(n.code,{children:"tailwind.config.js"})," and ",(0,r.jsx)(n.code,{children:"postcss.config.js"})," files:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm install -D tailwindcss postcss autoprefixer\n \nnpx tailwindcss init -p\n\nCreated Tailwind CSS config file: tailwind.config.js\nCreated PostCSS config file: postcss.config.js\n"})}),"\n",(0,r.jsxs)(n.p,{children:["And add the following code to the ",(0,r.jsx)(n.code,{children:"tsconfig.json"})," file to resolve paths:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "compilerOptions": {\n    // ...\n    "baseUrl": ".",\n    "paths": {\n      "@/*": [\n        "./src/*"\n      ]\n    }\n    // ...\n  }\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Add the following code to the ",(0,r.jsx)(n.code,{children:"vite.config.ts"})," so your app can resolve paths without error:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# (so you can import "path" without error)\nnpm i -D @types/node\nnpm i @vitejs/plugin-react\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'import path from "path"\nimport react from "@vitejs/plugin-react"\nimport { defineConfig } from "vite"\n \nexport default defineConfig({\n  plugins: [react()],\n  resolve: {\n    alias: {\n      "@": path.resolve(__dirname, "./src"),\n    },\n  },\n})\n'})}),"\n",(0,r.jsx)(n.h4,{id:"shadcn-ui",children:"ShadCN UI"}),"\n",(0,r.jsxs)(n.p,{children:["Run the ",(0,r.jsx)(n.a,{href:"https://ui.shadcn.com/docs/installation/vite",children:"shadcn-ui"})," init command to setup your project:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npx shadcn-ui@latest init\n"})}),"\n",(0,r.jsxs)(n.p,{children:["You will be asked a few questions to configure ",(0,r.jsx)(n.code,{children:"components.json"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"Would you like to use TypeScript (recommended)? no / yes\nWhich style would you like to use? \u203a Default\nWhich color would you like to use as base color? \u203a Slate\nWhere is your global CSS file? \u203a \u203a src/index.css\nDo you want to use CSS variables for colors? \u203a no / yes\nWhere is your tailwind.config.js located? \u203a tailwind.config.js\nConfigure the import alias for components: \u203a @/components\nConfigure the import alias for utils: \u203a @/lib/utils\nAre you using React Server Components? \u203a no / yes (no)\n"})}),"\n",(0,r.jsx)(n.p,{children:"You can now start adding components to your project."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npx shadcn-ui@latest add button\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The command above will add the ",(0,r.jsx)(n.a,{href:"https://ui.shadcn.com/docs/components/button",children:"Button component"})," to your project. You can then import it like this:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'import { Button } from "@/components/ui/button"\n \nexport default function Home() {\n  return (\n    <div>\n      <Button>Click me</Button>\n    </div>\n  )\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"importing-svgs",children:"Importing SVGs"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm install --save-dev vite-plugin-svgr\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Add the following to ",(0,r.jsx)(n.code,{children:"tsconfig.json"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "compilerOptions": {\n    "types": ["vite/client", "vite-plugin-svgr/client"],\n'})}),"\n",(0,r.jsxs)(n.p,{children:["And import the plugin to ",(0,r.jsx)(n.code,{children:"vite.config.ts"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'import svgr from "vite-plugin-svgr";\n\nexport default defineConfig({\n  plugins: [\n    svgr()\n  ],\n'})}),"\n",(0,r.jsx)(n.p,{children:"You can now import SVGs like:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'import AlertIcon from "@/assets/alert-triangle.svg?react";\n\n...\n\nreturn (\n  <AlertIcon />\n'})}),"\n",(0,r.jsx)(n.h2,{id:"react-router",children:"React Router"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm i react-router-dom\n"})}),"\n",(0,r.jsx)(n.p,{children:"Prepare a set of nested routes for your app. Here all pages will be rendered as children inside the App component:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"@/routes/Routes.tsx"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import {\n    createBrowserRouter,\n    RouterProvider,\n    Navigate\n} from 'react-router-dom';\n\nimport { App } from '@/App'\nimport { FrontPage } from '@/pages/Frontpage';\nimport { CameraList } from '@/pages/Camera_List';\n\nconst router = createBrowserRouter(\n    [{\n        path: '/',\n        element: <App />,\n        errorElement: <ErrorPage />,\n        children: [\n            {\n                path: 'dashboard',\n                element: <FrontPage />,\n            },\n            {\n                path: 'camera-list',\n                element: <CameraList />,\n            },\n            {\n                path: '*',\n                element: <Navigate to=\"dashboard\" replace />,\n            },\n        ]}\n    ]);\n\nexport function Routes() {\n    return <RouterProvider router={router} />;\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"The App component only contains an Outlet for the child components and components you want to be displayed on all pages - navigation bars, side navigation, etc.:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"@/App.tsx"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { Outlet } from 'react-router-dom';\nimport { NavBar } from '@/components/NavBar'\n\nexport function App() {\n  return (\n    <>\n        <NavBar />\n        <Outlet />\n    </>\n  );\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"The routes are now imported into Main:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"@/main.tsx"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport { Routes } from '@/routes/Routes'\nimport { ThemeProvider } from \"@/components/Theme-Provider\"\nimport '@/styles/index.css'\n\n\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <ThemeProvider defaultTheme=\"dark\" storageKey=\"vite-ui-theme\">\n      <Routes />\n    </ThemeProvider>\n  </React.StrictMode>,\n)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"route-parameter",children:"Route Parameter"}),"\n",(0,r.jsx)(n.p,{children:"Add another route that selects a single camera by ID:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"@/routes/Routes.tsx"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"{\n    path: 'camera/:id',\n    element: <CameraPage />,\n},\n"})}),"\n",(0,r.jsx)(n.p,{children:"Mock an API request to retrieve the camera information:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"@/data/cameras.ts"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"export type Camera = {\n    id: number;\n    name: string;\n    recordings: number;\n    ip: string;\n  };\n  \n  export const cameras: Camera[] = [\n    {\n      id: 0,\n      name: 'IN-9420 2K+ WQHD',\n      recordings: 21,\n      ip: '192.168.2.21',\n    },\n    ...\n"})}),"\n",(0,r.jsx)(n.p,{children:"Retrieve camera ID from the URL parameter and find the camera in the list above to display its details:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"@/pages/CameraPage.tsx"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'import { useParams, Link } from \'react-router-dom\';\n\ntype Params = {\n    id: string;\n};\n\n\nexport function CameraPage() {\n    const params = useParams<Params>();\n    // get camera ID from URL param\n    const id = params.id === undefined ? undefined : parseInt(params.id)\n    // find corresponding camera\n    const camera = cameras.find(\n            (camera) => camera.id === id\n        )\n        \n    return (\n        <div className="text-center p-5 text-xl">\n            {camera === undefined ? (\n                <h1 className="text-xl">\n                    ERROR :: Camera not available\n                </h1>\n        ) : (\n        <>\n            <h1 className="text-xl">\n                Camera Name: {camera.name}\n            </h1>\n            <p className="text-base">\n                Camera IP: {camera.ip}\n            </p>\n            <p className="text-base">\n                Recordings: {camera.recordings}\n            </p>\n        </>\n        )}\n    </div>\n)}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"lazy-loading",children:"Lazy Loading"}),"\n",(0,r.jsx)(n.p,{children:"To lazy load 'heavy' pages add suspense to the route definition:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { lazy, Suspense } from 'react'\n\nimport { App } from '@/App'\nimport { ErrorPage } from '@/pages/ErrorPage'\nconst Dashboard = lazy(() => import('@/pages/Dashboard'));\n\nconst router = createBrowserRouter(\n    [{\n        path: '/',\n        element: <App />,\n        errorElement: <ErrorPage />,\n        children: [\n            {\n                path: 'dashboard',\n                element:  (\n                    <Suspense fallback={\n                        <div>\n                            Loading...\n                        </div>\n                    }>\n                        <Dashboard />\n                    </Suspense>\n                )\n            }\n            ...\n"})}),"\n",(0,r.jsx)(n.h3,{id:"react-router-form",children:"React Router Form"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'import {\n    Form,\n    ActionFunctionArgs,\n    redirect,\n  } from \'react-router-dom\';\n  \n\nimport { Button } from "@/components/ui/button"\n\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from "@/components/ui/card"\n\nimport { Input } from "@/components/ui/input"\nimport { Label } from "@/components/ui/label"\n\ntype LoginType = {\n  name: string;\n  password: string;\n}\n\n\nexport function LoginForm() {\n\n  return (\n    <div className=\'container mx-auto h-screen flex justify-center\'>\n      <Card className="w-fit h-fit mt-16">\n        <CardHeader>\n            <CardTitle>Login</CardTitle>\n            <CardDescription>Please use your user login to access your cameras.</CardDescription>\n        </CardHeader>\n        <CardContent>\n            <Form method="post" className="space-y-8">\n                <div className="grid w-full max-w-sm items-center gap-1.5">\n                    <Label htmlFor="name">Username</Label>\n                    <Input type="text" id="name" name="name" placeholder="Username" required />\n                </div>\n                <div className="grid w-full max-w-sm items-center gap-1.5">\n                    <Label htmlFor="password">Password</Label>\n                    <Input type="password" id="password" name="password" placeholder="Password" required />\n                </div>\n                <div>\n                    <Button type="submit">\n                        Submit\n                    </Button>\n                </div>\n            </Form>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport async function loginFormAction({ request }: ActionFunctionArgs) {\n  const formData = await request.formData();\n  const login = {\n      name: formData.get(\'name\'),\n      password: formData.get(\'password\'),\n  } as LoginType;\n\n  console.log(\'Login details:\', login);\n\n  return redirect(`/start/`);\n}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { App } from '@/App'\nimport { ErrorPage } from '@/pages/ErrorPage'\n\nimport { Welcome } from '@/pages/Welcome'\nimport { loginFormAction } from '@/components/welcome/Login'\n\nconst router = createBrowserRouter(\n    [{\n        path: '/',\n        element: <App />,\n        errorElement: <ErrorPage />,\n        children: [\n            {\n                index: true,\n                element: <Welcome />,\n                action: loginFormAction,\n            },\n        ...\n"})}),"\n",(0,r.jsx)(n.h3,{id:"form-hooks",children:"Form Hooks"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"npm install react-hook-form`"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { useForm, FieldError } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\n\nimport { Button } from \"@/components/ui/button\"\n\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\"\n\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\n\nimport { Textarea } from \"@/components/ui/textarea\"\n\nimport { ValidationError } from '@/components/create_user/ValidationError'\n\ntype UserType = {\n    name: string;\n    password: string;\n    email?: string;\n    level: string;\n    notes?: string;\n}\n\n\nexport function UserForm() {\n\n    const {\n        register,\n        handleSubmit,\n        formState: { errors, isSubmitting }\n    } = useForm<UserType>({\n        mode: \"onBlur\",\n        reValidateMode: \"onBlur\"\n    })\n\n    const navigate = useNavigate()\n\n    function onSubmit(user: UserType) {\n        console.log('Submitted details:', user);\n        navigate(`/user-details/${user.name}`);\n    }\n\n    function getEditorStyle(fieldError: FieldError |\n        undefined) {\n        return fieldError ? 'border-red-500' : '';\n    }\n\n    return (\n        <div className='container mx-auto h-screen flex justify-center'>\n          <Card className=\"w-fit h-fit mt-4\">\n            <CardHeader>\n                <CardTitle>Add a User</CardTitle>\n                <CardDescription>Fill out the username, password and access level to create a new user.</CardDescription>\n            </CardHeader>\n            <CardContent>\n                <form noValidate onSubmit={handleSubmit(onSubmit)}>\n                    <div>\n                        <Label htmlFor=\"name\">Your user name</Label>\n                        <Input \n                            type=\"text\"\n                            id=\"name\"\n                            disabled={isSubmitting}\n                            {...register('name', {\n                                required: 'You must enter your name.',\n                            })}\n                            className={getEditorStyle(errors.name)}\n                        />\n                        <ValidationError fieldError={errors.name} />\n                    </div>\n                    <div className='mt-4'>\n                        <Label htmlFor=\"password\" className='my-4'>Your user password</Label>\n                        <Input \n                            type=\"password\"\n                            id=\"password\"\n                            disabled={isSubmitting}\n                            {...register('password', {\n                                required: 'You must enter your password.',\n                            })}\n                            className={getEditorStyle(errors.password)}\n                        />\n                        <ValidationError fieldError={errors.password} />\n                    </div>\n                    <div className='mt-4'>\n                        <Label htmlFor=\"email\" className='my-2'>Your email address</Label>\n                        <Input\n                            type=\"email\"\n                            id=\"email\"\n                            disabled={isSubmitting}\n                            {...register('email', {\n                                pattern: {\n                                    value: /\\S+@\\S+\\.\\S+/,\n                                    message: 'Entered value does not match email format.',\n                                },\n                            })}\n                            className={getEditorStyle(errors.email)}\n                        />\n                        <ValidationError fieldError={errors.email} />\n                    </div>\n                    <div className='mt-4'>\n\n                        <Label htmlFor=\"level\" className='my-2'>Granted access level</Label>\n                        <div className='flex flex-col'>\n                            <select\n                                id=\"level\"\n                                disabled={isSubmitting}\n                                {...register('level', {\n                                    required: 'You must enter the authorization level.',\n                                })}\n                                className='flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-5'\n                            >\n                                <option value=\"\">Select an authorization level...</option>\n                                <option value=\"user\">User</option>\n                                <option value=\"operator\">Operator</option>\n                                <option value=\"administrator\">Administrator</option>\n                            </select>\n                            <ValidationError fieldError={errors.level} />\n                        </div>\n                        \n                    </div>\n                    <div className='mt-4'>\n                        <Label htmlFor=\"notes\">Additional notes</Label>\n                        <Textarea id=\"notes\" disabled={isSubmitting}  {...register('notes')} />\n                    </div>\n                    <div className='mt-4'>\n                        <Button type=\"submit\">\n                            Submit\n                        </Button>\n                    </div>\n                </form>\n        </CardContent>\n        </Card>\n    </div>\n    );\n}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'import { FieldError } from \'react-hook-form\';\n\ntype Props = {\n    fieldError: FieldError | undefined;\n};\n\nexport function ValidationError({ fieldError }: Props) {\n    \n    if (!fieldError) {\n        return null;\n    }\n\n    return (\n        <div role="alert" className="text-red-500 text-xs mt-1">\n            {fieldError.message}\n        </div>\n    );\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"redux-state-management",children:"Redux State Management"}),"\n",(0,r.jsx)(n.h3,{id:"store",children:"Store"}),"\n",(0,r.jsx)(n.p,{children:"Create a store using the Redux Toolkit:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"@/store/store.tsx"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from './userSlice';\n\nexport const store = configureStore({\n  reducer: {\n      user: userReducer,\n      camera: cameraReducer,\n    },\n});\n\n//  ReturnType infers the type of the full state object\nexport type RootState = ReturnType<typeof store.getState>;\n"})}),"\n",(0,r.jsx)(n.p,{children:"Every app feature has its own slice of the state accessible by its own reducer function:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"@/store/userSlice.tsx"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { createSlice } from '@reduxjs/toolkit'\nimport type { PayloadAction } from '@reduxjs/toolkit'\n// mocked API request to get current user - see below\nimport { User } from '@/api/authenticate'\n\ntype State = {\n  user: undefined | User;\n  permissions: undefined | string[];\n  loading: boolean;\n}\n\nconst initialState: State = {\n  user: undefined,\n  permissions: undefined,\n  loading: false,\n}\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    authenticateAction: (state) => {\n      state.loading = true;\n    },\n    authenticatedAction: (state, action: PayloadAction<User | undefined>) => {\n      state.user = action.payload;\n      state.loading = false;\n    },\n    authorizeAction: (state) => {\n      state.loading = true;\n    },\n    authorizedAction: (state, action: PayloadAction<string[]>) => {\n      state.permissions = action.payload;\n      state.loading = false;\n    },\n  },\n})\n\nexport const { authenticateAction, authenticatedAction, authorizeAction, authorizedAction } =\n  userSlice.actions\n\nexport default userSlice.reducer\n"})}),"\n",(0,r.jsx)(n.p,{children:"The Redux store needs to be provided to our React component tree:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"@/App.tsx"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { Provider } from 'react-redux';\n\nimport { Outlet } from 'react-router-dom';\nimport { NavBar } from '@/components/navbar/NavBar'\nimport { store } from '@/store/store';\n\nexport function App() {\n  return (\n    <>\n    <Provider store={store}>\n      <NavBar />\n      <Outlet />\n    </Provider>\n    </>\n  );\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"select-state",children:"Select State"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"@/components/navbar/NavBar.tsx"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { useSelector, useDispatch } from 'react-redux'\n\nimport { authenticate } from '@/api/authenticate'\nimport { authorize } from '@/api/authorize'\nimport type { RootState } from '@/store/store'\n\nexport function NavBar() {\n  const user = useSelector((state: RootState) => state.user.user);\n  const loading = useSelector((state: RootState) => state.user.loading);\n\n  ...\n  \n  return (\n    ...\n    <NavigationMenuItem>\n        {user ? (\n          <span className=\"ml-auto\">Welcome back {user.name}!</span>\n        ) : (\n          <Button variant=\"outline\"\n            onClick={handleSignInClick}\n            disabled={loading}\n          >\n            {loading ? '...' : 'Sign in'}\n          </Button>\n        )}\n    </NavigationMenuItem>\n  ...\n"})}),"\n",(0,r.jsx)(n.h3,{id:"dispatch-state-updates",children:"Dispatch State Updates"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"handleSignInClick()"})," dispatches a sign-in request:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"export function NavBar() {\n  ...\n\n  const dispatch = useDispatch();\n\n  async function handleSignInClick() {\n    // set loading to true\n    dispatch(authenticateAction());\n    // get authenticated user from API\n    const authenticatedUser = await authenticate();\n    // set authenticated user to current logged in user\n    dispatch(authenticatedAction(authenticatedUser));\n    // once the user is known set its permissions\n    if (authenticatedUser !== undefined) {\n      dispatch(authorizeAction());\n      const authorizedPermissions = await authorize(authenticatedUser.id);\n      dispatch(authorizedAction(authorizedPermissions));\n    }\n  }\n\n  ...\n"})}),"\n",(0,r.jsx)(n.p,{children:"The user name and its permissions are retrieved from a mocked API request:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"@/api/authenticate.ts"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"export type User = {\n  id: string;\n  name: string;\n};\nexport function authenticate(): Promise<User | undefined> {\n  return new Promise((resolve) => setTimeout(() => resolve({ id: '1', name: 'Admin' }), 1000));\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"@/api/authorize.ts"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"export function authorize(id: string): Promise<string[]> {\n  return new Promise((resolve) => setTimeout(() => resolve(['admin']), 1000));\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"working-with-user-roles",children:"Working with User Roles"}),"\n",(0,r.jsx)(n.p,{children:"Conditional loading of content based on user roles:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"@/components/login/Vault.tsx"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { useSelector } from 'react-redux'\nimport { RootState } from '@/store/store'\n\ntype Content = {\n  children: JSX.Element\n}\n\nexport function Vault({ children }: Content) {\n  // get array of permissions for current user\n  const permissions = useSelector((state: RootState) => state.user.permissions);\n  // if permissions exist and include 'admin' load children\n  if (permissions && permissions.includes('admin')) {\n    return <div>{ children }</div>;\n  }\n  return <h3 className=\"mt-8 text-center\">Please sign in to view this content!</h3>;\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"Wrap all sensitive components inside a Vault instance:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { Vault } from '@/components/login/Vault'\n\nexport function PageComponent() {\n  return (\n    <Vault>\n      <div className=\"App\">\n      ...\n      </div>\n    </Vault>\n  );\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"restful-apis",children:"RESTful APIs"}),"\n",(0,r.jsx)(n.p,{children:"Data for a JSON mock API:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"api.json"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n    "events": [\n        {\n          "uuid": "90080d52-f2ac-46e1-ad1e-ec7d6ab304a1",\n          "title": "#6534 Entrance Left",\n          "description": "2023-12-26 15:51:32: [Alarm]: Motion in area [1]"\n        },\n        {\n          "uuid": "c8ada1fe-318b-43a4-adc5-367d526cc5dd",\n          "title": "#6533 Lobby",\n          "description": "2023-12-26 15:50:38: [Event]: admin has logged in from 192.168.2.112"\n        },\n        {\n          "uuid": "762ad93a-4bcc-4f8d-97d1-93d4f1da1f35",\n          "title": "#6456 Elevator",\n          "description": "2023-12-26 15:44:19: [Event]: Switching to night mode"\n        }\n    ]\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Requirements:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"npm i -D json-server"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"npm"})," start script in ",(0,r.jsx)(n.code,{children:"package.json"})]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  ...,\n  "scripts": {\n    ...,\n    "api": "json-server --watch api.json --port 8080 --delay 2500"\n  },\n...\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Execute the script and verify that the API is accessible:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"React Typescript",src:t(673713).A+"",width:"818",height:"307"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://vitejs.dev/guide/env-and-mode#env-files",children:"Vite.js Environment Variables"}),": To prevent accidentally leaking env variables to the client, only variables prefixed with VITE_ are exposed to your Vite-processed code. e.g.:"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:".env"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"VITE_API_URL = http://localhost:8080/events/\n"})}),"\n",(0,r.jsx)(n.p,{children:"The URL is now exposed:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"console.log(import.meta.env.VITE_API_URL)\n"})}),"\n",(0,r.jsxs)(n.p,{children:["To get TypeScript IntelliSense for user-defined env variables you can create an ",(0,r.jsx)(n.code,{children:"env.d.ts"})," in src directory, then augment ImportMetaEnv like this:"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"@/env.d.ts"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'/// <reference types="vite/client" />\n\ninterface ImportMetaEnv {\n    readonly VITE_API_URL: string\n    // more .env variables...\n}\n  \ninterface ImportMeta {\n    readonly env: ImportMetaEnv\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"React Typescript",src:t(13818).A+"",width:"983",height:"169"})}),"\n",(0,r.jsx)(n.h3,{id:"effect-fetching",children:"Effect Fetching"}),"\n",(0,r.jsx)(n.p,{children:"Get JSON data from your API:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"@/components/reports/GetReports.ts"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"export type ReportData = {\n    uuid: number;\n    title: string;\n    description: string;\n}\n\nexport async function getReports() {\n    const response = await fetch(\n        // add '!' to assert that expression can\u2019t be null or undefined\n        import.meta.env.VITE_API_URL!\n    );\n    const body = (await response.json()) as unknown\n    // type assertion for API response\n    assertIsReports(body);\n    return body;\n}\n\n\nexport function assertIsReports(\n    reportData: unknown\n): asserts reportData is ReportData[] {\n    if (!Array.isArray(reportData)) {\n        throw new Error(\"ERROR :: Report isn't an array\");\n    }\n    if (reportData.length === 0) {\n        return\n    }\n    reportData.forEach((report) => {\n        if (!('uuid' in report)) {\n            throw new Error(\"ERROR :: Report doesn't contain an UUID\");\n        }\n        if (typeof report.uuid !== 'string') {\n            throw new Error('ERROR :: UUID is not a string');\n        }\n        if (!('title' in report)) {\n            throw new Error(\"ERROR :: Report doesn't contain title\");\n        }\n        if (typeof report.title !== 'string') {\n            throw new Error('ERROR :: Title is not a string');\n        }\n        if (!('description' in report)) {\n            throw new Error(\"ERROR :: Report doesn't contain description\");\n        }\n        if (typeof report.description != 'string') {\n            throw new Error('ERROR :: Description is not a string');\n        }\n    })\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"The fetched JSON data can now be displayed in the report list component:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"@/components/reports/ReportList.tsx"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'import {\nimport {\n    Card,\n    CardContent,\n    CardDescription,\n    CardHeader,\n    CardTitle,\n} from "@/components/ui/card"\n\nimport {\n    Table,\n    TableBody,\n    TableCaption,\n    TableCell,\n    TableHead,\n    TableHeader,\n    TableRow,\n} from "@/components/ui/table"\n\nimport { ReportData } from \'./GetReports\'\n\ntype Props = {\n    reports: ReportData[];\n}\n\nexport function ReportList({ reports }: Props) {\n    return (\n        <Card className="w-3/4">\n            <CardHeader>\n                <CardTitle>Surveillance Log</CardTitle>\n                <CardDescription>Recorded camera events</CardDescription>\n            </CardHeader>\n            <CardContent>\n                <Table>\n                    <TableCaption>Latest Events</TableCaption>\n                    <TableHeader>\n                        <TableRow>\n                        <TableHead>Camera</TableHead>\n                        <TableHead>Description</TableHead>\n                        </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                        {reports.map((report) => (\n                        <TableRow key={report.uuid}>\n                            <TableCell className="font-bold text-left">{report.title}</TableCell>\n                            <TableCell className="text-left">{report.description}</TableCell>\n                        </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </CardContent>\n        </Card>\n    )   \n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"The list view can now be used in any page:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { useEffect, useState } from 'react';\n\nimport { getReports, ReportData } from '@/components/reports/GetReports'\nimport { ReportList } from '@/components/reports/ReportList'\n\nexport function ReportPage() {\n\n  const [isLoading, setIsLoading] = useState(true)\n  const [reports, setReports] = useState<ReportData[]>([])\n\n  useEffect(() => {\n    let cancel = false\n    // fetch data from api\n    getReports().then((data) => {\n      if (!cancel) {\n        setReports(data);\n      setIsLoading(false);\n      }\n    })\n    // cancel load if component is unmounted\n    return () => {\n      cancel = true;\n    }\n  }, []);\n\n  if (isLoading) {\n    return (\n      <div className=\"w-96 mx-auto mt-6\">\n        Loading ...\n      </div>\n    );\n  }\n\n  return (\n    ...\n        <ReportList reports={reports} />\n    ...\n  );\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"effect-posting",children:"Effect Posting"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"@/components/reports/NewReport.ts"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"export type NewReportData = {\n    title: string;\n    description: string;\n}\n    \n\nexport type SavedReportData = {\n    uuid: string;\n}\n\nexport async function savePost( newReportData: NewReportData ) {\n    const response = await fetch(\n        import.meta.env.VITE_API_URL!,\n        {\n            method: 'POST',\n            body: JSON.stringify(newReportData),\n            headers: {'Content-Type': 'application/json'}\n        }\n    )\n    const body = (await response.json()) as unknown;\n    assertIsSavedReport(body);\n\n    return { ...newReportData, ...body };\n}\n\nfunction assertIsSavedReport( post: any ):\n    asserts post is SavedReportData {\n        if (!('uuid' in post)) {\n            throw new Error(\"ERROR :: Post doesn't contain an uuid\")\n        }\n        if (typeof post.uuid !== 'number') {\n            throw new Error('ERROR :: uuid is not a number');\n        }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"react-router-data-loading",children:"React Router Data Loading"}),"\n",(0,r.jsxs)(n.p,{children:["Use React Router to get the data before it renders a component defined on the route. This can be done by adding the ",(0,r.jsx)(n.code,{children:"getReports"})," function as a loader:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import {\n    createBrowserRouter,\n    RouterProvider,\n    Navigate,\n    defer\n} from 'react-router-dom';\n\nimport { CameraPage } from '@/pages/CameraPage'\nimport { getReports } from '@/components/reports/GetReports'\n\nconst router = createBrowserRouter(\n    [{\n        ...\n            {\n                path: 'camera/:id',\n                element: <CameraPage />,\n                loader: async () => defer({ reports: getReports() })\n            },\n        ...\n"})}),"\n",(0,r.jsx)(n.p,{children:"The data is now fetched when the route is triggered and made available to our component via a useLoaderData hook::"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"@/pages/CameraPage.tsx"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { Suspense } from 'react'\n\nimport {\n    useParams,\n    useLoaderData,\n    Await,\n    Link\n} from 'react-router-dom'\n\nimport { ReportList } from '@/components/reports/ReportList'\nimport { assertIsReports } from '@/components/reports/GetReports'\nimport { ReportData } from '@/components/reports/types'\n\nexport function CameraPage() {\n    \n    ...\n    \n    // get camera reports from react-router route\n    const data = useLoaderData()\n    assertIsData(data)\n        \n    return (\n            ...\n\n              <CardContent>\n                  <Suspense fallback={<div>Fetching...</div>}>\n                      <Await resolve={data.reports}>\n                      {(reports) => {\n                          assertIsReports(reports)\n                          return <ReportList reports={reports} />\n                      }}\n                      </Await>\n                  </Suspense>\n              </CardContent>\n                    \n            ...\n)}\n\ntype Data = {\n    reports: ReportData[];\n}\n\nexport function assertIsData(data: unknown): asserts data is Data {\n  if (typeof data !== 'object') {\n    throw new Error(\"ERROR :: Sent report data isn't an object\");\n  }\n  if (data === null) {\n    throw new Error('ERROR :: Report data is null');\n  }\n  if (!('reports' in data)) {\n    throw new Error(\"ERROR :: data doesn't contain reports\");\n  }\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"video-embedding",children:"Video Embedding"}),"\n",(0,r.jsx)(n.h3,{id:"hls-streams",children:"hls Streams"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/devcshort/react-hls#README",children:"hls.js"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm install react-hls-player\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"@/components/video_streamer/HLSPlayer.tsx"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'import ReactHlsPlayer from \'react-hls-player\'\n\nexport function HLSPlayer( href: { url: string } ) {\n\n  return (\n    <>\n      <ReactHlsPlayer\n          src={href.url.toString()}\n          autoPlay={false}\n          controls={true}\n          width="100%"\n          height="auto"\n          hlsConfig={{\n            maxLoadingDelay: 4,\n            minAutoBitrate: 0,\n            lowLatencyMode: true,\n          }}\n      />\n    </>\n  );\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"@/components/video_streamer/VideoWall.tsx"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'import { HLSPlayer } from \'@/components/video_player/HLSPlayer\'\n\nconst href: URL = new URL("https://bitdash-a.akamaihd.net/content/sintel/hls/playlist.m3u8")\n\nexport function VideoWall() {\n  return (\n    <Card className="mt-12">\n      <CardHeader>\n        <CardTitle>Camera Live Video</CardTitle>\n        <CardDescription>Embedded HLS stream unsing hls.js</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <div className="grid grid-flow-row-dense grid-cols-3 grid-rows-3 gap-2">\n          <div className="col-span-2 row-span-2">\n            <HLSPlayer url={href} />\n          </div>\n          ...\n'})}),"\n",(0,r.jsx)(n.h3,{id:"video-file-playback",children:"Video File Playback"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://videojs.com/",children:"Video.js"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm install video.js\nnpm install -D @types/video.js\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"@/components/video_player/VideoPlayer"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { useRef, useEffect } from 'react'\nimport videojs from 'video.js'\nimport 'video.js/dist/video-js.css'\n\nexport const VideoPlayer = (props) => {\n  const videoRef = useRef(null)\n  const playerRef = useRef(null)\n  \n  const {options, onReady} = props;\n\n  useEffect(() => {\n\n    // Make sure Video.js player is only initialized once\n    if (!playerRef.current) {\n      // The Video.js player needs to be _inside_ the component el for React 18 Strict Mode. \n      const videoElement = document.createElement(\"video-js\");\n\n      videoElement.classList.add('vjs-big-play-centered');\n      videoRef.current.appendChild(videoElement);\n\n      const player = playerRef.current = videojs(videoElement, options, () => {\n        videojs.log('player is ready');\n        onReady && onReady(player);\n      });\n\n    // You could update an existing player in the `else` block here\n    // on prop change, for example:\n    } else {\n      const player = playerRef.current;\n\n      player.autoplay(options.autoplay);\n      player.src(options.sources);\n    }\n  }, [options, videoRef]);\n\n  // Dispose the Video.js player when the functional component unmounts\n  useEffect(() => {\n    const player = playerRef.current;\n\n    return () => {\n      if (player && !player.isDisposed()) {\n        player.dispose();\n        playerRef.current = null;\n      }\n    };\n  }, [playerRef]);\n\n  return (\n    <div data-vjs-player>\n      <div ref={videoRef} />\n    </div>\n  );\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"@/components/video_player/VideoWall"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { useRef } from 'react'\nimport videojs from 'video.js'\n\nimport { VideoPlayer } from '@/components/video_player/VideoPlayer'\n\nconst videoJsOptions = {\n  autoplay: false,\n  controls: true,\n  responsive: true,\n  fluid: true,\n  sources: [\n    {\n      src: \"//vjs.zencdn.net/v/oceans.mp4\",\n      type: \"video/mp4\"\n    }\n  ]\n};\n\nexport function VideoWall(id: {camera: string}) {\n\n  const playerRef = useRef(null)\n\n  const handlePlayerReady = (player) => {\n    playerRef.current = player\n\n    // You can handle player events here, for example:\n    player.on('waiting', () => {\n      videojs.log('player is waiting')\n    })\n\n    player.on('dispose', () => {\n      videojs.log('player will dispose')\n    })\n  }\n\n  return (\n      <div className=\"col-span-2 row-span-2\">\n        <VideoPlayer options={videoJsOptions} onReady={handlePlayerReady} />\n      </div>\n  );\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},792307:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-c3aedc7eed015cc5372c21f9c394693d.jpg"},673713:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/reactjs-typescript_01-8f0e2bc544354932dee93abc16c9cf9d.png"},13818:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/reactjs-typescript_02-272610ceebb6df66e939412f13b6907c.png"},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var r=t(296540);const s={},a=r.createContext(s);function o(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);