"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[18609],{976206:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});var i=n(474848),a=n(28453);const o={sidebar_position:6090,slug:"2021-09-05",title:"Hashicorp Terraform - Setup",authors:"mpolinowski",tags:["Terraform","Linux"]},s=void 0,t={id:"DevOps/Hashicorp/2021-09-05--hashicorp-terraform-setup/index",title:"Hashicorp Terraform - Setup",description:"Victoria Harbour, Hong Kong",source:"@site/docs/DevOps/Hashicorp/2021-09-05--hashicorp-terraform-setup/index.md",sourceDirName:"DevOps/Hashicorp/2021-09-05--hashicorp-terraform-setup",slug:"/DevOps/Hashicorp/2021-09-05--hashicorp-terraform-setup/2021-09-05",permalink:"/docs/DevOps/Hashicorp/2021-09-05--hashicorp-terraform-setup/2021-09-05",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Hashicorp/2021-09-05--hashicorp-terraform-setup/index.md",tags:[{label:"Terraform",permalink:"/docs/tags/terraform"},{label:"Linux",permalink:"/docs/tags/linux"}],version:"current",sidebarPosition:6090,frontMatter:{sidebar_position:6090,slug:"2021-09-05",title:"Hashicorp Terraform - Setup",authors:"mpolinowski",tags:["Terraform","Linux"]},sidebar:"tutorialSidebar",previous:{title:"Hashicorp Terraform - Providers, Variables & Attributes",permalink:"/docs/DevOps/Hashicorp/2021-09-06--hashicorp-terraform-providers-variables-attributes/2021-09-07"},next:{title:"Hashicorp Vault - Logging",permalink:"/docs/DevOps/Hashicorp/2021-08-25--hashicorp-vault-logging/2021-08-25"}},l={},c=[{value:"Infrastructure as Code",id:"infrastructure-as-code",level:2},{value:"Toolsets",id:"toolsets",level:3},{value:"Installation",id:"installation",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Create a File",id:"create-a-file",level:3},{value:"Create a File from a Template",id:"create-a-file-from-a-template",level:3},{value:"Create Multiple Instances of a File",id:"create-multiple-instances-of-a-file",level:3},{value:"Count",id:"count",level:4},{value:"For-Each",id:"for-each",level:4},{value:"Terraform Life Cycle",id:"terraform-life-cycle",level:2},{value:"File Format (Optional)",id:"file-format-optional",level:3},{value:"Validtation",id:"validtation",level:3},{value:"Initialization",id:"initialization",level:3},{value:"Planning",id:"planning",level:3},{value:"Run",id:"run",level:3},{value:"Verify",id:"verify",level:3},{value:"Destroy",id:"destroy",level:3},{value:"Life Cycle Rules",id:"life-cycle-rules",level:3},{value:"Create Before Destroy",id:"create-before-destroy",level:4},{value:"Prevent Destroy",id:"prevent-destroy",level:4},{value:"Ignore Changes",id:"ignore-changes",level:4}];function d(e){const r={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.p,{children:(0,i.jsx)(r.img,{alt:"Victoria Harbour, Hong Kong",src:n(652276).A+"",width:"1500",height:"362"})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"#infrastructure-as-code",children:"Infrastructure as Code"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"#toolsets",children:"Toolsets"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"#installation",children:"Installation"})}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"#configuration",children:"Configuration"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"#create-a-file",children:"Create a File"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"#create-a-file-from-a-template",children:"Create a File from a Template"})}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"#create-multiple-instances-of-a-file",children:"Create Multiple Instances of a File"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"#count",children:"Count"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"#for-each",children:"For-Each"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"#terraform-life-cycle",children:"Terraform Life Cycle"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"#file-format-optional",children:"File Format (Optional)"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"#validtation",children:"Validtation"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"#initialization",children:"Initialization"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"#planning",children:"Planning"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"#run",children:"Run"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"#verify",children:"Verify"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"#destroy",children:"Destroy"})}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"#life-cycle-rules",children:"Life Cycle Rules"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"#create-before-destroy",children:"Create Before Destroy"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"#prevent-destroy",children:"Prevent Destroy"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"#ignore-changes",children:"Ignore Changes"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(r.p,{children:"Terraform allows infrastructure to be expressed as code. The desired state is expressed in a simple human readable language. Terraform uses this language to provide an execution plan of changes, which can be reviewed for safety and then applied to make changes. Extensible providers allow Terraform to manage a broad range of resources, including hardware, IaaS, PaaS, and SaaS services."}),"\n",(0,i.jsx)(r.h2,{id:"infrastructure-as-code",children:"Infrastructure as Code"}),"\n",(0,i.jsx)(r.p,{children:"Use infrastructure as code to provision infrastructure. Codification enables version control and automation, reducing human error and increasing productivity. Codification allows infrastructure changes to be automated, while keeping the definition human readable"}),"\n",(0,i.jsx)(r.h3,{id:"toolsets",children:"Toolsets"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Configuration Management"}),(0,i.jsx)(r.th,{children:"Server Templating"}),(0,i.jsx)(r.th,{children:"Server Provisioning"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsxs)(r.td,{children:[(0,i.jsx)(r.a,{href:"/docs/DevOps/Hashicorp/2020-08-15--installing-nomad-ubuntu/2020-08-15",children:"Nomad"}),", ",(0,i.jsx)(r.a,{href:"/docs/DevOps/Ansible/2021-04-28-ansible-tower-rhel/2021-04-28",children:"Ansible"}),", ",(0,i.jsx)(r.a,{href:"/docs/DevOps/Salt/2020-06-14--install-salt-on-ubuntu-20-04/2020-06-14",children:"SaltStack"})]}),(0,i.jsxs)(r.td,{children:["Docker, Vagrant, ",(0,i.jsx)(r.a,{href:"/docs/DevOps/Hashicorp/2020-10-25--hashicorp-packer-and-virtualbox-autoinstall/2020-10-25",children:"Packer"})]}),(0,i.jsx)(r.td,{children:"Terraform, Docker Compose or Docker Swarm"})]})})]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Configuration Management"})," tools install and configure software. Maintain configuration structures (Version Control) and are idempotent (every run results in the same server state - no matter what state the server was in before)."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Server Templating"})," tools create images that contain all desired software and their dependencies. Running these images provide an immutable software infrastructure."]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Server Provisioning"})," tools deploy immutable infrastructure to cloud provider with declarative code."]}),"\n"]}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.em,{children:"So what is the difference between Nomad and Terraform? Only the provider plugins that directly connect you to Cloud providers like AWS or GCE ?"})}),"\n",(0,i.jsx)(r.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsxs)(r.p,{children:["You can download the latest version of Terraform as a binary from the ",(0,i.jsx)(r.a,{href:"https://releases.hashicorp.com/terraform/",children:"Hashicorp Releases"}),":"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"wget https://releases.hashicorp.com/terraform/1.0.7/terraform_1.0.7_linux_amd64.zip\r\nunzip terraform_1.0.7_linux_amd64.zip\r\nrm terraform_1.0.7_linux_amd64.zip\r\nsudo mv terraform /usr/bin/terraform\n"})}),"\n",(0,i.jsx)(r.p,{children:"Verify that it is working:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"terraform -v\r\n\r\nTerraform v1.0.7\r\non linux_amd64\n"})}),"\n",(0,i.jsx)(r.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsx)(r.p,{children:"Start by creating a directory where you want to store your configuration:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"sudo mkdir /etc/terraform.d\n"})}),"\n",(0,i.jsxs)(r.p,{children:["As ",(0,i.jsx)(r.a,{href:"https://registry.terraform.io/browse/providers",children:"provider"})," I want to start out with local resources which would be represented by a configuration file like:"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"sudo nano /etc/terraform.d/main.tf\n"})}),"\n",(0,i.jsx)(r.h3,{id:"create-a-file",children:"Create a File"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-json",children:'resource "local_file" "resource_name" {\r\n  filename = "/opt/resource.txt"\r\n  content = "some content"\r\n  directory_permission = "0777"\r\n  file_permission = "0700"\r\n}\n'})}),"\n",(0,i.jsx)(r.h3,{id:"create-a-file-from-a-template",children:"Create a File from a Template"}),"\n",(0,i.jsxs)(r.p,{children:["If the file is created by another tool like Nomad and you want Terraform to use it you can use the ",(0,i.jsx)(r.strong,{children:"Data_Block"})," instead of an ",(0,i.jsx)(r.strong,{children:"Ressource_Block"}),":"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-json",children:'resource "local_file" "resource_name" {\r\n  filename = "/opt/resource.txt"\r\n  content = data.local_file.dog.content\r\n  directory_permission = "0777"\r\n  file_permission = "0700"\r\n}\r\n\r\ndata "local_file" "data" {\r\n  filename = "/opt/data.txt"\r\n}\n'})}),"\n",(0,i.jsx)(r.h3,{id:"create-multiple-instances-of-a-file",children:"Create Multiple Instances of a File"}),"\n",(0,i.jsx)(r.h4,{id:"count",children:"Count"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.code,{children:"main.tf"})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-json",children:'resource "local_file" "resource_name" {\r\n  filename = var.filename[count.index]\r\n  content = "some content"\r\n  directory_permission = "0777"\r\n  file_permission = "0700"\r\n\r\n  count = length(var.filename)\r\n\r\n}\n'})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.code,{children:"variables.tf"})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-json",children:'variable "filename" {\r\n  default = [\r\n    "/opt/resource1.txt",\r\n    "/opt/resource2.txt",\r\n    "/opt/resource3.txt"\r\n  ]\r\n}\n'})}),"\n",(0,i.jsx)(r.h4,{id:"for-each",children:"For-Each"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.code,{children:"main.tf"})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-json",children:'resource "local_file" "resource_name" {\r\n  filename = each.value\r\n  content = "some content"\r\n  directory_permission = "0777"\r\n  file_permission = "0700"\r\n\r\n  for_each = var.filename\r\n\r\n}\n'})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.code,{children:"variables.tf"})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-json",children:'variable "filename" {\r\n  type=set(string)\r\n  default = [\r\n    "/opt/resource1.txt",\r\n    "/opt/resource2.txt",\r\n    "/opt/resource3.txt"\r\n  ]\r\n}\n'})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.em,{children:"for-each"})," can only be used with variable sets (sets = lists without duplicated members)."]}),"\n",(0,i.jsx)(r.h2,{id:"terraform-life-cycle",children:"Terraform Life Cycle"}),"\n",(0,i.jsx)(r.p,{children:"Run the following commands from the directory you created the configuration file in:"}),"\n",(0,i.jsx)(r.h3,{id:"file-format-optional",children:"File Format (Optional)"}),"\n",(0,i.jsx)(r.p,{children:"Making sure that the file is in a canonical format:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"sudo terraform fmt\r\nmain.tf\n"})}),"\n",(0,i.jsx)(r.h3,{id:"validtation",children:"Validtation"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"terraform validate\r\nSuccess! The configuration is valid.\n"})}),"\n",(0,i.jsx)(r.h3,{id:"initialization",children:"Initialization"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:'sudo terraform init\r\n\r\nInitializing the backend...\r\n\r\nInitializing provider plugins...\r\n- Finding latest version of hashicorp/local...\r\n- Installing hashicorp/local v2.1.0...\r\n- Installed hashicorp/local v2.1.0 (signed by HashiCorp)\r\n\r\nTerraform has created a lock file .terraform.lock.hcl to record the provider\r\nselections it made above. Include this file in your version control repository\r\nso that Terraform can guarantee to make the same selections by default when\r\nyou run "terraform init" in the future.\r\n\r\nTerraform has been successfully initialized!\r\n\r\nYou may now begin working with Terraform. Try running "terraform plan" to see\r\nany changes that are required for your infrastructure. All Terraform commands\r\nshould now work.\r\n\r\nIf you ever set or change modules or backend configuration for Terraform,\r\nrerun this command to reinitialize your working directory. If you forget, other\r\ncommands will detect it and remind you to do so if necessary.\n'})}),"\n",(0,i.jsx)(r.h3,{id:"planning",children:"Planning"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:'sudo terraform plan\r\n\r\nTerraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:\r\n  + create\r\n\r\nTerraform will perform the following actions:\r\n\r\n  # local_file.resource_name will be created\r\n  + resource "local_file" "resource_name" {\r\n      + content              = "some content"\r\n      + directory_permission = "0777"\r\n      + file_permission      = "0700"\r\n      + filename             = "/opt/resource.txt"\r\n      + id                   = (known after apply)\r\n    }\r\n\r\nPlan: 1 to add, 0 to change, 0 to destroy.\r\n\r\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\r\n\r\nNote: You didn\'t use the -out option to save this plan, so Terraform can\'t guarantee to take exactly these actions if you run "terraform\r\napply" now.\n'})}),"\n",(0,i.jsx)(r.h3,{id:"run",children:"Run"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:'sudo terraform apply\r\n\r\nTerraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:\r\n  + create\r\n\r\nTerraform will perform the following actions:\r\n\r\n  # local_file.resource_name will be created\r\n  + resource "local_file" "resource_name" {\r\n      + content              = "some content"\r\n      + directory_permission = "0777"\r\n      + file_permission      = "0700"\r\n      + filename             = "/opt/resource.txt"\r\n      + id                   = (known after apply)\r\n    }\r\n\r\nPlan: 1 to add, 0 to change, 0 to destroy.\r\n\r\nDo you want to perform these actions?\r\n  Terraform will perform the actions described above.\r\n  Only \'yes\' will be accepted to approve.\r\n\r\n  Enter a value: yes\r\n\r\nlocal_file.resource_name: Creating...\r\nlocal_file.resource_name: Creation complete after 0s [id=94e66df8cd09d410c62d9e0dc59d3a884e458e05]\n'})}),"\n",(0,i.jsx)(r.h3,{id:"verify",children:"Verify"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:'sudo terraform show\r\n\r\n# local_file.resource_name:\r\nresource "local_file" "resource_name" {\r\n    content              = "some content"\r\n    directory_permission = "0777"\r\n    file_permission      = "0700"\r\n    filename             = "/opt/resource.txt"\r\n    id                   = "94e66df8cd09d410c62d9e0dc59d3a884e458e05"\r\n}\n'})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"sudo cat /opt/resource.txt\r\nsome content\n"})}),"\n",(0,i.jsx)(r.h3,{id:"destroy",children:"Destroy"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:'sudo terraform destroy\r\n\r\nlocal_file.resource_name: Refreshing state... [id=94e66df8cd09d410c62d9e0dc59d3a884e458e05]\r\n\r\nTerraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:\r\n  - destroy\r\n\r\nTerraform will perform the following actions:\r\n\r\n  # local_file.resource_name will be destroyed\r\n  - resource "local_file" "resource_name" {\r\n      - content              = "some content" -> null\r\n      - directory_permission = "0777" -> null\r\n      - file_permission      = "0700" -> null\r\n      - filename             = "/opt/resource.txt" -> null\r\n      - id                   = "94e66df8cd09d410c62d9e0dc59d3a884e458e05" -> null\r\n    }\r\n\r\nPlan: 0 to add, 0 to change, 1 to destroy.\r\n\r\nDo you really want to destroy all resources?\r\n  Terraform will destroy all your managed infrastructure, as shown above.\r\n  There is no undo. Only \'yes\' will be accepted to confirm.\r\n\r\n  Enter a value: yes\r\n\r\nlocal_file.resource_name: Destroying... [id=94e66df8cd09d410c62d9e0dc59d3a884e458e05]\r\nlocal_file.resource_name: Destruction complete after 0s\n'})}),"\n",(0,i.jsx)(r.h3,{id:"life-cycle-rules",children:"Life Cycle Rules"}),"\n",(0,i.jsx)(r.h4,{id:"create-before-destroy",children:"Create Before Destroy"}),"\n",(0,i.jsx)(r.p,{children:"When changes are made to your infrastructure Terraform first deletes the old state, then it re-creates the infrastructure in the new state. To revert use:"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-json",children:'resource "local_file" "resource_name" {\r\n  filename = "/opt/resource.txt"\r\n  content = "some content"\r\n  directory_permission = "0777"\r\n  file_permission = "0700"\r\n\r\n  lifecycle {\r\n   create_before_destroy = true \r\n  }\r\n}\n'})}),"\n",(0,i.jsx)(r.h4,{id:"prevent-destroy",children:"Prevent Destroy"}),"\n",(0,i.jsxs)(r.p,{children:["If you don't want old version to be destroyed by changes - ",(0,i.jsx)(r.code,{children:"terraform destroy"})," will still remove everything:"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-json",children:'resource "local_file" "resource_name" {\r\n  filename = "/opt/resource.txt"\r\n  content = "some content"\r\n  directory_permission = "0777"\r\n  file_permission = "0700"\r\n\r\n  lifecycle {\r\n   prevent_destroy = true \r\n  }\r\n}\n'})}),"\n",(0,i.jsx)(r.h4,{id:"ignore-changes",children:"Ignore Changes"}),"\n",(0,i.jsxs)(r.p,{children:["A re-run of the Terraform task should not change back something if it has been changed by an external software - or use ",(0,i.jsx)(r.code,{children:"ignore_changes = all"})," to ignore everything:"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-json",children:'resource "local_file" "resource_name" {\r\n  filename = "/opt/resource.txt"\r\n  content = "some content"\r\n  directory_permission = "0777"\r\n  file_permission = "0700"\r\n\r\n  lifecycle {\r\n   ignore_changes = [\r\n     file_permission\r\n   ]\r\n  }\r\n}\n'})})]})}function h(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},652276:(e,r,n)=>{n.d(r,{A:()=>i});const i=n.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-b4069a75bcc367b963068ceb94b1fc89.jpg"},28453:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>t});var i=n(296540);const a={},o=i.createContext(a);function s(e){const r=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function t(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(o.Provider,{value:r},e.children)}}}]);