"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[59021],{542457:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>h,toc:()=>l});var o=n(474848),s=n(28453);const r={sidebar_position:1e4,slug:"2017-12-17",title:"Python Network Logger",authors:"mpolinowski",tags:["Python"]},i="Python SSH Logger",h={id:"Development/Python/2017-12-17--python-ssh-logger/index",title:"Python Network Logger",description:"Harbin, China",source:"@site/docs/Development/Python/2017-12-17--python-ssh-logger/index.mdx",sourceDirName:"Development/Python/2017-12-17--python-ssh-logger",slug:"/Development/Python/2017-12-17--python-ssh-logger/2017-12-17",permalink:"/docs/Development/Python/2017-12-17--python-ssh-logger/2017-12-17",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Development/Python/2017-12-17--python-ssh-logger/index.mdx",tags:[{label:"Python",permalink:"/docs/tags/python"}],version:"current",sidebarPosition:1e4,frontMatter:{sidebar_position:1e4,slug:"2017-12-17",title:"Python Network Logger",authors:"mpolinowski",tags:["Python"]},sidebar:"tutorialSidebar",previous:{title:"Getting started with Python",permalink:"/docs/Development/Python/2017-12-11--getting-started-with-python/2017-12-11"},next:{title:"Go",permalink:"/docs/category/go"}},a={},l=[];function c(e){const t={a:"a",code:"code",h1:"h1",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Harbin, China",src:n(721964).A+"",width:"1500",height:"603"})}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"#python-ssh-logger",children:"Python SSH Logger"})}),"\n"]}),"\n",(0,o.jsx)(t.h1,{id:"python-ssh-logger",children:"Python SSH Logger"}),"\n",(0,o.jsx)(t.p,{children:"We want to build a small python program that allows us to log server states over the network by SSH. We start with creating 3 environment files that hold the server ip address, the SSH user login and the commands that we have to send to the server to get the information:"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsx)(t.li,{children:"serverip.env"}),"\n",(0,o.jsx)(t.li,{children:"userlogin.env"}),"\n",(0,o.jsx)(t.li,{children:"commands.env"}),"\n"]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"https://github.com/mpolinowski/python-ssh-logger/blob/master/ip_file_valid.py",children:"ip_file_valid.py"})," : Ask for ",(0,o.jsx)(t.code,{children:"serverip.env"})," file location and read IP address"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"https://github.com/mpolinowski/python-ssh-logger/blob/master/ip_addr_valid.py",children:"ip_addr_valid.py"})," : Check if Server IP is a valid IP and does not belong to a restricted range."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"https://github.com/mpolinowski/python-ssh-logger/blob/master/ip_reach.py",children:"ip_reach.py"})," : Check if IP address can be pinged,"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"https://github.com/mpolinowski/python-ssh-logger/blob/master/ssh_connect.py",children:"ssh_connect.py"})," : Verify ",(0,o.jsx)(t.code,{children:"userlogin.env"})," and ",(0,o.jsx)(t.code,{children:"commands.env"})," and use ",(0,o.jsx)(t.strong,{children:"Paramiko"})," to connect to your server and send commands via SSHv2."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"https://github.com/mpolinowski/python-ssh-logger/blob/master/create_threads.py",children:"create_threads.py"})," create parallel threads for each SSH connection (only useful if you contact more than 1 server at once)"]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["The command I want to use is the ",(0,o.jsx)(t.code,{children:"top -n 1"})," that will give me an overview over the server load:"]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Python Network Logger",src:n(486411).A+"",width:"800",height:"214"})}),"\n",(0,o.jsxs)(t.p,{children:["To extract the CPU load from the server reply, I am going to use the following regular expression - not that we cannot prepend our RegEx with ",(0,o.jsx)(t.code,{children:"r"})," to get the RAW string, but have to use ",(0,o.jsx)(t.code,{children:"b"})," to handle the response that Python calls ",(0,o.jsx)(t.strong,{children:"byte-like"}),":"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:"# Searching for the CPU utilization value within the output of 'show processes top once'\r\ncpu = re.search(b'(%Cpu\\(s\\): ) (.+?)(us)', server_response)\r\n# cpu = server_response\r\n\r\n# Extracting the second group, which matches the actual value of the CPU utilization and decoding to the UTF-8 format from the binary data type\r\nutilization = cpu.group(2).decode('utf-8')\r\n# utilization = cpu.decode('utf-8')\r\n\r\n# Printing the CPU utilization value to the screen\r\n# print(utilization)\r\n\r\n# Opening the CPU utilization text file and appending the results\r\nwith open('E:\\\\python-ssh-logger\\\\cpu-load.txt', 'a') as f:\r\n    # f.write('{},{}\\n'.format(str(datetime.datetime.now()), utilization))\r\n    f.write(utilization + '\\n')\n"})}),"\n",(0,o.jsxs)(t.p,{children:["A good way to develop a fitting regular expression for your task is to test it on ",(0,o.jsx)(t.a,{href:"https://regex101.com/",children:"regex101.com"}),":"]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Python Network Logger",src:n(216560).A+"",width:"800",height:"450"})}),"\n",(0,o.jsxs)(t.p,{children:["Once the txt file with the CPU utilization is created, we can use ",(0,o.jsx)(t.a,{href:"https://matplotlib.org",children:"matplotlib"})," to plot the results in ",(0,o.jsx)(t.a,{href:"https://github.com/mpolinowski/python-ssh-logger/blob/master/graph.py",children:"graph.py"})," (You might have to install the library first ",(0,o.jsx)(t.code,{children:"python -m pip install matplotlib"}),")."]}),"\n",(0,o.jsx)(t.p,{children:"Running both programs parallel shows us the real-time CPU utilization of our server:"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Python Network Logger",src:n(813465).A+"",width:"800",height:"606"})})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},721964:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/photo-33vfghg3253_sd5767gw324d90_o-75fe936f031ba52bc019adcb39e29be9.png"},486411:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/python-network-logger_01-7eab27a067e13f5fded8b13f8152dfff.png"},216560:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/python-network-logger_02-6c9994e7a95e75f841eca6820532ad43.png"},813465:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/python-network-logger_03-e37013b6b3eb3bc4903b9425f9280b32.png"},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>h});var o=n(296540);const s={},r=o.createContext(s);function i(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function h(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);