"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[28535],{3905:(t,a,e)=>{e.d(a,{Zo:()=>d,kt:()=>g});var n=e(67294);function l(t,a,e){return a in t?Object.defineProperty(t,a,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[a]=e,t}function r(t,a){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(t,a).enumerable}))),e.push.apply(e,n)}return e}function i(t){for(var a=1;a<arguments.length;a++){var e=null!=arguments[a]?arguments[a]:{};a%2?r(Object(e),!0).forEach((function(a){l(t,a,e[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):r(Object(e)).forEach((function(a){Object.defineProperty(t,a,Object.getOwnPropertyDescriptor(e,a))}))}return t}function p(t,a){if(null==t)return{};var e,n,l=function(t,a){if(null==t)return{};var e,n,l={},r=Object.keys(t);for(n=0;n<r.length;n++)e=r[n],a.indexOf(e)>=0||(l[e]=t[e]);return l}(t,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(n=0;n<r.length;n++)e=r[n],a.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(l[e]=t[e])}return l}var o=n.createContext({}),s=function(t){var a=n.useContext(o),e=a;return t&&(e="function"==typeof t?t(a):i(i({},a),t)),e},d=function(t){var a=s(t.components);return n.createElement(o.Provider,{value:a},t.children)},m={inlineCode:"code",wrapper:function(t){var a=t.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(t,a){var e=t.components,l=t.mdxType,r=t.originalType,o=t.parentName,d=p(t,["components","mdxType","originalType","parentName"]),u=s(e),g=l,k=u["".concat(o,".").concat(g)]||u[g]||m[g]||r;return e?n.createElement(k,i(i({ref:a},d),{},{components:e})):n.createElement(k,i({ref:a},d))}));function g(t,a){var e=arguments,l=a&&a.mdxType;if("string"==typeof t||l){var r=e.length,i=new Array(r);i[0]=u;var p={};for(var o in a)hasOwnProperty.call(a,o)&&(p[o]=a[o]);p.originalType=t,p.mdxType="string"==typeof t?t:l,i[1]=p;for(var s=2;s<r;s++)i[s]=e[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,e)}u.displayName="MDXCreateElement"},3296:(t,a,e)=>{e.r(a),e.d(a,{assets:()=>o,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>p,toc:()=>s});var n=e(87462),l=(e(67294),e(3905));const r={sidebar_position:4490,slug:"2023-04-09",title:"Principal Component Analysis (PCA)",authors:"mpolinowski",tags:["Python","Machine Learning"],description:"To aid visualization of the structure of a dataset, the dimension must be reduced in some way."},i=void 0,p={unversionedId:"IoT-and-Machine-Learning/ML/2023-04-09-principal-component-analysis/index",id:"IoT-and-Machine-Learning/ML/2023-04-09-principal-component-analysis/index",title:"Principal Component Analysis (PCA)",description:"To aid visualization of the structure of a dataset, the dimension must be reduced in some way.",source:"@site/docs/IoT-and-Machine-Learning/ML/2023-04-09-principal-component-analysis/index.md",sourceDirName:"IoT-and-Machine-Learning/ML/2023-04-09-principal-component-analysis",slug:"/IoT-and-Machine-Learning/ML/2023-04-09-principal-component-analysis/2023-04-09",permalink:"/docs/IoT-and-Machine-Learning/ML/2023-04-09-principal-component-analysis/2023-04-09",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IoT-and-Machine-Learning/ML/2023-04-09-principal-component-analysis/index.md",tags:[{label:"Python",permalink:"/docs/tags/python"},{label:"Machine Learning",permalink:"/docs/tags/machine-learning"}],version:"current",sidebarPosition:4490,frontMatter:{sidebar_position:4490,slug:"2023-04-09",title:"Principal Component Analysis (PCA)",authors:"mpolinowski",tags:["Python","Machine Learning"],description:"To aid visualization of the structure of a dataset, the dimension must be reduced in some way."},sidebar:"tutorialSidebar",previous:{title:"Locally Linear Embedding (LLE)",permalink:"/docs/IoT-and-Machine-Learning/ML/2023-04-11-locally-linear-embedding/2023-04-11"},next:{title:"Tensorflow 2 - Unsupervised Learning",permalink:"/docs/IoT-and-Machine-Learning/ML/2023-03-26-tensorflow-unsupervised-learning-generative-adversial-networks/2023-03-26"}},o={},s=[{value:"Dataset",id:"dataset",level:2},{value:"Preprocessing",id:"preprocessing",level:3},{value:"Visualization",id:"visualization",level:3},{value:"Boxplots",id:"boxplots",level:4},{value:"Histograms",id:"histograms",level:4},{value:"Pairplot",id:"pairplot",level:4},{value:"Principal Component Analaysis",id:"principal-component-analaysis",level:2},{value:"Scree Plot",id:"scree-plot",level:3},{value:"Component PCA Weights",id:"component-pca-weights",level:3},{value:"Transformation and Visualization",id:"transformation-and-visualization",level:2},{value:"2D Plot",id:"2d-plot",level:3},{value:"3D Plot",id:"3d-plot",level:3}],d={toc:s};function m(t){let{components:a,...r}=t;return(0,l.kt)("wrapper",(0,n.Z)({},d,r,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Victoria Harbour, Hongkong",src:e(20688).Z,width:"2385",height:"858"})),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#dimensionality-reduction"},"Dimensionality Reduction"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#dataset"},"Dataset"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#preprocessing"},"Preprocessing")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#visualization"},"Visualization"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#boxplots"},"Boxplots")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#histograms"},"Histograms")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#pairplot"},"Pairplot")))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#principal-component-analaysis"},"Principal Component Analaysis"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#scree-plot"},"Scree Plot")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#component-pca-weights"},"Component PCA Weights")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#transformation-and-visualization"},"Transformation and Visualization"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#2d-plot"},"2D Plot")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#3d-plot"},"3D Plot"))))))),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/mpolinowski/principle-component-analysis"},"Github Repository")),(0,l.kt)("h1",{id:"dimensionality-reduction"},"Dimensionality Reduction"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://scikit-learn.org/stable/modules/manifold.html"},"Manifold learning")," is an approach to non-linear dimensionality reduction. Algorithms for this task are based on the idea that the dimensionality of many data sets is only artificially high."),(0,l.kt)("p",null,"High-dimensional datasets can be very difficult to visualize. While data in two or three dimensions can be plotted to show the inherent structure of the data, equivalent high-dimensional plots are much less intuitive. To aid visualization of the structure of a dataset, the dimension must be reduced in some way."),(0,l.kt)("p",null,"The simplest way to accomplish this dimensionality reduction is by taking a random projection of the data. Though this allows some degree of visualization of the data structure, the randomness of the choice leaves much to be desired. In a random projection, it is likely that the more interesting structure within the data will be lost."),(0,l.kt)("p",null,"To address this concern, a number of supervised and unsupervised linear dimensionality reduction frameworks have been designed, such as:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/IoT-and-Machine-Learning/ML/2023-04-09-principal-component-analysis/2023-04-09"},"Principal Component Analysis (PCA)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/IoT-and-Machine-Learning/ML/2023-04-11-locally-linear-embedding/2023-04-11"},"Locally Linear Embedding (LLE)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/IoT-and-Machine-Learning/ML/2023-04-12-tstochastic-neighbor-embedding/2023-04-12"},"tStochastic Neighbor Embedding (t-SNE)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/docs/IoT-and-Machine-Learning/ML/2023-04-13-multi-dimensional-scaling/2023-04-13"},"Multidimensional Scaling (MDS)"))),(0,l.kt)("h2",{id:"dataset"},"Dataset"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("a",{parentName:"p",href:"https://www.researchgate.net/publication/243766527_A_multivariate_study_of_variation_in_two_species_of_rock_crab_of_genus_Leptograpsus"},"A multivariate study of variation in two species of rock crab of genus Leptograpsus"),": A multivariate approach has been used to study morphological variation in the blue and orange-form species of rock crab of the genus Leptograpsus. Objective criteria for the identification of the two species are established, based on the following characters:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"SP"),": Species (Blue or Orange)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Sex"),": Male or Female"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"FL"),": Width of the frontal region of the carapace; "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"RW"),": Width of the posterior region of the carapace (rear width); "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"CL"),": Length of the carapace along the midline;"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"CW"),": Maximum width of the carapace; "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"BD"),": and the depth of the body;")),(0,l.kt)("p",null,"The dataset can be ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/tercen/crabs_dataset"},"downloaded from Github"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"pd.set_option('display.precision', 3)\nleptograpsus_data = pd.read_csv('data/A_multivariate_study_of_variation_in_two_species_of_rock_crab_of_genus_Leptograpsus.csv')\nleptograpsus_data.head()\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"sp"),(0,l.kt)("th",{parentName:"tr",align:null},"sex"),(0,l.kt)("th",{parentName:"tr",align:null},"index"),(0,l.kt)("th",{parentName:"tr",align:null},"FL"),(0,l.kt)("th",{parentName:"tr",align:null},"RW"),(0,l.kt)("th",{parentName:"tr",align:null},"CL"),(0,l.kt)("th",{parentName:"tr",align:null},"CW"),(0,l.kt)("th",{parentName:"tr",align:null},"BD"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"B"),(0,l.kt)("td",{parentName:"tr",align:null},"M"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"8.1"),(0,l.kt)("td",{parentName:"tr",align:null},"6.7"),(0,l.kt)("td",{parentName:"tr",align:null},"16.1"),(0,l.kt)("td",{parentName:"tr",align:null},"19.0"),(0,l.kt)("td",{parentName:"tr",align:null},"7.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"B"),(0,l.kt)("td",{parentName:"tr",align:null},"M"),(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"8.8"),(0,l.kt)("td",{parentName:"tr",align:null},"7.7"),(0,l.kt)("td",{parentName:"tr",align:null},"18.1"),(0,l.kt)("td",{parentName:"tr",align:null},"20.8"),(0,l.kt)("td",{parentName:"tr",align:null},"7.4")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"B"),(0,l.kt)("td",{parentName:"tr",align:null},"M"),(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"9.2"),(0,l.kt)("td",{parentName:"tr",align:null},"7.8"),(0,l.kt)("td",{parentName:"tr",align:null},"19.0"),(0,l.kt)("td",{parentName:"tr",align:null},"22.4"),(0,l.kt)("td",{parentName:"tr",align:null},"7.7")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"B"),(0,l.kt)("td",{parentName:"tr",align:null},"M"),(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"9.6"),(0,l.kt)("td",{parentName:"tr",align:null},"7.9"),(0,l.kt)("td",{parentName:"tr",align:null},"20.1"),(0,l.kt)("td",{parentName:"tr",align:null},"23.1"),(0,l.kt)("td",{parentName:"tr",align:null},"8.2")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"B"),(0,l.kt)("td",{parentName:"tr",align:null},"M"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"9.8"),(0,l.kt)("td",{parentName:"tr",align:null},"8.0"),(0,l.kt)("td",{parentName:"tr",align:null},"20.3"),(0,l.kt)("td",{parentName:"tr",align:null},"23.0"),(0,l.kt)("td",{parentName:"tr",align:null},"8.2")))),(0,l.kt)("h3",{id:"preprocessing"},"Preprocessing"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data = leptograpsus_data.rename(columns={\n    'sp': 'species',\n    'FL': 'Frontal Lobe',\n    'RW': 'Rear Width',\n    'CL': 'Carapace Midline',\n    'CW': 'Maximum Width',\n    'BD': 'Body Depth'})\n\ndata['species'] = data['species'].map({'B':'Blue', 'O':'Orange'})\ndata['sex'] = data['sex'].map({'M':'Male', 'F':'Female'})\n\ndata.head()\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"species"),(0,l.kt)("th",{parentName:"tr",align:null},"sex"),(0,l.kt)("th",{parentName:"tr",align:null},"index"),(0,l.kt)("th",{parentName:"tr",align:null},"Frontal Lobe"),(0,l.kt)("th",{parentName:"tr",align:null},"Rear Width"),(0,l.kt)("th",{parentName:"tr",align:null},"Carapace Midline"),(0,l.kt)("th",{parentName:"tr",align:null},"Maximum Width"),(0,l.kt)("th",{parentName:"tr",align:null},"Body Depth"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"Blue"),(0,l.kt)("td",{parentName:"tr",align:null},"Male"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"8.1"),(0,l.kt)("td",{parentName:"tr",align:null},"6.7"),(0,l.kt)("td",{parentName:"tr",align:null},"16.1"),(0,l.kt)("td",{parentName:"tr",align:null},"19.0"),(0,l.kt)("td",{parentName:"tr",align:null},"7.0")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Blue"),(0,l.kt)("td",{parentName:"tr",align:null},"Male"),(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"8.8"),(0,l.kt)("td",{parentName:"tr",align:null},"7.7"),(0,l.kt)("td",{parentName:"tr",align:null},"18.1"),(0,l.kt)("td",{parentName:"tr",align:null},"20.8"),(0,l.kt)("td",{parentName:"tr",align:null},"7.4")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"Blue"),(0,l.kt)("td",{parentName:"tr",align:null},"Male"),(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"9.2"),(0,l.kt)("td",{parentName:"tr",align:null},"7.8"),(0,l.kt)("td",{parentName:"tr",align:null},"19.0"),(0,l.kt)("td",{parentName:"tr",align:null},"22.4"),(0,l.kt)("td",{parentName:"tr",align:null},"7.7")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"Blue"),(0,l.kt)("td",{parentName:"tr",align:null},"Male"),(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"9.6"),(0,l.kt)("td",{parentName:"tr",align:null},"7.9"),(0,l.kt)("td",{parentName:"tr",align:null},"20.1"),(0,l.kt)("td",{parentName:"tr",align:null},"23.1"),(0,l.kt)("td",{parentName:"tr",align:null},"8.2")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"Blue"),(0,l.kt)("td",{parentName:"tr",align:null},"Male"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"9.8"),(0,l.kt)("td",{parentName:"tr",align:null},"8.0"),(0,l.kt)("td",{parentName:"tr",align:null},"20.3"),(0,l.kt)("td",{parentName:"tr",align:null},"23.0"),(0,l.kt)("td",{parentName:"tr",align:null},"8.2")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data.shape\n# (200, 8)\n\ndata_columns = ['Frontal Lobe',\n                'Rear Width',\n                'Carapace Midline',\n                'Maximum Width',\n                'Body Depth']\n\ndata[data_columns].describe()\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Frontal Lobe"),(0,l.kt)("th",{parentName:"tr",align:null},"Rear Width"),(0,l.kt)("th",{parentName:"tr",align:null},"Carapace Midline"),(0,l.kt)("th",{parentName:"tr",align:null},"Maximum Width"),(0,l.kt)("th",{parentName:"tr",align:null},"Body Depth"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"200.000"),(0,l.kt)("td",{parentName:"tr",align:null},"200.000"),(0,l.kt)("td",{parentName:"tr",align:null},"200.000"),(0,l.kt)("td",{parentName:"tr",align:null},"200.000"),(0,l.kt)("td",{parentName:"tr",align:null},"200.000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"25.500"),(0,l.kt)("td",{parentName:"tr",align:null},"15.583"),(0,l.kt)("td",{parentName:"tr",align:null},"12.800"),(0,l.kt)("td",{parentName:"tr",align:null},"32.100"),(0,l.kt)("td",{parentName:"tr",align:null},"36.800")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"14.467"),(0,l.kt)("td",{parentName:"tr",align:null},"3.495"),(0,l.kt)("td",{parentName:"tr",align:null},"2.573"),(0,l.kt)("td",{parentName:"tr",align:null},"7.119"),(0,l.kt)("td",{parentName:"tr",align:null},"7.872")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1.000"),(0,l.kt)("td",{parentName:"tr",align:null},"7.200"),(0,l.kt)("td",{parentName:"tr",align:null},"6.500"),(0,l.kt)("td",{parentName:"tr",align:null},"14.700"),(0,l.kt)("td",{parentName:"tr",align:null},"17.100")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"13.000"),(0,l.kt)("td",{parentName:"tr",align:null},"12.900"),(0,l.kt)("td",{parentName:"tr",align:null},"11.000"),(0,l.kt)("td",{parentName:"tr",align:null},"27.275"),(0,l.kt)("td",{parentName:"tr",align:null},"31.500")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"25.500"),(0,l.kt)("td",{parentName:"tr",align:null},"15.550"),(0,l.kt)("td",{parentName:"tr",align:null},"12.800"),(0,l.kt)("td",{parentName:"tr",align:null},"32.100"),(0,l.kt)("td",{parentName:"tr",align:null},"36.800")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"38.000"),(0,l.kt)("td",{parentName:"tr",align:null},"18.050"),(0,l.kt)("td",{parentName:"tr",align:null},"14.300"),(0,l.kt)("td",{parentName:"tr",align:null},"37.225"),(0,l.kt)("td",{parentName:"tr",align:null},"42.000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"50.000"),(0,l.kt)("td",{parentName:"tr",align:null},"23.100"),(0,l.kt)("td",{parentName:"tr",align:null},"20.200"),(0,l.kt)("td",{parentName:"tr",align:null},"47.600"),(0,l.kt)("td",{parentName:"tr",align:null},"54.600")))),(0,l.kt)("p",null,"The dataset now needs to be segmented into ",(0,l.kt)("strong",{parentName:"p"},"4 Classes")," for sex (",(0,l.kt)("inlineCode",{parentName:"p"},"male"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"female"),") and species (",(0,l.kt)("inlineCode",{parentName:"p"},"blue"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"orange"),"). We can add this identifier as an additional row to our dataset inform of a concatenate value from the species and sex feature:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data['class'] = data.species + data.sex\ndata['class'].value_counts()\n")),(0,l.kt)("p",null,"The entire dataset has a size of ",(0,l.kt)("inlineCode",{parentName:"p"},"200")," and each class is equally represented with ",(0,l.kt)("inlineCode",{parentName:"p"},"50")," specimens:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"BlueMale :        ",(0,l.kt)("strong",{parentName:"li"},"50")),(0,l.kt)("li",{parentName:"ul"},"BlueFemale :      ",(0,l.kt)("strong",{parentName:"li"},"50")),(0,l.kt)("li",{parentName:"ul"},"OrangeMale :      ",(0,l.kt)("strong",{parentName:"li"},"50")),(0,l.kt)("li",{parentName:"ul"},"OrangeFemale :     ",(0,l.kt)("strong",{parentName:"li"},"50"))),(0,l.kt)("p",null,"Name: class, dtype: int64"),(0,l.kt)("h3",{id:"visualization"},"Visualization"),(0,l.kt)("h4",{id:"boxplots"},"Boxplots"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# plot features vs classes\nfig, axes = plt.subplots(nrows=3, ncols=2, figsize=(18,18))\ndata[data_columns].boxplot(ax=axes[0,0])\ndata.boxplot(column='Frontal Lobe', by='class', ax=axes[0,1])\ndata.boxplot(column='Rear Width', by = 'class', ax=axes[1,0])\ndata.boxplot(column='Carapace Midline', by='class', ax=axes[1,1])\ndata.boxplot(column='Maximum Width', by = 'class', ax=axes[2,0])\ndata.boxplot(column='Body Depth', by = 'class', ax=axes[2,1])\n")),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Dimensionality Reduction",src:e(16157).Z,width:"1487",height:"1557"})),(0,l.kt)("p",null,"While the orange and blue female show a good separation in several features the male counterparts are very close together. The ",(0,l.kt)("strong",{parentName:"p"},"Body Depth")," and ",(0,l.kt)("strong",{parentName:"p"},"Frontal Lobe")," dimensions are the best features to differentiate both species in the male sub class."),(0,l.kt)("h4",{id:"histograms"},"Histograms"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data[data_columns].hist(figsize=(12,6), layout=(2,3))\n")),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Dimensionality Reduction",src:e(48540).Z,width:"977",height:"528"})),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"fig, axes = plt.subplots(nrows=5, ncols=1, figsize=(10,20))\nsns.histplot(data, x='Frontal Lobe', hue='class', kde=True, element='step', bins=20, ax=axes[0])\nsns.histplot(data, x='Rear Width', hue='class', kde=True, element='step', bins=20, ax=axes[1])\nsns.histplot(data, x='Carapace Midline', hue='class', kde=True, element='step', bins=20, ax=axes[2])\nsns.histplot(data, x='Maximum Width', hue='class', kde=True, element='step', bins=20, ax=axes[3])\nsns.histplot(data, x='Body Depth', hue='class', kde=True, element='step', bins=20, ax=axes[4])\n")),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Dimensionality Reduction",src:e(44900).Z,width:"833",height:"1603"})),(0,l.kt)("p",null,"Again, the orange and blue coloured distributions - representing the females of the orange and blue species - are well seperated. But there is a large overlap between the male counterparts. We can see that while the boxplot still showed a visible difference in the ",(0,l.kt)("strong",{parentName:"p"},"Frontal Lobe")," and ",(0,l.kt)("strong",{parentName:"p"},"Body Depth")," mean value, it is much harder to differentiate the histrograms."),(0,l.kt)("h4",{id:"pairplot"},"Pairplot"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"sns.pairplot(data, hue='class')\n# sns.pairplot(data, hue='class', diag_kind=\"hist\")\n")),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Dimensionality Reduction",src:e(14447).Z,width:"1641",height:"1476"})),(0,l.kt)("p",null,"The pairplot plots the relationships of each pair of features. We can see that there are several plots that separate between our female and male classes. For example the ",(0,l.kt)("strong",{parentName:"p"},"Rear Width")," separates the green/blue (male) dots from the orange/red (female) ones. There is some separation between both female species (red/orange dots) in the ",(0,l.kt)("strong",{parentName:"p"},"Frontal Lobe")," and ",(0,l.kt)("strong",{parentName:"p"},"Body Depth")," graphs. But again, it is hard to separate both male species - there is always a strong overlap between the blue and green dots."),(0,l.kt)("h2",{id:"principal-component-analaysis"},"Principal Component Analaysis"),(0,l.kt)("p",null,"A PCA is a reduction technique that transforms a high-dimensional data set into a new lower-dimensional data set. At the same time, preserving the maximum amount of information from the original data."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# Normalize data columns before applying PCA\ndata_norm = data.copy()\ndata_norm[data_columns] = StandardScaler().fit_transform(data[data_columns])\ndata_norm.describe().T\n")),(0,l.kt)("p",null,"Normalization sets the mean of all data columns to ~",(0,l.kt)("inlineCode",{parentName:"p"},"0")," and the standard deviation to ~",(0,l.kt)("inlineCode",{parentName:"p"},"1"),":"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"count"),(0,l.kt)("th",{parentName:"tr",align:null},"mean"),(0,l.kt)("th",{parentName:"tr",align:null},"std"),(0,l.kt)("th",{parentName:"tr",align:null},"min"),(0,l.kt)("th",{parentName:"tr",align:null},"25%"),(0,l.kt)("th",{parentName:"tr",align:null},"50%"),(0,l.kt)("th",{parentName:"tr",align:null},"75%"),(0,l.kt)("th",{parentName:"tr",align:null},"max"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"index"),(0,l.kt)("td",{parentName:"tr",align:null},"200.0"),(0,l.kt)("td",{parentName:"tr",align:null},"2.550e+01"),(0,l.kt)("td",{parentName:"tr",align:null},"14.467"),(0,l.kt)("td",{parentName:"tr",align:null},"1.000"),(0,l.kt)("td",{parentName:"tr",align:null},"13.000"),(0,l.kt)("td",{parentName:"tr",align:null},"2.550e+01"),(0,l.kt)("td",{parentName:"tr",align:null},"38.000"),(0,l.kt)("td",{parentName:"tr",align:null},"50.000")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Frontal Lobe"),(0,l.kt)("td",{parentName:"tr",align:null},"200.0"),(0,l.kt)("td",{parentName:"tr",align:null},"-7.105e-17"),(0,l.kt)("td",{parentName:"tr",align:null},"1.003"),(0,l.kt)("td",{parentName:"tr",align:null},"-2.404"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.770"),(0,l.kt)("td",{parentName:"tr",align:null},"-9.465e-03"),(0,l.kt)("td",{parentName:"tr",align:null},"0.708"),(0,l.kt)("td",{parentName:"tr",align:null},"2.156")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Rear Width"),(0,l.kt)("td",{parentName:"tr",align:null},"200.0"),(0,l.kt)("td",{parentName:"tr",align:null},"6.040e-16"),(0,l.kt)("td",{parentName:"tr",align:null},"1.003"),(0,l.kt)("td",{parentName:"tr",align:null},"-2.430"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.677"),(0,l.kt)("td",{parentName:"tr",align:null},"2.396e-02"),(0,l.kt)("td",{parentName:"tr",align:null},"0.608"),(0,l.kt)("td",{parentName:"tr",align:null},"2.907")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Carapace Midline"),(0,l.kt)("td",{parentName:"tr",align:null},"200.0"),(0,l.kt)("td",{parentName:"tr",align:null},"1.066e-16"),(0,l.kt)("td",{parentName:"tr",align:null},"1.003"),(0,l.kt)("td",{parentName:"tr",align:null},"-2.451"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.680"),(0,l.kt)("td",{parentName:"tr",align:null},"-7.745e-04"),(0,l.kt)("td",{parentName:"tr",align:null},"0.721"),(0,l.kt)("td",{parentName:"tr",align:null},"2.182")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Maximum Width"),(0,l.kt)("td",{parentName:"tr",align:null},"200.0"),(0,l.kt)("td",{parentName:"tr",align:null},"-4.974e-16"),(0,l.kt)("td",{parentName:"tr",align:null},"1.003"),(0,l.kt)("td",{parentName:"tr",align:null},"-2.460"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.626"),(0,l.kt)("td",{parentName:"tr",align:null},"4.909e-02"),(0,l.kt)("td",{parentName:"tr",align:null},"0.711"),(0,l.kt)("td",{parentName:"tr",align:null},"2.316")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Body Depth"),(0,l.kt)("td",{parentName:"tr",align:null},"200.0"),(0,l.kt)("td",{parentName:"tr",align:null},"0.000e+00"),(0,l.kt)("td",{parentName:"tr",align:null},"1.003"),(0,l.kt)("td",{parentName:"tr",align:null},"-2.321"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.770"),(0,l.kt)("td",{parentName:"tr",align:null},"-3.820e-02"),(0,l.kt)("td",{parentName:"tr",align:null},"0.752"),(0,l.kt)("td",{parentName:"tr",align:null},"2.216")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# number of classes = 5\nno_components = 5\nprincipal = PCA(n_components = no_components)\nprincipal.fit(data_norm[data_columns])\n\ndata_transformed=principal.transform(data_norm[data_columns])\nprint(data_transformed.shape)\n# (200, 5)\n\nsingular_values = principal.singular_values_\nvariance_ratio = principal.explained_variance_ratio_\n# show variance vector for each dimension\nprint(variance_ratio)\nprint(variance_ratio.cumsum())\nprint(singular_values)\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"Frontal Lobe"),(0,l.kt)("th",{parentName:"tr",align:null},"Rear Width"),(0,l.kt)("th",{parentName:"tr",align:null},"Carapace Midline"),(0,l.kt)("th",{parentName:"tr",align:null},"Maximum Width"),(0,l.kt)("th",{parentName:"tr",align:null},"Body Depth"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Explained Variance"),(0,l.kt)("td",{parentName:"tr",align:null},"9.57766957e-01"),(0,l.kt)("td",{parentName:"tr",align:null},"3.03370413e-02"),(0,l.kt)("td",{parentName:"tr",align:null},"9.32659482e-03"),(0,l.kt)("td",{parentName:"tr",align:null},"2.22707143e-03"),(0,l.kt)("td",{parentName:"tr",align:null},"3.42335531e-04")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Cumulative Sum"),(0,l.kt)("td",{parentName:"tr",align:null},"0.95776696"),(0,l.kt)("td",{parentName:"tr",align:null},"0.988104"),(0,l.kt)("td",{parentName:"tr",align:null},"0.99743059"),(0,l.kt)("td",{parentName:"tr",align:null},"0.99965766"),(0,l.kt)("td",{parentName:"tr",align:null},"1.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Singular Values"),(0,l.kt)("td",{parentName:"tr",align:null},"30.94781021"),(0,l.kt)("td",{parentName:"tr",align:null},"5.50790717"),(0,l.kt)("td",{parentName:"tr",align:null},"3.05394742"),(0,l.kt)("td",{parentName:"tr",align:null},"1.49233757"),(0,l.kt)("td",{parentName:"tr",align:null},"0.58509446")))),(0,l.kt)("p",null,"Adding variables to our model can increase our models performance if the added variable adds explanatory power. Too many variables, especially non-correlating or noisy dimensions, can lead to overfitting. As seen above, already using 2 (",(0,l.kt)("inlineCode",{parentName:"p"},"98.8%"),") or 3 (",(0,l.kt)("inlineCode",{parentName:"p"},"99.7%"),") of our 5 classes allows us to describe our dataset with a high accuracy - the additional 2 will not add much value."),(0,l.kt)("h3",{id:"scree-plot"},"Scree Plot"),(0,l.kt)("p",null,"A Scree plot is a graph useful to plot the eigenvectors. This plot is useful to determine the PCA. It orders the values in descending order that is from largest to smallest. It allows us to determine the number of Principal Component is a graphical representation by visualizing the amount of variation a value adds to a given dataset."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"fig = plt.figure(figsize=(10, 6))\nplt.plot(range(1, (no_components+1)), singular_values, marker='.')\ny_label = plt.ylabel('Singular Values')\nx_label = plt.xlabel('Principal Components')\nplt.title('Scree Plot')\n")),(0,l.kt)("p",null,' According to the scree test, the "elbow" of the graph where the eigenvalues seem to level off is found and factors or components to the left of this point should be retained as significant - here this would be the first two or three classes:'),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Dimensionality Reduction",src:e(4450).Z,width:"841",height:"547"})),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"fig = plt.figure(figsize=(10, 6))\n\nplt.plot(range(1, (no_components+1)), variance_ratio, marker='.', label='Explained Variance')\nplt.plot(range(1, (no_components+1)), variance_ratio.cumsum(), marker='.', label='Cumulative Sum')\n\ny_label = plt.ylabel('Explained Variance')\nx_label = plt.xlabel('Principal Components')\nplt.title('Percentage of Variance by Component')\nplt.legend()\n")),(0,l.kt)("p",null,"The values of the amount of variance a component brings to our dataset and it's cumulative sum shows the same 'elbow' to pick our principal components from:"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Dimensionality Reduction",src:e(31191).Z,width:"846",height:"547"})),(0,l.kt)("h3",{id:"component-pca-weights"},"Component PCA Weights"),(0,l.kt)("p",null,"Our Principal Component Analysis assigned weights to each component allowing us to discard components that do not help us to classify the species in our dataset. Those weights can be visualized in a heatmap:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"fig = plt.figure(figsize=(12, 8))\nsns.heatmap(\n    principal.components_,\n    cmap='coolwarm',\n    xticklabels=list(data.columns[3:-1]),\n    annot=True)\n")),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Dimensionality Reduction",src:e(21124).Z,width:"908",height:"659"})),(0,l.kt)("h2",{id:"transformation-and-visualization"},"Transformation and Visualization"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# use 3 principal components out of the 5 components\nprint(data_transformed[:,:3])\n\n# append the 3 principal components to the norm dataframe\ndata_norm[['PC1', 'PC2', 'PC3']] = data_transformed[:,:3]\n\ndata_norm.head()\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"species"),(0,l.kt)("th",{parentName:"tr",align:null},"sex"),(0,l.kt)("th",{parentName:"tr",align:null},"index"),(0,l.kt)("th",{parentName:"tr",align:null},"Frontal Lobe"),(0,l.kt)("th",{parentName:"tr",align:null},"Rear Width"),(0,l.kt)("th",{parentName:"tr",align:null},"Carapace Midline"),(0,l.kt)("th",{parentName:"tr",align:null},"Maximum Width"),(0,l.kt)("th",{parentName:"tr",align:null},"Body Depth"),(0,l.kt)("th",{parentName:"tr",align:null},"class"),(0,l.kt)("th",{parentName:"tr",align:null},"PC1"),(0,l.kt)("th",{parentName:"tr",align:null},"PC2"),(0,l.kt)("th",{parentName:"tr",align:null},"PC3"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"Blue"),(0,l.kt)("td",{parentName:"tr",align:null},"Male"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"-2.146"),(0,l.kt)("td",{parentName:"tr",align:null},"-2.352"),(0,l.kt)("td",{parentName:"tr",align:null},"-2.254"),(0,l.kt)("td",{parentName:"tr",align:null},"-2.218"),(0,l.kt)("td",{parentName:"tr",align:null},"-2.058"),(0,l.kt)("td",{parentName:"tr",align:null},"BlueMale"),(0,l.kt)("td",{parentName:"tr",align:null},"4.928"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.268"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.122")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Blue"),(0,l.kt)("td",{parentName:"tr",align:null},"Male"),(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"-1.945"),(0,l.kt)("td",{parentName:"tr",align:null},"-1.963"),(0,l.kt)("td",{parentName:"tr",align:null},"-1.972"),(0,l.kt)("td",{parentName:"tr",align:null},"-1.989"),(0,l.kt)("td",{parentName:"tr",align:null},"-1.941"),(0,l.kt)("td",{parentName:"tr",align:null},"BlueMale"),(0,l.kt)("td",{parentName:"tr",align:null},"4.386"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.094"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.039")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"Blue"),(0,l.kt)("td",{parentName:"tr",align:null},"Male"),(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"-1.831"),(0,l.kt)("td",{parentName:"tr",align:null},"-1.924"),(0,l.kt)("td",{parentName:"tr",align:null},"-1.846"),(0,l.kt)("td",{parentName:"tr",align:null},"-1.785"),(0,l.kt)("td",{parentName:"tr",align:null},"-1.853"),(0,l.kt)("td",{parentName:"tr",align:null},"BlueMale"),(0,l.kt)("td",{parentName:"tr",align:null},"4.129"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.169"),(0,l.kt)("td",{parentName:"tr",align:null},"0.034")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"Blue"),(0,l.kt)("td",{parentName:"tr",align:null},"Male"),(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"-1.716"),(0,l.kt)("td",{parentName:"tr",align:null},"-1.885"),(0,l.kt)("td",{parentName:"tr",align:null},"-1.691"),(0,l.kt)("td",{parentName:"tr",align:null},"-1.696"),(0,l.kt)("td",{parentName:"tr",align:null},"-1.707"),(0,l.kt)("td",{parentName:"tr",align:null},"BlueMale"),(0,l.kt)("td",{parentName:"tr",align:null},"3.884"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.246"),(0,l.kt)("td",{parentName:"tr",align:null},"0.015")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"Blue"),(0,l.kt)("td",{parentName:"tr",align:null},"Male"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"-1.659"),(0,l.kt)("td",{parentName:"tr",align:null},"-1.846"),(0,l.kt)("td",{parentName:"tr",align:null},"-1.662"),(0,l.kt)("td",{parentName:"tr",align:null},"-1.708"),(0,l.kt)("td",{parentName:"tr",align:null},"-1.707"),(0,l.kt)("td",{parentName:"tr",align:null},"BlueMale"),(0,l.kt)("td",{parentName:"tr",align:null},"3.834"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.224"),(0,l.kt)("td",{parentName:"tr",align:null},"-0.015")))),(0,l.kt)("h3",{id:"2d-plot"},"2D Plot"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"fig = plt.figure(figsize=(12, 8))\n_ = sns.scatterplot(x='PC1', y='PC2', hue='class', data=data_norm)\n")),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Dimensionality Reduction",src:e(5833).Z,width:"1021",height:"679"})),(0,l.kt)("h3",{id:"3d-plot"},"3D Plot"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class_colours = {\n    'BlueMale': '#0027c4', #blue\n    'BlueFemale': '#f18b0a', #orange\n    'OrangeMale': '#0af10a', # green\n    'OrangeFemale': '#ff1500', #red\n}\n\ncolours = data['class'].apply(lambda x: class_colours[x])\n\nx=data_norm.PC1\ny=data_norm.PC2\nz=data_norm.PC3\n\nfig = plt.figure(figsize=(10,10))\nax = fig.add_subplot(projection='3d')\n\nax.scatter(xs=x, ys=y, zs=z, s=50, c=colours)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"plot = px.scatter_3d(\n    data_norm,\n    x = 'PC1',\n    y = 'PC2',\n    z='PC3',\n    color='class')\n\nplot.show()\n")),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Dimensionality Reduction",src:e(83701).Z,width:"1550",height:"400"})),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Dimensionality Reduction",src:e(74697).Z,width:"1424",height:"414"})),(0,l.kt)("p",null,"Separation! Nice :)"))}m.isMDXComponent=!0},16157:(t,a,e)=>{e.d(a,{Z:()=>n});const n=e.p+"assets/images/Dimensionality_Reduction_01-c1408fdb4e649603b1612dc153c0b9b3.png"},48540:(t,a,e)=>{e.d(a,{Z:()=>n});const n=e.p+"assets/images/Dimensionality_Reduction_02-af71e6127f01e819d8366de1101f6ee9.png"},44900:(t,a,e)=>{e.d(a,{Z:()=>n});const n=e.p+"assets/images/Dimensionality_Reduction_03-b9a5f5458d5f854565d5eb31e007d7a0.png"},14447:(t,a,e)=>{e.d(a,{Z:()=>n});const n=e.p+"assets/images/Dimensionality_Reduction_04-4f961c2e38af7ae68d79c83e1a223bab.png"},4450:(t,a,e)=>{e.d(a,{Z:()=>n});const n=e.p+"assets/images/Dimensionality_Reduction_05-a17fdd662f7623eba7b330109b4089e7.png"},31191:(t,a,e)=>{e.d(a,{Z:()=>n});const n=e.p+"assets/images/Dimensionality_Reduction_06-4a03ab104713167e157d1a746534aba7.png"},21124:(t,a,e)=>{e.d(a,{Z:()=>n});const n=e.p+"assets/images/Dimensionality_Reduction_07-71004bf7ced37ada1afe1b966b465d17.png"},5833:(t,a,e)=>{e.d(a,{Z:()=>n});const n=e.p+"assets/images/Dimensionality_Reduction_08-d1b1b3db7a1137b8444b2f705265cfae.png"},83701:(t,a,e)=>{e.d(a,{Z:()=>n});const n=e.p+"assets/images/Dimensionality_Reduction_09-b98288aa93839289a11f32eeb414b47f.png"},74697:(t,a,e)=>{e.d(a,{Z:()=>n});const n=e.p+"assets/images/Dimensionality_Reduction_10-7c2e6f7e83252902b6652e25564a41b9.png"},20688:(t,a,e)=>{e.d(a,{Z:()=>n});const n=e.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-936fe81d44bf1beb4563551aafeb5788.jpg"}}]);