"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[29863],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>u});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},d=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=p(t),u=r,k=c["".concat(s,".").concat(u)]||c[u]||m[u]||o;return t?a.createElement(k,l(l({ref:n},d),{},{components:t})):a.createElement(k,l({ref:n},d))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=c;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var p=2;p<o;p++)l[p]=t[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},49298:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=t(87462),r=(t(67294),t(3905));const o={sidebar_position:6960,slug:"2023-04-18",title:"Home Assistant, OpenHAB, Node-RED, ioBroker, MotionEye, ZoneMinder, Frigate, iSpy Agent, Kerberos Containerized (Docker)",authors:"mpolinowski",tags:["LINUX","Smarthome","IoT","Docker","Cheating"],description:"Smarthome Cheat Sheet (Docker Edition)"},l=void 0,i={unversionedId:"IoT-and-Machine-Learning/Home_Automation/2023-04-18--home-assistant-node-red-iobroker-docker/index",id:"IoT-and-Machine-Learning/Home_Automation/2023-04-18--home-assistant-node-red-iobroker-docker/index",title:"Home Assistant, OpenHAB, Node-RED, ioBroker, MotionEye, ZoneMinder, Frigate, iSpy Agent, Kerberos Containerized (Docker)",description:"Smarthome Cheat Sheet (Docker Edition)",source:"@site/docs/IoT-and-Machine-Learning/Home_Automation/2023-04-18--home-assistant-node-red-iobroker-docker/index.md",sourceDirName:"IoT-and-Machine-Learning/Home_Automation/2023-04-18--home-assistant-node-red-iobroker-docker",slug:"/IoT-and-Machine-Learning/Home_Automation/2023-04-18--home-assistant-node-red-iobroker-docker/2023-04-18",permalink:"/docs/IoT-and-Machine-Learning/Home_Automation/2023-04-18--home-assistant-node-red-iobroker-docker/2023-04-18",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IoT-and-Machine-Learning/Home_Automation/2023-04-18--home-assistant-node-red-iobroker-docker/index.md",tags:[{label:"LINUX",permalink:"/docs/tags/linux"},{label:"Smarthome",permalink:"/docs/tags/smarthome"},{label:"IoT",permalink:"/docs/tags/io-t"},{label:"Docker",permalink:"/docs/tags/docker"},{label:"Cheating",permalink:"/docs/tags/cheating"}],version:"current",sidebarPosition:6960,frontMatter:{sidebar_position:6960,slug:"2023-04-18",title:"Home Assistant, OpenHAB, Node-RED, ioBroker, MotionEye, ZoneMinder, Frigate, iSpy Agent, Kerberos Containerized (Docker)",authors:"mpolinowski",tags:["LINUX","Smarthome","IoT","Docker","Cheating"],description:"Smarthome Cheat Sheet (Docker Edition)"},sidebar:"tutorialSidebar",previous:{title:"Home Automation",permalink:"/docs/category/home-automation"},next:{title:"Camera Surveillance System with OpenCV",permalink:"/docs/IoT-and-Machine-Learning/Home_Automation/2023-02-07-python-home-security/2023-02-07"}},s={},p=[{value:"Smarthome Cheat Sheet (Docker Edition)",id:"smarthome-cheat-sheet-docker-edition",level:2},{value:"Home Assistant",id:"home-assistant",level:3},{value:"Node-RED",id:"node-red",level:3},{value:"Theming",id:"theming",level:4},{value:"OpenHAB",id:"openhab",level:3},{value:"OpenHAB CLI",id:"openhab-cli",level:4},{value:"Updating the Image",id:"updating-the-image",level:4},{value:"ioBroker",id:"iobroker",level:3},{value:"MotionEye",id:"motioneye",level:3},{value:"ZoneMinder",id:"zoneminder",level:3},{value:"Frigate NVR",id:"frigate-nvr",level:3},{value:"Docker-Compose",id:"docker-compose",level:4},{value:"iSpy Agent DVR",id:"ispy-agent-dvr",level:3},{value:"Kerberos.io",id:"kerberosio",level:3}],d={toc:p};function m(e){let{components:n,...o}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,o,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Siem Reap, Cambodia",src:t(60062).Z,width:"1500",height:"546"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#smarthome-cheat-sheet-docker-edition"},"Smarthome Cheat Sheet (Docker Edition)"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#home-assistant"},"Home Assistant")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#node-red"},"Node-RED"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#theming"},"Theming")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#openhab"},"OpenHAB"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#openhab-cli"},"OpenHAB CLI")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#updating-the-image"},"Updating the Image")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#iobroker"},"ioBroker")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#motioneye"},"MotionEye")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#zoneminder"},"ZoneMinder")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#frigate-nvr"},"Frigate NVR"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#docker-compose"},"Docker-Compose")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#ispy-agent-dvr"},"iSpy Agent DVR")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#kerberosio"},"Kerberos.io"))))),(0,r.kt)("h2",{id:"smarthome-cheat-sheet-docker-edition"},"Smarthome Cheat Sheet (Docker Edition)"),(0,r.kt)("h3",{id:"home-assistant"},"Home Assistant"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker pull homeassistant/home-assistant:stable\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p /opt/homeassistant/{config}\nchmod -R 775 /opt/homeassistant\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -d --rm --privileged --net=host --name='home-assistant' -e 'TZ=Europe/Berlin' -v /opt/homeassistant/config:/config homeassistant/home-assistant:stable\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:8123"))),(0,r.kt)("h3",{id:"node-red"},"Node-RED"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker pull nodered/node-red:latest\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p /opt/nodered/{data}\nchmod -R 775 /opt/nodered\nchown 1000:1000 -R /opt/nodered \n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -d --rm --privileged --net=host -v /opt/nodered/data:/data --name nodered nodered/node-red\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:1880"))),(0,r.kt)("h4",{id:"theming"},"Theming"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cd /opt/nodered/data\nnpm install @node-red-contrib-themes/midnight-red\n")),(0,r.kt)("p",null,"Add the following to the editorTheme section of your ",(0,r.kt)("inlineCode",{parentName:"p"},"settings.js"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"editorTheme: {\n    projects: {\n            // To enable the Projects feature, set this value to true\n            enabled: false\n    }\n}\n")),(0,r.kt)("p",null,"Change to ->"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// Customising the editor\n    editorTheme: {\n        page: {\n            css: '/opt/nodered/data/node_modules/@node-red-contrib-themes/midnight-red/theme.css'\n        }\n    }\n")),(0,r.kt)("h3",{id:"openhab"},"OpenHAB"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker pull openhab/openhab:latest\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"groupadd -g 9001 openhab\nuseradd -g 9001 openhab\nusermod -a -G openhab myownuser\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p /opt/openhab/{openhab_addons,openhab_conf,openhab_userdata}\nchmod -R 775 /opt/openhab\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker run \\\n        --name openhab \\\n        --net=host \\\n        --privileged \\\n         --rm \\\n        -v /etc/localtime:/etc/localtime:ro \\\n        -v /opt/openhab/openhab_addons:/openhab/addons \\\n        -v /opt/openhab/openhab_conf:/openhab/conf \\\n        -v /opt/openhab/openhab_userdata:/openhab/userdata \\\n        -d \\\n        openhab/openhab:latest\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"http:localhost:8080"))),(0,r.kt)("h4",{id:"openhab-cli"},"OpenHAB CLI"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker exec -it openhab\n/openhab/runtime/bin/client -p habopen\n")),(0,r.kt)("h4",{id:"updating-the-image"},"Updating the Image"),(0,r.kt)("p",null,"Use the following steps to update the docker image and all installed add-ons."),(0,r.kt)("p",null,"Stop the container:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker stop openhab\n")),(0,r.kt)("p",null,"Delete the container:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker rm openhab\n")),(0,r.kt)("p",null,"Delete the contents of ",(0,r.kt)("inlineCode",{parentName:"p"},"/opt/openhab/userdata/cache")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"/opt/openhab/userdata/tmp")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"rm -rf /opt/openhab/userdata/cache\nrm -rf /opt/openhab/userdata/tmp\n")),(0,r.kt)("p",null,"Pull down the latest image:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker pull openhab/openhab:`latest`\n")),(0,r.kt)("p",null,"Restart the container using the full command above."),(0,r.kt)("h3",{id:"iobroker"},"ioBroker"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker pull iobroker/iobroker:latest\n")),(0,r.kt)("p",null,"And and run it:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker run \\\n  --net=host \\\n  --privileged \\\n  --rm \\\n  --name iobroker \\\n  -v /opt/iobroker:/opt/iobroker \\\n  -v /opt/iobroker/home:/home/iobroker \\\n  --detach=true \\\n  iobroker/iobroker:latest\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:8081"))),(0,r.kt)("h3",{id:"motioneye"},"MotionEye"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker pull ccrisan/motioneye:master-amd64\n")),(0,r.kt)("p",null,"And and run it:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --name='motioneye' \\\n    --net=host \\\n    --privileged \\\n    --rm \\\n    --hostname='motioneye' \\\n    -v /etc/localtime:/etc/localtime:ro \\\n    -v /opt/motioneye:/etc/motioneye \\\n    -v /opt/motioneye/lib:/var/lib/motioneye \\\n    --security-opt label=disable \\\n    --detach=true \\\n    ccrisan/motioneye:master-amd64\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:80"))),(0,r.kt)("h3",{id:"zoneminder"},"ZoneMinder"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker pull dlandon/zoneminder:latest\n")),(0,r.kt)("p",null,"And and run it:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'docker run -d --name="zoneminder" \\\n    --privileged="false" \\\n    --shm-size="5G" \\\n    --net=host \\\n    --rm \\\n    -e TZ="America/New_York" \\\n    -e PUID="99" \\\n    -e PGID="100" \\\n    -e INSTALL_HOOK="0" \\\n    -e INSTALL_FACE="0" \\\n    -e INSTALL_TINY_YOLOV3="0" \\\n    -e INSTALL_YOLOV3="0" \\\n    -e INSTALL_TINY_YOLOV4="0" \\\n    -e INSTALL_YOLOV4="0" \\\n    -e MULTI_PORT_START="0" \\\n    -e MULTI_PORT_END="0" \\\n    -v "/opt/zoneminder":"/config":rw \\\n    -v "/opt/zoneminder/data":"/var/cache/zoneminder":rw \\\n    dlandon/zoneminder\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'docker run -d --name="zoneminder" \\\n    --net="bridge" \\\n    --privileged="false" \\\n    --shm-size="5G" \\\n    -p 9000:9000/tcp \\\n    -p 443:443/tcp \\\n    -p 80:80/tcp \\\n    -e TZ="America/New_York" \\\n    -e PUID="99" \\\n    -e PGID="100" \\\n    -e INSTALL_HOOK="0" \\\n    -e INSTALL_FACE="0" \\\n    -e INSTALL_TINY_YOLOV3="0" \\\n    -e INSTALL_YOLOV3="0" \\\n    -e INSTALL_TINY_YOLOV4="0" \\\n    -e INSTALL_YOLOV4="0" \\\n    -e MULTI_PORT_START="0" \\\n    -e MULTI_PORT_END="0" \\\n    -v "/opt/zoneminder":"/config":rw \\\n    -v "/opt/zoneminder/data":"/var/cache/zoneminder":rw \\\n    dlandon/zoneminder\n\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:80"))),(0,r.kt)("h3",{id:"frigate-nvr"},"Frigate NVR"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker pull ghcr.io/blakeblackshear/frigate:stable\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p /opt/frigate/storage\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"nano /opt/frigate/config.yml\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yml"},"mqtt:\n  host: <ip of your mqtt server>\n  user: <username>\n  password: <password>\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yml"},"cameras:\n\n  fullhd31: # <------ Name der Kamera\n    ffmpeg:\n      inputs:\n        - path: rtsp://admin:instar@192.168.2.31:554/11 # <----- RTSP Pfad der Kamera\n          roles:\n            - detect\n            - rtmp\n    detect:\n      width: 1920 # <---- Aufl\xf6sung des gew\xe4hlten RTSP Streams\n      height: 1080 # <---- Aufl\xf6sung des gew\xe4hlten RTSP Streams\n\n  wqhd120: # <------ Name der Kamera\n    ffmpeg:\n      inputs:\n        - path: rtsp://admin:instar@192.168.2.120:554/livestream/12 # <----- RTSP Pfad der Kamera\n          roles:\n            - detect\n            - rtmp\n    detect:\n      width: 1920 # <---- Aufl\xf6sung des gew\xe4hlten RTSP Streams\n      height: 1080 # <---- Aufl\xf6sung des gew\xe4hlten RTSP Streams\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -d \\\n  --name frigate \\\n  --restart=unless-stopped \\\n  --mount type=tmpfs,target=/tmp/cache,tmpfs-size=1000000000 \\\n  --device /dev/bus/usb:/dev/bus/usb \\\n  --device /dev/dri/renderD128 \\\n  --shm-size=64m \\\n  -v /opt/frigate/storage:/media/frigate \\\n  -v /opt/frigate/config.yml:/config/config.yml:ro \\\n  -v /etc/localtime:/etc/localtime:ro \\\n  -e FRIGATE_RTSP_PASSWORD='password' \\\n  -p 5000:5000 \\\n  -p 1935:1935 \\\n  ghcr.io/blakeblackshear/frigate:stable\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:5000"))),(0,r.kt)("h4",{id:"docker-compose"},"Docker-Compose"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"nano /opt/frigate/docker-compose.yml\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yml"},'version: "3.9"\nservices:\n  frigate:\n    container_name: frigate\n    privileged: true # dies ist nicht f\xfcr alle Konfigurationen erforderlich\n    restart: unless-stopped\n    image: ghcr.io/blakeblackshear/frigate:0.12.0-beta5\n    shm_size: "64mb" # Update f\xfcr Ihre Kameras basierend auf der obigen Berechnung\n    devices:\n      - /dev/bus/usb:/dev/bus/usb # besteht den USB Coral, muss f\xfcr andere Versionen modifiziert werden\n      - /dev/apex_0:/dev/apex_0 # peine PCIe-Koralle einbauen, folgen Sie den Anweisungen des Treibers hier https://coral.ai/docs/m2/get-started/#2a-on-linux\n      - /dev/dri/renderD128 # f\xfcr intel hwaccel, muss f\xfcr Ihre Hardware aktualisiert werden\n    volumes:\n      - /etc/localtime:/etc/localtime:ro\n      - /opt/frigate/config.yml:/config/config.yml:ro\n      - /opt/frigate/storage:/media/frigate\n      - type: tmpfs # Optional: 1 GB Arbeitsspeicher, reduziert den Verschlei\xdf von SSD/SD-Karten\n        target: /tmp/cache\n        tmpfs:\n          size: 1000000000\n    ports:\n      - "5000:5000"\n      - "1935:1935" # RTMP feeds\n    environment:\n      FRIGATE_RTSP_PASSWORD: "password"\n')),(0,r.kt)("h3",{id:"ispy-agent-dvr"},"iSpy Agent DVR"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/mpolinowski/agent-dvr-docker.git && cd agent-dvr-docker\ndocker build -t agent-dvr .\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo mkdir -p /opt/dvr-agent/{config,media,commands}\nsudo chown -R myuser /opt/dvr-agent/*\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --restart=unless-stopped -d -p 8090:8090 -p 3478:3478/udp -p 50000-50010:50000-50010/udp \\\n    -v /opt/dvr-agent/config/:/agent/Media/XML/ \\\n    -v /opt/dvr-agent/media/:/agent/Media/WebServerRoot/Media/ \\\n    -v /opt/dvr-agent/commands:/agent/Commands/ \\\n    -e TZ=Europe/Berlin \\\n    --name agent-dvr agent-dvr:latest\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:8090"))),(0,r.kt)("h3",{id:"kerberosio"},"Kerberos.io"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker pull kerberos/kerberos:latest\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --name mycamera -p 8080:80 -p 8889:8889 -d kerberos/kerberos:latest\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p /opt/kerberos/{config,capture,logs,webconfig}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --name garage \\\n    -p 8080:80 -p 8889:8889 \\\n    -v /opt/kerberos/config:/etc/opt/kerberos/config \\\n    -v /opt/kerberos/capture:/etc/opt/kerberosio/capture \\\n    -v /opt/kerberos/logs:/etc/opt/kerberosio/logs \\\n    -v /opt/kerberos/webconfig:/var/www/web/config \\\n    -d kerberos/kerberos\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("inlineCode",{parentName:"p"},"http://192.168.2.111:8080"))))}m.isMDXComponent=!0},60062:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-e09c4b863b29d0c9c2cb81b620df559f.jpg"}}]);