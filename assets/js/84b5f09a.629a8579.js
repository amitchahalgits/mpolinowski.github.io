"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[19870],{239140:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>d,toc:()=>s});var o=n(785893),r=n(603905);const i={sidebar_position:9050,slug:"2022-05-06",title:"React Native Reducer",authors:"mpolinowski",tags:["Javascript","React","ReactNative"]},a=void 0,d={id:"Development/ReactNative/2022-05-06-react-native-reducer/index",title:"React Native Reducer",description:"Victoria Harbour, Hongkong",source:"@site/docs/Development/ReactNative/2022-05-06-react-native-reducer/index.md",sourceDirName:"Development/ReactNative/2022-05-06-react-native-reducer",slug:"/Development/ReactNative/2022-05-06-react-native-reducer/2022-05-06",permalink:"/docs/Development/ReactNative/2022-05-06-react-native-reducer/2022-05-06",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Development/ReactNative/2022-05-06-react-native-reducer/index.md",tags:[{label:"Javascript",permalink:"/docs/tags/javascript"},{label:"React",permalink:"/docs/tags/react"},{label:"ReactNative",permalink:"/docs/tags/react-native"}],version:"current",sidebarPosition:9050,frontMatter:{sidebar_position:9050,slug:"2022-05-06",title:"React Native Reducer",authors:"mpolinowski",tags:["Javascript","React","ReactNative"]},sidebar:"tutorialSidebar",previous:{title:"React Native",permalink:"/docs/category/react-native"},next:{title:"React Native Context & Hooks",permalink:"/docs/Development/ReactNative/2022-05-05-react-native-context-hooks/2022-05-05"}},c={},s=[{value:"Reducer",id:"reducer",level:2},{value:"To-Do Context Provider",id:"to-do-context-provider",level:3},{value:"Without Reducer",id:"without-reducer",level:4},{value:"With Reducer",id:"with-reducer",level:4},{value:"To-Do Component",id:"to-do-component",level:3},{value:"Without Reducer",id:"without-reducer-1",level:4},{value:"With Reducer",id:"with-reducer-1",level:4}];function u(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.ah)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Victoria Harbour, Hongkong",src:n(540120).Z+"",width:"1500",height:"565"})}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"#reducer",children:"Reducer"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"#to-do-context-provider",children:"To-Do Context Provider"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"#without-reducer",children:"Without Reducer"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"#with-reducer",children:"With Reducer"})}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"#to-do-component",children:"To-Do Component"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"#without-reducer-1",children:"Without Reducer"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"#with-reducer-1",children:"With Reducer"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://github.com/mpolinowski/react-native-context-reducer",children:"Github Repository"})}),"\n",(0,o.jsx)(t.h2,{id:"reducer",children:"Reducer"}),"\n",(0,o.jsxs)(t.p,{children:["In a ",(0,o.jsx)(t.a,{href:"obsidian://open?vault=Obsidian%20Vault&file=2022-05-05-react-native-context-hooks%2F2022-05-05-react-native-context-hooks",children:"previous step"})," I created an React Native application that used the React Context API using Context and Hooks to manage a To-Do List. We can now use reducers to centralise all methods to change the state of our application in a single function."]}),"\n",(0,o.jsx)(t.h3,{id:"to-do-context-provider",children:"To-Do Context Provider"}),"\n",(0,o.jsx)(t.h4,{id:"without-reducer",children:"Without Reducer"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-jsx",children:"import React, { createContext, useState } from 'react'\nimport {v4 as uuidv4} from 'uuid'\n\nexport const TodoItemContext = createContext()\n\nconst TodoItemContextProvider = ( {children} ) => {\n    const [items, setItems] = useState([\n        { text: 'Have a great day!', id: `${uuidv4()}`}\n    ])\n\n    const addItem = (item) => {\n        setItems([...items, {text: item, id: `${uuidv4()}`}])\n    }\n\n    const removeItem = (id) => {\n        setItems(items.filter((item) => {\n            return item.id !== id\n        }))\n    }\n\n    return (\n        <TodoItemContext.Provider value={{items, addItem, removeItem}}>\n            {children}\n        </TodoItemContext.Provider>\n        )\n}\n\nexport default TodoItemContextProvider\n"})}),"\n",(0,o.jsx)(t.h4,{id:"with-reducer",children:"With Reducer"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-jsx",children:"import React, { createContext, useReducer } from 'react'\nimport {v4 as uuidv4} from 'uuid'\n\nexport const TodoItemContext = createContext()\n\nconst todosReducer = (state, action) => {\n    switch(action.type) {\n        case 'ADD_TODO':\n            return[...state, {text: action.text, id: `${uuidv4()}`}]\n\n        case 'REMOVE_TODO':\n            return state.filter((todo) => todo.id !== action.id)\n\n        default:\n            return state\n    }\n}\n\nconst TodoItemContextProvider = ( {children} ) => {\n    const [todos, dispatch] = useReducer(todosReducer, [\n        { text: 'Have a great day!', id: `${uuidv4()}`}\n    ])\n\n    return (\n        <TodoItemContext.Provider value={{todos, dispatch}}>\n            {children}\n        </TodoItemContext.Provider>\n        )\n}\n\nexport default TodoItemContextProvider\n"})}),"\n",(0,o.jsx)(t.h3,{id:"to-do-component",children:"To-Do Component"}),"\n",(0,o.jsx)(t.h4,{id:"without-reducer-1",children:"Without Reducer"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-jsx",children:"import React, { useContext, useState } from 'react'\nimport { Text, TouchableOpacity } from 'react-native'\n\nimport { TodoBackground, TodoList, TodoItem, LoginView, InputItem } from './_styles'\nimport { ThemeContext } from '../context/ThemeContext'\nimport { AuthContext } from '../context/AuthContext'\nimport { TodoItemContext } from '../context/TodoItemContext'\n\nconst ToDoList = () => {\n\n    const [todo, setTodo] = useState('')\n\n    const { isDarkTheme, darkTheme, lightTheme } = useContext(ThemeContext)\n    // if isDarkTheme is true return dark state / else light\n    const theme = isDarkTheme ? darkTheme : lightTheme\n\n    const { isLoggedIn, changeAuthStatus } = useContext(AuthContext)\n    const { items, addItem, removeItem } = useContext(TodoItemContext)\n\n    const handleChange = (text) => {\n        setTodo(text)\n    }\n\n    const handleAddItem = () => {\n        if(todo.length > 0) \n        addItem(todo)\n        setTodo('')\n    }\n\n    const handleRemoveItem = (id) => {\n        removeItem(id)\n    }\n\n    if (isLoggedIn) {\n        return (\n            <TodoBackground style={theme}>\n                {\n                    items.length ? (\n                        <TodoList \n                            data={items}\n                            keyExtractor={(item) => item.id}\n                            showsVerticalScrollIndicator={false}\n                            renderItem={({item}) => {\n                                return <TouchableOpacity onPress={() => handleRemoveItem(item.id)}><TodoItem>{item.text}</TodoItem></TouchableOpacity>\n                            }}\n                        />\n                    ) : (\n                        <TodoItem>Nothing to do...</TodoItem>\n                    )\n                }\n                <InputItem\n                    value={todo}\n                    onChangeText={(text) => handleChange(text)}\n                />\n                <TodoItem onPress={handleAddItem}>\n                    <Text>Add Item</Text>\n                </TodoItem>\n                <TodoItem onPress={changeAuthStatus}>\n                    <Text>Logout</Text>\n                </TodoItem>\n            </TodoBackground>\n        )}\n        return (\n            <LoginView>\n                <TodoItem onPress={changeAuthStatus}>\n                    <Text>Login</Text>\n                </TodoItem>\n            </LoginView>\n        )\n}\n\nexport default ToDoList\n"})}),"\n",(0,o.jsx)(t.h4,{id:"with-reducer-1",children:"With Reducer"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-jsx",children:"import React, { useContext, useState } from 'react'\nimport { Text, TouchableOpacity } from 'react-native'\n\nimport { TodoBackground, TodoList, TodoItem, LoginView, InputItem } from './_styles'\nimport { ThemeContext } from '../context/ThemeContext'\nimport { AuthContext } from '../context/AuthContext'\nimport { TodoItemContext } from '../context/TodoItemContext'\n\nconst ToDoList = () => {\n\n    const [todo, setTodo] = useState('')\n\n    const { isDarkTheme, darkTheme, lightTheme } = useContext(ThemeContext)\n    // if isDarkTheme is true return dark state / else light\n    const theme = isDarkTheme ? darkTheme : lightTheme\n\n    const { isLoggedIn, changeAuthStatus } = useContext(AuthContext)\n\n    const { todos, dispatch } = useContext(TodoItemContext)\n\n    const handleChange = (text) => {\n        setTodo(text)\n    }\n\n    const handleAddItem = () => {\n        if(todo.length > 0) \n        dispatch({type: 'ADD_TODO', text: todo})\n        setTodo('')\n    }\n\n    const handleRemoveItem = (id) => {\n        dispatch({type: 'REMOVE_TODO', id})\n    }\n\n    if (isLoggedIn) {\n        return (\n            <TodoBackground style={theme}>\n                {\n                    todos.length ? (\n                        <TodoList \n                            data={todos}\n                            keyExtractor={(todo) => todo.id}\n                            showsVerticalScrollIndicator={false}\n                            renderItem={({ item }) => {\n                                return <TouchableOpacity onPress={() => handleRemoveItem(item.id)}><TodoItem>{item.text}</TodoItem></TouchableOpacity>\n                            }}\n                        />\n                    ) : (\n                        <TodoItem>Nothing to do...</TodoItem>\n                    )\n                }\n                <InputItem\n                    value={todo}\n                    onChangeText={(text) => handleChange(text)}\n                />\n                <TodoItem onPress={handleAddItem}>\n                    <Text>Add Item</Text>\n                </TodoItem>\n                <TodoItem onPress={changeAuthStatus}>\n                    <Text>Logout</Text>\n                </TodoItem>\n            </TodoBackground>\n        )}\n        return (\n            <LoginView>\n                <TodoItem onPress={changeAuthStatus}>\n                    <Text>Login</Text>\n                </TodoItem>\n            </LoginView>\n        )\n}\n\nexport default ToDoList\n"})})]})}function l(e={}){const{wrapper:t}={...(0,r.ah)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},603905:(e,t,n)=>{n.d(t,{ah:()=>s});var o=n(667294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),s=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},l=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,l=d(e,["components","mdxType","originalType","parentName"]),h=s(n),m=r,x=h["".concat(c,".").concat(m)]||h[m]||u[m]||i;return n?o.createElement(x,a(a({ref:t},l),{},{components:n})):o.createElement(x,a({ref:t},l))}));l.displayName="MDXCreateElement"},540120:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-23d027067cc9016279f834178a642545.jpg"}}]);