"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[50028],{506501:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var s=r(474848),t=r(28453);const i={sidebar_position:8070,slug:"2021-05-02",title:"Ansible Tower Practical Examples",authors:"mpolinowski",tags:["LINUX"]},o=void 0,a={id:"DevOps/Ansible/2021-05-02-ansible-tower-examples/index",title:"Ansible Tower Practical Examples",description:"Guangzhou, China",source:"@site/docs/DevOps/Ansible/2021-05-02-ansible-tower-examples/index.md",sourceDirName:"DevOps/Ansible/2021-05-02-ansible-tower-examples",slug:"/DevOps/Ansible/2021-05-02-ansible-tower-examples/2021-05-02",permalink:"/docs/DevOps/Ansible/2021-05-02-ansible-tower-examples/2021-05-02",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Ansible/2021-05-02-ansible-tower-examples/index.md",tags:[{label:"LINUX",permalink:"/docs/tags/linux"}],version:"current",sidebarPosition:8070,frontMatter:{sidebar_position:8070,slug:"2021-05-02",title:"Ansible Tower Practical Examples",authors:"mpolinowski",tags:["LINUX"]},sidebar:"tutorialSidebar",previous:{title:"Ansible",permalink:"/docs/category/ansible"},next:{title:"Ansible Tower Workflow Templates",permalink:"/docs/DevOps/Ansible/2021-05-01-ansible-tower-workflow-templates/2021-05-01"}},l={},d=[{value:"Updating a Discourse Forum",id:"updating-a-discourse-forum",level:2},{value:"Create an Inventory",id:"create-an-inventory",level:3},{value:"Adding Server Credentials",id:"adding-server-credentials",level:3},{value:"Adding the Project",id:"adding-the-project",level:3},{value:"Adding the Job Template",id:"adding-the-job-template",level:3},{value:"Adding a Workflow",id:"adding-a-workflow",level:3},{value:"Working with Docker Container",id:"working-with-docker-container",level:2},{value:"Installing Docker",id:"installing-docker",level:3},{value:"Running Containers",id:"running-containers",level:3},{value:"Setup Certbot",id:"setup-certbot",level:2},{value:"Setting Up Elasticsearch",id:"setting-up-elasticsearch",level:2},{value:"Installation",id:"installation",level:3},{value:"Cert Renewal",id:"cert-renewal",level:3},{value:"Adding a server to Zabbix Monitor",id:"adding-a-server-to-zabbix-monitor",level:2}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Guangzhou, China",src:r(345037).A+"",width:"1500",height:"598"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#updating-a-discourse-forum",children:"Updating a Discourse Forum"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#create-an-inventory",children:"Create an Inventory"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#adding-server-credentials",children:"Adding Server Credentials"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#adding-the-project",children:"Adding the Project"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#adding-the-job-template",children:"Adding the Job Template"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#adding-a-workflow",children:"Adding a Workflow"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#working-with-docker-container",children:"Working with Docker Container"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#installing-docker",children:"Installing Docker"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#running-containers",children:"Running Containers"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#setup-certbot",children:"Setup Certbot"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#setting-up-elasticsearch",children:"Setting Up Elasticsearch"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#installation",children:"Installation"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#cert-renewal",children:"Cert Renewal"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#adding-a-server-to-zabbix-monitor",children:"Adding a server to Zabbix Monitor"})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"I now set up Ansible Tower and want to integrate it into my CI Pipelines. Here are a couple of Tasks that I previously started by SSH'ing into those servers or by manually starting Ansible Plays. Let's see how I can add them to the Tower UI."}),"\n",(0,s.jsx)(n.h2,{id:"updating-a-discourse-forum",children:"Updating a Discourse Forum"}),"\n",(0,s.jsx)(n.p,{children:"To update our Forum I have to:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"login to the respective server"}),"\n",(0,s.jsx)(n.li,{children:"change to the directory that holds the source code"}),"\n",(0,s.jsx)(n.li,{children:"git pull the latest updates"}),"\n",(0,s.jsx)(n.li,{children:"rebuild the app using the Discourse CLI"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Let's automate this!"}),"\n",(0,s.jsx)(n.h3,{id:"create-an-inventory",children:"Create an Inventory"}),"\n",(0,s.jsxs)(n.p,{children:["In the Tower UI click on ",(0,s.jsx)(n.strong,{children:"Resources"})," / ",(0,s.jsx)(n.strong,{children:"Inventories"})," and switch to the ",(0,s.jsx)(n.strong,{children:"Hosts"})," tab. Click on ",(0,s.jsx)(n.strong,{children:"Add"})," and add your Server IP address and SSH port:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"---\r\nansible_host: 112.11.1.221\r\nansible_port: 12345\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Ansible Tower Practical Examples",src:r(961510).A+"",width:"1289",height:"688"})}),"\n",(0,s.jsxs)(n.p,{children:["Save the ",(0,s.jsx)(n.strong,{children:"Host"})," and ",(0,s.jsx)(n.strong,{children:"Inventory"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"adding-server-credentials",children:"Adding Server Credentials"}),"\n",(0,s.jsxs)(n.p,{children:["In the Tower UI click on ",(0,s.jsx)(n.strong,{children:"Resources"})," / ",(0,s.jsx)(n.strong,{children:"Credentials"})," and click on ",(0,s.jsx)(n.strong,{children:"Add"}),". Choose ",(0,s.jsx)(n.strong,{children:"Machine"})," as credential type and add your server SSH username and password:"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Ansible Tower Practical Examples",src:r(486397).A+"",width:"1274",height:"557"})}),"\n",(0,s.jsx)(n.p,{children:"Save your settings."}),"\n",(0,s.jsx)(n.h3,{id:"adding-the-project",children:"Adding the Project"}),"\n",(0,s.jsxs)(n.p,{children:["Before actually adding the Project we need a second ",(0,s.jsx)(n.strong,{children:"Credential"})," that allows us to download the Ansible Playbook from a private Gitlab server. For this, create a user in Gitlab (or on Github, in Subversion, etc.) that has access to the repositories you want to use. Back in the Tower UI ",(0,s.jsx)(n.strong,{children:"Resources"})," / ",(0,s.jsx)(n.strong,{children:"Credentials"})," and click on ",(0,s.jsx)(n.strong,{children:"Add"}),". This time choose ",(0,s.jsx)(n.strong,{children:"Source Control"})," as ",(0,s.jsx)(n.strong,{children:"Credential Type"})," and add your Gitlab username and password:"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Ansible Tower Practical Examples",src:r(265268).A+"",width:"1273",height:"778"})}),"\n",(0,s.jsxs)(n.p,{children:["Make sure to ",(0,s.jsx)(n.a,{href:"/docs/DevOps/Ansible/2021-04-29-ansible-tower-setup/2021-04-29#creating-a-githubgitlab-scm-project",children:"add your SSH Key"})," in the field at the bottom of the form!"]}),"\n",(0,s.jsxs)(n.p,{children:["Save your settings and switch to the ",(0,s.jsx)(n.strong,{children:"Resources"})," / ",(0,s.jsx)(n.strong,{children:"Projects"})," menu. Click on ",(0,s.jsx)(n.strong,{children:"Add"})," to add your project:"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Ansible Tower Practical Examples",src:r(311179).A+"",width:"1269",height:"654"})}),"\n",(0,s.jsxs)(n.p,{children:["Choose your ",(0,s.jsx)(n.strong,{children:"Source Control Credential Type"})," - for Gitlab that is ",(0,s.jsx)(n.strong,{children:"Git"})," - and add the HTTPS URL to the repository that holds your Ansibel Playbook. To be able to clone the repository add the Gitlab user you just created, as ",(0,s.jsx)(n.strong,{children:"Source Control Credential"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"The repository holds a single file:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"forumDE_rebuild_discourse.yml"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"---\r\n- hosts: ForumDE-Discourse\r\n  gather_facts: no\r\n\r\n  vars:\r\n    ansible_python_interpreter: /bin/python3\r\n\r\n  tasks:\r\n  \r\n  - name: Pull latest Release & Update the Discourse Forum\r\n    ansible.builtin.shell:\r\n      cmd: git pull && ./launcher rebuild app\r\n      chdir: /opt/discourse/\r\n\n"})}),"\n",(0,s.jsx)(n.p,{children:"This play does everything I listed as requirement above."}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note"}),": I ran into a couple of issues with Ansible refusing to run on my minion server. The solution was to make Python3 the default version of Python on my minion and adding the path to the Python3 binary to my play."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Save the project and back on the Projects overview page click click on ",(0,s.jsx)(n.strong,{children:"Sync"})," to have Ansible Tower download your Playbook from Gitlab."]}),"\n",(0,s.jsx)(n.h3,{id:"adding-the-job-template",children:"Adding the Job Template"}),"\n",(0,s.jsxs)(n.p,{children:["Go to ",(0,s.jsx)(n.strong,{children:"Resources"})," / ",(0,s.jsx)(n.strong,{children:"Template"})," and click on ",(0,s.jsx)(n.strong,{children:"Add"})," to add a ",(0,s.jsx)(n.strong,{children:"Job"})," template. Now here everything we did before comes to together:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Add your Inventory"}),"\n",(0,s.jsx)(n.li,{children:"Add your Project"}),"\n",(0,s.jsx)(n.li,{children:"Choose the Play (Ansible Tower will list all the valid plays that it can find in your Playbook)"}),"\n",(0,s.jsx)(n.li,{children:"Add your Server Credentials"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["As job type I choose ",(0,s.jsx)(n.strong,{children:"Check"})," and ticked ",(0,s.jsx)(n.strong,{children:"Prompt on Launch"}),". This way I can first do a dry run and on the second go choose ",(0,s.jsx)(n.strong,{children:"Run"})," instead. And while we are at it - save your settings and go back to ",(0,s.jsx)(n.strong,{children:"Templates"}),". Your Job will be listed here. Click on launch and choose to either ",(0,s.jsx)(n.em,{children:"dry run"})," or ",(0,s.jsx)(n.em,{children:"run"}),". See if everything is working."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Ansible Tower Practical Examples",src:r(90050).A+"",width:"1267",height:"591"})}),"\n",(0,s.jsx)(n.h3,{id:"adding-a-workflow",children:"Adding a Workflow"}),"\n",(0,s.jsxs)(n.p,{children:["Now I am ready to wrap things up into a workflow - this works just like a ",(0,s.jsx)(n.strong,{children:"Job Template"})," but allows you to connect a bunch of jobs into a chain of nodes with some ",(0,s.jsx)(n.code,{children:"if-this-then-that"})," logic - if you wish."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Ansible Tower Practical Examples",src:r(154585).A+"",width:"1260",height:"521"})}),"\n",(0,s.jsxs)(n.p,{children:["Go to ",(0,s.jsx)(n.strong,{children:"Resources"})," / ",(0,s.jsx)(n.strong,{children:"Template"})," and click on ",(0,s.jsx)(n.strong,{children:"Add"})," to add a ",(0,s.jsx)(n.strong,{children:"Workflow"})," template. Just add the ",(0,s.jsx)(n.strong,{children:"Inventory"})," you are working from and hit ",(0,s.jsx)(n.strong,{children:"Save"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Ansible Tower Practical Examples",src:r(557680).A+"",width:"1284",height:"284"})}),"\n",(0,s.jsxs)(n.p,{children:["This now opens the ",(0,s.jsx)(n.strong,{children:"Visualizer"})," where I am going to add two nodes:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Update the Playbook we are working with"}),"\n",(0,s.jsx)(n.li,{children:"Run the Ansible Play"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["For the first choose ",(0,s.jsx)(n.strong,{children:"Project Sync"})," and choose the project from the list below. This will make sure that we are always using the latest playbook that was committed to the repository:"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Ansible Tower Practical Examples",src:r(508215).A+"",width:"1106",height:"512"})}),"\n",(0,s.jsxs)(n.p,{children:["And the second is a ",(0,s.jsx)(n.strong,{children:"Job Template"})," node where you have to select the job we created:"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Ansible Tower Practical Examples",src:r(365198).A+"",width:"1091",height:"310"})}),"\n",(0,s.jsx)(n.h2,{id:"working-with-docker-container",children:"Working with Docker Container"}),"\n",(0,s.jsx)(n.h3,{id:"installing-docker",children:"Installing Docker"}),"\n",(0,s.jsxs)(n.p,{children:["Now without so much details - the steps are identical to the example above. To work with Docker on our host we first have to make sure that Docker is set up. I am doing this using ",(0,s.jsx)(n.strong,{children:"Ansible Roles"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"- hosts: Wiki_Virtual\r\n  gather_facts: yes\r\n\r\n  vars:\r\n    ansible_python_interpreter: /bin/python3\r\n    pip_install_packages:\r\n      - name: docker\r\n      - name: setuptools\r\n      - name: docker-compose\r\n\r\n  roles:\r\n    - geerlingguy.pip\r\n    - geerlingguy.docker\n"})}),"\n",(0,s.jsxs)(n.p,{children:["To be able to use roles create a ",(0,s.jsx)(n.strong,{children:"roles"})," folder in your Playbook repository and add the folders inside for your roles - e.g. :"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"- roles\r\n  - geerlingguy.pip\r\n  - geerlingguy.docker\r\n- install-docker-playbook.yml\n"})}),"\n",(0,s.jsxs)(n.p,{children:["And ",(0,s.jsx)(n.code,{children:"git clone"})," the source code of those roles into their corresponding folders:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/geerlingguy/ansible-role-pip",children:"ansible-role-pip"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/geerlingguy/ansible-role-docker",children:"ansible-role-docker"})}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["When you now run ",(0,s.jsx)(n.code,{children:"install-docker-playbook.yml"})," those roles will be found by Ansible. Now go to the steps above until you have a job template that uses this playbook. Run the playbook in Ansible Tower to install Docker and Docker-Compose on your minion server."]}),"\n",(0,s.jsx)(n.h3,{id:"running-containers",children:"Running Containers"}),"\n",(0,s.jsxs)(n.p,{children:["I now want to add my Docker App to an existing Docker Cluster - ",(0,s.jsx)(n.a,{href:"/docs/DevOps/NGINX/2021-02-22-nginx-docker-ingress/2021-02-22",children:"as described in an earlier Tutorial"})]}),"\n",(0,s.jsx)(n.p,{children:"The playbook downloads the latest Version of the Docker image, kills the running container (in case that we are updating our app) and then spawns a new container based on the latest image:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:'---\r\n- hosts: Wiki_Virtual\r\n  gather_facts: no\r\n\r\n  vars:\r\n    ansible_python_interpreter: /bin/python3\r\n\r\n  tasks:\r\n\r\n    - name: Include vault for registry login\r\n      include_vars:\r\n        file: vault.yml\r\n\r\n    - name: Log into Docker Registry and force re-authorization\r\n      docker_login:\r\n        registry: my.gitlab.com\r\n        username: "{{ username }}"\r\n        password: "{{ password }}"\r\n        reauthorize: yes\r\n\r\n    - name: Download the latest Wiki build images\r\n      shell: docker pull my.gitlab.com:12345/wiki/{{ item }}\r\n      with_items:\r\n        - wiki_en_mdx\r\n  \r\n    - name: Remove the EN Wiki Container\r\n      docker_container:\r\n        name: wiki_en\r\n        state: absent\r\n  \r\n    - name: Rebuild the EN Wiki Container\r\n      docker_container:\r\n        name: wiki_en\r\n        image: my.gitlab.com:12345/wiki/wiki_en_mdx\r\n        state: started\r\n        restart_policy: unless-stopped\r\n        networks:\r\n          - name: wikinet\r\n        networks_cli_compatible: yes\r\n\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The new part here is the use of an ",(0,s.jsx)(n.strong,{children:"Ansible Vault"})," to get our Docker Registry login. I ",(0,s.jsx)(n.a,{href:"/docs/DevOps/Ansible/2020-11-21--ansible-modules-and-roles/2020-11-21#ansible-vault",children:"already showed how to create this vault"}),". Add your username and password there and add the vault to your Playbook repository."]}),"\n",(0,s.jsxs)(n.p,{children:["We now need to add the ",(0,s.jsx)(n.strong,{children:"Vault Credentials"})," to Ansible Tower. For this create a new ",(0,s.jsx)(n.strong,{children:"Credential"}),", choose ",(0,s.jsx)(n.strong,{children:"Credential Type"})," ",(0,s.jsx)(n.strong,{children:"Vault"})," and add your vault password."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Ansible Tower Practical Examples",src:r(224996).A+"",width:"1287",height:"565"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.strong,{children:"Job Template"})," that uses this Playbook now needs two credentials - the minion SSH login and the vault password. Otherwise, it is identical to the example earlier:"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Ansible Tower Practical Examples",src:r(751149).A+"",width:"1272",height:"590"})}),"\n",(0,s.jsx)(n.p,{children:"Test run the job. Then create the workflow. Just as before."}),"\n",(0,s.jsx)(n.h2,{id:"setup-certbot",children:"Setup Certbot"}),"\n",(0,s.jsx)(n.p,{children:"This is pretty much the same as setting up Docker using a ready-made Ansible role (s. above):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"---\r\n- hosts: Wiki_Virtual    \r\n\r\n  vars:\r\n    ansible_python_interpreter: /bin/python3\r\n    certbot_admin_email: m.polinowski@instar.com\r\n    certbot_create_if_missing: true\r\n    certbot_create_standalone_stop_services:\r\n      - docker\r\n    certbot_certs:\r\n      - domains:\r\n          - my.first.domain.com\r\n          - my.second.domain.com\r\n          - my.third.domain.com\r\n\r\n  roles:\r\n    - geerlingguy.certbot\r\n\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note"}),": My NGINX Ingress runs inside a Docker container. That is why I need Certbot to restart the Docker process so that NGINX starts using the new certs after an update. Otherwise, just restart whatever service is using the certificate."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"setting-up-elasticsearch",children:"Setting Up Elasticsearch"}),"\n",(0,s.jsxs)(n.p,{children:["I am using a ",(0,s.jsx)(n.strong,{children:"Docker Compose"})," ",(0,s.jsx)(n.a,{href:"/docs/DevOps/Elasticsearch/2019-09-08--elasticsearch_7-5_docker/2019-09-08",children:"file that I store on Gitlab to run Elasticsearch"}),". Again I am using an ",(0,s.jsx)(n.strong,{children:"Ansible Vault"})," file to log in to Gitlab and pull the latest version of this file to ",(0,s.jsx)(n.code,{children:"/opt/wiki_elk"}),". After that I execute this file with Docker Compose:"]}),"\n",(0,s.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"---\r\n- hosts: Wiki_Virtual\r\n  gather_facts: no\r\n\r\n  vars:\r\n    ansible_python_interpreter: /bin/python3\r\n    \r\n  tasks:\r\n\r\n    - name: Include vault for registry login\r\n      include_vars:\r\n        file: vault.yml\r\n\r\n    - name: Get updated files from git repository \r\n      git: \r\n        repo: https://{{ username | urlencode }}:{{ password | urlencode }}@my.gitlab.com/wiki/wiki_elk.git\r\n        clone: yes\r\n        force: yes\r\n        update: yes\r\n        dest: /opt/wiki_elk\r\n\r\n    - name: Start the Elasticsearch services\r\n      docker_compose:\r\n        project_src: /opt/wiki_elk\r\n\n"})}),"\n",(0,s.jsx)(n.h3,{id:"cert-renewal",children:"Cert Renewal"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:'---\r\n- hosts: Wiki_Virtual \r\n  gather_facts: no\r\n\r\n  vars:\r\n    ansible_python_interpreter: /bin/python3\r\n    \r\n  tasks:\r\n\r\n    - name: Run Certbot Renew and Restart Docker\r\n      shell: certbot renew --pre-hook "service docker stop" --post-hook "service docker start"\n'})}),"\n",(0,s.jsx)(n.h2,{id:"adding-a-server-to-zabbix-monitor",children:"Adding a server to Zabbix Monitor"}),"\n",(0,s.jsxs)(n.p,{children:["I am using the software ",(0,s.jsx)(n.a,{href:"/docs/DevOps/Zabbix/2020-07-17--zabbix-website-monitor/2020-07-17#discourse-forum",children:"Zabbix to Monitor my Servers"}),". With the following script I am able to ",(0,s.jsx)(n.a,{href:"/docs/DevOps/Zabbix/2020-07-16--zabbix-agent/2020-07-16",children:"setup the Zabbix Agent on my minion servers"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:'---\r\n- hosts: Wiki_Virtual\r\n  gather_facts: no\r\n\r\n  vars:\r\n    ansible_python_interpreter: /bin/python3\r\n\r\n  tasks:\r\n  \r\n    - name: Create directory for Zabbix Keyfile\r\n      file:\r\n        path: /opt/zabbix\r\n        state: directory\r\n        mode: \'0755\'\r\n\r\n    - name: Check if Zabbix Keyfile is already present\r\n      stat:\r\n        path: /opt/zabbix/agent_tls.psk\r\n      register: check_key_result\r\n\r\n    - name: Create Zabbix Keyfile\r\n      shell: openssl rand -hex 32 > agent_tls.psk\r\n      args:\r\n        chdir: /opt/zabbix/\r\n      when: not check_key_result.stat.exists\r\n        \r\n    - name: Read Zabbix Keyfile\r\n      shell: cat /opt/zabbix/agent_tls.psk\r\n      register: zabbix_key\r\n    \r\n    - name: Print Zabbix Keyfile\r\n      debug: var=zabbix_key\r\n\r\n    - name: Installing Zabbix Agent 2\r\n      docker_container:\r\n        name: zabbix-agent2\r\n        image: zabbix/zabbix-agent2:latest\r\n        pull: yes\r\n        restart: yes\r\n        networks:\r\n          - name: wikinet\r\n        networks_cli_compatible: yes\r\n        privileged: yes\r\n        state: started\r\n        restart_policy: unless-stopped\r\n        ports:\r\n          - "10050:10050"\r\n        volumes:\r\n          - /opt/zabbix:/var/lib/zabbix/enc\r\n        env:\r\n            ZBX_HOSTNAME: <Set a Name you want to use to add this Server to Zabbix>\r\n            ZBX_SERVER_HOST: <IP Address of the Zabbix Master Server>\r\n            ZBX_SERVER_PORT: <Set the Zabbix Active Server Port>\r\n            ZBX_TLSCONNECT: "psk"\r\n            ZBX_TLSACCEPT: "psk"\r\n            ZBX_TLSPSKIDENTITY: <Set a Name you want to use to add this Server to Zabbix>\r\n            ZBX_TLSPSKFILE: "agent_tls.psk"\r\n\n'})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},961510:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/Ansible_Tower_Workflows_01-227ccd2891b5920cd204afbe321506ec.png"},486397:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/Ansible_Tower_Workflows_02-ee7f3c240d40427b472e4472024c3ae1.png"},265268:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/Ansible_Tower_Workflows_03-3612a159ea43fb76363b9db4e40ba4f9.png"},311179:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/Ansible_Tower_Workflows_04-cee2c274e3f6e7df864176a3bac45e8e.png"},90050:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/Ansible_Tower_Workflows_05-dfe1133dd99e6cb6af9eb848348cd9ba.png"},154585:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/Ansible_Tower_Workflows_06-4513e5a964e41fa4399cfa018c3a1c51.png"},557680:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/Ansible_Tower_Workflows_07-dbb64553937e45d04f3ac4599af030c2.png"},508215:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/Ansible_Tower_Workflows_08-ead7e87a1657a9d243ec0b0444cfffde.png"},365198:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/Ansible_Tower_Workflows_09-a26e9d553cd8c23d33a45a236dc3e37e.png"},224996:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/Ansible_Tower_Workflows_10-e3301af6a22071b8f275e9d88fb2c0ac.png"},751149:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/Ansible_Tower_Workflows_11-92b243ec82ef4507c505ac36867cb9a5.png"},345037:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/photo-456tdsfggd_67gfh6dgdf4_d-c013cf2b1291840bc1143c6e5e73b4b0.jpg"},28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var s=r(296540);const t={},i=s.createContext(t);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);