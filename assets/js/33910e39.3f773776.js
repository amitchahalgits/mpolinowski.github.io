"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[38404],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,g=u["".concat(s,".").concat(d)]||u[d]||m[d]||o;return n?a.createElement(g,l(l({ref:t},c),{},{components:n})):a.createElement(g,l({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},37754:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const o={sidebar_position:5040,slug:"2022-03-16",title:"Install Gitlab with Docker-Compose (Debian Bullseye)",authors:"mpolinowski",tags:["LINUX"]},l=void 0,i={unversionedId:"DevOps/Provisioning/2022-03-16--gitlab-docker-compose-on-localhost/index",id:"DevOps/Provisioning/2022-03-16--gitlab-docker-compose-on-localhost/index",title:"Install Gitlab with Docker-Compose (Debian Bullseye)",description:"Shenzhen, China",source:"@site/docs/DevOps/Provisioning/2022-03-16--gitlab-docker-compose-on-localhost/index.mdx",sourceDirName:"DevOps/Provisioning/2022-03-16--gitlab-docker-compose-on-localhost",slug:"/DevOps/Provisioning/2022-03-16--gitlab-docker-compose-on-localhost/2022-03-16",permalink:"/docs/DevOps/Provisioning/2022-03-16--gitlab-docker-compose-on-localhost/2022-03-16",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Provisioning/2022-03-16--gitlab-docker-compose-on-localhost/index.mdx",tags:[{label:"LINUX",permalink:"/docs/tags/linux"}],version:"current",sidebarPosition:5040,frontMatter:{sidebar_position:5040,slug:"2022-03-16",title:"Install Gitlab with Docker-Compose (Debian Bullseye)",authors:"mpolinowski",tags:["LINUX"]},sidebar:"tutorialSidebar",previous:{title:"Bind9 Server Configuration",permalink:"/docs/DevOps/Provisioning/2022-01-27--bind9-configuration/2022-01-27"},next:{title:"DNS Over TLS Using BIND And Nginx",permalink:"/docs/DevOps/Provisioning/2022-01-26--dns-over-TLS-docker/2022-01-26"}},s={},p=[{value:"Setup",id:"setup",level:2},{value:"Docker-Compose",id:"docker-compose",level:2},{value:"Generate SSL and DHAPARAM Certificates",id:"generate-ssl-and-dhaparam-certificates",level:2},{value:"Run the Container",id:"run-the-container",level:2}],c={toc:p};function m(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Shenzhen, China",src:n(95114).Z,width:"1500",height:"567"})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#setup"},"Setup")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#docker-compose"},"Docker-Compose")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#generate-ssl-and-dhaparam-certificates"},"Generate SSL and DHAPARAM Certificates")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#run-the-container"},"Run the Container"))),(0,r.kt)("h2",{id:"setup"},"Setup"),(0,r.kt)("p",null,"Create the ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose")," file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p /opt/gitlab/{config/ssl,logs,data} && cd /opt/gitlab\nnano .env\n")),(0,r.kt)("p",null,'Define the environment variable "GITLAB_HOME": ',(0,r.kt)("inlineCode",{parentName:"p"},"export GITLAB_HOME=/opt/gitlab"),"."),(0,r.kt)("h2",{id:"docker-compose"},"Docker-Compose"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"nano docker-compose.yml\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yml"},"version: '3.6'\nservices:\n  web:\n    image: 'gitlab/gitlab-ce:latest'\n    container_name: gitlab-ce\n    restart: unless-stopped\n    hostname: 'gitlab.example.com'\n    environment:\n      GITLAB_OMNIBUS_CONFIG: |\n        # Add any other gitlab.rb configuration here, each on its own line\n        external_url 'https://gitlab.example.com:8443'\n        gitlab_rails['gitlab_shell_ssh_port'] = 2222\n        nginx['redirect_http_to_https'] = true\n        nginx['ssl_certificate'] = \"/etc/gitlab/ssl/fullchain.pem\"\n        nginx['ssl_certificate_key'] = \"/etc/gitlab/ssl/privkey.pem\"\n        nginx['ssl_dhparam'] = \"/etc/gitlab/ssl/dhparams.pem\"\n    ports:\n      - '8080:80'\n      - '8443:443'\n      - '2222:22'\n    volumes:\n    - '${GITLAB_HOME}/config:/etc/gitlab'\n    - '${GITLAB_HOME}/logs:/var/log/gitlab'\n    - '${GITLAB_HOME}/data:/var/opt/gitlab'\n    - '${GITLAB_HOME}/config/ssl:/etc/gitlab/ssl'\n    shm_size: '256m'\n")),(0,r.kt)("h2",{id:"generate-ssl-and-dhaparam-certificates"},"Generate SSL and DHAPARAM Certificates"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"apt install certbot\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"certbot certonly --rsa-key-size 2048 \\\n  --standalone \\\n  --agree-tos \\\n  --no-eff-email \\\n  --email user@example.email \\\n  -d gitlab.example.com\n")),(0,r.kt)("p",null,"The Now copy the certificates ",(0,r.kt)("strong",{parentName:"p"},"fullchain.pem")," and ",(0,r.kt)("strong",{parentName:"p"},"privkey.pem")," will be generated in ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/letsencrypt/live/gitlab.example.com")," and needs to be linked into the ",(0,r.kt)("inlineCode",{parentName:"p"},"/opt/gitlab/config/ssl")," directory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cp /etc/letsencrypt/live/gitlab.example.com/fullchain.pem /opt/gitlab/config/ssl/fullchain.pem\ncp /etc/letsencrypt/live/gitlab.example.com/privkey.pem /opt/gitlab/config/ssl/privkey.pem\n")),(0,r.kt)("p",null,"Next, generate the DHPARAM certificate:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"openssl dhparam -out /opt/gitlab/config/ssl/dhparams.pem 2048\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"tree /opt/gitlab\n      \n/opt/gitlab\n\u251c\u2500\u2500 config\n\u2502   \u2514\u2500\u2500 ssl\n\u2502       \u251c\u2500\u2500 dhparams.pem\n\u2502       \u251c\u2500\u2500 fullchain.pem\n\u2502       \u2514\u2500\u2500 privkey.pem\n\u251c\u2500\u2500 data\n\u251c\u2500\u2500 docker-compose.yml\n\u251c\u2500\u2500 logs\n")),(0,r.kt)("h2",{id:"run-the-container"},"Run the Container"),(0,r.kt)("p",null,"Make sure that the HTTP/S and SSH Port is open:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"ufw allow 8080,8443,2222/tcp\n")),(0,r.kt)("p",null,"Start the Gitlab-CE and Gitlab-Runner Container with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker-compose up -d\n\ndocker-compose ps\nName          Command           State        Ports                                     \n----------------------------------------------------------------------------------------------------------\ngitlab-ce   /assets/wrapper   Up (unhealthy)   0.0.0.0:2222->22/tcp,:::2222->22/tcp, 0.0.0.0:8443->443/tcp,:::8443->443/tcp, 0.0.0.0:80->80/tcp,:::80->80/tcp \n")),(0,r.kt)("p",null,"Visit ",(0,r.kt)("inlineCode",{parentName:"p"},"https://gitlab.example.com:8443")," and you will get the GitLab reset password page. Type your new password for the default user ",(0,r.kt)("strong",{parentName:"p"},"root")," and click the ",(0,r.kt)("em",{parentName:"p"},"Change your password")," button."),(0,r.kt)("p",null,"Run Gitlab CLI commands inside the container:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker exec -it gitlab-ce gitlab-ctl status\n")),(0,r.kt)("p",null,"Edit the ",(0,r.kt)("inlineCode",{parentName:"p"},"gitlab.rb")," configuration:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"nano /opt/gitlab/config/gitlab.rb\n")),(0,r.kt)("p",null,"And restart the container to enable the changes:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker restart gitlab-ce\n")))}m.isMDXComponent=!0},95114:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-983e9af3d84f5fb9ebad02646e63767d.jpg"}}]);