"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[34606],{44310:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var o=t(785893),r=t(603905);const i={sidebar_position:4568,slug:"2024-02-26",title:"MLflow Integration for Ultralytics YOLO",authors:"mpolinowski",tags:["Python","Machine Learning","MLFlow","Docker","YOLO"],description:"Experiment to run pyTorch, Jupyter, YOLOv8.1 with MLFlow in Docker"},l="MLFlow Docker",a={id:"IoT-and-Machine-Learning/AIOps/2024-02-26-mlflow-with-yolov81/index",title:"MLflow Integration for Ultralytics YOLO",description:"Experiment to run pyTorch, Jupyter, YOLOv8.1 with MLFlow in Docker",source:"@site/docs/IoT-and-Machine-Learning/AIOps/2024-02-26-mlflow-with-yolov81/index.md",sourceDirName:"IoT-and-Machine-Learning/AIOps/2024-02-26-mlflow-with-yolov81",slug:"/IoT-and-Machine-Learning/AIOps/2024-02-26-mlflow-with-yolov81/2024-02-26",permalink:"/docs/IoT-and-Machine-Learning/AIOps/2024-02-26-mlflow-with-yolov81/2024-02-26",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IoT-and-Machine-Learning/AIOps/2024-02-26-mlflow-with-yolov81/index.md",tags:[{label:"Python",permalink:"/docs/tags/python"},{label:"Machine Learning",permalink:"/docs/tags/machine-learning"},{label:"MLFlow",permalink:"/docs/tags/ml-flow"},{label:"Docker",permalink:"/docs/tags/docker"},{label:"YOLO",permalink:"/docs/tags/yolo"}],version:"current",sidebarPosition:4568,frontMatter:{sidebar_position:4568,slug:"2024-02-26",title:"MLflow Integration for Ultralytics YOLO",authors:"mpolinowski",tags:["Python","Machine Learning","MLFlow","Docker","YOLO"],description:"Experiment to run pyTorch, Jupyter, YOLOv8.1 with MLFlow in Docker"},sidebar:"tutorialSidebar",previous:{title:"AIOps",permalink:"/docs/category/aiops"},next:{title:"MLFlow Hyperparameter Tuning in Docker",permalink:"/docs/IoT-and-Machine-Learning/AIOps/2024-02-24-mlflow-hyperparameter-tuning/2024-02-24"}},s={},c=[{value:"Create an MLFlow Experiment",id:"create-an-mlflow-experiment",level:2},{value:"Enable MLflow Logging",id:"enable-mlflow-logging",level:3},{value:"Model Training",id:"model-training",level:3}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.ah)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Guangzhou, China",src:t(284204).Z+"",width:"1061",height:"405"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"#mlflow-docker",children:"MLFlow Docker"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"#create-an-mlflow-experiment",children:"Create an MLFlow Experiment"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#enable-mlflow-logging",children:"Enable MLflow Logging"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#model-training",children:"Model Training"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h1,{id:"mlflow-docker",children:"MLFlow Docker"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"MLFlow in Docker",src:t(104346).Z+"",width:"1420",height:"229"})}),"\n",(0,o.jsxs)(n.p,{children:["This is just an experiment to see if I can use MLFlow inside my ",(0,o.jsx)(n.a,{href:"https://github.com/mpolinowski/pytorch-jupyter",children:"pytorch-jupyter"})," Docker container with the latest version of YOLOv8.1. To do this I added MLFlow to the Dockerfile:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-Dockerfile",children:'FROM pytorch/pytorch:latest\n\n# Set environment variables\nENV DEBIAN_FRONTEND=noninteractive\n\n# Install system dependencies\nRUN apt-get update && \\\n    apt-get install -y \\\n        git \\\n        tini \\\n        python3-pip \\\n        python3-dev \\\n        python3-opencv \\\n        libglib2.0-0\n\n# intall optional python deps\nRUN python -m pip install --upgrade pip\n# jupyter notebooks\nRUN pip install jupyter\n# fastdup https://github.com/visual-layer/fastdup\nRUN pip install fastdup\nRUN pip install opencv-python\nRUN pip install matplotlib matplotlib-inline pandas\nRUN pip install pillow\nRUN pip install pyyaml\n# YOLO 8.1\nRUN pip install ultralytics Cython>=0.29.32 lapx>=0.5.5\n# MLFlow 2.10\nRUN pip install mlflow pytorch_lightning\n\n\n\n# Set the working directory\nWORKDIR /opt/app\n\n# Start the notebook\nRUN chmod +x /usr/bin/tini\nENTRYPOINT ["/usr/bin/tini", "--"]\nCMD ["jupyter", "notebook", "--port=8888", "--no-browser", "--ip=0.0.0.0", "--allow-root"]\n'})}),"\n",(0,o.jsx)(n.p,{children:"Let's build this custom image with:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker build -t pytorch-jupyter . -f Dockerfile\n"})}),"\n",(0,o.jsx)(n.p,{children:"I can now create the container and mount my working directory into the container WORKDIR to get started:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker run --ipc=host --gpus all -ti --rm \\\n    -v $(pwd):/opt/app -p 8888:8888 -p 5000:5000 \\\n    --name pytorch-jupyter \\\n    pytorch-jupyter:latest\n"})}),"\n",(0,o.jsxs)(n.p,{children:["This will start Jupyter on Port ",(0,o.jsx)(n.code,{children:"8888"})," and I can start MLFlow manually:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker exec -ti pytorch-jupyter mlflow ui --host 0.0.0.0\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The MLFlow is now available on ",(0,o.jsx)(n.code,{children:"localhost:5000"})," on my host system:"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"MLFlow in Docker",src:t(144628).Z+"",width:"1159",height:"386"})}),"\n",(0,o.jsx)(n.p,{children:"Just to be sure I stop MLFlow and try to run it directly from a Jupyter Notebook:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'get_ipython().system_raw("mlflow ui --port 5000 --host 0.0.0.0 --backend-store-uri runs/mlflow &")\n'})}),"\n",(0,o.jsxs)(n.p,{children:["And the UI is still available on ",(0,o.jsx)(n.code,{children:"localhost:5000"})," - nice:"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"MLFlow in Docker",src:t(606451).Z+"",width:"1163",height:"607"})}),"\n",(0,o.jsx)(n.h2,{id:"create-an-mlflow-experiment",children:"Create an MLFlow Experiment"}),"\n",(0,o.jsx)(n.h3,{id:"enable-mlflow-logging",children:"Enable MLflow Logging"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"from ultralytics import settings\n\nsettings.update({\n    'mlflow': True,\n    'clearml': False,\n    'comet': False,\n    'dvc': False,\n    'hub': False,\n    'neptune': False,\n    'raytune': False,\n    'tensorboard': False,\n    'wandb': False\n})\n"})}),"\n",(0,o.jsx)(n.h3,{id:"model-training",children:"Model Training"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"from ultralytics import YOLO\n\n# Load a pretrained YOLO model (recommended for training)\nmodel = YOLO('yolov8n.pt')\n\n# Train the model using the 'coco128.yaml' dataset for 3 epochs\nresults = model.train(data='coco128.yaml', epochs=3)\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"MLFlow in Docker",src:t(891860).Z+"",width:"1385",height:"928"})})]})}function d(e={}){const{wrapper:n}={...(0,r.ah)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},603905:(e,n,t)=>{t.d(n,{ah:()=>c});var o=t(667294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=o.createContext({}),c=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),h=c(t),m=r,u=h["".concat(s,".").concat(m)]||h[m]||p[m]||i;return t?o.createElement(u,l(l({ref:n},d),{},{components:t})):o.createElement(u,l({ref:n},d))}));d.displayName="MDXCreateElement"},104346:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/MLFlow_Docker_00-9d819b66f3743aa5dc749c7ef0bd5d22.png"},144628:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/MLFlow_Docker_01-f0b4ba218155653aea904b5277b5c9da.png"},606451:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/MLFlow_Docker_02-c02378e9e89e209c1b7466e1ca043692.png"},891860:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/MLFlow_Docker_03-574ce041a191a94292980046e89c1969.png"},284204:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-fe9bbb57ea8da08fea2f3fef2bf2515b.jpg"}}]);