"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[46095],{477897:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>d});var s=r(785893),i=r(603905);const t={sidebar_position:8070,slug:"2022-01-13",title:"Zabbix v6 Docker-Compose Setup",authors:"mpolinowski",tags:["Linux","Zabbix","Docker"]},a=void 0,o={id:"DevOps/Zabbix/2022-01-13--zabbix-server-v6/index",title:"Zabbix v6 Docker-Compose Setup",description:"Guangzhou, China",source:"@site/docs/DevOps/Zabbix/2022-01-13--zabbix-server-v6/index.md",sourceDirName:"DevOps/Zabbix/2022-01-13--zabbix-server-v6",slug:"/DevOps/Zabbix/2022-01-13--zabbix-server-v6/2022-01-13",permalink:"/docs/DevOps/Zabbix/2022-01-13--zabbix-server-v6/2022-01-13",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Zabbix/2022-01-13--zabbix-server-v6/index.md",tags:[{label:"Linux",permalink:"/docs/tags/linux"},{label:"Zabbix",permalink:"/docs/tags/zabbix"},{label:"Docker",permalink:"/docs/tags/docker"}],version:"current",sidebarPosition:8070,frontMatter:{sidebar_position:8070,slug:"2022-01-13",title:"Zabbix v6 Docker-Compose Setup",authors:"mpolinowski",tags:["Linux","Zabbix","Docker"]},sidebar:"tutorialSidebar",previous:{title:"Zabbix v6 Apache 2 Monitor",permalink:"/docs/DevOps/Zabbix/2022-01-14--zabbix-apache2-monitor/2022-01-14"},next:{title:"Testing the Zabbix API with Postman",permalink:"/docs/DevOps/Zabbix/2022-01-13--zabbix-api-testing/2022-01-13"}},c={},d=[{value:"Preparation",id:"preparation",level:2},{value:"zabbix-server",id:"zabbix-server",level:3},{value:"zabbix-web",id:"zabbix-web",level:3},{value:"zabbix-agent",id:"zabbix-agent",level:3},{value:"Docker Compose Up",id:"docker-compose-up",level:2},{value:"Test Run",id:"test-run",level:3},{value:"Configure the Server",id:"configure-the-server",level:3},{value:"NGINX Docker Ingress",id:"nginx-docker-ingress",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Zabbix server: More than 75% used in the configuration cache",id:"zabbix-server-more-than-75-used-in-the-configuration-cache",level:3}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.ah)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Guangzhou, China",src:r(262).Z+"",width:"1500",height:"377"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/mpolinowski/zabbix-server-compose",children:"Github Repository"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#preparation",children:"Preparation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#zabbix-server",children:"zabbix-server"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#zabbix-web",children:"zabbix-web"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#zabbix-agent",children:"zabbix-agent"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#docker-compose-up",children:"Docker Compose Up"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#test-run",children:"Test Run"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#configure-the-server",children:"Configure the Server"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#nginx-docker-ingress",children:"NGINX Docker Ingress"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#zabbix-server-more-than-75-used-in-the-configuration-cache",children:"Zabbix server: More than 75% used in the configuration cache"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Installing ",(0,s.jsx)(n.strong,{children:"Zabbix Server version 6"})," with an ",(0,s.jsx)(n.strong,{children:"Zabbix Agent version 2"})," using Docker Compose"]}),"\n",(0,s.jsx)(n.h2,{id:"preparation",children:"Preparation"}),"\n",(0,s.jsx)(n.p,{children:"Clone the repository:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/mpolinowski/zabbix-server-compose.git\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Change the database login in ",(0,s.jsx)(n.code,{children:"./env_vars/.POSTGRES_PASSWORD"})," and ",(0,s.jsx)(n.code,{children:"./env_vars/.POSTGRES_USER"})," and take a look at the ",(0,s.jsx)(n.code,{children:"./docker-compose.yml"})," file:"]}),"\n",(0,s.jsx)(n.h3,{id:"zabbix-server",children:"zabbix-server"}),"\n",(0,s.jsxs)(n.p,{children:["Zabbix version 6 is currently still in beta. And we can only get it from the ",(0,s.jsx)(n.code,{children:"trunk"})," branch. Verify the latest version on ",(0,s.jsx)(n.a,{href:"https://hub.docker.com/r/zabbix/zabbix-server-pgsql/tags",children:"Docker Hub"})," - once version 6 was moved to ",(0,s.jsx)(n.code,{children:"stable"})," adjust the image tag below."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:'zabbix-server:\r\n    image: zabbix/zabbix-server-pgsql:trunk-alpine\r\n    ports:\r\n      - "10051:10051"\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Zabbix Server uses the port ",(0,s.jsx)(n.code,{children:"10051"}),". This is the port you need to add to your Zabbix Agent configuration so that it can communicate with your server. If you want to use a none-default port just change the first (left) ",(0,s.jsx)(n.code,{children:"10051"})," seen above - e.g. :"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:'    ports:\r\n      - "15001:10051"\n'})}),"\n",(0,s.jsxs)(n.p,{children:["In this case you will have to point your agents to port ",(0,s.jsx)(n.code,{children:"15001"})," and also make sure that the port is set to open in your ",(0,s.jsx)(n.strong,{children:"server firewall"}),"!"]}),"\n",(0,s.jsx)(n.h3,{id:"zabbix-web",children:"zabbix-web"}),"\n",(0,s.jsxs)(n.p,{children:["Zabbix version 6 is currently still in beta. And we can only get it from the ",(0,s.jsx)(n.code,{children:"trunk"})," branch. Verify the latest version on ",(0,s.jsx)(n.a,{href:"https://hub.docker.com/r/zabbix/zabbix-web-nginx-pgsql/tags",children:"Docker Hub"})," - once version 6 was moved to ",(0,s.jsx)(n.code,{children:"stable"})," adjust the image tag below."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:'zabbix-web-nginx-pgsql:\r\n    container_name: zabbix-web\r\n    image: zabbix/zabbix-web-nginx-pgsql:trunk-alpine\r\n    ports:\r\n      - "8080:8080"\r\n      - "8443:8443"\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The web frontend's default ",(0,s.jsx)(n.strong,{children:"HTTP"})," port is ",(0,s.jsx)(n.code,{children:"8080"}),". There is also an option to add an SSL certificate to the Zabbix frontend directly and access it via ",(0,s.jsx)(n.strong,{children:"HTTPS"})," on default port ",(0,s.jsx)(n.code,{children:"8443"}),". But I am not going to use this option. Instead I am adding a third virtual docker network that already contains an NGINX container that is configured as an ",(0,s.jsx)(n.strong,{children:"Ingress"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"networks:\r\n      zbx_net_backend:\r\n        ipv4_address: 172.16.239.102\r\n        aliases:\r\n          - zabbix-web-nginx-pgsql\r\n          - zabbix-web-nginx-alpine-pgsql\r\n          - zabbix-web-nginx-pgsql-alpine\r\n      zbx_net_frontend:\r\n        ipv4_address: 172.16.238.102\r\n      ingress_gateway:\r\n        aliases:\r\n          - zabbix-web\n"})}),"\n",(0,s.jsx)(n.p,{children:"This network needs to be created first:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker network create ingress_gateway\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Delete the ",(0,s.jsx)(n.code,{children:"ingress_gateway"})," network from the ",(0,s.jsx)(n.code,{children:"docker-compose.yml"})," as well as it's instantiation below if you want to access Zabbix directly on port ",(0,s.jsx)(n.code,{children:"8080"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:'networks:\r\n  zbx_net_frontend:\r\n    driver: bridge\r\n    driver_opts:\r\n      com.docker.network.enable_ipv6: "false"\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.16.238.0/24\r\n  zbx_net_backend:\r\n    driver: bridge\r\n    driver_opts:\r\n      com.docker.network.enable_ipv6: "false"\r\n    internal: true\r\n    ipam:\r\n      driver: default\r\n      config:\r\n        - subnet: 172.16.239.0/24\r\n  ingress_gateway:\r\n    external: true\r\n    name: ingress_gateway\n'})}),"\n",(0,s.jsx)(n.h3,{id:"zabbix-agent",children:"zabbix-agent"}),"\n",(0,s.jsxs)(n.p,{children:["Zabbix version 6 is currently still in beta. And we can only get it from the ",(0,s.jsx)(n.code,{children:"trunk"})," branch. Verify the latest version on ",(0,s.jsx)(n.a,{href:"https://hub.docker.com/r/zabbix/zabbix-agent2/tags",children:"Docker Hub"})," - once version 6 was moved to ",(0,s.jsx)(n.code,{children:"stable"})," adjust the image tag below."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"  zabbix-agent:\r\n    container_name: zabbix-agent\r\n    image: zabbix/zabbix-agent2:trunk-alpine\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note"})," that the agent is on the same virtual backend network as the Zabbix server and our Zabbix web frontend:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"    networks:\r\n      zbx_net_backend:\r\n        ipv4_address: 172.16.239.103\r\n        aliases:\r\n          - zabbix-agent\r\n          - zabbix-agent-passive\r\n          - zabbix-agent-alpine\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This means that you will be able to connect to your agent either by it's fixed IP ",(0,s.jsx)(n.code,{children:"172.16.239.103"})," or via the DNS service that will resolve the alias ",(0,s.jsx)(n.code,{children:"zabbix-agent"})," for you."]}),"\n",(0,s.jsx)(n.h2,{id:"docker-compose-up",children:"Docker Compose Up"}),"\n",(0,s.jsx)(n.h3,{id:"test-run",children:"Test Run"}),"\n",(0,s.jsxs)(n.p,{children:["Run the ",(0,s.jsx)(n.code,{children:"docker-compose.yml"})," file and check the log output - is everything starting up?"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker-compose up\n"})}),"\n",(0,s.jsxs)(n.p,{children:["If your server allows access to port ",(0,s.jsx)(n.code,{children:"8080"})," use your web browser to access the web frontend and login with the default:"]}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Username"}),(0,s.jsx)(n.th,{children:"Password"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Admin"}),(0,s.jsx)(n.td,{children:"zabbix"})]})})]}),"\n",(0,s.jsx)(n.h3,{id:"configure-the-server",children:"Configure the Server"}),"\n",(0,s.jsx)(n.p,{children:"Always the first step - changing the theme:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Zabbix v6 Docker-Compose Setup",src:r(685180).Z+"",width:"1154",height:"509"})}),"\n",(0,s.jsx)(n.p,{children:"Change the default administrator login:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Zabbix v6 Docker-Compose Setup",src:r(437431).Z+"",width:"1153",height:"621"})}),"\n",(0,s.jsx)(n.p,{children:"Now we need to connect our agent that is still MiA:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Zabbix v6 Docker-Compose Setup",src:r(202188).Z+"",width:"1063",height:"117"})}),"\n",(0,s.jsx)(n.p,{children:"Since the agent is running on the same Docker network we can simply add the fixed IP and/or the container alias the server configuration and both containers should be able to find each other:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Zabbix v6 Docker-Compose Setup",src:r(338977).Z+"",width:"1264",height:"740"})}),"\n",(0,s.jsxs)(n.p,{children:["Since there are some limitations ... or at least complications ... to running your agent inside a docker container you might want to remove it from the ",(0,s.jsx)(n.code,{children:"docker-compose.yml"})," file before starting the server and install the agent via your package manager. In this case you will have to use your server IP address here instead and, of course, make sure that the agent port ",(0,s.jsx)(n.code,{children:"10050"})," is open in your firewall:"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Zabbix v6 Docker-Compose Setup",src:r(247804).Z+"",width:"924",height:"311"})}),"\n",(0,s.jsx)(n.p,{children:"Give it a few minutes and get yourself a coffee... the agent should be online shortly:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Zabbix v6 Docker-Compose Setup",src:r(870096).Z+"",width:"1076",height:"362"})}),"\n",(0,s.jsx)(n.p,{children:"Now shutdown the zabbix containers and restart them as daemons. The containers are configured to be automatically restarted if there is a problem or you restart your server:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker-compose down\r\ndocker-compose up -d\n"})}),"\n",(0,s.jsx)(n.h2,{id:"nginx-docker-ingress",children:"NGINX Docker Ingress"}),"\n",(0,s.jsxs)(n.p,{children:["I created the ",(0,s.jsx)(n.code,{children:"ingress_gateway"})," Docker network in one of the steps above. I will now add an NGINX container to this network that will server as my ingress and handle the Certbot SSL certificate:"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/mpolinowski/nginx_docker_ingress",children:"Github Repository"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"docker-compose.yml"})," file for it looks like this:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:'version: "3.8"\r\n\r\nservices:\r\n\r\n    ingress:\r\n        image: nginx:stable-alpine\r\n        container_name: ingress\r\n        networks:\r\n          ingress_gateway:\r\n            aliases:\r\n            - zabbix-ingress\r\n        ports:\r\n        - "80:80"\r\n        - "443:443"\r\n        restart: unless-stopped\r\n        volumes:\r\n        - /opt/docker-ingress/configuration/conf.d:/etc/nginx/conf.d\r\n        - /opt/docker-ingress/configuration/ssl/dhparam:/etc/nginx/ssl/dhparam\r\n        - /opt/docker-ingress/configuration/ssl/selfsigned:/etc/nginx/ssl/selfsigned\r\n        - /etc/letsencrypt:/etc/letsencrypt\r\n        - /opt/docker-ingress/configuration/nginx.conf:/etc/nginx/nginx.conf\r\n        - /opt/test-static/public:/opt/test-static/public\r\n\r\n\r\n\r\nnetworks:\r\n  ingress_gateway:\r\n    external: true\r\n    name: ingress_gateway\n'})}),"\n",(0,s.jsxs)(n.p,{children:["And the ",(0,s.jsx)(n.code,{children:"configuration/conf.d/default.conf"})," needs a server block with a proxy pass for the Zabbix frontend:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-conf",children:'location /zabbix/ {\r\n        add_header                              Cache-Control  "public, must-revalidate, proxy-revalidate, max-age=0";\r\n        proxy_set_header                        X-Forwarded-For $proxy_add_x_forwarded_for;\r\n        proxy_set_header                        X-NginX-Proxy true;\r\n        proxy_set_header                        X-Real-IP $remote_addr;\r\n        proxy_set_header                        X-Forwarded-Proto http;\r\n        proxy_hide_header                       X-Frame-Options;\r\n        proxy_set_header                        Accept-Encoding "";\r\n        proxy_http_version                      1.1;\r\n        proxy_set_header                        Upgrade $http_upgrade;\r\n        proxy_set_header                        Connection "upgrade";\r\n        proxy_set_header                        Host $host;\r\n        proxy_cache_bypass                      $http_upgrade;\r\n        proxy_max_temp_file_size                0;\r\n        proxy_redirect                          off;\r\n        proxy_read_timeout                      240s;\r\n        proxy_pass                              http://zabbix-web:8080/;\r\n    }\n'})}),"\n",(0,s.jsxs)(n.p,{children:["We gave the frontend the network alias ",(0,s.jsx)(n.code,{children:"zabbix-web"})," and since both the frontend and our ",(0,s.jsx)(n.code,{children:"ingress"})," are a member of the network ",(0,s.jsx)(n.code,{children:"ingress_gateway"})," NGINX is now able to connect to ",(0,s.jsx)(n.code,{children:"http://zabbix-web:8080/"})," and proxy the service!"]}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(n.h3,{id:"zabbix-server-more-than-75-used-in-the-configuration-cache",children:"Zabbix server: More than 75% used in the configuration cache"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Zabbix v6 Docker-Compose Setup",src:r(589258).Z+"",width:"1019",height:"40"})}),"\n",(0,s.jsxs)(n.p,{children:["Open the Server environment file ",(0,s.jsx)(n.code,{children:"env_vars/.env_srv"})," and un-comment the following line:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# ZBX_CACHESIZE=8M\n"})}),"\n",(0,s.jsx)(n.p,{children:"Try out higher values e.g. :"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"ZBX_CACHESIZE=64M\n"})}),"\n",(0,s.jsx)(n.p,{children:"Wait for a few minutes before increasing it further. See if the warning disappears. You might also want to take a look at the other cache options - but changing the main cache to 64 MB was already enough for my setup:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"ZBX_CACHESIZE=128M\r\nZBX_HISTORYCACHESIZE=128M\r\nZBX_HISTORYINDEXCACHESIZE=128M\r\nZBX_TRENDCACHESIZE=128M\r\nZBX_VALUECACHESIZE=128M\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.ah)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},603905:(e,n,r)=>{r.d(n,{ah:()=>d});var s=r(667294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function t(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);n&&(s=s.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,s)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?t(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):t(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function o(e,n){if(null==e)return{};var r,s,i=function(e,n){if(null==e)return{};var r,s,i={},t=Object.keys(e);for(s=0;s<t.length;s++)r=t[s],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(s=0;s<t.length;s++)r=t[s],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=s.createContext({}),d=function(e){var n=s.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},l={inlineCode:"code",wrapper:function(e){var n=e.children;return s.createElement(s.Fragment,{},n)}},h=s.forwardRef((function(e,n){var r=e.components,i=e.mdxType,t=e.originalType,c=e.parentName,h=o(e,["components","mdxType","originalType","parentName"]),b=d(r),x=i,p=b["".concat(c,".").concat(x)]||b[x]||l[x]||t;return r?s.createElement(p,a(a({ref:n},h),{},{components:r})):s.createElement(p,a({ref:n},h))}));h.displayName="MDXCreateElement"},589258:(e,n,r)=>{r.d(n,{Z:()=>s});const s=r.p+"assets/images/ZBX_Cache_Size_Warning-2e7603b038977b46f098fcee5c30b464.png"},685180:(e,n,r)=>{r.d(n,{Z:()=>s});const s=r.p+"assets/images/Zabbix-Server_01-fe7ef6aedc16ff64b7861015048b50f3.png"},437431:(e,n,r)=>{r.d(n,{Z:()=>s});const s=r.p+"assets/images/Zabbix-Server_02-67eef45fd596169daf18e912d326fc10.png"},202188:(e,n,r)=>{r.d(n,{Z:()=>s});const s=r.p+"assets/images/Zabbix-Server_03-ce564f523cb2b83763a107f368b2ac54.png"},338977:(e,n,r)=>{r.d(n,{Z:()=>s});const s=r.p+"assets/images/Zabbix-Server_04-1d8ff41e9a797f2bebdbea3e39d8d0c5.png"},870096:(e,n,r)=>{r.d(n,{Z:()=>s});const s=r.p+"assets/images/Zabbix-Server_05-ffbcee5e0d9c4b26e6fb89a330d926cf.png"},247804:(e,n,r)=>{r.d(n,{Z:()=>s});const s=r.p+"assets/images/Zabbix_Agent_Configuration_02-330a84fd672773a806c59befb8d0f95a.png"},262:(e,n,r)=>{r.d(n,{Z:()=>s});const s=r.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-4f0fde65e04cafca8ab4f458db4fec43.jpg"}}]);