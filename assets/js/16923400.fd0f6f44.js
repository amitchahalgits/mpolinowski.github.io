"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[78838],{178906:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var s=n(474848),i=n(28453);const r={sidebar_position:5950,slug:"2022-12-11",title:"11ty Static Site Generator",authors:"mpolinowski",tags:["Javascript"],description:"Eleventy, a simpler static site\xa0generator."},l=void 0,a={id:"Development/Javascript/2022-12-11-11ty-starter/index",title:"11ty Static Site Generator",description:"Eleventy, a simpler static site\xa0generator.",source:"@site/docs/Development/Javascript/2022-12-11-11ty-starter/index.md",sourceDirName:"Development/Javascript/2022-12-11-11ty-starter",slug:"/Development/Javascript/2022-12-11-11ty-starter/2022-12-11",permalink:"/docs/Development/Javascript/2022-12-11-11ty-starter/2022-12-11",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Development/Javascript/2022-12-11-11ty-starter/index.md",tags:[{label:"Javascript",permalink:"/docs/tags/javascript"}],version:"current",sidebarPosition:5950,frontMatter:{sidebar_position:5950,slug:"2022-12-11",title:"11ty Static Site Generator",authors:"mpolinowski",tags:["Javascript"],description:"Eleventy, a simpler static site\xa0generator."},sidebar:"tutorialSidebar",previous:{title:"Reactive Search Starter",permalink:"/docs/Development/Javascript/2022-12-29-reactive-search-starter/2022-12-29"},next:{title:"TypeScript 2.0 in React 19 (2023)",permalink:"/docs/Development/Javascript/2022-11-29-react-typescript-intro-2023/2022-11-29"}},o={},c=[{value:"Getting Started",id:"getting-started",level:2},{value:"Layouts",id:"layouts",level:2}];function d(e){const t={a:"a",code:"code",em:"em",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Shenzhen, China",src:n(253792).A+"",width:"2208",height:"757"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"#getting-started",children:"Getting Started"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"#layouts",children:"Layouts"})}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https://www.11ty.dev/",children:"Eleventy"})," quickly builds speedy web sites. Originally pitched as the JavaScript alternative to Jekyll:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Eleventy is zero-config (by default) with flexible configuration options."}),"\n",(0,s.jsxs)(t.li,{children:["Eleventy works with multiple template languages:","\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"HTML"}),": ",(0,s.jsx)(t.em,{children:"*.md .html Markdown"})]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"WebC"}),": ",(0,s.jsx)(t.em,{children:"*.webc JavaScript"})]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Liquid"}),": ",(0,s.jsx)(t.em,{children:"*.liquid *.11ty.js"})]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Nunjucks"}),": ",(0,s.jsx)(t.em,{children:"*.njk"})]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Handlebars"})," ",(0,s.jsx)(t.em,{children:"*.hbs Mustache"})]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"mustache"}),": ",(0,s.jsx)(t.em,{children:"*.mustache"})]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"EJS"}),": ",(0,s.jsx)(t.em,{children:"*.ejs"})]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Haml"}),": ",(0,s.jsx)(t.em,{children:"*.haml"})]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Pug"}),": ",(0,s.jsx)(t.em,{children:"*.pug"})]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Custom"}),": ",(0,s.jsx)(t.em,{children:(0,s.jsx)(t.em,{children:"."})})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"echo '<!doctype html><html><head><title>Hello World</title></head><body><a href=\"/README\">README</a></body></html>' > index.html\necho '# README' > README.md\nnpx @11ty/eleventy\n\nNeed to install the following packages:\n  @11ty/eleventy@1.0.2\nOk to proceed? (y) y\n[11ty] Writing _site/README/index.html from ./README.md (liquid)\n[11ty] Wrote 1 file in 0.08 seconds (v1.0.2)\n"})}),"\n",(0,s.jsxs)(t.p,{children:["This will compile any files matching valid input template file extensions (.md is one of them) in the current directory into the output folder (defaults to ",(0,s.jsx)(t.code,{children:"_site"}),")."]}),"\n",(0,s.jsxs)(t.p,{children:["Run the following command to start up a web server and serve your readme on ",(0,s.jsx)(t.code,{children:"http://localhost:8080/README/"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"npx @11ty/eleventy --serve\n\n[11ty] Writing _site/README/index.html from ./README.md (liquid)\n[11ty] Wrote 1 file in 0.08 seconds (v1.0.2)\n[11ty] Writing _site/README/index.html from ./README.md (liquid)\n[11ty] Wrote 1 file in 0.07 seconds (v1.0.2)\n[11ty] Watching\u2026\n[Browsersync] Access URLs:\n -----------------------------------\n    Local: http://localhost:8080\n -----------------------------------\n[Browsersync] Serving files from: _site\n"})}),"\n",(0,s.jsx)(t.p,{children:"Add more pages with supported file extensions and your HTML code will be created automatically and your browser will reload."}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Important Note"}),": Editing README.md won't refresh your browser automatically, because ",(0,s.jsx)(t.a,{href:"https://browsersync.io/docs/#requirements",children:"Browsersync requires a body tag in your template for live-reload"})," to work properly. Use Layouts to add a ",(0,s.jsx)(t.code,{children:"<body>"})," around your Markdown content."]}),"\n",(0,s.jsx)(t.h2,{id:"layouts",children:"Layouts"}),"\n",(0,s.jsxs)(t.p,{children:["Eleventy Layouts are special templates that can be used to wrap other content. To denote that a piece of content should be wrapped in a template, use the layout key in your ",(0,s.jsx)(t.strong,{children:"Front Matter"}),". So we can replace the content of the ",(0,s.jsx)(t.code,{children:"README.md"})," file with:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-md",children:"---\nlayout: layouts/base.njk\ntitle: README\n---\n## {{ title }}\n"})}),"\n",(0,s.jsxs)(t.p,{children:["This will look for a ",(0,s.jsx)(t.code,{children:"base.njk"})," Nunjucks file in your includes folder at ",(0,s.jsx)(t.code,{children:"_includes/layouts/base.njk"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-md",children:'---\ntitle: Hi there!\n---\n\n<!doctype html>\n<html lang="en">\n  <head>\n    <meta charset="utf-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>{{ title }}</title>\n  </head>\n  <body>\n    <div><h1>Page HEADER</h1></div>\n    {{ content | safe }}\n  </body>\n</html>\n'})})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},253792:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-e38404fdf0e14587f660e537829bfab5.jpg"},28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>a});var s=n(296540);const i={},r=s.createContext(i);function l(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);