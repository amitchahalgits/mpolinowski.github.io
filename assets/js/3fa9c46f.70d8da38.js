"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[51430],{884635:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>s,default:()=>l,frontMatter:()=>i,metadata:()=>a,toc:()=>h});var t=n(785893),o=n(603905);const i={sidebar_position:6980,slug:"2023-01-23",title:"OpenThread Border Router",authors:"mpolinowski",tags:["IoT"],image:"https://mpolinowski.github.io/img/search/mqtt.png",description:"Build an OpenThread Border Router with Raspberry Pi 3B+ and Pitaya Go."},s=void 0,a={id:"Automation_and_Robotics/Home_Automation/2023-01-23-thread-edge-router/index",title:"OpenThread Border Router",description:"Build an OpenThread Border Router with Raspberry Pi 3B+ and Pitaya Go.",source:"@site/docs/Automation_and_Robotics/Home_Automation/2023-01-23-thread-edge-router/index.md",sourceDirName:"Automation_and_Robotics/Home_Automation/2023-01-23-thread-edge-router",slug:"/Automation_and_Robotics/Home_Automation/2023-01-23-thread-edge-router/2023-01-23",permalink:"/docs/Automation_and_Robotics/Home_Automation/2023-01-23-thread-edge-router/2023-01-23",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Automation_and_Robotics/Home_Automation/2023-01-23-thread-edge-router/index.md",tags:[{label:"IoT",permalink:"/docs/tags/io-t"}],version:"current",sidebarPosition:6980,frontMatter:{sidebar_position:6980,slug:"2023-01-23",title:"OpenThread Border Router",authors:"mpolinowski",tags:["IoT"],image:"https://mpolinowski.github.io/img/search/mqtt.png",description:"Build an OpenThread Border Router with Raspberry Pi 3B+ and Pitaya Go."},sidebar:"tutorialSidebar",previous:{title:"OpenThread Border Router with Docker with Docker",permalink:"/docs/Automation_and_Robotics/Home_Automation/2023-01-23-thread-edge-router-docker/2023-01-23"},next:{title:"MQTT Auto-Discovery - Use Node-RED to register Smarthome Devices",permalink:"/docs/Automation_and_Robotics/Home_Automation/2022-07-17-node-red-for-mqtt-autodiscovery/2022-07-17"}},d={},h=[{value:"Hardware Requirements\xb6",id:"hardware-requirements",level:2},{value:"Preparing the RaspberryPI",id:"preparing-the-raspberrypi",level:2},{value:"Preparing the Pitaya Go",id:"preparing-the-pitaya-go",level:2},{value:"Flash the NCP firmware",id:"flash-the-ncp-firmware",level:3},{value:"Set up the Border Router",id:"set-up-the-border-router",level:2},{value:"Configure the Pitaya Go",id:"configure-the-pitaya-go",level:2}];function c(e){const r={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.ah)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{alt:"Guangzhou, China",src:n(805302).Z+"",width:"1500",height:"526"})}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"#hardware-requirements",children:"Hardware Requirements\xb6"})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"#preparing-the-raspberrypi",children:"Preparing the RaspberryPI"})}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"#preparing-the-pitaya-go",children:"Preparing the Pitaya Go"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"#flash-the-ncp-firmware",children:"Flash the NCP firmware"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"#set-up-the-border-router",children:"Set up the Border Router"})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"#configure-the-pitaya-go",children:"Configure the Pitaya Go"})}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:["A ",(0,t.jsx)(r.a,{href:"https://openthread.io/guides/border-router/build",children:"Thread Border Router"})," serves as a gateway between the Internet and the Thread network. OpenThread's implementation of a Border Router is called OpenThread Border Router (OTBR). OTBR is a Thread Certified Component on the Raspberry Pi 3B with a Nordic nRF52840 NCP."]}),"\n",(0,t.jsx)(r.p,{children:"A Thread Border Router minimally supports the following functions:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:"End-to-end IP connectivity via routing between Thread devices and other external IP networks"}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:"External Thread Commissioning (for example, a mobile phone) to authenticate and join a Thread device to a Thread network"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:["For more technical details, ",(0,t.jsx)(r.a,{href:"https://openthread.io/guides/border_router",children:"openthread.io"})," is the best place for you."]}),"\n",(0,t.jsx)(r.h2,{id:"hardware-requirements",children:"Hardware Requirements\xb6"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"1x Raspberry Pi 3B"}),"\n",(0,t.jsx)(r.li,{children:"1x Pitaya Go"}),"\n",(0,t.jsx)(r.li,{children:"1x 4 GB (or larger) microSD card"}),"\n",(0,t.jsx)(r.li,{children:"1x microSD card reader"}),"\n",(0,t.jsx)(r.li,{children:"1x microUSB power supply for Raspberry Pi 3B"}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"preparing-the-raspberrypi",children:"Preparing the RaspberryPI"}),"\n",(0,t.jsxs)(r.p,{children:["I am downloading a ",(0,t.jsx)(r.strong,{children:"Raspberry Pi 3B+"})," compatible ",(0,t.jsx)(r.a,{href:"https://raspi.debian.net/tested-images/",children:"Debian Bullseye Image"})," and bring it ",(0,t.jsx)(r.a,{href:"https://etcher.io",children:"onto an SD card"}),". To activate the SSH service you are have to add an empty file ",(0,t.jsx)(r.code,{children:"ssh"})," to the ",(0,t.jsx)(r.code,{children:"boot"})," directory - though remote logins are deactivated by default and need to be configured by attaching a keyboard and monitor. There should be a way to do this by a post-install script, but I could not find it on a quick skim:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"cd /run/media/myuser/RASPIROOT/boot/\ntouch ssh\n"})}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{alt:"OpenThread Border Router",src:n(77695).Z+"",width:"1021",height:"521"})}),"\n",(0,t.jsx)(r.p,{children:"To activate the login first generate a password for the root account by running:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"passwd\n"})}),"\n",(0,t.jsxs)(r.p,{children:["And edit the following line in ",(0,t.jsx)(r.code,{children:"/etc/ssh/sshd_config"}),":"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"# FROM:\n# PermitRootLogin without-password\n# TO:\nPermitRootLogin yes\n"})}),"\n",(0,t.jsx)(r.p,{children:"Now restart the SSH daemon with:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"systemctl sshd restart\nsystemctl sshd status\n"})}),"\n",(0,t.jsx)(r.h2,{id:"preparing-the-pitaya-go",children:"Preparing the Pitaya Go"}),"\n",(0,t.jsxs)(r.p,{children:["The pre-built firmware is located in the following folder: pitaya-go/firmware/openthread/ncp with the name ",(0,t.jsx)(r.a,{href:"https://github.com/makerdiary/pitaya-go/tree/master/firmware/openthread/ncp",children:"thread_ncp_ftd_usb_pitaya_go_vx.x.x"}),":"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"wget https://github.com/makerdiary/pitaya-go/archive/refs/heads/master.zip\nunzip master.zip && rm master.zip\n"})}),"\n",(0,t.jsxs)(r.p,{children:["Download the ",(0,t.jsx)(r.a,{href:"https://www.nordicsemi.com/Products/Development-tools/nRF-Connect-for-desktop/Download#infotabs",children:"nRF Connect Tool"})," to Flash the NCP firmware:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"wget https://www.nordicsemi.com/-/media/Software-and-other-downloads/Desktop-software/nRF-Connect-for-Desktop/3-12-0/nrfconnect-3.12.0-x86_64.AppImage\nchmod +x ./nrfconnect-3.12.0-x86_64.AppImage\n./nrfconnect-3.12.0-x86_64.AppImage\n"})}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{alt:"OpenThread Border Router",src:n(423503).Z+"",width:"755",height:"622"})}),"\n",(0,t.jsxs)(r.p,{children:["While pushing the ",(0,t.jsx)(r.strong,{children:"USER"})," button, press the ",(0,t.jsx)(r.strong,{children:"RESET"})," button to enter the DFU mode. Then program the NCP firmware using the nRF Connect for Desktop tool."]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{alt:"OpenThread Border Router",src:n(408439).Z+"",width:"743",height:"500"})}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsx)(r.li,{children:"Plug in your Pitaya Go to an USB Port on your computer."}),"\n",(0,t.jsxs)(r.li,{children:["While holding the ",(0,t.jsx)(r.strong,{children:"USER"})," button, press the ",(0,t.jsx)(r.strong,{children:"RESET"})," button. Observe that the ",(0,t.jsx)(r.strong,{children:"RGB LED pulses RED"})," (",(0,t.jsx)(r.code,{children:"DFU mode"}),")."]}),"\n",(0,t.jsxs)(r.li,{children:["In ",(0,t.jsx)(r.code,{children:"nRF Connect for Desktop"})," launch the ",(0,t.jsx)(r.code,{children:"Programmer"})," app."]}),"\n",(0,t.jsx)(r.li,{children:"Select the device in the dropdown in the upper left corner if it is shown. Observe that the memory layout of the device will be displayed."}),"\n"]}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"ERROR"}),": ",(0,t.jsx)(r.code,{children:"Unable to detect version of nrfjprog DLL. Unable to detect version of JLink. Installed JLink version does not match the provided version (V7.66a)"}),":"]}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{alt:"OpenThread Border Router",src:n(366498).Z+"",width:"1021",height:"704"})}),"\n",(0,t.jsxs)(r.p,{children:["The needed version of J-Link can be ",(0,t.jsx)(r.a,{href:"https://www.segger.com/downloads/jlink/",children:"downloaded here"}),":"]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{alt:"OpenThread Border Router",src:n(91044).Z+"",width:"1377",height:"593"})}),"\n",(0,t.jsx)(r.p,{children:"Now the software starts up correctly:"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{alt:"OpenThread Border Router",src:n(825064).Z+"",width:"936",height:"202"})}),"\n",(0,t.jsx)(r.h3,{id:"flash-the-ncp-firmware",children:"Flash the NCP firmware"}),"\n",(0,t.jsxs)(r.p,{children:["The pre-built firmware is located in the following folder: ",(0,t.jsx)(r.code,{children:"pitaya-go/firmware/openthread/ncp"})," with the name e.g. ",(0,t.jsx)(r.a,{href:"https://github.com/makerdiary/pitaya-go/blob/master/firmware/openthread/ncp/",children:"thread_ncp_ftd_usb_pitaya_go_v1.3.1.zip"}),"."]}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Be careful"})," to use the ",(0,t.jsx)(r.a,{href:"https://github.com/makerdiary/pitaya-go/tree/master/firmware/openthread/ncp",children:"ncp"})," and not ",(0,t.jsx)(r.a,{href:"https://github.com/makerdiary/pitaya-go/tree/master/firmware/openthread/cli",children:"cli"})," version - otherwise you will end up with the error message: ",(0,t.jsx)(r.a,{href:"https://devzone.nordicsemi.com/f/nordic-q-a/91307/openthread-daemon-is-not-running-with-docker-conainer-on-my-rpi4-with-nrf52840-dongle-as-an-rcp-device",children:"OpenThread daemon is not running. Wpan service error: 13"})]}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"While pushing the USER button, press the RESET button to enter the DFU mode. Then program the NCP firmware using the nRF Connect for Desktop tool."}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"ERROR Message"}),": ",(0,t.jsx)(r.code,{children:"Error when running nrfdl_fw_read_info"})," when trying to access the dongle."]}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:["I followed the advice on the ",(0,t.jsx)(r.a,{href:"https://devzone.nordicsemi.com/f/nordic-q-a/81989/error-when-fetching-device-versions-readfwinfo-error?ReplyFilter=Answers&ReplySortBy=Answers&ReplySortOrder=Descending",children:"Nordic Forum"})," and downgraded the Desktop and Programmer app from ",(0,t.jsx)(r.code,{children:"v3.12"})," to ",(0,t.jsx)(r.code,{children:"v3.7"}),". Now the Pitaya is recognized:"]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{alt:"OpenThread Border Router",src:n(938480).Z+"",width:"931",height:"1032"})}),"\n",(0,t.jsxs)(r.p,{children:["And I am able to flash the ",(0,t.jsx)(r.code,{children:".hex"})," file:"]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{alt:"OpenThread Border Router",src:n(976498).Z+"",width:"931",height:"176"})}),"\n",(0,t.jsx)(r.h2,{id:"set-up-the-border-router",children:"Set up the Border Router"}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsxs)(r.p,{children:["Before you continue, make sure your Raspberry Pi 3B is connected to the internet using Ethernet. The bootstrap script disables the platform's Wi-Fi interface and the setup script requires internet connectivity to download and install ",(0,t.jsx)(r.code,{children:"wpantund"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:["OTBR communicates with the Pitaya Go(serves as NCP) via ",(0,t.jsx)(r.code,{children:"wpantund"}),". On Raspberry Pi 3B+:"]}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsx)(r.li,{children:"Clone the OTBR repository:"}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"apt install git\ngit clone https://github.com/openthread/ot-br-posix\n"})}),"\n",(0,t.jsxs)(r.ol,{start:"2",children:["\n",(0,t.jsx)(r.li,{children:"Install dependencies:"}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"cd ot-br-posix\n./script/bootstrap\n"})}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"ERROR"}),": ",(0,t.jsx)(r.code,{children:"./script/bootstrap: line 40: sudo: command not found"})," I am currently running everything as root. So I need to remove ",(0,t.jsx)(r.code,{children:"sudo"})," from all shell commands. The script will work when you create another user in Debian that is able to use the ",(0,t.jsx)(r.code,{children:"sudo"})," command (And don't tell me the world is going to end when you use ",(0,t.jsx)(r.code,{children:"root"})," in a test system... it is not =.=)"]}),"\n"]}),"\n",(0,t.jsxs)(r.ol,{start:"3",children:["\n",(0,t.jsxs)(r.li,{children:["Compile and install OTBR and ",(0,t.jsx)(r.code,{children:"wpantund"}),". Note that this setup script uses Network Manager to automatically set up the Wi-Fi access point (",(0,t.jsx)(r.strong,{children:"AP"}),"):"]}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"./script/setup\n"})}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"ERROR"}),": ",(0,t.jsx)(r.code,{children:"-- Checking for module 'libsystemd' --   No package 'libsystemd' found -- Configuring incomplete, errors occurred!"})]}),"\n"]}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"ERROR"}),": ",(0,t.jsx)(r.code,{children:"fatal error: systemd/sd-daemon.h: No such file or directory"})]}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"apt install libsystemd-dev\n"})}),"\n",(0,t.jsx)(r.h2,{id:"configure-the-pitaya-go",children:"Configure the Pitaya Go"}),"\n",(0,t.jsxs)(r.p,{children:["Attach the Pitaya Go to the Raspberry Pi 3B via USB. Configure the NCP device's serial port in ",(0,t.jsx)(r.code,{children:"wpantund"}),". Determine the serial port name for the NCP device by checking ",(0,t.jsx)(r.code,{children:"/dev"}),":"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"ls /dev/tty*\n"})}),"\n",(0,t.jsxs)(r.p,{children:["Add the serial port name to ",(0,t.jsx)(r.code,{children:"/etc/wpantund.conf"}),". For example, for a serial port name of ",(0,t.jsx)(r.code,{children:"ttyACM0"}),":"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:'Config:NCP:SocketPath "/dev/ttyACM0"\n'})}),"\n",(0,t.jsxs)(r.ol,{start:"6",children:["\n",(0,t.jsx)(r.li,{children:"Restart the Border Router. The OTBR service should start on boot."}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"sudo reboot\n"})})]})}function l(e={}){const{wrapper:r}={...(0,o.ah)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},603905:(e,r,n)=>{n.d(r,{ah:()=>h});var t=n(667294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function a(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var d=t.createContext({}),h=function(e){var r=t.useContext(d),n=r;return e&&(n="function"==typeof e?e(r):s(s({},r),e)),n},c={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},l=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,i=e.originalType,d=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),p=h(n),u=o,m=p["".concat(d,".").concat(u)]||p[u]||c[u]||i;return n?t.createElement(m,s(s({ref:r},l),{},{components:n})):t.createElement(m,s({ref:r},l))}));l.displayName="MDXCreateElement"},77695:(e,r,n)=>{n.d(r,{Z:()=>t});const t=n.p+"assets/images/Thread-Edge-Router_01-5cc3edce08b900995648902b20771e2e.png"},408439:(e,r,n)=>{n.d(r,{Z:()=>t});const t=n.p+"assets/images/Thread-Edge-Router_02-021675cfbddb1bfd6ee015bf694ef252.png"},423503:(e,r,n)=>{n.d(r,{Z:()=>t});const t=n.p+"assets/images/Thread-Edge-Router_03-d486ac245e0971c48f61381b88d60d36.png"},366498:(e,r,n)=>{n.d(r,{Z:()=>t});const t=n.p+"assets/images/Thread-Edge-Router_04-5cfee3a4dcc73e3b0903b8794adbc404.png"},91044:(e,r,n)=>{n.d(r,{Z:()=>t});const t=n.p+"assets/images/Thread-Edge-Router_05a-4e43de527c5a31dbf8aa177516b8d73d.png"},825064:(e,r,n)=>{n.d(r,{Z:()=>t});const t=n.p+"assets/images/Thread-Edge-Router_05b-2205cd4b2311b59a6672cb1a096a4c24.png"},938480:(e,r,n)=>{n.d(r,{Z:()=>t});const t=n.p+"assets/images/Thread-Edge-Router_05d-52f5d9fe3ed11a1f6c63229e72956a51.png"},976498:(e,r,n)=>{n.d(r,{Z:()=>t});const t=n.p+"assets/images/Thread-Edge-Router_05e-25af6f7fce87a88284c7217ab1536839.png"},805302:(e,r,n)=>{n.d(r,{Z:()=>t});const t=n.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-98d71e33f881256303c68773a2ed92ba.jpg"}}]);