"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[30877],{701282:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var s=t(474848),o=t(28453);const r={sidebar_position:9020,slug:"2022-10-08",title:"Python - Deploying a Web App with Flask",authors:"mpolinowski",tags:["Python"],description:"Use Flask to build a web frontend for your Python App."},l=void 0,a={id:"Development/Python/2022-10-08-python-flask-app/index",title:"Python - Deploying a Web App with Flask",description:"Use Flask to build a web frontend for your Python App.",source:"@site/docs/Development/Python/2022-10-08-python-flask-app/index.md",sourceDirName:"Development/Python/2022-10-08-python-flask-app",slug:"/Development/Python/2022-10-08-python-flask-app/2022-10-08",permalink:"/docs/Development/Python/2022-10-08-python-flask-app/2022-10-08",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Development/Python/2022-10-08-python-flask-app/index.md",tags:[{label:"Python",permalink:"/docs/tags/python"}],version:"current",sidebarPosition:9020,frontMatter:{sidebar_position:9020,slug:"2022-10-08",title:"Python - Deploying a Web App with Flask",authors:"mpolinowski",tags:["Python"],description:"Use Flask to build a web frontend for your Python App."},sidebar:"tutorialSidebar",previous:{title:"Python - PyQt Desktop App",permalink:"/docs/Development/Python/2022-10-08-python-desktop-app/2022-10-08"},next:{title:"Python - Build an Elasticsearch Index for your Docusaurus Blog",permalink:"/docs/Development/Python/2022-10-07-python-docusaurus-elasticsearch/2022-10-07"}},i={},d=[{value:"Setup",id:"setup",level:2},{value:"Hello World",id:"hello-world",level:3},{value:"Interacting with your HTML",id:"interacting-with-your-html",level:2}];function h(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Sham Sui Po, Hong Kong",src:t(623888).A+"",width:"1500",height:"548"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#setup",children:"Setup"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#hello-world",children:"Hello World"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#interacting-with-your-html",children:"Interacting with your HTML"})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/mpolinowski/py-flask-app/tree/master/hello_world",children:"Github Repository"})}),"\n",(0,s.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://flask.palletsprojects.com/en/2.2.x/",children:"Flask"})," is a lightweight WSGI web application framework. It is designed to make getting started quick and easy, with the ability to scale up to complex applications."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"pip install flask\n"})}),"\n",(0,s.jsx)(n.h3,{id:"hello-world",children:"Hello World"}),"\n",(0,s.jsxs)(n.p,{children:["Flask expects you to put your HTML pages inside a folder ",(0,s.jsx)(n.code,{children:"templates"}),". Add a simple ",(0,s.jsx)(n.code,{children:"index.html"})," page and outside of this folder add a ",(0,s.jsx)(n.code,{children:"main.py"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-py",children:"from flask import Flask, render_template, request\n\napp = Flask(__name__)\n\n@app.route('/')\n\ndef home():\n    return render_template('index.html')\n\napp.run(host='192.168.2.112')\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Visit ",(0,s.jsx)(n.code,{children:"localhost"})," or your servers IP address on ",(0,s.jsx)(n.strong,{children:"Port 5000"})," to see the content of your HTML page."]}),"\n",(0,s.jsx)(n.h2,{id:"interacting-with-your-html",children:"Interacting with your HTML"}),"\n",(0,s.jsxs)(n.p,{children:["Now we have a static website that is being served by Flask. But there is no interface between the web frontend and the Python backend. For this we have to create a ",(0,s.jsx)(n.strong,{children:"POST Route"})," in Flask that allows us to send data from the frontend to the backend:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-py",children:"@app.route('/', methods=['GET'])\ndef home_get():\n    return render_template('index.html')\n\n@app.route('/', methods=['POST'])\ndef home_post():\n    return render_template('index.html')\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Now we can add a ",(0,s.jsx)(n.strong,{children:"Form Element"})," to our website that can perform a ",(0,s.jsx)(n.strong,{children:"Post Request"})," to send the content of it's input fields to our Flask backend:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<form method="POST">\n    <div><input name="first"/></div>\n    <div><input name="sec"/></div>\n    <p><strong></strong></p>\n    <button>Multiply!</button>\n</form>\n'})}),"\n",(0,s.jsxs)(n.p,{children:["So now - whenever the page is loaded we receive a ",(0,s.jsx)(n.strong,{children:"GET"})," request. But pressing the multiply button will send a ",(0,s.jsx)(n.strong,{children:"POST"})," request:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'[10/Oct/2022 12:16:55] "GET / HTTP/1.1" 200 -\n[10/Oct/2022 12:16:57] "POST / HTTP/1.1" 200 -\n'})}),"\n",(0,s.jsxs)(n.p,{children:["When we ",(0,s.jsx)(n.code,{children:"print(request.form)"})," inside ",(0,s.jsx)(n.code,{children:"home_post()"})," we can now see that we are receiving the values we put in to the frontend in our Flask backend:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"ImmutableMultiDict([('first', '5'), ('second', '5')])\n"})}),"\n",(0,s.jsx)(n.p,{children:"We can grab them from there and write them into variables:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-py",children:"def home_post():\n    # print(request.form)\n    val1 = request.form['first']\n    val2 = request.form['second']\n    return render_template('index.html')\n"})}),"\n",(0,s.jsx)(n.p,{children:"And now we can manipulate them however we like and print the result:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-py",children:"result = float(val1) * float(val2)\n    print(result)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["To output the result to the web frontend we can add ",(0,s.jsx)(n.strong,{children:"JinJa"})," variables:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:"<p>Result: <strong>{{result}}</strong></p>\n"})}),"\n",(0,s.jsx)(n.p,{children:"And use the return statement of our function to return this value:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-py",children:"return render_template('index.html', result=result)\n"})})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},623888:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-5f44d483789c3ce79f05418f930f5cd2.jpg"},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>a});var s=t(296540);const o={},r=s.createContext(o);function l(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);