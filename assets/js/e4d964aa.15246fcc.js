"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[9698],{344967:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});var r=a(785893),s=a(603905);const o={sidebar_position:6040,slug:"2022-05-15",title:"Hashicorp Nomad Refresher",authors:"mpolinowski",tags:["Nomad","LINUX"]},i=void 0,t={id:"DevOps/Hashicorp/2022-05-15-hashicorp-nomad-refresher/index",title:"Hashicorp Nomad Refresher",description:"Shen Zhen, China",source:"@site/docs/DevOps/Hashicorp/2022-05-15-hashicorp-nomad-refresher/index.md",sourceDirName:"DevOps/Hashicorp/2022-05-15-hashicorp-nomad-refresher",slug:"/DevOps/Hashicorp/2022-05-15-hashicorp-nomad-refresher/2022-05-15",permalink:"/docs/DevOps/Hashicorp/2022-05-15-hashicorp-nomad-refresher/2022-05-15",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Hashicorp/2022-05-15-hashicorp-nomad-refresher/index.md",tags:[{label:"Nomad",permalink:"/docs/tags/nomad"},{label:"LINUX",permalink:"/docs/tags/linux"}],version:"current",sidebarPosition:6040,frontMatter:{sidebar_position:6040,slug:"2022-05-15",title:"Hashicorp Nomad Refresher",authors:"mpolinowski",tags:["Nomad","LINUX"]},sidebar:"tutorialSidebar",previous:{title:"Hashicorp Nomad Dojo",permalink:"/docs/DevOps/Hashicorp/2022-05-16-hashicorp-dojo-nomad-starter/2022-05-16"},next:{title:"Hashicorp Consul in Production",permalink:"/docs/DevOps/Hashicorp/2021-10-11--hashicorp-consul-in-production/2021-10-11"}},d={},c=[{value:"Installation",id:"installation",level:2},{value:"Single Server Dev Environment",id:"single-server-dev-environment",level:2},{value:"Run an Agent in Dev Mode",id:"run-an-agent-in-dev-mode",level:3},{value:"Generate and Run a Sample Job",id:"generate-and-run-a-sample-job",level:3},{value:"Update the Application Version",id:"update-the-application-version",level:2},{value:"Nomad Web Interface",id:"nomad-web-interface",level:2},{value:"Forward the Service through SSH (optional)",id:"forward-the-service-through-ssh-optional",level:3},{value:"Cleaning Up",id:"cleaning-up",level:2}];function l(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.ah)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Shen Zhen, China",src:a(623214).Z+"",width:"2230",height:"839"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#installation",children:"Installation"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#single-server-dev-environment",children:"Single Server Dev Environment"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#run-an-agent-in-dev-mode",children:"Run an Agent in Dev Mode"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#generate-and-run-a-sample-job",children:"Generate and Run a Sample Job"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#update-the-application-version",children:"Update the Application Version"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#nomad-web-interface",children:"Nomad Web Interface"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#forward-the-service-through-ssh-optional",children:"Forward the Service through SSH (optional)"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#cleaning-up",children:"Cleaning Up"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsxs)(n.p,{children:["Installation of ",(0,r.jsx)(n.a,{href:"https://www.nomadproject.io/docs",children:"Hashicorp Nomad"})," on Debian Bullseye - ",(0,r.jsx)(n.a,{href:"https://www.nomadproject.io/downloads",children:"other options here"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -\nsudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"\n'})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"ERROR"}),": ",(0,r.jsx)(n.code,{children:"zsh: command not found: apt-add-repository"})," => ",(0,r.jsx)(n.code,{children:"apt install software-properties-common"})]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"apt update && apt install nomad\n"})}),"\n",(0,r.jsxs)(n.p,{children:["To verify Nomad was installed correctly, try the ",(0,r.jsx)(n.code,{children:"nomad"})," command:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"nomad --version\nNomad v1.3.1 (2b054e38e91af964d1235faa98c286ca3f527e56)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"single-server-dev-environment",children:"Single Server Dev Environment"}),"\n",(0,r.jsx)(n.h3,{id:"run-an-agent-in-dev-mode",children:"Run an Agent in Dev Mode"}),"\n",(0,r.jsx)(n.p,{children:"To run the Nomad Agent in Server/Minion mode (single server) use the following command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"nomad agent -dev -bind 0.0.0.0 -log-level INFO\n"})}),"\n",(0,r.jsx)(n.p,{children:"Verify the Node status in a second terminal:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"nomad node status\n\nID        DC   Name  Class   Drain  Eligibility  Status\n39904696  dc1  Mike  <none>  false  eligible     ready\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"nomad server members\n\nName         Address     Port  Status  Leader  Raft Version  Build  Datacenter  Region\nMike.global  172.21.0.1  4648  alive   true    3             1.3.1  dc1         global\n"})}),"\n",(0,r.jsx)(n.h3,{id:"generate-and-run-a-sample-job",children:"Generate and Run a Sample Job"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"nomad job init\n\nExample job file written to example.nomad\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This ",(0,r.jsx)(n.a,{href:"https://gist.github.com/mpolinowski/fd4c2ec2d75533fd85192f675ec1af8e",children:"example job file"})," declares a single task named redis, which uses the Docker driver to run the a Redis container. Register the example job now by running the job with the nomad job run command:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"nomad job run example.nomad\n\nDeployed\nTask Group  Desired  Placed  Healthy  Unhealthy  Progress Deadline\ncache       1        1       1        0          2022-06-03T14:31:11+02:00\n"})}),"\n",(0,r.jsx)(n.p,{children:"Use the nomad job status command to inspect the status of your job:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"nomad job status example\n\nID            = example\nName          = example\nSubmit Date   = 2022-06-03T14:20:55+02:00\nType          = service\nPriority      = 50\nDatacenters   = dc1\nNamespace     = default\nStatus        = running\nPeriodic      = false\nParameterized = false\n\n...\n\nAllocations\nID        Node ID   Task Group  Version  Desired  Status   Created    Modified\na31e4ff7  39904696  cache       0        run      running  2m17s ago  2m ago\n"})}),"\n",(0,r.jsxs)(n.p,{children:["When Nomad runs a job it creates allocations based on the task groups within the job. To inspect an allocation, use the ",(0,r.jsx)(n.code,{children:"nomad alloc status"})," command. Replace the allocation ID in the command with the allocation ID you received when running nomad job status example in the preceding step"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'nomad alloc status a31e4ff7\n\nID                  = a31e4ff7-86bf-d408-c1a4-bca717c2ab8d\nEval ID             = c13d695b\nName                = example.cache[0]\nNode ID             = 39904696\nNode Name           = Mike\nJob ID              = example\nJob Version         = 0\nClient Status       = running\nClient Description  = Tasks are running\nDesired Status      = run\nDesired Description = <none>\nCreated             = 7m22s ago\nModified            = 7m5s ago\nDeployment ID       = b992ce48\nDeployment Health   = healthy\n\nAllocation Addresses\nLabel  Dynamic  Address\n*db    yes      127.0.0.1:20763 -> 6379\n\nTask "redis" is "running"\nTask Resources\nCPU        Memory           Disk     Addresses\n3/500 MHz  6.8 MiB/256 MiB  300 MiB  \n\nTask Events:\nStarted At     = 2022-06-03T12:21:01Z\nFinished At    = N/A\nTotal Restarts = 0\nLast Restart   = N/A\n\nRecent Events:\nTime                       Type        Description\n2022-06-03T14:21:01+02:00  Started     Task started by client\n2022-06-03T14:20:55+02:00  Driver      Downloading image\n2022-06-03T14:20:55+02:00  Task Setup  Building Task Directory\n2022-06-03T14:20:55+02:00  Received    Task received by client\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Run the ",(0,r.jsx)(n.code,{children:"nomad alloc logs"})," command to fetch the logs from the redis task in your allocation, again substituting your allocation ID into the proper place in the command:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"nomad alloc logs a31e4ff7 redis\n\n1:C 03 Jun 12:21:01.821 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf\n                _._                                                  \n           _.-``__ ''-._                                             \n      _.-``    `.  `_.  ''-._           Redis 3.2.12 (00000000/0) 64 bit\n  .-`` .-```.  ```\\/    _.,_ ''-._                                   \n (    '      ,       .-`  | `,    )     Running in standalone mode\n |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379\n |    `-._   `._    /     _.-'    |     PID: 1\n  `-._    `-._  `-./  _.-'    _.-'                                   \n |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n |    `-._`-._        _.-'_.-'    |           http://redis.io        \n  `-._    `-._`-.__.-'_.-'    _.-'                                   \n |`-._`-._    `-.__.-'    _.-'_.-'|                                  \n |    `-._`-._        _.-'_.-'    |                                  \n  `-._    `-._`-.__.-'_.-'    _.-'                                   \n      `-._    `-.__.-'    _.-'                                       \n          `-._        _.-'                                           \n              `-.__.-'                                               \n\n1:M 03 Jun 12:21:01.830 # Server started, Redis version 3.2.12\n"})}),"\n",(0,r.jsx)(n.h2,{id:"update-the-application-version",children:"Update the Application Version"}),"\n",(0,r.jsxs)(n.p,{children:["Edit the example.nomad file and change the Docker image from ",(0,r.jsx)(n.code,{children:"redis:3.2"})," to ",(0,r.jsx)(n.code,{children:"redis:7-bullseye"}),". This is located around ",(0,r.jsx)(n.a,{href:"https://gist.github.com/mpolinowski/fd4c2ec2d75533fd85192f675ec1af8e",children:"line 305"})," in ",(0,r.jsx)(n.code,{children:"example.nomad"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:'task "redis" {\n    # The "driver" parameter specifies the task driver that should be used to\n    # run the task.\n    driver = "docker"\n\n    # The "config" stanza specifies the driver configuration, which is passed\n    # directly to the driver to start the task. The details of configurations\n    # are specific to each driver, so please see specific driver\n    # documentation for more information.\n    config {\n      // image = "redis:3.2"\n      image = "redis:7-bullseye"\n\n      ports = ["db"]\n  }\n'})}),"\n",(0,r.jsxs)(n.p,{children:["You can run ",(0,r.jsx)(n.code,{children:"nomad job plan"})," again to see what happens if you submit this change:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'nomad job plan example.nomad\n\n+/- Job: "example"\n+/- Task Group: "cache" (1 create/destroy update, 2 ignore)\n  +/- Task: "redis" (forces create/destroy update)\n    +/- Config {\n      +/- image:    "redis:3.2" => "redis:7-bullseye"\n          ports[0]: "db"\n        }\n\nScheduler dry-run:\n- All tasks successfully allocated.\n\nJob Modify Index: 43\nTo submit the job with version verification run:\n\nnomad job run -check-index 43 example.nomad\n\nWhen running the job with the check-index flag, the job will only be run if the\njob modify index given matches the server-side version. If the index has\nchanged, another user has modified the job and the plan\'s results are\npotentially invalid.\n'})}),"\n",(0,r.jsx)(n.p,{children:"Once ready, use nomad job run command emitted in the plan output to push the updated specification:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'nomad job run -check-index 43 example.nomad\n\n==> 2022-06-04T06:20:05+02:00: Monitoring evaluation "da995f0d"\n    2022-06-04T06:20:05+02:00: Evaluation triggered by job "example"\n    2022-06-04T06:20:05+02:00: Evaluation within deployment: "c6fcfc8a"\n    2022-06-04T06:20:05+02:00: Allocation "dae260fa" created: node "f05c2587", group "cache"\n    2022-06-04T06:20:05+02:00: Evaluation status changed: "pending" -> "complete"\n==> 2022-06-04T06:20:05+02:00: Evaluation "da995f0d" finished with status "complete"\n==> 2022-06-04T06:20:05+02:00: Monitoring deployment "c6fcfc8a"\n  \u2713 Deployment "c6fcfc8a" successful\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"nomad job status example\n\n\n...\n\nAllocations\nID        Node ID   Task Group  Version  Desired  Status   Created    Modified\ndae260fa  f05c2587  cache       0        run      running  2m36s ago  2m19s ago\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"nomad alloc logs dae260fa redis\n\n1:C 04 Jun 2022 04:20:13.065 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo\n1:C 04 Jun 2022 04:20:13.067 # Redis version=7.0.0, bits=64, commit=00000000, modified=0, pid=1, just started\n1:C 04 Jun 2022 04:20:13.067 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf\n1:M 04 Jun 2022 04:20:13.068 * monotonic clock: POSIX clock_gettime\n1:M 04 Jun 2022 04:20:13.068 * Running mode=standalone, port=6379.\n1:M 04 Jun 2022 04:20:13.068 # Server initialized\n1:M 04 Jun 2022 04:20:13.069 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\n1:M 04 Jun 2022 04:20:13.070 * The AOF directory appendonlydir doesn't exist\n1:M 04 Jun 2022 04:20:13.070 * Ready to accept connections\n"})}),"\n",(0,r.jsx)(n.h2,{id:"nomad-web-interface",children:"Nomad Web Interface"}),"\n",(0,r.jsxs)(n.p,{children:["Nomad provides a web interface that allows you to keep an eye on all running services. This interface can be accessed on ",(0,r.jsx)(n.code,{children:"localhost:4646"}),". But since I am working on a remote server I will forward this port to my local machine instead."]}),"\n",(0,r.jsx)(n.h3,{id:"forward-the-service-through-ssh-optional",children:"Forward the Service through SSH (optional)"}),"\n",(0,r.jsx)(n.p,{children:"If you don't want the Nomad UI to be accessible from the internet you can use SSH to tunnel the service into your local network:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"ssh -L local_port:destination_server_ip:remote_port ssh_server_hostname\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"ssh"})," \u2013 Starts the SSH client program on the local machine and establishes a secure connection to the remote SSH server."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"-L local_port:destination_server_ip:remote_port"})," \u2013 The local port on the local client is being forwarded to the port of the destination remote server that is running the Nomad UI."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"ssh_server_hostname"})," \u2013 This element of the syntax represents the hostname or IP address of the remote SSH server. This can also be directly the Nomad server."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"A practical example of an SSH port forwarding command would take the following form:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"ssh \u2013L 8080:nomad.server.com:4646 root@ssh.server.com -p ssh.port\n"})}),"\n",(0,r.jsxs)(n.p,{children:["In the example above, all traffic sent to port ",(0,r.jsx)(n.code,{children:"8080"})," on your local machine is being forwarded to port ",(0,r.jsx)(n.code,{children:"4646"})," on the remote server located at ",(0,r.jsx)(n.code,{children:"nomad.server.com"}),". If the SSH Server is the same as the remote server - in our case the Nomad server - use ",(0,r.jsx)(n.code,{children:"localhost"})," instead:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"ssh \u2013L 8080:localhost:4646 root@nomad.server.com -p ssh.port\n"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["To run this command in the background use the ",(0,r.jsx)(n.code,{children:"-f"})," and ",(0,r.jsx)(n.code,{children:"-N"})," flag to not execute a remote command."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["There will now be a service listening on Port ",(0,r.jsx)(n.code,{children:"8080"})," on your local machine ready to forward your web browser request to the Nomad server:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"netstat -tlnp\n\nProto  Local Address   Foreign Address  PID/Program\ntcp    127.0.0.1:8080  0.0.0.0:*        19918/ssh\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Nomad User Interface",src:a(438126).Z+"",width:"1105",height:"464"})}),"\n",(0,r.jsx)(n.h2,{id:"cleaning-up",children:"Cleaning Up"}),"\n",(0,r.jsx)(n.p,{children:"To stop the job run the following command - or simply click the button in the web interface:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"nomad job stop example\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Nomad User Interface",src:a(165757).Z+"",width:"991",height:"546"})}),"\n",(0,r.jsxs)(n.p,{children:["And quit the dev agent by ",(0,r.jsx)(n.code,{children:"Ctrl+C"})," out of the running process."]})]})}function h(e={}){const{wrapper:n}={...(0,s.ah)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},603905:(e,n,a)=>{a.d(n,{ah:()=>c});var r=a(667294);function s(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){s(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function t(e,n){if(null==e)return{};var a,r,s=function(e,n){if(null==e)return{};var a,r,s={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],n.indexOf(a)>=0||(s[a]=e[a]);return s}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var d=r.createContext({}),c=function(e){var n=r.useContext(d),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},h=r.forwardRef((function(e,n){var a=e.components,s=e.mdxType,o=e.originalType,d=e.parentName,h=t(e,["components","mdxType","originalType","parentName"]),p=c(a),m=s,u=p["".concat(d,".").concat(m)]||p[m]||l[m]||o;return a?r.createElement(u,i(i({ref:n},h),{},{components:a})):r.createElement(u,i({ref:n},h))}));h.displayName="MDXCreateElement"},438126:(e,n,a)=>{a.d(n,{Z:()=>r});const r=a.p+"assets/images/Nomad-UI_01-4026c9e76ae6a8fdade32738e1f780f6.png"},165757:(e,n,a)=>{a.d(n,{Z:()=>r});const r=a.p+"assets/images/Nomad-UI_02-6201b61043509d17286954d6e4befa1e.png"},623214:(e,n,a)=>{a.d(n,{Z:()=>r});const r=a.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-6c1edb088dfea3a7d39f8eebb8e9dc23.jpg"}}]);