"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[68255],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=l(n),m=a,v=u["".concat(s,".").concat(m)]||u[m]||p[m]||i;return n?r.createElement(v,o(o({ref:t},d),{},{components:n})):r.createElement(v,o({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},61408:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var r=n(87462),a=(n(67294),n(3905));const i={sidebar_position:5980,slug:"2022-11-10",title:"WebRTC Introduction - Interactive Connectivity Establishment",authors:"mpolinowski",tags:["Javascript","WebRTC"],description:"Establishing a connection between the clients"},o=void 0,c={unversionedId:"Development/Javascript/2022-11-10-webrtc-introduction-video-chat-part2/index",id:"Development/Javascript/2022-11-10-webrtc-introduction-video-chat-part2/index",title:"WebRTC Introduction - Interactive Connectivity Establishment",description:"Establishing a connection between the clients",source:"@site/docs/Development/Javascript/2022-11-10-webrtc-introduction-video-chat-part2/index.md",sourceDirName:"Development/Javascript/2022-11-10-webrtc-introduction-video-chat-part2",slug:"/Development/Javascript/2022-11-10-webrtc-introduction-video-chat-part2/2022-11-10",permalink:"/docs/Development/Javascript/2022-11-10-webrtc-introduction-video-chat-part2/2022-11-10",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Development/Javascript/2022-11-10-webrtc-introduction-video-chat-part2/index.md",tags:[{label:"Javascript",permalink:"/docs/tags/javascript"},{label:"WebRTC",permalink:"/docs/tags/web-rtc"}],version:"current",sidebarPosition:5980,frontMatter:{sidebar_position:5980,slug:"2022-11-10",title:"WebRTC Introduction - Interactive Connectivity Establishment",authors:"mpolinowski",tags:["Javascript","WebRTC"],description:"Establishing a connection between the clients"},sidebar:"tutorialSidebar",previous:{title:"Javascript",permalink:"/docs/category/javascript"},next:{title:"WebRTC Introduction - Client Side Signalling",permalink:"/docs/Development/Javascript/2022-10-30-webrtc-introduction-video-chat-part1/2022-10-30"}},s={},l=[{value:"Interactive Connectivity Establishment (ICE)",id:"interactive-connectivity-establishment-ice",level:2},{value:"Ready State",id:"ready-state",level:3}],d={toc:l};function p(e){let{components:t,...i}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Shenzhen, China",src:n(8060).Z,width:"2208",height:"757"})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#interactive-connectivity-establishment-ice"},"Interactive Connectivity Establishment (ICE)"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#ready-state"},"Ready State"))))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"WIP")," "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/Development/Javascript/2022-10-29-webrtc-introduction-realtime-chat/2022-10-29"},"WebRTC Introduction - Websockets")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/Development/Javascript/2022-10-30-webrtc-introduction-video-chat-part1/2022-10-30"},"WebRTC Introduction - Client Side Signalling")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/Development/Javascript/2022-11-10-webrtc-introduction-video-chat-part2/2022-11-10"},"WebRTC Introduction - Interactive Connectivity Establishment"))),(0,a.kt)("h2",{id:"interactive-connectivity-establishment-ice"},"Interactive Connectivity Establishment (ICE)"),(0,a.kt)("h3",{id:"ready-state"},"Ready State"),(0,a.kt)("p",null,"Use STUN servers to exchange your public address:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://ourcodeworld.com/articles/read/1536/list-of-free-functional-public-stun-servers-2021"},"List of Public STUN Server"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'// List of STUN server to exchange public IPs\nconst iceservers = {\n  iceservers: [\n    { urls: "stun.l.google.com:19302" },\n    { urls: "stun.nextcloud.com:443" }\n  ]\n}\n')),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection"},"RTCPeerConnection")," interface represents a WebRTC connection between the local computer and a remote peer. It provides methods to connect to a remote peer, maintain and monitor the connection, and close the connection once it's no longer needed."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"rtcPeerConnection")," is an interface that provides several functions that need to be defined. First we need to handle the local stream that we get from ",(0,a.kt)("inlineCode",{parentName:"p"},"fetchLocalStream")," in form of the ",(0,a.kt)("inlineCode",{parentName:"p"},"userStream")," object. This is done by ",(0,a.kt)("inlineCode",{parentName:"p"},"addTrack()"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// Room is ready event\nsocket.on('ready', function() {\n  if (creator) {\n    rtcPeerConnection = new RTCPeerConnection(iceservers)\n    // get local audio stream from userStream object\n    rtcPeerConnection.addTrack(userStream.getTracks()[0], userstream)\n    // get local video stream from userStream object\n    rtcPeerConnection.addTrack(userStream.getTracks()[0], userstream)\n    rtcPeerConnection.oniceccandidate = onIceCandidate()\n    rtcPeerConnection.ontrack = onTrack()\n  }\n})\n")),(0,a.kt)("p",null,"The second one is ",(0,a.kt)("inlineCode",{parentName:"p"},"onIceCandidate()")," returns a candidate for the connection that needs to be published through our websocket:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'// If ICE candidate is returned emit over ws\nfunction onIceCandidate(event) {\n  if (event.candidate) {\n    socket.emit("candidate", event.candidate, chatRoom.value);\n  }\n}\n')),(0,a.kt)("p",null,"The third function we need to handle is ",(0,a.kt)("inlineCode",{parentName:"p"},"onTrack()")," that handles the media stream that is provided by the remote candidate:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// If ICE candidate starts streaming media emit over ws\nfunction onTrack(event) {\n  peerVideo.srcObject = event.streams[0];\n  peerVideo.onloadedmetadata = function (e) {\n    peerVideo.play();\n  };\n}\n")))}p.isMDXComponent=!0},8060:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-e38404fdf0e14587f660e537829bfab5.jpg"}}]);