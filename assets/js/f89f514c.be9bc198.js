"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[6332],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(r),m=a,h=u["".concat(c,".").concat(m)]||u[m]||d[m]||o;return r?n.createElement(h,i(i({ref:t},p),{},{components:r})):n.createElement(h,i({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},58782:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=r(87462),a=(r(67294),r(3905));const o={sidebar_position:4e3,slug:"2022-11-12",title:"Hashicorp Nomad to Renew your TLS Certificates",authors:"mpolinowski",tags:["Nomad","LINUX"],description:"Using the Periodic Stanza to execute Certbot Renewals"},i=void 0,s={unversionedId:"DevOps/Hashicorp/2022-11-12-hashicorp-nomad-certbot-renewal/index",id:"DevOps/Hashicorp/2022-11-12-hashicorp-nomad-certbot-renewal/index",title:"Hashicorp Nomad to Renew your TLS Certificates",description:"Using the Periodic Stanza to execute Certbot Renewals",source:"@site/docs/DevOps/Hashicorp/2022-11-12-hashicorp-nomad-certbot-renewal/index.md",sourceDirName:"DevOps/Hashicorp/2022-11-12-hashicorp-nomad-certbot-renewal",slug:"/DevOps/Hashicorp/2022-11-12-hashicorp-nomad-certbot-renewal/2022-11-12",permalink:"/docs/DevOps/Hashicorp/2022-11-12-hashicorp-nomad-certbot-renewal/2022-11-12",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Hashicorp/2022-11-12-hashicorp-nomad-certbot-renewal/index.md",tags:[{label:"Nomad",permalink:"/docs/tags/nomad"},{label:"LINUX",permalink:"/docs/tags/linux"}],version:"current",sidebarPosition:4e3,frontMatter:{sidebar_position:4e3,slug:"2022-11-12",title:"Hashicorp Nomad to Renew your TLS Certificates",authors:"mpolinowski",tags:["Nomad","LINUX"],description:"Using the Periodic Stanza to execute Certbot Renewals"},sidebar:"tutorialSidebar",previous:{title:"Hashicorp Nomad for NGINX Load-balancing",permalink:"/docs/DevOps/Hashicorp/2022-11-15-hashicorp-nomad-nginx-load-balancing/2022-11-15"},next:{title:"Hashicorp Nomad to run periodic backups",permalink:"/docs/DevOps/Hashicorp/2022-11-11-hashicorp-nomad-for-borg-backups/2022-11-11"}},c={},l=[{value:"Prepare the Host",id:"prepare-the-host",level:2},{value:"Nomad Job File",id:"nomad-job-file",level:2},{value:"Run the Job",id:"run-the-job",level:2}],p={toc:l};function d(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Shen Zhen, China",src:r(23873).Z,width:"2230",height:"839"})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#prepare-the-host"},"Prepare the Host")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#nomad-job-file"},"Nomad Job File")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#run-the-job"},"Run the Job"))),(0,a.kt)("p",null,"All my web applications are configured to use a containerized NGINX ingress for the TLS termination. Before I was using a simple ",(0,a.kt)("a",{parentName:"p",href:"/docs/DevOps/NGINX/2021-07-29--certbot-nginx-autorenewal/2021-07-29#automatically-renew-lets-encrypt-certificates"},"Cron Jobs to keep my certificates updated"),". Now, since I moved all my apps into Nomad/Consul clusters, I wanted to see if I cannot use the option to periodically start a Nomad service to trigger a Certbot Renewal with the ",(0,a.kt)("strong",{parentName:"p"},"EXEC","_","RAW")," driver."),(0,a.kt)("h2",{id:"prepare-the-host"},"Prepare the Host"),(0,a.kt)("p",null,"First, download the Let\u2019s Encrypt client, certbot:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"apt update\napt install certbot\n")),(0,a.kt)("p",null,"Run the following command to generate certificates:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"certbot -d example.com -d www.example.com\ncertbot certificates\n")),(0,a.kt)("p",null,"Additionally, I will have to enable the ",(0,a.kt)("strong",{parentName:"p"},"EXEC","_","RAW")," plugin in my Nomad Client Configuration:"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"/etc/nomad.d/client.hcl")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'plugin "raw_exec" {\n  config {\n    enabled = true\n  }\n}\n')),(0,a.kt)("h2",{id:"nomad-job-file"},"Nomad Job File"),(0,a.kt)("p",null,"I currently do not know how to test for whether the certificate was actually renewed. So I cannot add second task to the job below that restarts the Docker service if this case is true. But since all my apps are monitored using Zabbix I will be prompted once a used certificate reaches the end of it's lifespan. So I can manually restart Docker to start using the updated certificate:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'job "myapp_ingress_cert" {\n\n    periodic {\n        # run every day @5:55am\n        cron             = "55 5 * * *"\n    }\n    type = "batch"\n    reschedule {\n      attempts  = 0\n      unlimited = false\n    }\n    datacenters = ["mydatacenter"]\n    \n    group "myapp-ingress-cert" {\n\n        task "cert-renewal" {\n            driver = "raw_exec"\n\n            config {\n                command = "/usr/bin/certbot"\n                args    = ["renew", "--quiet", "--no-self-upgrade"]\n            }\n        }\n    }\n}\n')),(0,a.kt)("h2",{id:"run-the-job"},"Run the Job"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'nomad plan myapp_ingress_cert.tf\n\n+ Job: "myapp_ingress_cert"\n+ Task Group: "myapp-ingress-cert" (1 create)\n  + Task: "cert-renewal" (forces create)\n\nScheduler dry-run:\n- All tasks successfully allocated.\n- If submitted now, next periodic launch would be at 2022-11-14T05:55:00Z (22h52m3s from now).\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"nomad job run -check-index 0 myapp_ingress_cert.tf\n\nJob registration successful\nApproximate next launch time: 2022-11-14T05:55:00Z (22h51m52s from now)\n")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Hashicorp Nomad to Renew your TLS Certificates",src:r(63719).Z,width:"1324",height:"737"})))}d.isMDXComponent=!0},63719:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/hashicorp-nomad-certbot-renewal_01-075979676043613c0e6f355af5e879c3.png"},23873:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-6c1edb088dfea3a7d39f8eebb8e9dc23.jpg"}}]);