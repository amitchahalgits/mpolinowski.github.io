"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[4079],{89724:(n,a,e)=>{e.r(a),e.d(a,{assets:()=>l,contentTitle:()=>s,default:()=>f,frontMatter:()=>t,metadata:()=>o,toc:()=>c});var r=e(785893),i=e(603905);const t={sidebar_position:6990,slug:"2022-12-22",title:"Grafana IoT Dashboard",authors:"mpolinowski",tags:["LINUX"],description:"Building IoT Visualizations using Grafana"},s=void 0,o={id:"Automation_and_Robotics/Home_Automation/2022-12-22--grafana-for-iot/index",title:"Grafana IoT Dashboard",description:"Building IoT Visualizations using Grafana",source:"@site/docs/Automation_and_Robotics/Home_Automation/2022-12-22--grafana-for-iot/index.md",sourceDirName:"Automation_and_Robotics/Home_Automation/2022-12-22--grafana-for-iot",slug:"/Automation_and_Robotics/Home_Automation/2022-12-22--grafana-for-iot/2022-12-22",permalink:"/docs/Automation_and_Robotics/Home_Automation/2022-12-22--grafana-for-iot/2022-12-22",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Automation_and_Robotics/Home_Automation/2022-12-22--grafana-for-iot/index.md",tags:[{label:"LINUX",permalink:"/docs/tags/linux"}],version:"current",sidebarPosition:6990,frontMatter:{sidebar_position:6990,slug:"2022-12-22",title:"Grafana IoT Dashboard",authors:"mpolinowski",tags:["LINUX"],description:"Building IoT Visualizations using Grafana"},sidebar:"tutorialSidebar",previous:{title:"Convert RTSP to HLS using FFmpeg",permalink:"/docs/Automation_and_Robotics/Home_Automation/2022-12-15--rtsp-to-hls-ffmpeg/2022-12-15"},next:{title:"OpenHab - MQTT Homie Convention",permalink:"/docs/Automation_and_Robotics/Home_Automation/2022-07-16-openhab-mqtt-homie/2022-07-16"}},l={},c=[{value:"Configuration",id:"configuration",level:2},{value:"Installation with Docker-Compose",id:"installation-with-docker-compose",level:2},{value:"Datasources",id:"datasources",level:2},{value:"Infinity Plugin",id:"infinity-plugin",level:3},{value:"Time Series Databases",id:"time-series-databases",level:3},{value:"Connecting Grafana to InfluxDB",id:"connecting-grafana-to-influxdb",level:4}];function d(n){const a={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.ah)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.p,{children:(0,r.jsx)(a.img,{alt:"TST, Hong Kong",src:e(516196).Z+"",width:"1500",height:"517"})}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsx)(a.li,{children:(0,r.jsx)(a.a,{href:"#configuration",children:"Configuration"})}),"\n",(0,r.jsx)(a.li,{children:(0,r.jsx)(a.a,{href:"#installation-with-docker-compose",children:"Installation with Docker-Compose"})}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"#datasources",children:"Datasources"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsx)(a.li,{children:(0,r.jsx)(a.a,{href:"#infinity-plugin",children:"Infinity Plugin"})}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.a,{href:"#time-series-databases",children:"Time Series Databases"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsx)(a.li,{children:(0,r.jsx)(a.a,{href:"#connecting-grafana-to-influxdb",children:"Connecting Grafana to InfluxDB"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(a.p,{children:(0,r.jsx)(a.a,{href:"https://github.com/mpolinowski/grafana-iot",children:"Github"})}),"\n",(0,r.jsx)(a.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.a,{href:"https://grafana.com/docs/grafana/latest/setup-grafana/configure-grafana/#config-file-locations",children:"/etc/grafana/grafana.ini"})," (see ",(0,r.jsx)(a.a,{href:"https://github.com/grafana/grafana/blob/main/conf/sample.ini",children:"full example"}),"):"]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-ini",children:"app_mode = production\r\ndata = /var/lib/grafana\r\ntemp_data_lifetime = 24h\r\nlogs = /var/log/grafana\r\nplugins = /var/lib/grafana/plugins\r\nprovisioning = conf/provisioning\r\nprotocol = http\r\nhttp_port = 3000\r\nreporting_enabled = false\r\nallow_sign_up = false\r\ndefault_theme = dark\r\nfull_date = YYYY-MM-DD HH:mm:ss\r\ninterval_second = HH:mm:ss\r\ninterval_minute = HH:mm\r\ninterval_hour = MM/DD HH:mm\r\ninterval_day = MM/DD\r\ninterval_month = YYYY-MM\r\ninterval_year = YYYY\r\nuse_browser_locale = false\n"})}),"\n",(0,r.jsx)(a.h2,{id:"installation-with-docker-compose",children:"Installation with Docker-Compose"}),"\n",(0,r.jsxs)(a.p,{children:["We can mount this configuration file into a Grafana container by running ",(0,r.jsx)(a.code,{children:"docker-compose up -d"})," on the following file:"]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-yml",children:"version: '3'\r\n\r\nservices:\r\n\r\n  grafana:\r\n    image: grafana/grafana-oss:latest\r\n    container_name: grafana\r\n    ports:\r\n      - 3000:3000\r\n    environment:\r\n      - GF_SECURITY_ADMIN_USER=admin\r\n      - GF_SECURITY_ADMIN_PASSWORD=instar\r\n    volumes:\r\n      - type: bind\r\n        source: ./grafana.ini\r\n        target: /etc/grafana/grafana.ini\r\n        read_only: true\r\n      - type: volume\r\n        source: grafanavol\r\n        target: /var/lib/grafana\r\n    networks:\r\n      - grafana\r\n\r\nvolumes:\r\n  grafanavol:\r\n\r\nnetworks:\r\n  grafana:\n"})}),"\n",(0,r.jsxs)(a.p,{children:["Visit ",(0,r.jsx)(a.code,{children:"localhost:3000"})," and login with the user name and password set as environment variables above:"]}),"\n",(0,r.jsx)(a.p,{children:(0,r.jsx)(a.img,{alt:"Building IoT Visualizations using Grafana",src:e(536296).Z+"",width:"1100",height:"524"})}),"\n",(0,r.jsx)(a.h2,{id:"datasources",children:"Datasources"}),"\n",(0,r.jsx)(a.h3,{id:"infinity-plugin",children:"Infinity Plugin"}),"\n",(0,r.jsxs)(a.p,{children:["The ",(0,r.jsx)(a.a,{href:"https://yesoreyeram.github.io/grafana-infinity-datasource",children:"Grafana Infinity Datasource"})," allows you to visualize data from JSON, CSV, XML, GraphQL and HTML endpoints. It can be installed from the ",(0,r.jsx)(a.strong,{children:"Plugins"})," directory:"]}),"\n",(0,r.jsx)(a.p,{children:(0,r.jsx)(a.img,{alt:"Building IoT Visualizations using Grafana",src:e(923339).Z+"",width:"1054",height:"442"})}),"\n",(0,r.jsxs)(a.p,{children:["Go to ",(0,r.jsx)(a.strong,{children:"Configuration"})," / ",(0,r.jsx)(a.strong,{children:"Data sources"})," and click on Add data source:"]}),"\n",(0,r.jsx)(a.p,{children:(0,r.jsx)(a.img,{alt:"Building IoT Visualizations using Grafana",src:e(476813).Z+"",width:"1235",height:"329"})}),"\n",(0,r.jsxs)(a.p,{children:["The Plugin can now be used to load external data sources, e.g. CSV files for the ",(0,r.jsx)(a.a,{href:"https://data.buenosaires.gob.ar/dataset/calidad-aire",children:"Air Quality in Buenos Aires 2019"}),". Here we can see the  ",(0,r.jsx)(a.code,{children:"NO2"})," and  ",(0,r.jsx)(a.code,{children:"PM10"})," measurements for three different areas:"]}),"\n",(0,r.jsx)(a.p,{children:(0,r.jsx)(a.img,{alt:"Building IoT Visualizations using Grafana",src:e(218647).Z+"",width:"1949",height:"559"})}),"\n",(0,r.jsx)(a.p,{children:"That can be turned into a visualization on a dashboard:"}),"\n",(0,r.jsx)(a.p,{children:(0,r.jsx)(a.img,{alt:"Building IoT Visualizations using Grafana",src:e(385359).Z+"",width:"1941",height:"895"})}),"\n",(0,r.jsx)(a.h3,{id:"time-series-databases",children:"Time Series Databases"}),"\n",(0,r.jsxs)(a.p,{children:["The default ",(0,r.jsx)(a.strong,{children:"TSDB"})," for Grafana is ",(0,r.jsx)(a.strong,{children:"InfluxDB"})," which we can quickly add to our Docker-Compose file together with ",(0,r.jsx)(a.strong,{children:"Chronograf"})," - the official database frontend:"]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-yml",children:"version: '3'\r\n\r\nservices:\r\n\r\n  grafana:\r\n    image: grafana/grafana-oss:latest\r\n    container_name: grafana\r\n    ports:\r\n      - 3000:3000\r\n    environment:\r\n      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}\r\n      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}\r\n    volumes:\r\n      - type: bind\r\n        source: ./grafana.ini\r\n        target: /etc/grafana/grafana.ini\r\n        read_only: true\r\n      - type: volume\r\n        source: grafanavol\r\n        target: /var/lib/grafana\r\n    depends_on:\r\n      - influxdb\r\n    networks:\r\n      - grafana\r\n\r\n  chronograf:\r\n    image: chronograf:latest\r\n    ports:\r\n      - '127.0.0.1:8888:8888'\r\n    volumes:\r\n      - chronovol:/var/lib/chronograf\r\n    depends_on:\r\n      - influxdb\r\n    environment:\r\n      - INFLUXDB_URL=http://influxdb:8086\r\n      - INFLUXDB_USERNAME=${INFLUXDB_USERNAME}\r\n      - INFLUXDB_PASSWORD=${INFLUXDB_PASSWORD}\r\n    networks:\r\n      - grafana\r\n\r\n  influxdb:\r\n    image: influxdb:latest\r\n    ports:\r\n      - '8086:8086'\r\n    volumes:\r\n      - influxvol:/var/lib/influxdb\r\n    environment:\r\n      - INFLUXDB_DB=db0\r\n      - INFLUXDB_ADMIN_USER=${INFLUXDB_USERNAME}\r\n      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_PASSWORD}\r\n    networks:\r\n      - grafana\r\n\r\nvolumes:\r\n  grafanavol:\r\n  influxvol:\r\n  chronovol:\r\n\r\nnetworks:\r\n  grafana:\n"})}),"\n",(0,r.jsx)(a.h4,{id:"connecting-grafana-to-influxdb",children:"Connecting Grafana to InfluxDB"}),"\n",(0,r.jsx)(a.p,{children:(0,r.jsx)(a.img,{alt:"Building IoT Visualizations using Grafana",src:e(305214).Z+"",width:"1037",height:"459"})}),"\n",(0,r.jsx)(a.p,{children:(0,r.jsx)(a.img,{alt:"Building IoT Visualizations using Grafana",src:e(307150).Z+"",width:"1172",height:"636"})}),"\n",(0,r.jsx)(a.p,{children:(0,r.jsx)(a.img,{alt:"Building IoT Visualizations using Grafana",src:e(515047).Z+"",width:"1202",height:"427"})}),"\n",(0,r.jsx)(a.p,{children:(0,r.jsx)(a.img,{alt:"Building IoT Visualizations using Grafana",src:e(994738).Z+"",width:"1072",height:"898"})}),"\n",(0,r.jsx)(a.p,{children:(0,r.jsx)(a.img,{alt:"Building IoT Visualizations using Grafana",src:e(494979).Z+"",width:"1139",height:"567"})}),"\n",(0,r.jsx)(a.p,{children:(0,r.jsx)(a.img,{alt:"Building IoT Visualizations using Grafana",src:e(597459).Z+"",width:"1320",height:"484"})}),"\n",(0,r.jsx)(a.p,{children:(0,r.jsx)(a.img,{alt:"Building IoT Visualizations using Grafana",src:e(944263).Z+"",width:"1337",height:"841"})})]})}function f(n={}){const{wrapper:a}={...(0,i.ah)(),...n.components};return a?(0,r.jsx)(a,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}},603905:(n,a,e)=>{e.d(a,{ah:()=>c});var r=e(667294);function i(n,a,e){return a in n?Object.defineProperty(n,a,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[a]=e,n}function t(n,a){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(n,a).enumerable}))),e.push.apply(e,r)}return e}function s(n){for(var a=1;a<arguments.length;a++){var e=null!=arguments[a]?arguments[a]:{};a%2?t(Object(e),!0).forEach((function(a){i(n,a,e[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):t(Object(e)).forEach((function(a){Object.defineProperty(n,a,Object.getOwnPropertyDescriptor(e,a))}))}return n}function o(n,a){if(null==n)return{};var e,r,i=function(n,a){if(null==n)return{};var e,r,i={},t=Object.keys(n);for(r=0;r<t.length;r++)e=t[r],a.indexOf(e)>=0||(i[e]=n[e]);return i}(n,a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);for(r=0;r<t.length;r++)e=t[r],a.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(i[e]=n[e])}return i}var l=r.createContext({}),c=function(n){var a=r.useContext(l),e=a;return n&&(e="function"==typeof n?n(a):s(s({},a),n)),e},d={inlineCode:"code",wrapper:function(n){var a=n.children;return r.createElement(r.Fragment,{},a)}},f=r.forwardRef((function(n,a){var e=n.components,i=n.mdxType,t=n.originalType,l=n.parentName,f=o(n,["components","mdxType","originalType","parentName"]),g=c(e),u=i,h=g["".concat(l,".").concat(u)]||g[u]||d[u]||t;return e?r.createElement(h,s(s({ref:a},f),{},{components:e})):r.createElement(h,s({ref:a},f))}));f.displayName="MDXCreateElement"},536296:(n,a,e)=>{e.d(a,{Z:()=>r});const r=e.p+"assets/images/Grafana-IoT-Dashboard_01-8011534eb277fa4f3b9c4bd8719995a3.png"},923339:(n,a,e)=>{e.d(a,{Z:()=>r});const r=e.p+"assets/images/Grafana-IoT-Dashboard_02-1e2b7028a62c5be178e29a1f0a274911.png"},476813:(n,a,e)=>{e.d(a,{Z:()=>r});const r=e.p+"assets/images/Grafana-IoT-Dashboard_03-94772506195790c4cb116ba5e50b9547.png"},218647:(n,a,e)=>{e.d(a,{Z:()=>r});const r=e.p+"assets/images/Grafana-IoT-Dashboard_04-a19ade5c2294482a9768536b82f73a9b.png"},385359:(n,a,e)=>{e.d(a,{Z:()=>r});const r=e.p+"assets/images/Grafana-IoT-Dashboard_05-10d154aa048990d57dd3e1827513f98b.png"},305214:(n,a,e)=>{e.d(a,{Z:()=>r});const r=e.p+"assets/images/Grafana-IoT-Dashboard_06-5b7a8634c426282f0b3f8092cf3839b6.png"},307150:(n,a,e)=>{e.d(a,{Z:()=>r});const r=e.p+"assets/images/Grafana-IoT-Dashboard_07-f9d01e4fa9af5b0c15ba8f4daef56c70.png"},515047:(n,a,e)=>{e.d(a,{Z:()=>r});const r=e.p+"assets/images/Grafana-IoT-Dashboard_08-ae91bea12ae8f1d08a83631f573d7a5d.png"},994738:(n,a,e)=>{e.d(a,{Z:()=>r});const r=e.p+"assets/images/Grafana-IoT-Dashboard_09-4d5b94a816311b1152db2850c23f2e9b.png"},494979:(n,a,e)=>{e.d(a,{Z:()=>r});const r=e.p+"assets/images/Grafana-IoT-Dashboard_10-6c690919916263dcffe5eb010fb9bb30.png"},597459:(n,a,e)=>{e.d(a,{Z:()=>r});const r=e.p+"assets/images/Grafana-IoT-Dashboard_11-925fa64cc62aac4a1ce3ec8274a48fe2.png"},944263:(n,a,e)=>{e.d(a,{Z:()=>r});const r=e.p+"assets/images/Grafana-IoT-Dashboard_12-e93fb31bbf030ada8ac6456437e62765.png"},516196:(n,a,e)=>{e.d(a,{Z:()=>r});const r=e.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-ec671595d585b88a85b017a7908fb619.jpg"}}]);