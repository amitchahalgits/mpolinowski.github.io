"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[51254],{253568:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var t=a(785893),r=a(603905);const i={sidebar_position:4780,slug:"2023-01-05",title:"Data Version Control",authors:"mpolinowski",tags:["Python","Machine Learning"],description:"Open-source Version Control System for Machine Learning Projects."},s=void 0,o={id:"IoT-and-Machine-Learning/AIOps/2023-01-05-dvc-model-version-control/index",title:"Data Version Control",description:"Open-source Version Control System for Machine Learning Projects.",source:"@site/docs/IoT-and-Machine-Learning/AIOps/2023-01-05-dvc-model-version-control/index.md",sourceDirName:"IoT-and-Machine-Learning/AIOps/2023-01-05-dvc-model-version-control",slug:"/IoT-and-Machine-Learning/AIOps/2023-01-05-dvc-model-version-control/2023-01-05",permalink:"/docs/IoT-and-Machine-Learning/AIOps/2023-01-05-dvc-model-version-control/2023-01-05",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IoT-and-Machine-Learning/AIOps/2023-01-05-dvc-model-version-control/index.md",tags:[{label:"Python",permalink:"/docs/tags/python"},{label:"Machine Learning",permalink:"/docs/tags/machine-learning"}],version:"current",sidebarPosition:4780,frontMatter:{sidebar_position:4780,slug:"2023-01-05",title:"Data Version Control",authors:"mpolinowski",tags:["Python","Machine Learning"],description:"Open-source Version Control System for Machine Learning Projects."},sidebar:"tutorialSidebar",previous:{title:"DVC Model Access",permalink:"/docs/IoT-and-Machine-Learning/AIOps/2023-01-06-dvc-model-access/2023-01-05"},next:{title:"Distributed training with TensorFlow",permalink:"/docs/IoT-and-Machine-Learning/AIOps/2023-01-04-tf-distributed-strategy/2023-01-04"}},d={},l=[{value:"Getting Started",id:"getting-started",level:2},{value:"Install with pip",id:"install-with-pip",level:3},{value:"Initialize a ML Project",id:"initialize-a-ml-project",level:3},{value:"Data Management Trail",id:"data-management-trail",level:2},{value:"Data Versioning",id:"data-versioning",level:3},{value:"Storing and Sharing",id:"storing-and-sharing",level:3},{value:"Remote",id:"remote",level:4},{value:"ssh",id:"ssh",level:5},{value:"local",id:"local",level:5},{value:"Push &amp; Pull Data",id:"push--pull-data",level:4}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",h5:"h5",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.ah)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Guangzhou, China",src:a(104402).Z+"",width:"1500",height:"662"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#getting-started",children:"Getting Started"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#install-with-pip",children:"Install with pip"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#initialize-a-ml-project",children:"Initialize a ML Project"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#data-management-trail",children:"Data Management Trail"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#data-versioning",children:"Data Versioning"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#storing-and-sharing",children:"Storing and Sharing"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#remote",children:"Remote"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#ssh",children:"ssh"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#local",children:"local"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#push--pull-data",children:"Push & Pull Data"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Data Version Control"})," is a ",(0,t.jsx)(n.a,{href:"https://dvc.org/doc/start/data-management/data-versioning",children:"data versioning"}),", ML ",(0,t.jsx)(n.a,{href:"https://dvc.org/doc/user-guide/pipelines",children:"workflow automation"}),", and ",(0,t.jsx)(n.a,{href:"https://dvc.org/doc/user-guide/experiment-management",children:"experiment management"})," tool that takes advantage of the existing software engineering toolset you're already familiar with (Git, your IDE, CI/CD, etc.). DVC helps data science and machine learning teams manage large datasets, make projects reproducible, and better collaborate."]}),"\n",(0,t.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,t.jsxs)(n.p,{children:["To use DVC as a Python library, please install with ",(0,t.jsx)(n.code,{children:"pip"})," or with ",(0,t.jsx)(n.code,{children:"conda"}),":"]}),"\n",(0,t.jsx)(n.h3,{id:"install-with-pip",children:"Install with pip"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pip install dvc\n"})}),"\n",(0,t.jsx)(n.h3,{id:"initialize-a-ml-project",children:"Initialize a ML Project"}),"\n",(0,t.jsxs)(n.p,{children:["Initialize the project by running ",(0,t.jsx)(n.code,{children:"dvc init"})," inside a Git project:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"mkdir my-project\ncd my-project\ngit init\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"dvc init\n\nInitialized DVC repository.\nYou can now commit the changes to git.\n"})}),"\n",(0,t.jsx)(n.p,{children:"A few internal files are created that should be added to Git:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'git commit -m "Initialize DVC"\n\n[master (root-commit) ed9cc50] Initialize DVC\n 3 files changed, 6 insertions(+)\n create mode 100755 .dvc/.gitignore\n create mode 100755 .dvc/config\n create mode 100755 .dvcignore\n'})}),"\n",(0,t.jsx)(n.h2,{id:"data-management-trail",children:"Data Management Trail"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://dvc.org/doc/start/data-management/data-versioning",children:"Data and model versioning"})," is the base layer of DVC for large files, datasets, and machine learning models. Use a standard Git workflow, but without storing large files in the repo. Data is cached by DVC, allowing for efficient sharing."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://dvc.org/doc/start/data-management/data-and-model-access",children:"Data and model access"})," goes over using data artifacts from outside of the project and importing them from another DVC project. This can help to download a specific version of an ML model to a deployment server or import a dataset into another project."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://dvc.org/doc/start/data-management/data-pipelines",children:"Data pipelines"}),' describe how models and other data artifacts are built, and provide an efficient way to reproduce them. Think "Makefiles for data and ML projects" done right.']}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://dvc.org/doc/start/data-management/metrics-parameters-plots",children:"Metrics, parameters, and plots"})," can be attached to pipelines. These let you capture, evaluate, and visualize ML projects without leaving Git."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"data-versioning",children:"Data Versioning"}),"\n",(0,t.jsx)(n.p,{children:"Having initialized a project in the previous section, we can get the data file (which we'll be using later) like this:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"dvc get https://github.com/iterative/dataset-registry \\\n          get-started/data.xml -o data/data.xml\n"})}),"\n",(0,t.jsx)(n.p,{children:"To start tracking a file or directory, use dvc add:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"dvc add data/data.xml\n"})}),"\n",(0,t.jsxs)(n.p,{children:["DVC stores information about the added file in a ",(0,t.jsx)(n.code,{children:".dvc"})," file named ",(0,t.jsx)(n.code,{children:"data/data.xml.dvc"}),". This metadata file is a placeholder for the original data, and can be easily versioned like source code with Git. The data, meanwhile, is listed in ",(0,t.jsx)(n.code,{children:".gitignore"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'git add data/data.xml.dvc data/.gitignore\ngit commit -m "Add raw data"\n'})}),"\n",(0,t.jsx)(n.h3,{id:"storing-and-sharing",children:"Storing and Sharing"}),"\n",(0,t.jsx)(n.h4,{id:"remote",children:"Remote"}),"\n",(0,t.jsx)(n.p,{children:"The same way as GitHub provides storage hosting for Git repositories, DVC remotes provide a location to store and share data and models. You can pull data assets created by colleagues from DVC remotes without spending time and resources to build or process them locally. Remote storage can also save space on your local environment \u2013 DVC can fetch into the cache directory only the data you need for a specific branch/commit."}),"\n",(0,t.jsxs)(n.p,{children:["Using ",(0,t.jsx)(n.a,{href:"https://dvc.org/doc/command-reference/remote",children:"DVC with remote storage"})," is optional. DVC commands use the local cache (usually in dir ",(0,t.jsx)(n.code,{children:".dvc/cache"}),") as data storage by default. This enables the main DVC usage scenarios out of the box."]}),"\n",(0,t.jsxs)(n.p,{children:["DVC supports several types of remote storage: ",(0,t.jsx)(n.a,{href:"https://dvc.org/doc/command-reference/remote/add#supported-storage-types",children:"local file system, SSH, Amazon S3, Google Cloud Storage, HTTP, HDFS, among others"}),"."]}),"\n",(0,t.jsx)(n.h5,{id:"ssh",children:"ssh"}),"\n",(0,t.jsxs)(n.p,{children:["DVC requires both ",(0,t.jsx)(n.a,{href:"https://dvc.org/doc/command-reference/remote/modify#ssh",children:"SSH and SFTP access to work with remote SSH locations"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"dvc remote modify myremote url \\\n                    ssh://user@example.com:1234/path\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"url"})," - remote location, in a regular SSH format. Note that this can already include the user parameter, embedded into the URL."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"dvc remote modify --local myremote user myuser\ndvc remote modify myremote port 2222\ndvc remote modify --local myremote keyfile /path/to/keyfile\ndvc remote modify --local myremote password mypassword\ndvc remote modify myremote ask_password true\ndvc remote modify --local myremote passphrase mypassphrase\ndvc remote modify myremote ask_passphrase true\ndvc remote rename oldremote newremote\ndvc remote remove oldremote\n"})}),"\n",(0,t.jsx)(n.h5,{id:"local",children:"local"}),"\n",(0,t.jsxs)(n.p,{children:["While the term may seem contradictory, it doesn't have to be. The ",(0,t.jsx)(n.code,{children:"local"})," part refers to the type of location where the storage is: another directory in the same file system."]}),"\n",(0,t.jsxs)(n.p,{children:["We use the ",(0,t.jsx)(n.code,{children:"-d"})," (",(0,t.jsx)(n.code,{children:"--default"}),") option of dvc remote add for this:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"dvc remote add -d demo-data /run/media/myuser/files/dvc\nSetting 'demo-data' as a default remote.\n"})}),"\n",(0,t.jsx)(n.p,{children:"The project's config file should now look like this:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"[core]\n    remote = demo-data\n['remote \"demo-data\"']\n    url = /run/media/myuser/files/dvc\n"})}),"\n",(0,t.jsx)(n.p,{children:"List all remotes in the project:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"dvc remote list\ndemo-data       /run/media/myuser/files/dvc\n"})}),"\n",(0,t.jsx)(n.p,{children:"Now we need to exclude everything from Git:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'git add .dvc/config\ngit commit -m "Configure remote storage"\n'})}),"\n",(0,t.jsx)(n.h4,{id:"push--pull-data",children:"Push & Pull Data"}),"\n",(0,t.jsxs)(n.p,{children:["You can upload DVC-tracked data or model files with ",(0,t.jsx)(n.code,{children:"dvc push"}),", so they're safely stored remotely. This also means they can be retrieved on other environments later with ",(0,t.jsx)(n.code,{children:"dvc pull"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"dvc push\n1 file pushed\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Having DVC-tracked data and models stored remotely, it can be downloaded when needed in other copies of this project with ",(0,t.jsx)(n.code,{children:"dvc pull"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"dvc pull\nEverything is up to date.\n"})}),"\n",(0,t.jsx)(n.p,{children:"After updating your local dataset run:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'dvc add data/data.xml\ngit commit data/data.xml.dvc -m "Dataset updates"\ndvc push\n'})}),"\n",(0,t.jsx)(n.p,{children:"To switch between datasets:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'git checkout HEAD~1 data/data.xml.dvc\ndvc checkout\ngit commit data/data.xml.dvc -m "Revert dataset updates"\n'})}),"\n",(0,t.jsx)(n.p,{children:"DVC is technically not a version control system. Git itself provides that layer. DVC in turn manipulates .dvc files, whose contents define the data file versions."})]})}function h(e={}){const{wrapper:n}={...(0,r.ah)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},603905:(e,n,a)=>{a.d(n,{ah:()=>l});var t=a(667294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function i(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function s(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?i(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=t.createContext({}),l=function(e){var n=t.useContext(d),a=n;return e&&(a="function"==typeof e?e(n):s(s({},n),e)),a},c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},h=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,h=o(e,["components","mdxType","originalType","parentName"]),m=l(a),p=r,g=m["".concat(d,".").concat(p)]||m[p]||c[p]||i;return a?t.createElement(g,s(s({ref:n},h),{},{components:a})):t.createElement(g,s({ref:n},h))}));h.displayName="MDXCreateElement"},104402:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-296769d73822f07b0ac5dc952f56bfa1.jpg"}}]);