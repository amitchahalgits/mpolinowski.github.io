"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[75196],{435278:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>h,contentTitle:()=>l,default:()=>o,frontMatter:()=>r,metadata:()=>d,toc:()=>c});var i=n(785893),t=n(603905);const r={sidebar_position:8060,slug:"2019-09-22",title:"Installing Oh-My-Zsh on Ubuntu 20.04",authors:"mpolinowski",tags:["LINUX","Cheating"]},l=void 0,d={id:"DevOps/Linux/2019-09-22--zsh-on-ubuntu20/index",title:"Installing Oh-My-Zsh on Ubuntu 20.04",description:"Central, Hong Kong",source:"@site/docs/DevOps/Linux/2019-09-22--zsh-on-ubuntu20/index.md",sourceDirName:"DevOps/Linux/2019-09-22--zsh-on-ubuntu20",slug:"/DevOps/Linux/2019-09-22--zsh-on-ubuntu20/2019-09-22",permalink:"/docs/DevOps/Linux/2019-09-22--zsh-on-ubuntu20/2019-09-22",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Linux/2019-09-22--zsh-on-ubuntu20/index.md",tags:[{label:"LINUX",permalink:"/docs/tags/linux"},{label:"Cheating",permalink:"/docs/tags/cheating"}],version:"current",sidebarPosition:8060,frontMatter:{sidebar_position:8060,slug:"2019-09-22",title:"Installing Oh-My-Zsh on Ubuntu 20.04",authors:"mpolinowski",tags:["LINUX","Cheating"]},sidebar:"tutorialSidebar",previous:{title:"Podman Cheat Sheet",permalink:"/docs/DevOps/Linux/2019-09-25--podman-cheat-sheet/2019-09-25"},next:{title:"Installing Oh-My-Zsh on CentOS8",permalink:"/docs/DevOps/Linux/2019-09-22--zsh-on-centos8/2019-09-22"}},h={},c=[{value:"Install ZSH",id:"install-zsh",level:2},{value:"Install Oh-my-Zsh",id:"install-oh-my-zsh",level:2},{value:"Theming",id:"theming",level:3},{value:"Enable Oh-My-Zsh Plugins",id:"enable-oh-my-zsh-plugins",level:3},{value:"External Plugins",id:"external-plugins",level:3},{value:"Adding EXA",id:"adding-exa",level:2},{value:"Command-line options",id:"command-line-options",level:3},{value:"Manual Update Oh-My-ZSH",id:"manual-update-oh-my-zsh",level:2}];function a(e){const s={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.ah)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"Central, Hong Kong",src:n(518293).Z+"",width:"1500",height:"574"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"#install-zsh",children:"Install ZSH"})}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.a,{href:"#install-oh-my-zsh",children:"Install Oh-my-Zsh"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"#theming",children:"Theming"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"#enable-oh-my-zsh-plugins",children:"Enable Oh-My-Zsh Plugins"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"#external-plugins",children:"External Plugins"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.a,{href:"#adding-exa",children:"Adding EXA"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"#command-line-options",children:"Command-line options"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"#manual-update-oh-my-zsh",children:"Manual Update Oh-My-ZSH"})}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["In order for ",(0,i.jsx)(s.a,{href:"https://ohmyz.sh",children:"Oh-My-Zsh"})," to work on the system ,",(0,i.jsx)(s.code,{children:"zsh"})," need to be installed."]}),"\n",(0,i.jsx)(s.h2,{id:"install-zsh",children:"Install ZSH"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"apt install wget curl git -y\r\napt install zsh\n"})}),"\n",(0,i.jsx)(s.p,{children:"To check installed version of ZSH:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"zsh --version\r\nzsh 5.8 (x86_64-ubuntu-linux-gnu)\n"})}),"\n",(0,i.jsx)(s.p,{children:"Changing your default shell to zsh:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"usermod -s $(which zsh) root\r\nchsh -s $(which zsh)\n"})}),"\n",(0,i.jsx)(s.h2,{id:"install-oh-my-zsh",children:"Install Oh-my-Zsh"}),"\n",(0,i.jsx)(s.p,{children:"Clone the repo:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:'sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"\n'})}),"\n",(0,i.jsx)(s.p,{children:"or"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:'sh -c "$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)"\n'})}),"\n",(0,i.jsxs)(s.p,{children:["The Oh-my-Zsh configuration files are located under ",(0,i.jsx)(s.code,{children:"$HOME/.oh-my-zsh/"})," directory. Note that ZSH config file is ",(0,i.jsx)(s.code,{children:"$HOME/.zshrc"}),"."]}),"\n",(0,i.jsx)(s.h3,{id:"theming",children:"Theming"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"nano $HOME/.zshrc\n"})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"robbyrussel"})," is the default theme for ZSH:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-cfg",children:'# Set name of the theme to load --- if set to "random", it will\r\n# load a random theme each time oh-my-zsh is loaded, in which case,\r\n# to know which specific one was loaded, run: echo $RANDOM_THEME\r\n# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes\r\nZSH_THEME="robbyrussell"\r\n...\n'})}),"\n",(0,i.jsxs)(s.p,{children:["To change the theme, simply get the name of the theme from ",(0,i.jsx)(s.code,{children:"$HOME/.oh-my-zsh/themes/"})," and replace it. For example, to change the themes to bureau theme, ",(0,i.jsx)(s.code,{children:"$HOME/.oh-my-zsh/themes/bureau.zsh-theme"}),":"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:'ZSH_THEME="bureau"\n'})}),"\n",(0,i.jsxs)(s.p,{children:["Reload the ",(0,i.jsx)(s.code,{children:"~/.zshrc"})," to effect the changes everytime you make changes."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"source ~/.zshrc\n"})}),"\n",(0,i.jsx)(s.h3,{id:"enable-oh-my-zsh-plugins",children:"Enable Oh-My-Zsh Plugins"}),"\n",(0,i.jsxs)(s.p,{children:["Plugins are stored under ",(0,i.jsx)(s.code,{children:"~/.oh-my-zsh/plugins"}),". Plugins can be enabled by defining them under the plugins section on ",(0,i.jsx)(s.code,{children:"~/.zshrc"})," config file:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-cfg",children:"plugins=(git docker-compose docker ansible vagrant sudo)\n"})}),"\n",(0,i.jsx)(s.p,{children:"Save and exit the shell. Then source ~/.zshrc for the changes to take effect."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"source ~/.zshrc\n"})}),"\n",(0,i.jsx)(s.h3,{id:"external-plugins",children:"External Plugins"}),"\n",(0,i.jsxs)(s.p,{children:["Clone the desired plugin - e.g. ",(0,i.jsx)(s.a,{href:"https://github.com/marlonrichert/zsh-autocomplete#installation",children:"zsh-autocomplete"})," and add it to your ",(0,i.jsx)(s.code,{children:".zshrc"})," file:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"cd /home/ubuntu\r\ngit clone https://github.com/marlonrichert/zsh-autocomplete.git\r\nnano .zshrc\n"})}),"\n",(0,i.jsx)(s.p,{children:"Add the following to your .zshrc file:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-cfg",children:"source /home/ubuntu/zsh-autocomplete/zsh-autocomplete.zsh\n"})}),"\n",(0,i.jsx)(s.h2,{id:"adding-exa",children:"Adding EXA"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"https://github.com/ogham/exa",children:"exa"})," is a modern replacement for the venerable file-listing command-line program ls that ships with Unix and Linux operating systems, giving it more features and better defaults. It uses colours to distinguish file types and metadata. It knows about symlinks, extended attributes, and Git. And it\u2019s small, fast, and just one single binary."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"apt install exa\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Adding a shortcut in ",(0,i.jsx)(s.code,{children:"nano .bashrc"}),":"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-cfg",children:"alias dir='exa -abghHlS --tree'\n"})}),"\n",(0,i.jsx)(s.h3,{id:"command-line-options",children:"Command-line options"}),"\n",(0,i.jsx)(s.p,{children:"exa\u2019s options are almost, but not quite, entirely unlike ls\u2019s."}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Display options"})}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{}),(0,i.jsx)(s.th,{})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"-1, --oneline"}),(0,i.jsx)(s.td,{children:"display one entry per line"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"-G, --grid"}),(0,i.jsx)(s.td,{children:"display entries as a grid (default)"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"-l, --long"}),(0,i.jsx)(s.td,{children:"display extended details and attributes"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"-R, --recurse"}),(0,i.jsx)(s.td,{children:"recurse into directories"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"-T, --tree"}),(0,i.jsx)(s.td,{children:"recurse into directories as a tree"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"-x, --across"}),(0,i.jsx)(s.td,{children:"sort the grid across, rather than downwards"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"-F, --classify"}),(0,i.jsx)(s.td,{children:"display type indicator by file names"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"--colo[u]r"}),(0,i.jsx)(s.td,{children:"when to use terminal colours"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"--colo[u]r-scale"}),(0,i.jsx)(s.td,{children:"highlight levels of file sizes distinctly"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"--icons"}),(0,i.jsx)(s.td,{children:"display icons"})]})]})]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Filtering options"})}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{}),(0,i.jsx)(s.th,{})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"-a, --all"}),(0,i.jsx)(s.td,{children:"show hidden and 'dot' files"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"-d, --list-dirs"}),(0,i.jsx)(s.td,{children:"list directories like regular files"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"-L, --level=(depth)"}),(0,i.jsx)(s.td,{children:"limit the depth of recursion"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"-r, --reverse"}),(0,i.jsx)(s.td,{children:"reverse the sort order"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"-s, --sort=(field)"}),(0,i.jsx)(s.td,{children:"which field to sort by"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"--group-directories-first"}),(0,i.jsx)(s.td,{children:"list directories before other files"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"-D, --only-dirs"}),(0,i.jsx)(s.td,{children:"list only directories"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"--git-ignore"}),(0,i.jsx)(s.td,{children:"ignore files mentioned in .gitignore"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"-I, --ignore-glob=(globs)"}),(0,i.jsx)(s.td,{children:"glob patterns (pipe-separated) of files to ignore"})]})]})]}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsx)(s.p,{children:"Pass the --all option twice to also show the . and .. directories."}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Long view options"})}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.em,{children:"These options are available when running with --long (-l)"})}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{}),(0,i.jsx)(s.th,{})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"-b, --binary"}),(0,i.jsx)(s.td,{children:"list file sizes with binary prefixes"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"-B, --bytes"}),(0,i.jsx)(s.td,{children:"list file sizes in bytes, without any prefixes"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"-g, --group"}),(0,i.jsx)(s.td,{children:"list each file\u2019s group"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"-h, --header"}),(0,i.jsx)(s.td,{children:"add a header row to each column"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"-H, --links"}),(0,i.jsx)(s.td,{children:"list each file\u2019s number of hard links"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"-i, --inode"}),(0,i.jsx)(s.td,{children:"list each file\u2019s inode number"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"-m, --modified"}),(0,i.jsx)(s.td,{children:"use the modified timestamp field"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"-S, --blocks"}),(0,i.jsx)(s.td,{children:"list each file\u2019s number of file system blocks"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"-t, --time=(field)"}),(0,i.jsx)(s.td,{children:"which timestamp field to use"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"-u, --accessed"}),(0,i.jsx)(s.td,{children:"use the accessed timestamp field"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"-U, --created"}),(0,i.jsx)(s.td,{children:"use the created timestamp field"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"-@, --extended"}),(0,i.jsx)(s.td,{children:"list each file\u2019s extended attributes and sizes"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"--changed"}),(0,i.jsx)(s.td,{children:"use the changed timestamp field"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"--git"}),(0,i.jsx)(s.td,{children:"list each file\u2019s Git status, if tracked or ignored"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"--time-style"}),(0,i.jsx)(s.td,{children:"how to format timestamps"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"--no-permissions"}),(0,i.jsx)(s.td,{children:"suppress the permissions field"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"--no-filesize"}),(0,i.jsx)(s.td,{children:"suppress the filesize field"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"--no-user"}),(0,i.jsx)(s.td,{children:"suppress the user field"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"--no-time"}),(0,i.jsx)(s.td,{children:"suppress the time field"})]})]})]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Some of the options accept parameters"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Valid --color options are always, automatic, and never."}),"\n",(0,i.jsx)(s.li,{children:"Valid sort fields are accessed, changed, created, extension, Extension, inode, modified, name, Name, size, type, and none. Fields starting with a capital letter sort uppercase before lowercase. The modified field has the aliases date, time, and newest, while its reverse has the aliases age and oldest."}),"\n",(0,i.jsx)(s.li,{children:"Valid time fields are modified, changed, accessed, and created."}),"\n",(0,i.jsx)(s.li,{children:"Valid time styles are default, iso, long-iso, and full-iso."}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"manual-update-oh-my-zsh",children:"Manual Update Oh-My-ZSH"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"rm -rf ~/.oh-my-zsh && git clone https://github.com/ohmyzsh/ohmyzsh.git ~/.oh-my-zsh\n"})})]})}function o(e={}){const{wrapper:s}={...(0,t.ah)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},603905:(e,s,n)=>{n.d(s,{ah:()=>c});var i=n(667294);function t(e,s,n){return s in e?Object.defineProperty(e,s,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[s]=n,e}function r(e,s){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);s&&(i=i.filter((function(s){return Object.getOwnPropertyDescriptor(e,s).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var s=1;s<arguments.length;s++){var n=null!=arguments[s]?arguments[s]:{};s%2?r(Object(n),!0).forEach((function(s){t(e,s,n[s])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(s){Object.defineProperty(e,s,Object.getOwnPropertyDescriptor(n,s))}))}return e}function d(e,s){if(null==e)return{};var n,i,t=function(e,s){if(null==e)return{};var n,i,t={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],s.indexOf(n)>=0||(t[n]=e[n]);return t}(e,s);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],s.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var h=i.createContext({}),c=function(e){var s=i.useContext(h),n=s;return e&&(n="function"==typeof e?e(s):l(l({},s),e)),n},a={inlineCode:"code",wrapper:function(e){var s=e.children;return i.createElement(i.Fragment,{},s)}},o=i.forwardRef((function(e,s){var n=e.components,t=e.mdxType,r=e.originalType,h=e.parentName,o=d(e,["components","mdxType","originalType","parentName"]),x=c(n),j=t,u=x["".concat(h,".").concat(j)]||x[j]||a[j]||r;return n?i.createElement(u,l(l({ref:s},o),{},{components:n})):i.createElement(u,l({ref:s},o))}));o.displayName="MDXCreateElement"},518293:(e,s,n)=>{n.d(s,{Z:()=>i});const i=n.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-bb1cb7969c492d0795741dc686f072b6.jpg"}}]);