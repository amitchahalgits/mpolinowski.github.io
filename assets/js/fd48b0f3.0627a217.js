"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[38684],{3905:(t,a,e)=>{e.d(a,{Zo:()=>g,kt:()=>k});var n=e(67294);function l(t,a,e){return a in t?Object.defineProperty(t,a,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[a]=e,t}function r(t,a){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(t,a).enumerable}))),e.push.apply(e,n)}return e}function i(t){for(var a=1;a<arguments.length;a++){var e=null!=arguments[a]?arguments[a]:{};a%2?r(Object(e),!0).forEach((function(a){l(t,a,e[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):r(Object(e)).forEach((function(a){Object.defineProperty(t,a,Object.getOwnPropertyDescriptor(e,a))}))}return t}function p(t,a){if(null==t)return{};var e,n,l=function(t,a){if(null==t)return{};var e,n,l={},r=Object.keys(t);for(n=0;n<r.length;n++)e=r[n],a.indexOf(e)>=0||(l[e]=t[e]);return l}(t,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(n=0;n<r.length;n++)e=r[n],a.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(l[e]=t[e])}return l}var d=n.createContext({}),m=function(t){var a=n.useContext(d),e=a;return t&&(e="function"==typeof t?t(a):i(i({},a),t)),e},g=function(t){var a=m(t.components);return n.createElement(d.Provider,{value:a},t.children)},s={inlineCode:"code",wrapper:function(t){var a=t.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(t,a){var e=t.components,l=t.mdxType,r=t.originalType,d=t.parentName,g=p(t,["components","mdxType","originalType","parentName"]),u=m(e),k=l,o=u["".concat(d,".").concat(k)]||u[k]||s[k]||r;return e?n.createElement(o,i(i({ref:a},g),{},{components:e})):n.createElement(o,i({ref:a},g))}));function k(t,a){var e=arguments,l=a&&a.mdxType;if("string"==typeof t||l){var r=e.length,i=new Array(r);i[0]=u;var p={};for(var d in a)hasOwnProperty.call(a,d)&&(p[d]=a[d]);p.originalType=t,p.mdxType="string"==typeof t?t:l,i[1]=p;for(var m=2;m<r;m++)i[m]=e[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,e)}u.displayName="MDXCreateElement"},31483:(t,a,e)=>{e.r(a),e.d(a,{assets:()=>d,contentTitle:()=>i,default:()=>s,frontMatter:()=>r,metadata:()=>p,toc:()=>m});var n=e(87462),l=(e(67294),e(3905));const r={sidebar_position:4530,slug:"2023-03-16",title:"Tensorflow 2 - Transfer Learning",authors:"mpolinowski",tags:["Python","Machine Learning","Tensorflow"],description:"Scale a pre-trained model to fit your needs"},i=void 0,p={unversionedId:"IoT-and-Machine-Learning/ML/2023-03-16-tensorflow-transfer-learning-scaling/index",id:"IoT-and-Machine-Learning/ML/2023-03-16-tensorflow-transfer-learning-scaling/index",title:"Tensorflow 2 - Transfer Learning",description:"Scale a pre-trained model to fit your needs",source:"@site/docs/IoT-and-Machine-Learning/ML/2023-03-16-tensorflow-transfer-learning-scaling/index.md",sourceDirName:"IoT-and-Machine-Learning/ML/2023-03-16-tensorflow-transfer-learning-scaling",slug:"/IoT-and-Machine-Learning/ML/2023-03-16-tensorflow-transfer-learning-scaling/2023-03-16",permalink:"/docs/IoT-and-Machine-Learning/ML/2023-03-16-tensorflow-transfer-learning-scaling/2023-03-16",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IoT-and-Machine-Learning/ML/2023-03-16-tensorflow-transfer-learning-scaling/index.md",tags:[{label:"Python",permalink:"/docs/tags/python"},{label:"Machine Learning",permalink:"/docs/tags/machine-learning"},{label:"Tensorflow",permalink:"/docs/tags/tensorflow"}],version:"current",sidebarPosition:4530,frontMatter:{sidebar_position:4530,slug:"2023-03-16",title:"Tensorflow 2 - Transfer Learning",authors:"mpolinowski",tags:["Python","Machine Learning","Tensorflow"],description:"Scale a pre-trained model to fit your needs"},sidebar:"tutorialSidebar",previous:{title:"Machine Learning",permalink:"/docs/category/machine-learning"},next:{title:"Tensorflow 2 - Transfer Learning",permalink:"/docs/IoT-and-Machine-Learning/ML/2023-03-11-tensorflow-transfer-learning-fine-tuning/2023-03-11"}},d={},m=[{value:"Model Scaling",id:"model-scaling",level:2},{value:"Get Data",id:"get-data",level:3},{value:"Model Building and Training",id:"model-building-and-training",level:3},{value:"Fine-tuning the Model",id:"fine-tuning-the-model",level:3},{value:"Saving and Restoring the Trained Model",id:"saving-and-restoring-the-trained-model",level:3},{value:"Evaluating Predictions",id:"evaluating-predictions",level:3},{value:"Accuracy Score",id:"accuracy-score",level:4},{value:"Confusion Matrix",id:"confusion-matrix",level:4},{value:"SciKit Learn Classification Report",id:"scikit-learn-classification-report",level:4},{value:"Run Predictions",id:"run-predictions",level:3},{value:"Find most Wrong Predictions",id:"find-most-wrong-predictions",level:3},{value:"Predict Custom Images",id:"predict-custom-images",level:3}],g={toc:m};function s(t){let{components:a,...r}=t;return(0,l.kt)("wrapper",(0,n.Z)({},g,r,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Victoria Harbour, Hongkong",src:e(61853).Z,width:"1500",height:"618"})),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#tensorflow-transfer-learning"},"Tensorflow Transfer Learning"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#model-scaling"},"Model Scaling"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#get-data"},"Get Data")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#model-building-and-training"},"Model Building and Training")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#fine-tuning-the-model"},"Fine-tuning the Model")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#saving-and-restoring-the-trained-model"},"Saving and Restoring the Trained Model")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#evaluating-predictions"},"Evaluating Predictions"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#accuracy-score"},"Accuracy Score")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#confusion-matrix"},"Confusion Matrix")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#scikit-learn-classification-report"},"SciKit Learn Classification Report")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#run-predictions"},"Run Predictions")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#find-most-wrong-predictions"},"Find most Wrong Predictions")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#predict-custom-images"},"Predict Custom Images"))))))),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"See also:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Fun, fun, tensors: ",(0,l.kt)("a",{parentName:"li",href:"/docs/IoT-and-Machine-Learning/ML/2023-02-19-tensorflow-introduction/2023-02-19"},"Tensor Constants, Variables and Attributes"),", ",(0,l.kt)("a",{parentName:"li",href:"/docs/IoT-and-Machine-Learning/ML/2023-02-21-tensorflow-tensors-2/2023-02-21"},"Tensor Indexing, Expanding and Manipulations"),", ",(0,l.kt)("a",{parentName:"li",href:"/docs/IoT-and-Machine-Learning/ML/2023-02-22-tensorflow-tensors-3/2023-02-22"},"Matrix multiplications, Squeeze, One-hot and Numpy")),(0,l.kt)("li",{parentName:"ul"},"Tensorflow 2 - Neural Network Regression: ",(0,l.kt)("a",{parentName:"li",href:"/docs/IoT-and-Machine-Learning/ML/2023-02-23-tensorflow-neural-network-regression/2023-02-23"},"Building a Regression Model"),", ",(0,l.kt)("a",{parentName:"li",href:"/docs/IoT-and-Machine-Learning/ML/2023-02-24-tensorflow-neural-network-regression-evaluation/2023-02-24"},"Model Evaluation"),", ",(0,l.kt)("a",{parentName:"li",href:"/docs/IoT-and-Machine-Learning/ML/2023-02-25-tensorflow-neural-network-regression-experiments/2023-02-25"},"Model Optimization"),", ",(0,l.kt)("a",{parentName:"li",href:"/docs/IoT-and-Machine-Learning/ML/2023-02-26-tensorflow-neural-network-regression-real-dataset/2023-02-26"},'Working with a "Real" Dataset'),", ",(0,l.kt)("a",{parentName:"li",href:"/docs/IoT-and-Machine-Learning/ML/2023-02-26-tensorflow-neural-network-regression-data-preprocessing/2023-02-26"},"Feature Scaling")),(0,l.kt)("li",{parentName:"ul"},"Tensorflow 2 - Neural Network Classification: ",(0,l.kt)("a",{parentName:"li",href:"/docs/IoT-and-Machine-Learning/ML/2023-02-27-tensorflow-neural-network-classification/2023-02-27"},"Non-linear Data and Activation Functions"),", ",(0,l.kt)("a",{parentName:"li",href:"/docs/IoT-and-Machine-Learning/ML/2023-02-28-tensorflow-neural-network-classification-model-evaluation/2023-02-28"},"Model Evaluation and Performance Improvement"),", ",(0,l.kt)("a",{parentName:"li",href:"/docs/IoT-and-Machine-Learning/ML/2023-03-02-tensorflow-neural-network-multi-classification/2023-03-02"},"Multiclass Classification Problems")),(0,l.kt)("li",{parentName:"ul"},"Tensorflow 2 - Convolutional Neural Networks: ",(0,l.kt)("a",{parentName:"li",href:"/docs/IoT-and-Machine-Learning/ML/2023-03-03-tensorflow-convolutional-neural-network-binary-classifications/2023-03-03"},"Binary Image Classification"),", ",(0,l.kt)("a",{parentName:"li",href:"/docs/IoT-and-Machine-Learning/ML/2023-03-05-tensorflow-convolutional-neural-network-multiclass-classifications/2023-03-05"},"Multiclass Image Classification")),(0,l.kt)("li",{parentName:"ul"},"Tensorflow 2 - Transfer Learning: ",(0,l.kt)("a",{parentName:"li",href:"/docs/IoT-and-Machine-Learning/ML/2023-03-06-tensorflow-transfer-learning-feature-extraction/2023-03-06"},"Feature Extraction"),", ",(0,l.kt)("a",{parentName:"li",href:"/docs/IoT-and-Machine-Learning/ML/2023-03-11-tensorflow-transfer-learning-fine-tuning/2023-03-11"},"Fine-Tuning"),", ",(0,l.kt)("a",{parentName:"li",href:"/docs/IoT-and-Machine-Learning/ML/2023-03-16-tensorflow-transfer-learning-scaling/2023-03-16"},"Scaling"))),(0,l.kt)("h1",{id:"tensorflow-transfer-learning"},"Tensorflow Transfer Learning"),(0,l.kt)("h2",{id:"model-scaling"},"Model Scaling"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Pretraining EfficientNetB0 (10% of Dataset with 10 Classes)"),(0,l.kt)("li",{parentName:"ol"},"Fine-Tuning (100% of Dataset with 10 Classes)"),(0,l.kt)("li",{parentName:"ol"},"Scaling the Model to all 101 Classes (10% of Dataset with 101 Classes)")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import datetime\nimport matplotlib.image as mpimg\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport os\nimport pandas as pd\nimport random\nfrom sklearn.metrics import accuracy_score, classification_report\nimport tensorflow as tf\nfrom tensorflow.keras.utils import image_dataset_from_directory\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# export helper functions from above into helper script\nfrom helper import (create_tensorboard_callback,\n                    create_checkpoint_callback,\n                    plot_accuracy_curves,\n                    combine_training_curves,\n                    data_augmentation_layer_no_rescaling,\n                    plot_confusion_matrix)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# global variables\nSEED = 42\nBATCH_SIZE = 32\nIMG_SHAPE = (224, 224)\n")),(0,l.kt)("h3",{id:"get-data"},"Get Data"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# preparing datasets\n# wget https://storage.googleapis.com/ztm_tf_course/food_vision/101_food_classes_10_percent.zip\n\ntraining_directory = \"../datasets/101_food_classes_10_percent/train\"\ntesting_directory = \"../datasets/101_food_classes_10_percent/test\"\n\ntraining_data_101_10 = image_dataset_from_directory(training_directory,\n                                              labels='inferred',\n                                              label_mode='categorical',\n                                              seed=SEED,\n                                              shuffle=True,\n                                              image_size=IMG_SHAPE,\n                                              batch_size=BATCH_SIZE)\n\ntesting_data_101_10 = image_dataset_from_directory(testing_directory,\n                                              labels='inferred',\n                                              label_mode='categorical',\n                                              seed=SEED,\n                                              shuffle=False,\n                                              image_size=IMG_SHAPE,\n                                              batch_size=BATCH_SIZE)\n\n# get class names\nclass_names_101_10 = training_data_101_10.class_names\nlen(class_names_101_10), class_names_101_10\n\n# Found 7575 files belonging to 101 classes.\n# Found 25250 files belonging to 101 classes.\n\n# (101,\n#  ['apple_pie',\n#   'baby_back_ribs',\n#   'baklava',\n#   'beef_carpaccio',\n#   'beef_tartare',\n#   'beet_salad',\n#   'beignets',\n#   'bibimbap',\n#   'bread_pudding',\n#   'breakfast_burrito',\n#   'bruschetta',\n#   'caesar_salad',\n#   'cannoli',\n#   'caprese_salad',\n#   'carrot_cake',\n#   'ceviche',\n#   'cheese_plate',\n#   'cheesecake',\n#   'chicken_curry',\n#   'chicken_quesadilla',\n#   'chicken_wings',\n#   'chocolate_cake',\n#   'chocolate_mousse',\n#   'churros',\n#   'clam_chowder',\n#   'club_sandwich',\n#   'crab_cakes',\n#   'creme_brulee',\n#   'croque_madame',\n#   'cup_cakes',\n#   'deviled_eggs',\n#   'donuts',\n#   'dumplings',\n#   'edamame',\n#   'eggs_benedict',\n#   'escargots',\n#   'falafel',\n#   'filet_mignon',\n#   'fish_and_chips',\n#   'foie_gras',\n#   'french_fries',\n#   'french_onion_soup',\n#   'french_toast',\n#   'fried_calamari',\n#   'fried_rice',\n#   'frozen_yogurt',\n#   'garlic_bread',\n#   'gnocchi',\n#   'greek_salad',\n#   'grilled_cheese_sandwich',\n#   'grilled_salmon',\n#   'guacamole',\n#   'gyoza',\n#   'hamburger',\n#   'hot_and_sour_soup',\n#   'hot_dog',\n#   'huevos_rancheros',\n#   'hummus',\n#   'ice_cream',\n#   'lasagna',\n#   'lobster_bisque',\n#   'lobster_roll_sandwich',\n#   'macaroni_and_cheese',\n#   'macarons',\n#   'miso_soup',\n#   'mussels',\n#   'nachos',\n#   'omelette',\n#   'onion_rings',\n#   'oysters',\n#   'pad_thai',\n#   'paella',\n#   'pancakes',\n#   'panna_cotta',\n#   'peking_duck',\n#   'pho',\n#   'pizza',\n#   'pork_chop',\n#   'poutine',\n#   'prime_rib',\n#   'pulled_pork_sandwich',\n#   'ramen',\n#   'ravioli',\n#   'red_velvet_cake',\n#   'risotto',\n#   'samosa',\n#   'sashimi',\n#   'scallops',\n#   'seaweed_salad',\n#   'shrimp_and_grits',\n#   'spaghetti_bolognese',\n#   'spaghetti_carbonara',\n#   'spring_rolls',\n#   'steak',\n#   'strawberry_shortcake',\n#   'sushi',\n#   'tacos',\n#   'takoyaki',\n#   'tiramisu',\n#   'tuna_tartare',\n#   'waffles'])\n")),(0,l.kt)("h3",{id:"model-building-and-training"},"Model Building and Training"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# create callbacks from helper.py\n## checkpoint callback\ncheckpoint_callback = create_checkpoint_callback(\n    dir_name='../checkpoints/transfer_learning_scaling',\n    experiment_name='101_classes_10_percent_dataset')\n\n## tensorboard callback\ntensorboard_callback = create_tensorboard_callback(\n    dir_name='../tensorboard/transfer_learning_scaling',\n    experiment_name='101_classes_10_percent_dataset')\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# get base model from keras applications\nbase_model = tf.keras.applications.efficientnet_v2.EfficientNetV2B0(\n    include_top=False\n)\nbase_model.trainable = False\n\n# build model using keras functional API\ninput_layer = tf.keras.layers.Input(shape=IMG_SHAPE+(3,), name='input_layer')\n# use image augmentation layer from helper.py\ndata = data_augmentation_layer_no_rescaling(input_layer)\n# run in inference mode so batchnorm statistics don't get updated\n# even after unfreezing the base model for fine-tuning\ndata = base_model(data, training=False)\ndata = tf.keras.layers.GlobalAveragePooling2D(name=\"global_average_pooling_layer\")(data)\noutput_layer = tf.keras.layers.Dense(len(class_names_101_10), activation=\"softmax\", name=\"output_layer\")(data)\n\nmodel = tf.keras.Model(input_layer, output_layer)\n\n# compile the model\nmodel.compile(loss='categorical_crossentropy',\n               optimizer=tf.keras.optimizers.Adam(),\n               metrics=['accuracy'])\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# fit the model\ntf.random.set_seed(SEED)\n## training epochs before fine-tuning\npretraining_epochs = 5\n\nhistory_model = model.fit(\n                training_data_101_10,\n                epochs=pretraining_epochs,\n                steps_per_epoch=len(training_data_101_10),\n                validation_data=testing_data_101_10,\n                # evaluate performance on 15% of the testing dataset\n                validation_steps=int(0.15 * len(testing_data_101_10)),\n                callbacks=[tensorboard_callback,\n                           checkpoint_callback])\n\n# Epoch 5/5\n# 73s 307ms/step - loss: 1.5557 - accuracy: 0.6176 - val_loss: 1.8671 - val_accuracy: 0.5246\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# evaluate performance on whole dataset\npre_training_results = model.evaluate(testing_data_101_10)\nprint(pre_training_results)\n\n# [1.5907552242279053, 0.5817425847053528]\n")),(0,l.kt)("h3",{id:"fine-tuning-the-model"},"Fine-tuning the Model"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# unfreeze entire model\nbase_model.trainable = True\n\n# keep only the last 5 layers trainable\nfor layer in base_model.layers[:-5]:\n    layer.trainable = False\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# list all layers in model\nfor layer in model.layers:\n    print(layer, layer.trainable)\n    \n# <keras.engine.input_layer.InputLayer object at 0x7f695c39b370> True\n# <keras.engine.sequential.Sequential object at 0x7f695c39a260> True\n# <keras.engine.functional.Functional object at 0x7f6943f0d300> True\n# <keras.layers.pooling.global_average_pooling2d.GlobalAveragePooling2D object at 0x7f6943f4e830> True\n# <keras.layers.core.dense.Dense object at 0x7f69400c0520> True\n    \n# layer 2 is the now only partly unfrozen imported model (efficientnetb0)\nfor layer_number, layer in enumerate(model.layers[2].layers):\n    print(layer_number, layer.name, layer.trainable)\n    \n# 0 input_1 False\n# 1 rescaling False\n# 2 normalization False\n# ...\n# 262 block6h_se_excite False\n# 263 block6h_project_conv False\n# 264 block6h_project_bn False\n# 265 block6h_drop True\n# 266 block6h_add True\n# 267 top_conv True\n# 268 top_bn True\n# 269 top_activation True\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# recompile the model with the new basemodel\n### to prevent overfitting / to better hold on to pre-training\n### the learning rate during fine-tuning should be lowered 10x\n### default Adam(lr)=1e-3 => 1e-4\nmodel.compile(loss='categorical_crossentropy',\n               optimizer=tf.keras.optimizers.Adam(learning_rate=1e-4),\n               metrics=['accuracy'])\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# continue training\ntf.random.set_seed(SEED)\nfine_tuning_epochs = pretraining_epochs + 5\n\nhistory_fine_tuning_model = model.fit(\n                training_data_101_10,\n                epochs=fine_tuning_epochs,\n                # start from last pre-training checkpoint\n                # training from epoch 6 - 10\n                initial_epoch = history_model.epoch[-1],\n                steps_per_epoch=len(training_data_101_10),\n                validation_data=testing_data_101_10,\n                # evaluate performance on 15% of the testing dataset\n                validation_steps=int(0.15 * len(testing_data_101_10)),\n                callbacks=[tensorboard_callback,\n                           checkpoint_callback])\n\n# Epoch 10/10\n# 70s 294ms/step - loss: 1.3161 - accuracy: 0.6547 - val_loss: 1.7494 - val_accuracy: 0.5469\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# evaluate performance on whole dataset\nfine_tuning_results = model.evaluate(testing_data_101_10)\nprint(fine_tuning_results)\n\n# pre_training_results\n# [1.5907552242279053, 0.5817425847053528]\n\n# fine_tuning_results\n# [1.513363242149353, 0.5931881070137024]\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'# print accuracy curves\nplot_accuracy_curves(history_model, "Pre-Training", history_fine_tuning_model, "Fine-Tuning")\n')),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Transfer Learning",src:e(57162).Z,width:"990",height:"505"})),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# the validation accuracy increase keeps slowing while training\n# accuracy goes up this points to an overfitting problem\ncombine_training_curves(history_model, history_fine_tuning_model, pretraining_epochs=5)\n")),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Transfer Learning",src:e(22617).Z,width:"671",height:"701"})),(0,l.kt)("p",null,"The model keeps improving but there is a growing gap between training and validation. This means that the model is overfitting the test data. Leading to worse results during the validation run."),(0,l.kt)("h3",{id:"saving-and-restoring-the-trained-model"},"Saving and Restoring the Trained Model"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'# saving the model\nmodels_path = "../saved_models/model_101_classes_10_percent_training_data"\n# model.save(models_path)\n# INFO:tensorflow:Assets written to: ../saved_models/model_101_classes_10_percent_training_data/assets\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# load the model\nloaded_model = tf.keras.models.load_model(models_path)\n\n# verify the model was loaded correctly\nloaded_model_results = loaded_model.evaluate(testing_data_101_10)\nprint(loaded_model_results)\n\n# fine_tuning_results to compare\n# [1.513363242149353, 0.5931881070137024]\n\n# loaded_model_results are the same - it worked!\n# [1.513363242149353, 0.5931881070137024]\n")),(0,l.kt)("h3",{id:"evaluating-predictions"},"Evaluating Predictions"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# making predictions on all 25250 validation images for 101 classes\ntest_prediction_probabilities = loaded_model.predict(testing_data_101_10, verbose=1)\nprint(test_prediction_probabilities.shape)\n# (25250, 101)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# display prediction probabilities for the first image\nprint(test_prediction_probabilities[:1])\n\n# [[2.03596894e-03 3.65167543e-05 2.17581794e-01 5.17010115e-08\n#   3.32512741e-06 2.29585039e-05 2.71960180e-05 1.80260338e-06\n#   5.30003861e-04 2.73975573e-04 1.06404877e-05 6.97153791e-06\n#   1.50283886e-04 2.78270818e-06 3.42393899e-03 2.25132797e-02\n#   2.40503272e-04 2.13146021e-04 1.64284266e-03 9.58332021e-05\n#   1.32550078e-03 2.55020423e-05 7.39933093e-05 1.92245971e-05\n#   8.13204853e-04 1.93982956e-03 8.89056770e-04 6.18012882e-06\n#   7.59714108e-04 8.36205290e-05 3.92342417e-06 2.00494527e-04\n#   2.51588156e-03 6.87084466e-05 7.40043120e-04 4.45897895e-05\n#   4.05072642e-04 4.21193661e-04 1.59948692e-02 2.43602030e-04\n#   1.10967096e-03 6.28277950e-04 5.56461528e-05 6.36936966e-05\n#   4.16825242e-05 8.82518361e-05 1.96498135e-04 4.21540433e-04\n#   1.76622216e-05 1.82788055e-02 4.08739754e-04 2.77833984e-04\n#   6.94064796e-02 7.92958029e-03 2.63221909e-06 3.67652555e-03\n#   1.11585250e-04 1.25307284e-04 5.01443865e-03 2.33431001e-05\n#   9.54853363e-07 6.14999968e-04 1.00202730e-03 6.56907330e-04\n#   1.59870205e-03 9.99520998e-05 5.11349281e-05 3.93474428e-03\n#   1.97406291e-04 3.40633960e-05 8.98707913e-06 1.06544203e-05\n#   5.15696120e-05 1.98621456e-05 5.94679965e-04 3.69085114e-06\n#   1.09817571e-04 2.08929856e-03 1.73596389e-04 2.66812931e-05\n#   1.44478225e-03 1.20244418e-04 1.30806561e-03 2.10159646e-06\n#   2.99385400e-04 5.72092354e-01 2.51285546e-02 1.11975627e-04\n#   4.98035988e-05 2.09982645e-05 3.76860640e-08 3.77362909e-07\n#   1.97288580e-03 1.36366225e-05 2.58001910e-05 1.10756594e-03\n#   6.64085674e-04 9.06130299e-05 4.01897114e-06 8.89552932e-04\n#   1.07155865e-04]]\n\n# the highest probabilty is `5.72092354e-01`\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'# get position of the class with the highest probability\narr = np.array(test_prediction_probabilities[:1])\npredicted_class = np.argmax(arr)\nprint(f"INFO :: The predicted Class Number is: {predicted_class}")\n# INFO :: The predicted Class Number is: 85\nprint(f"INFO :: The predicted Class is: {class_names_101_10[predicted_class]}")\n# INFO :: The predicted Class is: samosa\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# get all predicted classes\npredicted_classes = test_prediction_probabilities.argmax(axis=1)\n\n# there are predicted classes for all validation images\nprint(predicted_classes.shape)\n# (25250,)\n\n# print the predicted classes for the first 10 images\nprint(predicted_classes[:10])\n# [85  0  0  8  8 78 29 46  0  0]\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# get all true labels from batched dataset\nprint(testing_data_101_10)\n# <BatchDataset element_spec=(TensorSpec(shape=(None, 224, 224, 3), dtype=tf.float32,name=None),\n#                            TensorSpec(shape=(None, 101), dtype=tf.float32, name=None))>\n\n# get class_names index value from unbatched dataset\ny_labels = []\nfor images, labels in testing_data_101_10.unbatch():\n    y_labels.append(labels.numpy().argmax())\n\n# display first result\nprint(y_labels[:10])\n\n# these are the true labels and should be identical to `predicted_classes[:10]` above\n# [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n\n# training dataset was not shuffled -> all 10 belong to the same class:\n# print(class_names_101_10[0])\n# apple_pie\n")),(0,l.kt)("h4",{id:"accuracy-score"},"Accuracy Score"),(0,l.kt)("p",null,"Compare the predicted classes to the true classes to get the accuracy score for the model."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# use sklearn to determin the accuracy\nsk_accuracy = accuracy_score(y_true=y_labels,\n                            y_pred=predicted_classes)\nprint(sk_accuracy)\n# 0.5931881188118812 => same as validation_accuracy from tensorflow\n")),(0,l.kt)("h4",{id:"confusion-matrix"},"Confusion Matrix"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"plot_confusion_matrix(y_pred=y_labels, y_true=predicted_classes, classes=class_names_101_10)\n")),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Transfer Learning",src:e(24395).Z,width:"1099",height:"952"}),"\n",(0,l.kt)("img",{alt:"Transfer Learning",src:e(55791).Z,width:"200",height:"200"})),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"plot_confusion_matrix(y_pred=y_labels,\n                      y_true=predicted_classes,\n                      classes=class_names_101_10,\n                      figsize = (88, 88),\n                      text_size=8)\n")),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Transfer Learning",src:e(54304).Z,width:"6373",height:"6804"})),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"open in new tab to zoom in")),(0,l.kt)("p",null,"We can see that the results are overall impressive. The ",(0,l.kt)("inlineCode",{parentName:"p"},"59.3%")," accuracy is mostly based on a couple of classes that might be hard to distinguish in general:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"spaghetti_carbonara <-> spaghetti_bolongnese"),(0,l.kt)("li",{parentName:"ul"},"prime_rib <-> steak"),(0,l.kt)("li",{parentName:"ul"},"steak <-> filet_mignon"),(0,l.kt)("li",{parentName:"ul"},"chicken_quesadilla <-> breakfast_burrito"),(0,l.kt)("li",{parentName:"ul"},"hamburger <-> pulled_pork_sandwich"),(0,l.kt)("li",{parentName:"ul"},"club_sandwich <-> grilled_cheese_sandwich")),(0,l.kt)("p",null,"..."),(0,l.kt)("h4",{id:"scikit-learn-classification-report"},"SciKit Learn Classification Report"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"print(classification_report(y_true=y_labels,\n                            y_pred=predicted_classes))\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"class #"),(0,l.kt)("th",{parentName:"tr",align:null},"classname"),(0,l.kt)("th",{parentName:"tr",align:null},"precision"),(0,l.kt)("th",{parentName:"tr",align:null},"recall"),(0,l.kt)("th",{parentName:"tr",align:null},"f1-score"),(0,l.kt)("th",{parentName:"tr",align:null},"support"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"apple_pie"),(0,l.kt)("td",{parentName:"tr",align:null},"0.36"),(0,l.kt)("td",{parentName:"tr",align:null},"0.25"),(0,l.kt)("td",{parentName:"tr",align:null},"0.29"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"baby_back_ribs"),(0,l.kt)("td",{parentName:"tr",align:null},"0.61"),(0,l.kt)("td",{parentName:"tr",align:null},"0.64"),(0,l.kt)("td",{parentName:"tr",align:null},"0.62"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"baklava"),(0,l.kt)("td",{parentName:"tr",align:null},"0.67"),(0,l.kt)("td",{parentName:"tr",align:null},"0.55"),(0,l.kt)("td",{parentName:"tr",align:null},"0.60"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"beef_carpaccio"),(0,l.kt)("td",{parentName:"tr",align:null},"0.69"),(0,l.kt)("td",{parentName:"tr",align:null},"0.57"),(0,l.kt)("td",{parentName:"tr",align:null},"0.62"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"beef_tartare"),(0,l.kt)("td",{parentName:"tr",align:null},"0.65"),(0,l.kt)("td",{parentName:"tr",align:null},"0.31"),(0,l.kt)("td",{parentName:"tr",align:null},"0.42"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"beet_salad"),(0,l.kt)("td",{parentName:"tr",align:null},"0.65"),(0,l.kt)("td",{parentName:"tr",align:null},"0.32"),(0,l.kt)("td",{parentName:"tr",align:null},"0.43"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"6"),(0,l.kt)("td",{parentName:"tr",align:null},"beignets"),(0,l.kt)("td",{parentName:"tr",align:null},"0.86"),(0,l.kt)("td",{parentName:"tr",align:null},"0.71"),(0,l.kt)("td",{parentName:"tr",align:null},"0.78"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"7"),(0,l.kt)("td",{parentName:"tr",align:null},"bibimbap"),(0,l.kt)("td",{parentName:"tr",align:null},"0.85"),(0,l.kt)("td",{parentName:"tr",align:null},"0.70"),(0,l.kt)("td",{parentName:"tr",align:null},"0.76"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"8"),(0,l.kt)("td",{parentName:"tr",align:null},"bread_pudding"),(0,l.kt)("td",{parentName:"tr",align:null},"0.30"),(0,l.kt)("td",{parentName:"tr",align:null},"0.52"),(0,l.kt)("td",{parentName:"tr",align:null},"0.38"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"9"),(0,l.kt)("td",{parentName:"tr",align:null},"breakfast_burrito"),(0,l.kt)("td",{parentName:"tr",align:null},"0.32"),(0,l.kt)("td",{parentName:"tr",align:null},"0.75"),(0,l.kt)("td",{parentName:"tr",align:null},"0.45"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"10"),(0,l.kt)("td",{parentName:"tr",align:null},"bruschetta"),(0,l.kt)("td",{parentName:"tr",align:null},"0.48"),(0,l.kt)("td",{parentName:"tr",align:null},"0.52"),(0,l.kt)("td",{parentName:"tr",align:null},"0.50"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"11"),(0,l.kt)("td",{parentName:"tr",align:null},"caesar_salad"),(0,l.kt)("td",{parentName:"tr",align:null},"0.63"),(0,l.kt)("td",{parentName:"tr",align:null},"0.62"),(0,l.kt)("td",{parentName:"tr",align:null},"0.62"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"12"),(0,l.kt)("td",{parentName:"tr",align:null},"cannoli"),(0,l.kt)("td",{parentName:"tr",align:null},"0.58"),(0,l.kt)("td",{parentName:"tr",align:null},"0.66"),(0,l.kt)("td",{parentName:"tr",align:null},"0.62"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"13"),(0,l.kt)("td",{parentName:"tr",align:null},"caprese_salad"),(0,l.kt)("td",{parentName:"tr",align:null},"0.53"),(0,l.kt)("td",{parentName:"tr",align:null},"0.60"),(0,l.kt)("td",{parentName:"tr",align:null},"0.56"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"14"),(0,l.kt)("td",{parentName:"tr",align:null},"carrot_cake"),(0,l.kt)("td",{parentName:"tr",align:null},"0.50"),(0,l.kt)("td",{parentName:"tr",align:null},"0.54"),(0,l.kt)("td",{parentName:"tr",align:null},"0.52"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"15"),(0,l.kt)("td",{parentName:"tr",align:null},"ceviche"),(0,l.kt)("td",{parentName:"tr",align:null},"0.36"),(0,l.kt)("td",{parentName:"tr",align:null},"0.31"),(0,l.kt)("td",{parentName:"tr",align:null},"0.33"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"16"),(0,l.kt)("td",{parentName:"tr",align:null},"cheese_plate"),(0,l.kt)("td",{parentName:"tr",align:null},"0.67"),(0,l.kt)("td",{parentName:"tr",align:null},"0.49"),(0,l.kt)("td",{parentName:"tr",align:null},"0.56"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"17"),(0,l.kt)("td",{parentName:"tr",align:null},"cheesecake"),(0,l.kt)("td",{parentName:"tr",align:null},"0.36"),(0,l.kt)("td",{parentName:"tr",align:null},"0.42"),(0,l.kt)("td",{parentName:"tr",align:null},"0.39"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"18"),(0,l.kt)("td",{parentName:"tr",align:null},"chicken_curry"),(0,l.kt)("td",{parentName:"tr",align:null},"0.65"),(0,l.kt)("td",{parentName:"tr",align:null},"0.35"),(0,l.kt)("td",{parentName:"tr",align:null},"0.46"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"19"),(0,l.kt)("td",{parentName:"tr",align:null},"chicken_quesadilla"),(0,l.kt)("td",{parentName:"tr",align:null},"0.70"),(0,l.kt)("td",{parentName:"tr",align:null},"0.38"),(0,l.kt)("td",{parentName:"tr",align:null},"0.49"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"20"),(0,l.kt)("td",{parentName:"tr",align:null},"chicken_wings"),(0,l.kt)("td",{parentName:"tr",align:null},"0.71"),(0,l.kt)("td",{parentName:"tr",align:null},"0.70"),(0,l.kt)("td",{parentName:"tr",align:null},"0.70"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"21"),(0,l.kt)("td",{parentName:"tr",align:null},"chocolate_cake"),(0,l.kt)("td",{parentName:"tr",align:null},"0.61"),(0,l.kt)("td",{parentName:"tr",align:null},"0.52"),(0,l.kt)("td",{parentName:"tr",align:null},"0.56"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"22"),(0,l.kt)("td",{parentName:"tr",align:null},"chocolate_mousse"),(0,l.kt)("td",{parentName:"tr",align:null},"0.44"),(0,l.kt)("td",{parentName:"tr",align:null},"0.35"),(0,l.kt)("td",{parentName:"tr",align:null},"0.39"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"23"),(0,l.kt)("td",{parentName:"tr",align:null},"churros"),(0,l.kt)("td",{parentName:"tr",align:null},"0.82"),(0,l.kt)("td",{parentName:"tr",align:null},"0.64"),(0,l.kt)("td",{parentName:"tr",align:null},"0.72"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"24"),(0,l.kt)("td",{parentName:"tr",align:null},"clam_chowder"),(0,l.kt)("td",{parentName:"tr",align:null},"0.71"),(0,l.kt)("td",{parentName:"tr",align:null},"0.78"),(0,l.kt)("td",{parentName:"tr",align:null},"0.74"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"25"),(0,l.kt)("td",{parentName:"tr",align:null},"club_sandwich"),(0,l.kt)("td",{parentName:"tr",align:null},"0.65"),(0,l.kt)("td",{parentName:"tr",align:null},"0.56"),(0,l.kt)("td",{parentName:"tr",align:null},"0.60"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"26"),(0,l.kt)("td",{parentName:"tr",align:null},"crab_cakes"),(0,l.kt)("td",{parentName:"tr",align:null},"0.36"),(0,l.kt)("td",{parentName:"tr",align:null},"0.55"),(0,l.kt)("td",{parentName:"tr",align:null},"0.43"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"27"),(0,l.kt)("td",{parentName:"tr",align:null},"creme_brulee"),(0,l.kt)("td",{parentName:"tr",align:null},"0.75"),(0,l.kt)("td",{parentName:"tr",align:null},"0.72"),(0,l.kt)("td",{parentName:"tr",align:null},"0.73"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"28"),(0,l.kt)("td",{parentName:"tr",align:null},"croque_madame"),(0,l.kt)("td",{parentName:"tr",align:null},"0.58"),(0,l.kt)("td",{parentName:"tr",align:null},"0.69"),(0,l.kt)("td",{parentName:"tr",align:null},"0.63"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"29"),(0,l.kt)("td",{parentName:"tr",align:null},"cup_cakes"),(0,l.kt)("td",{parentName:"tr",align:null},"0.66"),(0,l.kt)("td",{parentName:"tr",align:null},"0.82"),(0,l.kt)("td",{parentName:"tr",align:null},"0.73"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"30"),(0,l.kt)("td",{parentName:"tr",align:null},"deviled_eggs"),(0,l.kt)("td",{parentName:"tr",align:null},"0.89"),(0,l.kt)("td",{parentName:"tr",align:null},"0.55"),(0,l.kt)("td",{parentName:"tr",align:null},"0.68"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"31"),(0,l.kt)("td",{parentName:"tr",align:null},"donuts"),(0,l.kt)("td",{parentName:"tr",align:null},"0.74"),(0,l.kt)("td",{parentName:"tr",align:null},"0.74"),(0,l.kt)("td",{parentName:"tr",align:null},"0.74"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"32"),(0,l.kt)("td",{parentName:"tr",align:null},"dumplings"),(0,l.kt)("td",{parentName:"tr",align:null},"0.75"),(0,l.kt)("td",{parentName:"tr",align:null},"0.86"),(0,l.kt)("td",{parentName:"tr",align:null},"0.80"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"33"),(0,l.kt)("td",{parentName:"tr",align:null},"edamame"),(0,l.kt)("td",{parentName:"tr",align:null},"0.94"),(0,l.kt)("td",{parentName:"tr",align:null},"0.98"),(0,l.kt)("td",{parentName:"tr",align:null},"0.96"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"34"),(0,l.kt)("td",{parentName:"tr",align:null},"eggs_benedict"),(0,l.kt)("td",{parentName:"tr",align:null},"0.56"),(0,l.kt)("td",{parentName:"tr",align:null},"0.76"),(0,l.kt)("td",{parentName:"tr",align:null},"0.65"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"35"),(0,l.kt)("td",{parentName:"tr",align:null},"escargots"),(0,l.kt)("td",{parentName:"tr",align:null},"0.69"),(0,l.kt)("td",{parentName:"tr",align:null},"0.64"),(0,l.kt)("td",{parentName:"tr",align:null},"0.66"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"36"),(0,l.kt)("td",{parentName:"tr",align:null},"falafel"),(0,l.kt)("td",{parentName:"tr",align:null},"0.53"),(0,l.kt)("td",{parentName:"tr",align:null},"0.43"),(0,l.kt)("td",{parentName:"tr",align:null},"0.47"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"37"),(0,l.kt)("td",{parentName:"tr",align:null},"filet_mignon"),(0,l.kt)("td",{parentName:"tr",align:null},"0.27"),(0,l.kt)("td",{parentName:"tr",align:null},"0.51"),(0,l.kt)("td",{parentName:"tr",align:null},"0.35"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"38"),(0,l.kt)("td",{parentName:"tr",align:null},"fish_and_chips"),(0,l.kt)("td",{parentName:"tr",align:null},"0.60"),(0,l.kt)("td",{parentName:"tr",align:null},"0.75"),(0,l.kt)("td",{parentName:"tr",align:null},"0.66"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"39"),(0,l.kt)("td",{parentName:"tr",align:null},"foie_gras"),(0,l.kt)("td",{parentName:"tr",align:null},"0.42"),(0,l.kt)("td",{parentName:"tr",align:null},"0.16"),(0,l.kt)("td",{parentName:"tr",align:null},"0.23"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"40"),(0,l.kt)("td",{parentName:"tr",align:null},"french_fries"),(0,l.kt)("td",{parentName:"tr",align:null},"0.80"),(0,l.kt)("td",{parentName:"tr",align:null},"0.74"),(0,l.kt)("td",{parentName:"tr",align:null},"0.77"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"41"),(0,l.kt)("td",{parentName:"tr",align:null},"french_onion_soup"),(0,l.kt)("td",{parentName:"tr",align:null},"0.65"),(0,l.kt)("td",{parentName:"tr",align:null},"0.70"),(0,l.kt)("td",{parentName:"tr",align:null},"0.68"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"42"),(0,l.kt)("td",{parentName:"tr",align:null},"french_toast"),(0,l.kt)("td",{parentName:"tr",align:null},"0.54"),(0,l.kt)("td",{parentName:"tr",align:null},"0.50"),(0,l.kt)("td",{parentName:"tr",align:null},"0.52"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"43"),(0,l.kt)("td",{parentName:"tr",align:null},"fried_calamari"),(0,l.kt)("td",{parentName:"tr",align:null},"0.79"),(0,l.kt)("td",{parentName:"tr",align:null},"0.55"),(0,l.kt)("td",{parentName:"tr",align:null},"0.65"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"44"),(0,l.kt)("td",{parentName:"tr",align:null},"fried_rice"),(0,l.kt)("td",{parentName:"tr",align:null},"0.73"),(0,l.kt)("td",{parentName:"tr",align:null},"0.55"),(0,l.kt)("td",{parentName:"tr",align:null},"0.63"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"45"),(0,l.kt)("td",{parentName:"tr",align:null},"frozen_yogurt"),(0,l.kt)("td",{parentName:"tr",align:null},"0.83"),(0,l.kt)("td",{parentName:"tr",align:null},"0.82"),(0,l.kt)("td",{parentName:"tr",align:null},"0.82"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"46"),(0,l.kt)("td",{parentName:"tr",align:null},"garlic_bread"),(0,l.kt)("td",{parentName:"tr",align:null},"0.53"),(0,l.kt)("td",{parentName:"tr",align:null},"0.62"),(0,l.kt)("td",{parentName:"tr",align:null},"0.57"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"47"),(0,l.kt)("td",{parentName:"tr",align:null},"gnocchi"),(0,l.kt)("td",{parentName:"tr",align:null},"0.30"),(0,l.kt)("td",{parentName:"tr",align:null},"0.56"),(0,l.kt)("td",{parentName:"tr",align:null},"0.39"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"48"),(0,l.kt)("td",{parentName:"tr",align:null},"greek_salad"),(0,l.kt)("td",{parentName:"tr",align:null},"0.56"),(0,l.kt)("td",{parentName:"tr",align:null},"0.66"),(0,l.kt)("td",{parentName:"tr",align:null},"0.61"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"49"),(0,l.kt)("td",{parentName:"tr",align:null},"grilled_cheese_sandwich"),(0,l.kt)("td",{parentName:"tr",align:null},"0.37"),(0,l.kt)("td",{parentName:"tr",align:null},"0.45"),(0,l.kt)("td",{parentName:"tr",align:null},"0.41"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"50"),(0,l.kt)("td",{parentName:"tr",align:null},"grilled_salmon"),(0,l.kt)("td",{parentName:"tr",align:null},"0.53"),(0,l.kt)("td",{parentName:"tr",align:null},"0.34"),(0,l.kt)("td",{parentName:"tr",align:null},"0.42"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"51"),(0,l.kt)("td",{parentName:"tr",align:null},"guacamole"),(0,l.kt)("td",{parentName:"tr",align:null},"0.76"),(0,l.kt)("td",{parentName:"tr",align:null},"0.93"),(0,l.kt)("td",{parentName:"tr",align:null},"0.83"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"52"),(0,l.kt)("td",{parentName:"tr",align:null},"gyoza"),(0,l.kt)("td",{parentName:"tr",align:null},"0.62"),(0,l.kt)("td",{parentName:"tr",align:null},"0.58"),(0,l.kt)("td",{parentName:"tr",align:null},"0.60"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"53"),(0,l.kt)("td",{parentName:"tr",align:null},"hamburger"),(0,l.kt)("td",{parentName:"tr",align:null},"0.49"),(0,l.kt)("td",{parentName:"tr",align:null},"0.79"),(0,l.kt)("td",{parentName:"tr",align:null},"0.61"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"54"),(0,l.kt)("td",{parentName:"tr",align:null},"hot_and_sour_soup"),(0,l.kt)("td",{parentName:"tr",align:null},"0.72"),(0,l.kt)("td",{parentName:"tr",align:null},"0.86"),(0,l.kt)("td",{parentName:"tr",align:null},"0.78"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"55"),(0,l.kt)("td",{parentName:"tr",align:null},"hot_dog"),(0,l.kt)("td",{parentName:"tr",align:null},"0.65"),(0,l.kt)("td",{parentName:"tr",align:null},"0.88"),(0,l.kt)("td",{parentName:"tr",align:null},"0.75"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"56"),(0,l.kt)("td",{parentName:"tr",align:null},"huevos_rancheros"),(0,l.kt)("td",{parentName:"tr",align:null},"0.40"),(0,l.kt)("td",{parentName:"tr",align:null},"0.34"),(0,l.kt)("td",{parentName:"tr",align:null},"0.37"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"57"),(0,l.kt)("td",{parentName:"tr",align:null},"hummus"),(0,l.kt)("td",{parentName:"tr",align:null},"0.70"),(0,l.kt)("td",{parentName:"tr",align:null},"0.36"),(0,l.kt)("td",{parentName:"tr",align:null},"0.48"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"58"),(0,l.kt)("td",{parentName:"tr",align:null},"ice_cream"),(0,l.kt)("td",{parentName:"tr",align:null},"0.66"),(0,l.kt)("td",{parentName:"tr",align:null},"0.66"),(0,l.kt)("td",{parentName:"tr",align:null},"0.66"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"59"),(0,l.kt)("td",{parentName:"tr",align:null},"lasagna"),(0,l.kt)("td",{parentName:"tr",align:null},"0.48"),(0,l.kt)("td",{parentName:"tr",align:null},"0.49"),(0,l.kt)("td",{parentName:"tr",align:null},"0.49"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"60"),(0,l.kt)("td",{parentName:"tr",align:null},"lobster_bisque"),(0,l.kt)("td",{parentName:"tr",align:null},"0.77"),(0,l.kt)("td",{parentName:"tr",align:null},"0.67"),(0,l.kt)("td",{parentName:"tr",align:null},"0.71"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"61"),(0,l.kt)("td",{parentName:"tr",align:null},"lobster_roll_sandwich"),(0,l.kt)("td",{parentName:"tr",align:null},"0.69"),(0,l.kt)("td",{parentName:"tr",align:null},"0.64"),(0,l.kt)("td",{parentName:"tr",align:null},"0.66"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"62"),(0,l.kt)("td",{parentName:"tr",align:null},"macaroni_and_cheese"),(0,l.kt)("td",{parentName:"tr",align:null},"0.66"),(0,l.kt)("td",{parentName:"tr",align:null},"0.50"),(0,l.kt)("td",{parentName:"tr",align:null},"0.57"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"63"),(0,l.kt)("td",{parentName:"tr",align:null},"macarons"),(0,l.kt)("td",{parentName:"tr",align:null},"0.97"),(0,l.kt)("td",{parentName:"tr",align:null},"0.80"),(0,l.kt)("td",{parentName:"tr",align:null},"0.88"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"64"),(0,l.kt)("td",{parentName:"tr",align:null},"miso_soup"),(0,l.kt)("td",{parentName:"tr",align:null},"0.74"),(0,l.kt)("td",{parentName:"tr",align:null},"0.87"),(0,l.kt)("td",{parentName:"tr",align:null},"0.80"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"65"),(0,l.kt)("td",{parentName:"tr",align:null},"mussels"),(0,l.kt)("td",{parentName:"tr",align:null},"0.88"),(0,l.kt)("td",{parentName:"tr",align:null},"0.81"),(0,l.kt)("td",{parentName:"tr",align:null},"0.84"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"66"),(0,l.kt)("td",{parentName:"tr",align:null},"nachos"),(0,l.kt)("td",{parentName:"tr",align:null},"0.75"),(0,l.kt)("td",{parentName:"tr",align:null},"0.23"),(0,l.kt)("td",{parentName:"tr",align:null},"0.35"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"67"),(0,l.kt)("td",{parentName:"tr",align:null},"omelette"),(0,l.kt)("td",{parentName:"tr",align:null},"0.41"),(0,l.kt)("td",{parentName:"tr",align:null},"0.43"),(0,l.kt)("td",{parentName:"tr",align:null},"0.42"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"68"),(0,l.kt)("td",{parentName:"tr",align:null},"onion_rings"),(0,l.kt)("td",{parentName:"tr",align:null},"0.73"),(0,l.kt)("td",{parentName:"tr",align:null},"0.88"),(0,l.kt)("td",{parentName:"tr",align:null},"0.80"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"69"),(0,l.kt)("td",{parentName:"tr",align:null},"oysters"),(0,l.kt)("td",{parentName:"tr",align:null},"0.83"),(0,l.kt)("td",{parentName:"tr",align:null},"0.85"),(0,l.kt)("td",{parentName:"tr",align:null},"0.84"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"70"),(0,l.kt)("td",{parentName:"tr",align:null},"pad_thai"),(0,l.kt)("td",{parentName:"tr",align:null},"0.74"),(0,l.kt)("td",{parentName:"tr",align:null},"0.80"),(0,l.kt)("td",{parentName:"tr",align:null},"0.77"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"71"),(0,l.kt)("td",{parentName:"tr",align:null},"paella"),(0,l.kt)("td",{parentName:"tr",align:null},"0.86"),(0,l.kt)("td",{parentName:"tr",align:null},"0.45"),(0,l.kt)("td",{parentName:"tr",align:null},"0.59"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"72"),(0,l.kt)("td",{parentName:"tr",align:null},"pancakes"),(0,l.kt)("td",{parentName:"tr",align:null},"0.66"),(0,l.kt)("td",{parentName:"tr",align:null},"0.62"),(0,l.kt)("td",{parentName:"tr",align:null},"0.64"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"73"),(0,l.kt)("td",{parentName:"tr",align:null},"panna_cotta"),(0,l.kt)("td",{parentName:"tr",align:null},"0.56"),(0,l.kt)("td",{parentName:"tr",align:null},"0.44"),(0,l.kt)("td",{parentName:"tr",align:null},"0.49"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"74"),(0,l.kt)("td",{parentName:"tr",align:null},"peking_duck"),(0,l.kt)("td",{parentName:"tr",align:null},"0.58"),(0,l.kt)("td",{parentName:"tr",align:null},"0.59"),(0,l.kt)("td",{parentName:"tr",align:null},"0.59"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"75"),(0,l.kt)("td",{parentName:"tr",align:null},"pho"),(0,l.kt)("td",{parentName:"tr",align:null},"0.83"),(0,l.kt)("td",{parentName:"tr",align:null},"0.88"),(0,l.kt)("td",{parentName:"tr",align:null},"0.85"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"76"),(0,l.kt)("td",{parentName:"tr",align:null},"pizza"),(0,l.kt)("td",{parentName:"tr",align:null},"0.64"),(0,l.kt)("td",{parentName:"tr",align:null},"0.90"),(0,l.kt)("td",{parentName:"tr",align:null},"0.75"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"77"),(0,l.kt)("td",{parentName:"tr",align:null},"pork_chop"),(0,l.kt)("td",{parentName:"tr",align:null},"0.32"),(0,l.kt)("td",{parentName:"tr",align:null},"0.30"),(0,l.kt)("td",{parentName:"tr",align:null},"0.31"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"78"),(0,l.kt)("td",{parentName:"tr",align:null},"poutine"),(0,l.kt)("td",{parentName:"tr",align:null},"0.61"),(0,l.kt)("td",{parentName:"tr",align:null},"0.68"),(0,l.kt)("td",{parentName:"tr",align:null},"0.65"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"79"),(0,l.kt)("td",{parentName:"tr",align:null},"prime_rib"),(0,l.kt)("td",{parentName:"tr",align:null},"0.45"),(0,l.kt)("td",{parentName:"tr",align:null},"0.82"),(0,l.kt)("td",{parentName:"tr",align:null},"0.58"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"80"),(0,l.kt)("td",{parentName:"tr",align:null},"pulled_pork_sandwich"),(0,l.kt)("td",{parentName:"tr",align:null},"0.62"),(0,l.kt)("td",{parentName:"tr",align:null},"0.52"),(0,l.kt)("td",{parentName:"tr",align:null},"0.56"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"81"),(0,l.kt)("td",{parentName:"tr",align:null},"ramen"),(0,l.kt)("td",{parentName:"tr",align:null},"0.48"),(0,l.kt)("td",{parentName:"tr",align:null},"0.77"),(0,l.kt)("td",{parentName:"tr",align:null},"0.59"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"82"),(0,l.kt)("td",{parentName:"tr",align:null},"ravioli"),(0,l.kt)("td",{parentName:"tr",align:null},"0.36"),(0,l.kt)("td",{parentName:"tr",align:null},"0.29"),(0,l.kt)("td",{parentName:"tr",align:null},"0.32"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"83"),(0,l.kt)("td",{parentName:"tr",align:null},"red_velvet_cake"),(0,l.kt)("td",{parentName:"tr",align:null},"0.69"),(0,l.kt)("td",{parentName:"tr",align:null},"0.65"),(0,l.kt)("td",{parentName:"tr",align:null},"0.67"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"84"),(0,l.kt)("td",{parentName:"tr",align:null},"risotto"),(0,l.kt)("td",{parentName:"tr",align:null},"0.43"),(0,l.kt)("td",{parentName:"tr",align:null},"0.37"),(0,l.kt)("td",{parentName:"tr",align:null},"0.40"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"85"),(0,l.kt)("td",{parentName:"tr",align:null},"samosa"),(0,l.kt)("td",{parentName:"tr",align:null},"0.48"),(0,l.kt)("td",{parentName:"tr",align:null},"0.66"),(0,l.kt)("td",{parentName:"tr",align:null},"0.55"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"86"),(0,l.kt)("td",{parentName:"tr",align:null},"sashimi"),(0,l.kt)("td",{parentName:"tr",align:null},"0.88"),(0,l.kt)("td",{parentName:"tr",align:null},"0.77"),(0,l.kt)("td",{parentName:"tr",align:null},"0.82"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"87"),(0,l.kt)("td",{parentName:"tr",align:null},"scallops"),(0,l.kt)("td",{parentName:"tr",align:null},"0.37"),(0,l.kt)("td",{parentName:"tr",align:null},"0.33"),(0,l.kt)("td",{parentName:"tr",align:null},"0.35"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"88"),(0,l.kt)("td",{parentName:"tr",align:null},"seaweed_salad"),(0,l.kt)("td",{parentName:"tr",align:null},"0.91"),(0,l.kt)("td",{parentName:"tr",align:null},"0.77"),(0,l.kt)("td",{parentName:"tr",align:null},"0.83"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"89"),(0,l.kt)("td",{parentName:"tr",align:null},"shrimp_and_grits"),(0,l.kt)("td",{parentName:"tr",align:null},"0.44"),(0,l.kt)("td",{parentName:"tr",align:null},"0.43"),(0,l.kt)("td",{parentName:"tr",align:null},"0.43"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"90"),(0,l.kt)("td",{parentName:"tr",align:null},"spaghetti_bolognese"),(0,l.kt)("td",{parentName:"tr",align:null},"0.82"),(0,l.kt)("td",{parentName:"tr",align:null},"0.56"),(0,l.kt)("td",{parentName:"tr",align:null},"0.66"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"91"),(0,l.kt)("td",{parentName:"tr",align:null},"spaghetti_carbonara"),(0,l.kt)("td",{parentName:"tr",align:null},"0.66"),(0,l.kt)("td",{parentName:"tr",align:null},"0.96"),(0,l.kt)("td",{parentName:"tr",align:null},"0.78"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"92"),(0,l.kt)("td",{parentName:"tr",align:null},"spring_rolls"),(0,l.kt)("td",{parentName:"tr",align:null},"0.61"),(0,l.kt)("td",{parentName:"tr",align:null},"0.64"),(0,l.kt)("td",{parentName:"tr",align:null},"0.63"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"93"),(0,l.kt)("td",{parentName:"tr",align:null},"steak"),(0,l.kt)("td",{parentName:"tr",align:null},"0.32"),(0,l.kt)("td",{parentName:"tr",align:null},"0.29"),(0,l.kt)("td",{parentName:"tr",align:null},"0.31"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"94"),(0,l.kt)("td",{parentName:"tr",align:null},"strawberry_shortcake"),(0,l.kt)("td",{parentName:"tr",align:null},"0.54"),(0,l.kt)("td",{parentName:"tr",align:null},"0.58"),(0,l.kt)("td",{parentName:"tr",align:null},"0.56"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"95"),(0,l.kt)("td",{parentName:"tr",align:null},"sushi"),(0,l.kt)("td",{parentName:"tr",align:null},"0.74"),(0,l.kt)("td",{parentName:"tr",align:null},"0.51"),(0,l.kt)("td",{parentName:"tr",align:null},"0.61"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"96"),(0,l.kt)("td",{parentName:"tr",align:null},"tacos"),(0,l.kt)("td",{parentName:"tr",align:null},"0.69"),(0,l.kt)("td",{parentName:"tr",align:null},"0.32"),(0,l.kt)("td",{parentName:"tr",align:null},"0.44"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"97"),(0,l.kt)("td",{parentName:"tr",align:null},"takoyaki"),(0,l.kt)("td",{parentName:"tr",align:null},"0.75"),(0,l.kt)("td",{parentName:"tr",align:null},"0.57"),(0,l.kt)("td",{parentName:"tr",align:null},"0.65"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"98"),(0,l.kt)("td",{parentName:"tr",align:null},"tiramisu"),(0,l.kt)("td",{parentName:"tr",align:null},"0.42"),(0,l.kt)("td",{parentName:"tr",align:null},"0.47"),(0,l.kt)("td",{parentName:"tr",align:null},"0.45"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"99"),(0,l.kt)("td",{parentName:"tr",align:null},"tuna_tartare"),(0,l.kt)("td",{parentName:"tr",align:null},"0.36"),(0,l.kt)("td",{parentName:"tr",align:null},"0.35"),(0,l.kt)("td",{parentName:"tr",align:null},"0.35"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"100"),(0,l.kt)("td",{parentName:"tr",align:null},"waffles"),(0,l.kt)("td",{parentName:"tr",align:null},"0.79"),(0,l.kt)("td",{parentName:"tr",align:null},"0.65"),(0,l.kt)("td",{parentName:"tr",align:null},"0.71"),(0,l.kt)("td",{parentName:"tr",align:null},"250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("strong",{parentName:"strong"},"____"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("strong",{parentName:"strong"},"__"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("strong",{parentName:"strong"},"__"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("strong",{parentName:"strong"},"_"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("strong",{parentName:"strong"},"_"))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("strong",{parentName:"strong"},"_")))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"accuracy"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"0.59"),(0,l.kt)("td",{parentName:"tr",align:null},"25250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"macro avg"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"0.62"),(0,l.kt)("td",{parentName:"tr",align:null},"0.59"),(0,l.kt)("td",{parentName:"tr",align:null},"0.59"),(0,l.kt)("td",{parentName:"tr",align:null},"25250")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"weighted avg"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"0.62"),(0,l.kt)("td",{parentName:"tr",align:null},"0.59"),(0,l.kt)("td",{parentName:"tr",align:null},"0.59"),(0,l.kt)("td",{parentName:"tr",align:null},"25250")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# visualizing the F1 scores per class\nclassification_report_dict = classification_report(y_true=y_labels,\n                                                  y_pred=predicted_classes,\n                                                  output_dict=True)\n# {'0': {'precision': 0.36257309941520466,\n#   'recall': 0.248,\n#   'f1-score': 0.29453681710213775,\n#   'support': 250},\n#  '1': {'precision': 0.6060606060606061,\n#   'recall': 0.64,\n#   'f1-score': 0.622568093385214,\n#   'support': 250},\n#    ...\n\n\n# extract f1-scores from dictionary\nclass_f1_scores = {}\n\n## loop through classification report\nfor k, v in classification_report_dict.items():\n    # stop when you reach end of table => class# = accuracy\n    if k == \"accuracy\":\n        break\n    else:\n        # get class name and f1 score for class #\n        class_f1_scores[class_names_101_10[int(k)]] = v[\"f1-score\"]\n        \n# print(class_f1_scores)\n\n# {'apple_pie': 0.29453681710213775,\n#  'baby_back_ribs': 0.622568093385214,\n#  'baklava': 0.6008771929824562,\n#  ...\n\n# write it into a dataframe\nf1_scores = pd.DataFrame({\"classname\": list(class_f1_scores.keys()),\n                         \"f1-score\": list(class_f1_scores.values())}).sort_values(\"f1-score\", ascending=False)\n\nprint(f1_scores)\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"class #"),(0,l.kt)("th",{parentName:"tr",align:null},"classname"),(0,l.kt)("th",{parentName:"tr",align:null},"f1-score"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"33"),(0,l.kt)("td",{parentName:"tr",align:null},"edamame"),(0,l.kt)("td",{parentName:"tr",align:null},"0.958904")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"63"),(0,l.kt)("td",{parentName:"tr",align:null},"macarons"),(0,l.kt)("td",{parentName:"tr",align:null},"0.877729")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"75"),(0,l.kt)("td",{parentName:"tr",align:null},"pho"),(0,l.kt)("td",{parentName:"tr",align:null},"0.854369")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"65"),(0,l.kt)("td",{parentName:"tr",align:null},"mussels"),(0,l.kt)("td",{parentName:"tr",align:null},"0.844075")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"69"),(0,l.kt)("td",{parentName:"tr",align:null},"oysters"),(0,l.kt)("td",{parentName:"tr",align:null},"0.837945")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},".."),(0,l.kt)("td",{parentName:"tr",align:null},"..."),(0,l.kt)("td",{parentName:"tr",align:null},"...")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"82"),(0,l.kt)("td",{parentName:"tr",align:null},"ravioli"),(0,l.kt)("td",{parentName:"tr",align:null},"0.320713")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"77"),(0,l.kt)("td",{parentName:"tr",align:null},"pork_chop"),(0,l.kt)("td",{parentName:"tr",align:null},"0.309623")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"93"),(0,l.kt)("td",{parentName:"tr",align:null},"steak"),(0,l.kt)("td",{parentName:"tr",align:null},"0.307368")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"apple_pie"),(0,l.kt)("td",{parentName:"tr",align:null},"0.294537")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"39"),(0,l.kt)("td",{parentName:"tr",align:null},"foie_gras"),(0,l.kt)("td",{parentName:"tr",align:null},"0.228070")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"f1_bar_chart = f1_scores.plot.bar(x='classname',\n                                  y='f1-score',\n                                  title=\"F1 Scores vs Class Names\",\n                                  rot=70, legend=True,\n                                  figsize=(42,12))\n")),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Transfer Learning",src:e(86611).Z,width:"3308",height:"1161"})),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"f1_scores_inverse = f1_scores.sort_values(by=['f1-score'])\nf1_bar_chart = f1_scores_inverse.plot.barh(x='classname',\n                                  y='f1-score', fontsize=16,\n                                  title=\"F1 Scores vs Class Names\",\n                                  rot=0, legend=True,\n                                  figsize=(12,36))\n")),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Transfer Learning",src:e(85639).Z,width:"1265",height:"2844"})),(0,l.kt)("h3",{id:"run-predictions"},"Run Predictions"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# load and preprocess custom images\ndef load_and_preprocess_image(filename, img_shape=224, normalize=True):\n    # load image\n    image = tf.io.read_file(filename)\n    \n    # decode image into tensor\n    image = tf.io.decode_image(image)\n    \n    # print(image.shape)\n    # resize image\n    # image = tf.image.resize(image, [img_shape[0], img_shape[1]])\n    image = tf.image.resize(image, [img_shape, img_shape])\n    # print(image.shape)\n    # models like efficientnet don't\n    #  need normalization -> make it optional\n    if normalize:\n        return image/255\n    else:\n        return image\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'# test prediction\nfile_path = "../datasets/101_food_classes_10_percent/train/caesar_salad/621878.jpg"\n# load and preprocess images\ntest_image = load_and_preprocess_image(file_path, img_shape=224, normalize=False)\n# test image is (224, 224, 3) but model expects batch shape (None, 224, 224, 3)\ntest_image_expanded = tf.expand_dims(test_image, axis=0)\n# get probabilities over all classes\nprediction_probabilities = model.predict(test_image_expanded)\nprint(prediction_probabilities)\n# get classname for highest probability\npredicted_class =  class_names_101_10[prediction_probabilities.argmax()]\nprint(prediction_probabilities.argmax())\nprint(predicted_class)\n\n# 1/1 [==============================] - 2s 2s/step\n# [[1.50316203e-06 6.54247488e-05 3.67346947e-05 2.69303378e-03\n#   6.89498498e-04 1.87405187e-03 5.24590746e-07 9.33061761e-04\n#   8.65595939e-06 3.25173722e-04 5.10892831e-04 3.65509897e-01\n#   5.99349778e-06 7.83709735e-02 2.39862379e-06 5.81788830e-03\n#   9.84990475e-05 3.48087779e-05 1.90171588e-04 1.23677682e-02\n#   6.14877135e-05 2.40283384e-08 2.12790405e-06 1.13999391e-07\n#   5.72356976e-06 7.92978518e-03 9.47913341e-03 7.58256647e-07\n#   1.09906327e-02 7.71022357e-08 2.06695331e-05 5.95029064e-07\n#   2.49674427e-04 6.92231743e-06 2.87168048e-04 3.15096986e-05\n#   4.69330046e-03 6.78624609e-04 7.83884199e-04 1.68355810e-03\n#   1.82755193e-05 9.03009493e-07 2.82402652e-05 1.71108084e-04\n#   8.81860105e-05 3.58489638e-06 3.93012015e-05 4.95287916e-03\n#   4.10611063e-01 2.75604805e-04 5.55841299e-03 1.80046377e-03\n#   6.12967357e-04 1.32623117e-03 3.72738782e-07 7.42003205e-04\n#   6.33771438e-03 1.89700077e-04 1.42778049e-06 1.78189657e-04\n#   2.83671682e-08 5.77349402e-03 1.16270230e-05 1.74992886e-06\n#   2.15548107e-06 1.77174807e-05 2.03449815e-03 7.82472896e-04\n#   3.88388798e-07 1.51169850e-04 2.83787904e-05 9.07634239e-06\n#   3.15053308e-06 2.30283586e-05 1.42191842e-04 3.49449765e-05\n#   2.96340950e-05 3.22835840e-05 3.79087487e-06 3.55910415e-05\n#   6.37637422e-05 1.73983644e-04 5.40133740e-04 6.14976784e-07\n#   1.03683116e-04 9.38189216e-04 1.80834774e-02 7.08847656e-04\n#   3.19155771e-03 3.94216222e-05 6.57606563e-07 1.21063601e-06\n#   9.14987270e-03 7.52260457e-05 2.20976843e-04 2.03661504e-03\n#   1.35101350e-02 1.15356571e-03 1.52835700e-08 1.37943309e-03\n#   1.31967667e-04]]\n# 48\n# greek_salad\n\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'# run prediction on random test images\nlocation = testing_directory\n\nplt.figure(figsize=(17, 15))\n# pick random test images in random class\nfor i in range(9):\n    # get file paths\n    class_name = random.choice(class_names_101_10)\n    file_name = random.choice(os.listdir(location + "/" + class_name))\n    file_path = location + "/" + class_name + "/" + file_name\n    \n    # load and preprocess images\n    test_image = load_and_preprocess_image(file_path, img_shape=224, normalize=False)\n    # test image is (224, 224, 3) but model expects batch shape (None, 224, 224, 3)\n    test_image_expanded = tf.expand_dims(test_image, axis=0)\n    # get probabilities over all classes\n    prediction_probabilities = model.predict(test_image_expanded)\n    # get classname for highest probability\n    predicted_class =  class_names_101_10[prediction_probabilities.argmax()]\n    plt.subplot(3, 3, i+1)\n    # show normalized image\n    plt.imshow(test_image/255.)\n    if class_name == predicted_class:\n        title_color = \'green\'\n    else:\n        title_color = \'red\'\n    plt.title(f"Pred: {predicted_class} ({prediction_probabilities.max()*100:.2f} %), True: {class_name}",\n             c=title_color)\n    plt.axis(False)\n\n')),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Transfer Learning",src:e(2972).Z,width:"1340",height:"1197"})),(0,l.kt)("h3",{id:"find-most-wrong-predictions"},"Find most Wrong Predictions"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# get all images in the test dataset\ntest_files = testing_directory + \"/*/*.jpg\"\ntest_file_paths = []\nfor file_path in testing_data_101_10.list_files(test_files, shuffle=False):\n    test_file_paths.append(file_path.numpy())\n    \nprint(test_file_paths[:1])\n# [b'../datasets/101_food_classes_10_percent/test/apple_pie/1011328.jpg']\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'# create dataframe with filepaths and pred evals\nprediction_quality = pd.DataFrame({"img_path": test_file_paths,\n                                  "y_true": y_labels,\n                                  "y_pred": predicted_classes,\n                                  "pred_conf": test_prediction_probabilities.max(axis=1),\n                                  "y_true_classname": [class_names_101_10[i] for i in y_labels],\n                                  "y_pred_classname": [class_names_101_10[i] for i in predicted_classes]})\n\nprediction_quality\n\n# the "most wrong" predictions are those where the the predicted and\n# true classname does not match but the prediction confidence is high:\n')),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"#"),(0,l.kt)("th",{parentName:"tr",align:null},"img_path"),(0,l.kt)("th",{parentName:"tr",align:null},"y_true"),(0,l.kt)("th",{parentName:"tr",align:null},"y_pred"),(0,l.kt)("th",{parentName:"tr",align:null},"pred_conf"),(0,l.kt)("th",{parentName:"tr",align:null},"y_true_classname"),(0,l.kt)("th",{parentName:"tr",align:null},"y_pred_classname"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"b'../datasets/101_food_classes_10_percent/test..."),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"85"),(0,l.kt)("td",{parentName:"tr",align:null},"0.498493"),(0,l.kt)("td",{parentName:"tr",align:null},"apple_pie"),(0,l.kt)("td",{parentName:"tr",align:null},"samosa")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"b'../datasets/101_food_classes_10_percent/test..."),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0.821453"),(0,l.kt)("td",{parentName:"tr",align:null},"apple_pie"),(0,l.kt)("td",{parentName:"tr",align:null},"apple_pie")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"b'../datasets/101_food_classes_10_percent/test..."),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0.413805"),(0,l.kt)("td",{parentName:"tr",align:null},"apple_pie"),(0,l.kt)("td",{parentName:"tr",align:null},"apple_pie")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"b'../datasets/101_food_classes_10_percent/test..."),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"0.242082"),(0,l.kt)("td",{parentName:"tr",align:null},"apple_pie"),(0,l.kt)("td",{parentName:"tr",align:null},"apple_pie")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"b'../datasets/101_food_classes_10_percent/test..."),(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"8"),(0,l.kt)("td",{parentName:"tr",align:null},"0.625819"),(0,l.kt)("td",{parentName:"tr",align:null},"apple_pie"),(0,l.kt)("td",{parentName:"tr",align:null},"bread_pudding")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"..."),(0,l.kt)("td",{parentName:"tr",align:null},"..."),(0,l.kt)("td",{parentName:"tr",align:null},"..."),(0,l.kt)("td",{parentName:"tr",align:null},"..."),(0,l.kt)("td",{parentName:"tr",align:null},"..."),(0,l.kt)("td",{parentName:"tr",align:null},"..."),(0,l.kt)("td",{parentName:"tr",align:null},"...")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"25245"),(0,l.kt)("td",{parentName:"tr",align:null},"b'../datasets/101_food_classes_10_percent/test..."),(0,l.kt)("td",{parentName:"tr",align:null},"100"),(0,l.kt)("td",{parentName:"tr",align:null},"100"),(0,l.kt)("td",{parentName:"tr",align:null},"0.860823"),(0,l.kt)("td",{parentName:"tr",align:null},"waffles"),(0,l.kt)("td",{parentName:"tr",align:null},"waffles")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"25246"),(0,l.kt)("td",{parentName:"tr",align:null},"b'../datasets/101_food_classes_10_percent/test..."),(0,l.kt)("td",{parentName:"tr",align:null},"100"),(0,l.kt)("td",{parentName:"tr",align:null},"100"),(0,l.kt)("td",{parentName:"tr",align:null},"0.969415"),(0,l.kt)("td",{parentName:"tr",align:null},"waffles"),(0,l.kt)("td",{parentName:"tr",align:null},"waffles")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"25247"),(0,l.kt)("td",{parentName:"tr",align:null},"b'../datasets/101_food_classes_10_percent/test..."),(0,l.kt)("td",{parentName:"tr",align:null},"100"),(0,l.kt)("td",{parentName:"tr",align:null},"74"),(0,l.kt)("td",{parentName:"tr",align:null},"0.259333"),(0,l.kt)("td",{parentName:"tr",align:null},"waffles"),(0,l.kt)("td",{parentName:"tr",align:null},"peking_duck")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"25248"),(0,l.kt)("td",{parentName:"tr",align:null},"b'../datasets/101_food_classes_10_percent/test..."),(0,l.kt)("td",{parentName:"tr",align:null},"100"),(0,l.kt)("td",{parentName:"tr",align:null},"100"),(0,l.kt)("td",{parentName:"tr",align:null},"0.266893"),(0,l.kt)("td",{parentName:"tr",align:null},"waffles"),(0,l.kt)("td",{parentName:"tr",align:null},"waffles")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"25249"),(0,l.kt)("td",{parentName:"tr",align:null},"b'../datasets/101_food_classes_10_percent/test..."),(0,l.kt)("td",{parentName:"tr",align:null},"100"),(0,l.kt)("td",{parentName:"tr",align:null},"100"),(0,l.kt)("td",{parentName:"tr",align:null},"0.248541"),(0,l.kt)("td",{parentName:"tr",align:null},"waffles"),(0,l.kt)("td",{parentName:"tr",align:null},"waffles")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'# add bool comlumn for correct predictions\nprediction_quality["pred_correct"] = prediction_quality["y_true"] == prediction_quality["y_pred"]\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'# create new dataframe with the 100 most wrong predictions\ntop_100_wrong = prediction_quality[prediction_quality["pred_correct"] == False].sort_values("pred_conf", ascending=False)[:100]\ntop_100_wrong\n')),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"#"),(0,l.kt)("th",{parentName:"tr",align:null},"img_path"),(0,l.kt)("th",{parentName:"tr",align:null},"y_true"),(0,l.kt)("th",{parentName:"tr",align:null},"y_pred"),(0,l.kt)("th",{parentName:"tr",align:null},"pred_conf"),(0,l.kt)("th",{parentName:"tr",align:null},"y_true_classname"),(0,l.kt)("th",{parentName:"tr",align:null},"y_pred_classname"),(0,l.kt)("th",{parentName:"tr",align:null},"pred_correct"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"23797"),(0,l.kt)("td",{parentName:"tr",align:null},"b'../datasets/101_food_classes_10_percent/test..."),(0,l.kt)("td",{parentName:"tr",align:null},"95"),(0,l.kt)("td",{parentName:"tr",align:null},"86"),(0,l.kt)("td",{parentName:"tr",align:null},"0.997811"),(0,l.kt)("td",{parentName:"tr",align:null},"sushi"),(0,l.kt)("td",{parentName:"tr",align:null},"sashimi"),(0,l.kt)("td",{parentName:"tr",align:null},"False")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"10880"),(0,l.kt)("td",{parentName:"tr",align:null},"b'../datasets/101_food_classes_10_percent/test..."),(0,l.kt)("td",{parentName:"tr",align:null},"43"),(0,l.kt)("td",{parentName:"tr",align:null},"68"),(0,l.kt)("td",{parentName:"tr",align:null},"0.997761"),(0,l.kt)("td",{parentName:"tr",align:null},"fried_calamari"),(0,l.kt)("td",{parentName:"tr",align:null},"onion_rings"),(0,l.kt)("td",{parentName:"tr",align:null},"False")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"14482"),(0,l.kt)("td",{parentName:"tr",align:null},"b'../datasets/101_food_classes_10_percent/test..."),(0,l.kt)("td",{parentName:"tr",align:null},"57"),(0,l.kt)("td",{parentName:"tr",align:null},"51"),(0,l.kt)("td",{parentName:"tr",align:null},"0.997528"),(0,l.kt)("td",{parentName:"tr",align:null},"hummus"),(0,l.kt)("td",{parentName:"tr",align:null},"guacamole"),(0,l.kt)("td",{parentName:"tr",align:null},"False")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"17897"),(0,l.kt)("td",{parentName:"tr",align:null},"b'../datasets/101_food_classes_10_percent/test..."),(0,l.kt)("td",{parentName:"tr",align:null},"71"),(0,l.kt)("td",{parentName:"tr",align:null},"65"),(0,l.kt)("td",{parentName:"tr",align:null},"0.996058"),(0,l.kt)("td",{parentName:"tr",align:null},"paella"),(0,l.kt)("td",{parentName:"tr",align:null},"mussels"),(0,l.kt)("td",{parentName:"tr",align:null},"False")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"18001"),(0,l.kt)("td",{parentName:"tr",align:null},"b'../datasets/101_food_classes_10_percent/test..."),(0,l.kt)("td",{parentName:"tr",align:null},"72"),(0,l.kt)("td",{parentName:"tr",align:null},"67"),(0,l.kt)("td",{parentName:"tr",align:null},"0.995309"),(0,l.kt)("td",{parentName:"tr",align:null},"pancakes"),(0,l.kt)("td",{parentName:"tr",align:null},"omelette"),(0,l.kt)("td",{parentName:"tr",align:null},"False")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"..."),(0,l.kt)("td",{parentName:"tr",align:null},"..."),(0,l.kt)("td",{parentName:"tr",align:null},"..."),(0,l.kt)("td",{parentName:"tr",align:null},"..."),(0,l.kt)("td",{parentName:"tr",align:null},"..."),(0,l.kt)("td",{parentName:"tr",align:null},"..."),(0,l.kt)("td",{parentName:"tr",align:null},"..."),(0,l.kt)("td",{parentName:"tr",align:null},"...")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"13199"),(0,l.kt)("td",{parentName:"tr",align:null},"b'../datasets/101_food_classes_10_percent/test..."),(0,l.kt)("td",{parentName:"tr",align:null},"52"),(0,l.kt)("td",{parentName:"tr",align:null},"9"),(0,l.kt)("td",{parentName:"tr",align:null},"0.947564"),(0,l.kt)("td",{parentName:"tr",align:null},"gyoza"),(0,l.kt)("td",{parentName:"tr",align:null},"breakfast_burrito"),(0,l.kt)("td",{parentName:"tr",align:null},"False")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"20551"),(0,l.kt)("td",{parentName:"tr",align:null},"b'../datasets/101_food_classes_10_percent/test..."),(0,l.kt)("td",{parentName:"tr",align:null},"82"),(0,l.kt)("td",{parentName:"tr",align:null},"83"),(0,l.kt)("td",{parentName:"tr",align:null},"0.947554"),(0,l.kt)("td",{parentName:"tr",align:null},"ravioli"),(0,l.kt)("td",{parentName:"tr",align:null},"red_velvet_cake"),(0,l.kt)("td",{parentName:"tr",align:null},"False")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"5114"),(0,l.kt)("td",{parentName:"tr",align:null},"b'../datasets/101_food_classes_10_percent/test..."),(0,l.kt)("td",{parentName:"tr",align:null},"20"),(0,l.kt)("td",{parentName:"tr",align:null},"38"),(0,l.kt)("td",{parentName:"tr",align:null},"0.947265"),(0,l.kt)("td",{parentName:"tr",align:null},"chicken_wings"),(0,l.kt)("td",{parentName:"tr",align:null},"fish_and_chips"),(0,l.kt)("td",{parentName:"tr",align:null},"False")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"548"),(0,l.kt)("td",{parentName:"tr",align:null},"b'../datasets/101_food_classes_10_percent/test..."),(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"67"),(0,l.kt)("td",{parentName:"tr",align:null},"0.947076"),(0,l.kt)("td",{parentName:"tr",align:null},"baklava"),(0,l.kt)("td",{parentName:"tr",align:null},"omelette"),(0,l.kt)("td",{parentName:"tr",align:null},"False")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"15750"),(0,l.kt)("td",{parentName:"tr",align:null},"b'../datasets/101_food_classes_10_percent/test..."),(0,l.kt)("td",{parentName:"tr",align:null},"63"),(0,l.kt)("td",{parentName:"tr",align:null},"29"),(0,l.kt)("td",{parentName:"tr",align:null},"0.946876"),(0,l.kt)("td",{parentName:"tr",align:null},"macarons"),(0,l.kt)("td",{parentName:"tr",align:null},"cup_cakes"),(0,l.kt)("td",{parentName:"tr",align:null},"False")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"\n# what predictions are most often wrong\ngrouped_top_100_wrong_pred = top_100_wrong.groupby(['y_pred', 'y_pred_classname']).agg(', '.join).reset_index()\ngrouped_top_100_wrong_pred\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"#"),(0,l.kt)("th",{parentName:"tr",align:null},"y_pred"),(0,l.kt)("th",{parentName:"tr",align:null},"y_pred_classname"),(0,l.kt)("th",{parentName:"tr",align:null},"y_true_classname"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"baklava"),(0,l.kt)("td",{parentName:"tr",align:null},"garlic_bread")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"beet_salad"),(0,l.kt)("td",{parentName:"tr",align:null},"seaweed_salad")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"9"),(0,l.kt)("td",{parentName:"tr",align:null},"breakfast_burrito"),(0,l.kt)("td",{parentName:"tr",align:null},"chicken_quesadilla, pulled_pork_sandwich, chic...")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"12"),(0,l.kt)("td",{parentName:"tr",align:null},"cannoli"),(0,l.kt)("td",{parentName:"tr",align:null},"baklava")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"16"),(0,l.kt)("td",{parentName:"tr",align:null},"cheese_plate"),(0,l.kt)("td",{parentName:"tr",align:null},"cheesecake")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"20"),(0,l.kt)("td",{parentName:"tr",align:null},"chicken_wings"),(0,l.kt)("td",{parentName:"tr",align:null},"fish_and_chips, french_fries")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"6"),(0,l.kt)("td",{parentName:"tr",align:null},"26"),(0,l.kt)("td",{parentName:"tr",align:null},"crab_cakes"),(0,l.kt)("td",{parentName:"tr",align:null},"falafel")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"7"),(0,l.kt)("td",{parentName:"tr",align:null},"27"),(0,l.kt)("td",{parentName:"tr",align:null},"creme_brulee"),(0,l.kt)("td",{parentName:"tr",align:null},"hummus")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"8"),(0,l.kt)("td",{parentName:"tr",align:null},"28"),(0,l.kt)("td",{parentName:"tr",align:null},"croque_madame"),(0,l.kt)("td",{parentName:"tr",align:null},"poutine")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"9"),(0,l.kt)("td",{parentName:"tr",align:null},"29"),(0,l.kt)("td",{parentName:"tr",align:null},"cup_cakes"),(0,l.kt)("td",{parentName:"tr",align:null},"macarons, carrot_cake, macarons")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"10"),(0,l.kt)("td",{parentName:"tr",align:null},"31"),(0,l.kt)("td",{parentName:"tr",align:null},"donuts"),(0,l.kt)("td",{parentName:"tr",align:null},"escargots")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"11"),(0,l.kt)("td",{parentName:"tr",align:null},"32"),(0,l.kt)("td",{parentName:"tr",align:null},"dumplings"),(0,l.kt)("td",{parentName:"tr",align:null},"gyoza, macaroni_and_cheese")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"12"),(0,l.kt)("td",{parentName:"tr",align:null},"33"),(0,l.kt)("td",{parentName:"tr",align:null},"edamame"),(0,l.kt)("td",{parentName:"tr",align:null},"pho")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"13"),(0,l.kt)("td",{parentName:"tr",align:null},"38"),(0,l.kt)("td",{parentName:"tr",align:null},"fish_and_chips"),(0,l.kt)("td",{parentName:"tr",align:null},"chicken_wings")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"14"),(0,l.kt)("td",{parentName:"tr",align:null},"40"),(0,l.kt)("td",{parentName:"tr",align:null},"french_fries"),(0,l.kt)("td",{parentName:"tr",align:null},"macaroni_and_cheese, poutine")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"15"),(0,l.kt)("td",{parentName:"tr",align:null},"42"),(0,l.kt)("td",{parentName:"tr",align:null},"french_toast"),(0,l.kt)("td",{parentName:"tr",align:null},"waffles")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"16"),(0,l.kt)("td",{parentName:"tr",align:null},"45"),(0,l.kt)("td",{parentName:"tr",align:null},"frozen_yogurt"),(0,l.kt)("td",{parentName:"tr",align:null},"creme_brulee")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"17"),(0,l.kt)("td",{parentName:"tr",align:null},"46"),(0,l.kt)("td",{parentName:"tr",align:null},"garlic_bread"),(0,l.kt)("td",{parentName:"tr",align:null},"grilled_cheese_sandwich, grilled_cheese_sandwich")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"18"),(0,l.kt)("td",{parentName:"tr",align:null},"47"),(0,l.kt)("td",{parentName:"tr",align:null},"gnocchi"),(0,l.kt)("td",{parentName:"tr",align:null},"risotto, hummus")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"19"),(0,l.kt)("td",{parentName:"tr",align:null},"48"),(0,l.kt)("td",{parentName:"tr",align:null},"greek_salad"),(0,l.kt)("td",{parentName:"tr",align:null},"ceviche")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"20"),(0,l.kt)("td",{parentName:"tr",align:null},"51"),(0,l.kt)("td",{parentName:"tr",align:null},"guacamole"),(0,l.kt)("td",{parentName:"tr",align:null},"hummus, fried_rice, tuna_tartare, risotto, hum...")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"21"),(0,l.kt)("td",{parentName:"tr",align:null},"53"),(0,l.kt)("td",{parentName:"tr",align:null},"hamburger"),(0,l.kt)("td",{parentName:"tr",align:null},"pulled_pork_sandwich, eggs_benedict")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"22"),(0,l.kt)("td",{parentName:"tr",align:null},"54"),(0,l.kt)("td",{parentName:"tr",align:null},"hot_and_sour_soup"),(0,l.kt)("td",{parentName:"tr",align:null},"waffles, french_onion_soup, french_onion_soup")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"23"),(0,l.kt)("td",{parentName:"tr",align:null},"58"),(0,l.kt)("td",{parentName:"tr",align:null},"ice_cream"),(0,l.kt)("td",{parentName:"tr",align:null},"frozen_yogurt")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"24"),(0,l.kt)("td",{parentName:"tr",align:null},"64"),(0,l.kt)("td",{parentName:"tr",align:null},"miso_soup"),(0,l.kt)("td",{parentName:"tr",align:null},"cheesecake, scallops, lobster_bisque")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"25"),(0,l.kt)("td",{parentName:"tr",align:null},"65"),(0,l.kt)("td",{parentName:"tr",align:null},"mussels"),(0,l.kt)("td",{parentName:"tr",align:null},"paella, paella")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"26"),(0,l.kt)("td",{parentName:"tr",align:null},"67"),(0,l.kt)("td",{parentName:"tr",align:null},"omelette"),(0,l.kt)("td",{parentName:"tr",align:null},"pancakes, baklava")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"27"),(0,l.kt)("td",{parentName:"tr",align:null},"68"),(0,l.kt)("td",{parentName:"tr",align:null},"onion_rings"),(0,l.kt)("td",{parentName:"tr",align:null},"fried_calamari, fried_calamari, fried_calamari...")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"28"),(0,l.kt)("td",{parentName:"tr",align:null},"74"),(0,l.kt)("td",{parentName:"tr",align:null},"peking_duck"),(0,l.kt)("td",{parentName:"tr",align:null},"beef_carpaccio")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"29"),(0,l.kt)("td",{parentName:"tr",align:null},"75"),(0,l.kt)("td",{parentName:"tr",align:null},"pho"),(0,l.kt)("td",{parentName:"tr",align:null},"ramen, hot_and_sour_soup")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"30"),(0,l.kt)("td",{parentName:"tr",align:null},"76"),(0,l.kt)("td",{parentName:"tr",align:null},"pizza"),(0,l.kt)("td",{parentName:"tr",align:null},"chicken_quesadilla, french_onion_soup, hummus,...")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"31"),(0,l.kt)("td",{parentName:"tr",align:null},"78"),(0,l.kt)("td",{parentName:"tr",align:null},"poutine"),(0,l.kt)("td",{parentName:"tr",align:null},"peking_duck, takoyaki, spaghetti_bolognese, fr...")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"32"),(0,l.kt)("td",{parentName:"tr",align:null},"79"),(0,l.kt)("td",{parentName:"tr",align:null},"prime_rib"),(0,l.kt)("td",{parentName:"tr",align:null},"filet_mignon")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"33"),(0,l.kt)("td",{parentName:"tr",align:null},"81"),(0,l.kt)("td",{parentName:"tr",align:null},"ramen"),(0,l.kt)("td",{parentName:"tr",align:null},"miso_soup, chicken_curry")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"34"),(0,l.kt)("td",{parentName:"tr",align:null},"83"),(0,l.kt)("td",{parentName:"tr",align:null},"red_velvet_cake"),(0,l.kt)("td",{parentName:"tr",align:null},"cup_cakes, ravioli")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"35"),(0,l.kt)("td",{parentName:"tr",align:null},"85"),(0,l.kt)("td",{parentName:"tr",align:null},"samosa"),(0,l.kt)("td",{parentName:"tr",align:null},"peking_duck, spring_rolls, baklava")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"36"),(0,l.kt)("td",{parentName:"tr",align:null},"86"),(0,l.kt)("td",{parentName:"tr",align:null},"sashimi"),(0,l.kt)("td",{parentName:"tr",align:null},"sushi , sushi")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"37"),(0,l.kt)("td",{parentName:"tr",align:null},"91"),(0,l.kt)("td",{parentName:"tr",align:null},"spaghetti_carbonara"),(0,l.kt)("td",{parentName:"tr",align:null},"spaghetti_bolognese, spaghetti_bolognese, ravi...")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"38"),(0,l.kt)("td",{parentName:"tr",align:null},"92"),(0,l.kt)("td",{parentName:"tr",align:null},"spring_rolls"),(0,l.kt)("td",{parentName:"tr",align:null},"samosa")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"\n# what classes cause the most wrong predictions\ngrouped_top_100_wrong_cause = top_100_wrong.groupby(['y_true', 'y_true_classname']).agg(', '.join).reset_index()\ngrouped_top_100_wrong_cause\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"#"),(0,l.kt)("th",{parentName:"tr",align:null},"y_true"),(0,l.kt)("th",{parentName:"tr",align:null},"y_true_classname"),(0,l.kt)("th",{parentName:"tr",align:null},"y_pred_classname"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0"),(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"baklava"),(0,l.kt)("td",{parentName:"tr",align:null},"cannoli, samosa, omelette")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"beef_carpaccio"),(0,l.kt)("td",{parentName:"tr",align:null},"peking_duck")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"14"),(0,l.kt)("td",{parentName:"tr",align:null},"carrot_cake"),(0,l.kt)("td",{parentName:"tr",align:null},"cup_cakes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"15"),(0,l.kt)("td",{parentName:"tr",align:null},"ceviche"),(0,l.kt)("td",{parentName:"tr",align:null},"greek_salad")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"17"),(0,l.kt)("td",{parentName:"tr",align:null},"cheesecake"),(0,l.kt)("td",{parentName:"tr",align:null},"miso_soup, cheese_plate")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"18"),(0,l.kt)("td",{parentName:"tr",align:null},"chicken_curry"),(0,l.kt)("td",{parentName:"tr",align:null},"ramen")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"6"),(0,l.kt)("td",{parentName:"tr",align:null},"19"),(0,l.kt)("td",{parentName:"tr",align:null},"chicken_quesadilla"),(0,l.kt)("td",{parentName:"tr",align:null},"breakfast_burrito, breakfast_burrito, pizza, g...")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"7"),(0,l.kt)("td",{parentName:"tr",align:null},"20"),(0,l.kt)("td",{parentName:"tr",align:null},"chicken_wings"),(0,l.kt)("td",{parentName:"tr",align:null},"fish_and_chips")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"8"),(0,l.kt)("td",{parentName:"tr",align:null},"23"),(0,l.kt)("td",{parentName:"tr",align:null},"churros"),(0,l.kt)("td",{parentName:"tr",align:null},"onion_rings, onion_rings, onion_rings")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"9"),(0,l.kt)("td",{parentName:"tr",align:null},"26"),(0,l.kt)("td",{parentName:"tr",align:null},"crab_cakes"),(0,l.kt)("td",{parentName:"tr",align:null},"spaghetti_carbonara")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"10"),(0,l.kt)("td",{parentName:"tr",align:null},"27"),(0,l.kt)("td",{parentName:"tr",align:null},"creme_brulee"),(0,l.kt)("td",{parentName:"tr",align:null},"frozen_yogurt")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"11"),(0,l.kt)("td",{parentName:"tr",align:null},"29"),(0,l.kt)("td",{parentName:"tr",align:null},"cup_cakes"),(0,l.kt)("td",{parentName:"tr",align:null},"red_velvet_cake")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"12"),(0,l.kt)("td",{parentName:"tr",align:null},"34"),(0,l.kt)("td",{parentName:"tr",align:null},"eggs_benedict"),(0,l.kt)("td",{parentName:"tr",align:null},"hamburger")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"13"),(0,l.kt)("td",{parentName:"tr",align:null},"35"),(0,l.kt)("td",{parentName:"tr",align:null},"escargots"),(0,l.kt)("td",{parentName:"tr",align:null},"donuts")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"14"),(0,l.kt)("td",{parentName:"tr",align:null},"36"),(0,l.kt)("td",{parentName:"tr",align:null},"falafel"),(0,l.kt)("td",{parentName:"tr",align:null},"crab_cakes, breakfast_burrito")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"15"),(0,l.kt)("td",{parentName:"tr",align:null},"37"),(0,l.kt)("td",{parentName:"tr",align:null},"filet_mignon"),(0,l.kt)("td",{parentName:"tr",align:null},"prime_rib")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"16"),(0,l.kt)("td",{parentName:"tr",align:null},"38"),(0,l.kt)("td",{parentName:"tr",align:null},"fish_and_chips"),(0,l.kt)("td",{parentName:"tr",align:null},"chicken_wings, breakfast_burrito")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"17"),(0,l.kt)("td",{parentName:"tr",align:null},"40"),(0,l.kt)("td",{parentName:"tr",align:null},"french_fries"),(0,l.kt)("td",{parentName:"tr",align:null},"chicken_wings, poutine")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"18"),(0,l.kt)("td",{parentName:"tr",align:null},"41"),(0,l.kt)("td",{parentName:"tr",align:null},"french_onion_soup"),(0,l.kt)("td",{parentName:"tr",align:null},"hot_and_sour_soup, pizza, hot_and_sour_soup")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"19"),(0,l.kt)("td",{parentName:"tr",align:null},"43"),(0,l.kt)("td",{parentName:"tr",align:null},"fried_calamari"),(0,l.kt)("td",{parentName:"tr",align:null},"onion_rings, onion_rings, onion_rings, onion_r...")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"20"),(0,l.kt)("td",{parentName:"tr",align:null},"44"),(0,l.kt)("td",{parentName:"tr",align:null},"fried_rice"),(0,l.kt)("td",{parentName:"tr",align:null},"guacamole")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"21"),(0,l.kt)("td",{parentName:"tr",align:null},"45"),(0,l.kt)("td",{parentName:"tr",align:null},"frozen_yogurt"),(0,l.kt)("td",{parentName:"tr",align:null},"ice_cream")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"22"),(0,l.kt)("td",{parentName:"tr",align:null},"46"),(0,l.kt)("td",{parentName:"tr",align:null},"garlic_bread"),(0,l.kt)("td",{parentName:"tr",align:null},"baklava")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"23"),(0,l.kt)("td",{parentName:"tr",align:null},"49"),(0,l.kt)("td",{parentName:"tr",align:null},"grilled_cheese_sandwich"),(0,l.kt)("td",{parentName:"tr",align:null},"garlic_bread, garlic_bread")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"24"),(0,l.kt)("td",{parentName:"tr",align:null},"52"),(0,l.kt)("td",{parentName:"tr",align:null},"gyoza"),(0,l.kt)("td",{parentName:"tr",align:null},"dumplings, breakfast_burrito, breakfast_burrito")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"25"),(0,l.kt)("td",{parentName:"tr",align:null},"54"),(0,l.kt)("td",{parentName:"tr",align:null},"hot_and_sour_soup"),(0,l.kt)("td",{parentName:"tr",align:null},"pho")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"26"),(0,l.kt)("td",{parentName:"tr",align:null},"56"),(0,l.kt)("td",{parentName:"tr",align:null},"huevos_rancheros"),(0,l.kt)("td",{parentName:"tr",align:null},"breakfast_burrito, breakfast_burrito")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"27"),(0,l.kt)("td",{parentName:"tr",align:null},"57"),(0,l.kt)("td",{parentName:"tr",align:null},"hummus"),(0,l.kt)("td",{parentName:"tr",align:null},"guacamole, creme_brulee, guacamole, pizza, gno...")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"28"),(0,l.kt)("td",{parentName:"tr",align:null},"59"),(0,l.kt)("td",{parentName:"tr",align:null},"lasagna"),(0,l.kt)("td",{parentName:"tr",align:null},"pizza")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"29"),(0,l.kt)("td",{parentName:"tr",align:null},"60"),(0,l.kt)("td",{parentName:"tr",align:null},"lobster_bisque"),(0,l.kt)("td",{parentName:"tr",align:null},"miso_soup")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"30"),(0,l.kt)("td",{parentName:"tr",align:null},"62"),(0,l.kt)("td",{parentName:"tr",align:null},"macaroni_and_cheese"),(0,l.kt)("td",{parentName:"tr",align:null},"french_fries, dumplings")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"31"),(0,l.kt)("td",{parentName:"tr",align:null},"63"),(0,l.kt)("td",{parentName:"tr",align:null},"macarons"),(0,l.kt)("td",{parentName:"tr",align:null},"cup_cakes, cup_cakes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"32"),(0,l.kt)("td",{parentName:"tr",align:null},"64"),(0,l.kt)("td",{parentName:"tr",align:null},"miso_soup"),(0,l.kt)("td",{parentName:"tr",align:null},"ramen")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"33"),(0,l.kt)("td",{parentName:"tr",align:null},"67"),(0,l.kt)("td",{parentName:"tr",align:null},"omelette"),(0,l.kt)("td",{parentName:"tr",align:null},"spaghetti_carbonara")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"34"),(0,l.kt)("td",{parentName:"tr",align:null},"71"),(0,l.kt)("td",{parentName:"tr",align:null},"paella"),(0,l.kt)("td",{parentName:"tr",align:null},"mussels, mussels")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"35"),(0,l.kt)("td",{parentName:"tr",align:null},"72"),(0,l.kt)("td",{parentName:"tr",align:null},"pancakes"),(0,l.kt)("td",{parentName:"tr",align:null},"omelette")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"36"),(0,l.kt)("td",{parentName:"tr",align:null},"74"),(0,l.kt)("td",{parentName:"tr",align:null},"peking_duck"),(0,l.kt)("td",{parentName:"tr",align:null},"samosa, poutine")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"37"),(0,l.kt)("td",{parentName:"tr",align:null},"75"),(0,l.kt)("td",{parentName:"tr",align:null},"pho"),(0,l.kt)("td",{parentName:"tr",align:null},"edamame")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"38"),(0,l.kt)("td",{parentName:"tr",align:null},"78"),(0,l.kt)("td",{parentName:"tr",align:null},"poutine"),(0,l.kt)("td",{parentName:"tr",align:null},"croque_madame, french_fries")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"39"),(0,l.kt)("td",{parentName:"tr",align:null},"80"),(0,l.kt)("td",{parentName:"tr",align:null},"pulled_pork_sandwich"),(0,l.kt)("td",{parentName:"tr",align:null},"breakfast_burrito, hamburger")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"40"),(0,l.kt)("td",{parentName:"tr",align:null},"81"),(0,l.kt)("td",{parentName:"tr",align:null},"ramen"),(0,l.kt)("td",{parentName:"tr",align:null},"pho")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"41"),(0,l.kt)("td",{parentName:"tr",align:null},"82"),(0,l.kt)("td",{parentName:"tr",align:null},"ravioli"),(0,l.kt)("td",{parentName:"tr",align:null},"spaghetti_carbonara, spaghetti_carbonara, spag...")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"42"),(0,l.kt)("td",{parentName:"tr",align:null},"84"),(0,l.kt)("td",{parentName:"tr",align:null},"risotto"),(0,l.kt)("td",{parentName:"tr",align:null},"guacamole, gnocchi")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"43"),(0,l.kt)("td",{parentName:"tr",align:null},"85"),(0,l.kt)("td",{parentName:"tr",align:null},"samosa"),(0,l.kt)("td",{parentName:"tr",align:null},"spring_rolls")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"44"),(0,l.kt)("td",{parentName:"tr",align:null},"87"),(0,l.kt)("td",{parentName:"tr",align:null},"scallops"),(0,l.kt)("td",{parentName:"tr",align:null},"miso_soup")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"45"),(0,l.kt)("td",{parentName:"tr",align:null},"88"),(0,l.kt)("td",{parentName:"tr",align:null},"seaweed_salad"),(0,l.kt)("td",{parentName:"tr",align:null},"beet_salad")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"46"),(0,l.kt)("td",{parentName:"tr",align:null},"90"),(0,l.kt)("td",{parentName:"tr",align:null},"spaghetti_bolognese"),(0,l.kt)("td",{parentName:"tr",align:null},"spaghetti_carbonara, spaghetti_carbonara, spag...")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"47"),(0,l.kt)("td",{parentName:"tr",align:null},"92"),(0,l.kt)("td",{parentName:"tr",align:null},"spring_rolls"),(0,l.kt)("td",{parentName:"tr",align:null},"samosa")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"48"),(0,l.kt)("td",{parentName:"tr",align:null},"95"),(0,l.kt)("td",{parentName:"tr",align:null},"sushi"),(0,l.kt)("td",{parentName:"tr",align:null},"sashimi, sashimi")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"49"),(0,l.kt)("td",{parentName:"tr",align:null},"96"),(0,l.kt)("td",{parentName:"tr",align:null},"tacos"),(0,l.kt)("td",{parentName:"tr",align:null},"breakfast_burrito")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"50"),(0,l.kt)("td",{parentName:"tr",align:null},"97"),(0,l.kt)("td",{parentName:"tr",align:null},"takoyaki"),(0,l.kt)("td",{parentName:"tr",align:null},"poutine")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"51"),(0,l.kt)("td",{parentName:"tr",align:null},"99"),(0,l.kt)("td",{parentName:"tr",align:null},"tuna_tartare"),(0,l.kt)("td",{parentName:"tr",align:null},"guacamole")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"52"),(0,l.kt)("td",{parentName:"tr",align:null},"100"),(0,l.kt)("td",{parentName:"tr",align:null},"waffles"),(0,l.kt)("td",{parentName:"tr",align:null},"french_toast, hot_and_sour_soup")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'# visualize test images\nimages_displayed = 12\nstart_index = 0\nplt.figure(figsize=(15, 15))\n# create tuples from each df row\nfor i, row in enumerate(top_100_wrong[start_index:start_index+images_displayed].itertuples()):\n    plt.subplot(4, 3, i+1)\n    # row[1] => 2nd cell in row = image path\n    img = load_and_preprocess_image(row[1], normalize=False)\n    # extract confidence and labels from row\n    _, _, _, _, pred_conf, y_true_classname, y_pred_classname, _ = row\n    plt.imshow(img/255.)\n    plt.title(f"Pred: {y_pred_classname} ({pred_conf*100:.2f} %),\\nTrue: {y_true_classname}")\n    plt.axis(False)\n')),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Transfer Learning",src:e(78482).Z,width:"1125",height:"1218"})),(0,l.kt)("h3",{id:"predict-custom-images"},"Predict Custom Images"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# get list of custom image file paths\ncustom_images_path = \"../datasets/custom_images/\"\ncustom_images = [ custom_images_path + img_path for img_path in os.listdir(custom_images_path)]\ncustom_images\n\n# ['../datasets/custom_images/cheesecake.jpg',\n#  '../datasets/custom_images/crema_catalana.jpg',\n#  '../datasets/custom_images/fish_and_chips.jpg',\n#  '../datasets/custom_images/jiaozi.jpg',\n#  '../datasets/custom_images/paella.jpg',\n#  '../datasets/custom_images/pho.jpg',\n#  '../datasets/custom_images/quesadilla.jpg',\n#  '../datasets/custom_images/ravioli.jpg',\n#  '../datasets/custom_images/waffles.jpg']\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'# run prediction on custom images\nfor image in custom_images:\n    image = load_and_preprocess_image(image, normalize=False)\n    # test image is (224, 224, 3) but model expects batch shape (None, 224, 224, 3)\n    image_expanded = tf.expand_dims(image, axis=0)\n    # get probabilities over all classes\n    prediction_probabilities = model.predict(image_expanded)\n    # get classname for highest probability\n    predicted_class =  class_names_101_10[prediction_probabilities.argmax()]\n    # plot normalized image\n    plt.figure()\n    plt.imshow(image/255.)\n    plt.title(f"Pred: {predicted_class} ({prediction_probabilities.max()*100:.2f} %)")\n    plt.axis(False)\n')),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"Transfer Learning",src:e(47618).Z,width:"1006",height:"538"})))}s.isMDXComponent=!0},57162:(t,a,e)=>{e.d(a,{Z:()=>n});const n=e.p+"assets/images/04_Tensorflow_Transfer_Learning_13-8824025040dde3b775fb655ae0e6c10a.png"},22617:(t,a,e)=>{e.d(a,{Z:()=>n});const n=e.p+"assets/images/04_Tensorflow_Transfer_Learning_14-7ed644a206e1fb8bec377d851456fe34.png"},24395:(t,a,e)=>{e.d(a,{Z:()=>n});const n=e.p+"assets/images/04_Tensorflow_Transfer_Learning_15-75a1bf2813806c09cbbb56fbaf84021f.jpg"},54304:(t,a,e)=>{e.d(a,{Z:()=>n});const n=e.p+"assets/images/04_Tensorflow_Transfer_Learning_16-13aa4dfcc5267593d99a60558fad138f.png"},86611:(t,a,e)=>{e.d(a,{Z:()=>n});const n=e.p+"assets/images/04_Tensorflow_Transfer_Learning_17-ff63cbbffd4aa89f04f4621395e1fd66.png"},85639:(t,a,e)=>{e.d(a,{Z:()=>n});const n=e.p+"assets/images/04_Tensorflow_Transfer_Learning_18-bbcbddb578eeb29bd185b26a4e4672d6.png"},2972:(t,a,e)=>{e.d(a,{Z:()=>n});const n=e.p+"assets/images/04_Tensorflow_Transfer_Learning_19-9f2ea5fab719b8878b3ad10b63b3d69e.png"},78482:(t,a,e)=>{e.d(a,{Z:()=>n});const n=e.p+"assets/images/04_Tensorflow_Transfer_Learning_20-d0921bd7a21f17155873a7a67abfe0d5.png"},47618:(t,a,e)=>{e.d(a,{Z:()=>n});const n=e.p+"assets/images/04_Tensorflow_Transfer_Learning_21-bc16bf5ac7f720bc9e17e4cf84ea4a0b.png"},55791:(t,a,e)=>{e.d(a,{Z:()=>n});const n=e.p+"assets/images/hmmmm-0aa854f42905bbb37952c1b5e1e14729.gif"},61853:(t,a,e)=>{e.d(a,{Z:()=>n});const n=e.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-0617c01f21d40c2f06bb85d06aa2619b.jpg"}}]);