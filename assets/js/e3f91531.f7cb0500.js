"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[1508],{966946:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var r=s(785893),t=s(603905);const a={sidebar_position:9010,slug:"2020-06-23",title:"Saltstack Refresh Course 1: Setup",authors:"mpolinowski",tags:["LINUX","Salt"]},l=void 0,i={id:"DevOps/Salt/2020-06-23--saltestack-refresh-course-1-setup/index",title:"Saltstack Refresh Course 1: Setup",description:"Shenzhen, China",source:"@site/docs/DevOps/Salt/2020-06-23--saltestack-refresh-course-1-setup/index.md",sourceDirName:"DevOps/Salt/2020-06-23--saltestack-refresh-course-1-setup",slug:"/DevOps/Salt/2020-06-23--saltestack-refresh-course-1-setup/2020-06-23",permalink:"/docs/DevOps/Salt/2020-06-23--saltestack-refresh-course-1-setup/2020-06-23",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Salt/2020-06-23--saltestack-refresh-course-1-setup/index.md",tags:[{label:"LINUX",permalink:"/docs/tags/linux"},{label:"Salt",permalink:"/docs/tags/salt"}],version:"current",sidebarPosition:9010,frontMatter:{sidebar_position:9010,slug:"2020-06-23",title:"Saltstack Refresh Course 1: Setup",authors:"mpolinowski",tags:["LINUX","Salt"]},sidebar:"tutorialSidebar",previous:{title:"Saltstack Refresh Course 2: Salt State",permalink:"/docs/DevOps/Salt/2020-06-23--saltestack-refresh-course-2-salt-state/2020-06-23"},next:{title:"NGINX Salt State",permalink:"/docs/DevOps/Salt/2020-06-22--salt-nginx-state/2020-06-22"}},o={},d=[{value:"Installing Salt",id:"installing-salt",level:2},{value:"Setting up Salt (Manually)",id:"setting-up-salt-manually",level:2},{value:"Salt Command Line Interface",id:"salt-command-line-interface",level:2},{value:"manage.up",id:"manageup",level:3},{value:"cmd.run",id:"cmdrun",level:3},{value:"Execution Modules",id:"execution-modules",level:3},{value:"test.ping",id:"testping",level:4},{value:"user.add",id:"useradd",level:4},{value:"file.append",id:"fileappend",level:4},{value:"aptpkg / yumpkg",id:"aptpkg--yumpkg",level:4},{value:"Salt Grains, Pillars and SaltUtil",id:"salt-grains-pillars-and-saltutil",level:2}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.ah)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Shenzhen, China",src:s(558909).Z+"",width:"1500",height:"520"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#installing-salt",children:"Installing Salt"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#setting-up-salt-manually",children:"Setting up Salt (Manually)"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#salt-command-line-interface",children:"Salt Command Line Interface"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#manageup",children:"manage.up"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#cmdrun",children:"cmd.run"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#execution-modules",children:"Execution Modules"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#testping",children:"test.ping"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#useradd",children:"user.add"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#fileappend",children:"file.append"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#aptpkg--yumpkg",children:"aptpkg / yumpkg"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#salt-grains-pillars-and-saltutil",children:"Salt Grains, Pillars and SaltUtil"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"installing-salt",children:"Installing Salt"}),"\n",(0,r.jsx)(n.p,{children:"Installing Salt from a bash file:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\r\n# Install pip\r\ncurl https://bootstrap.pypa.io/get-pip.py | python\r\n\r\n# Install Salt\r\n/usr/local/bin/pip install salt\r\n\r\n# Configure Salt\r\nmkdir -p /etc/salt/minion.d/\r\necho "master: <My Master IP"> /etc/salt/minion.d/master.conf\r\necho "<My Minion ID>" > /etc/salt/minion_id\r\n\r\n# Run salt\r\n/usr/local/bin/salt-minion -d\n'})}),"\n",(0,r.jsx)(n.h2,{id:"setting-up-salt-manually",children:"Setting up Salt (Manually)"}),"\n",(0,r.jsxs)(n.p,{children:["Start by defining the Root directory for your ",(0,r.jsx)(n.strong,{children:"Salt Master"})," configuration files:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"nano /etc/salt/master.d/roots.conf\n"})}),"\n",(0,r.jsxs)(n.p,{children:["We are going to collect all our configuration files in the default ",(0,r.jsx)(n.code,{children:"mkdir -p /srv/salt/base"})," directory:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yml",children:"file_roots:\r\n  base:\r\n    - /srv/salt/base\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Now we need to tell our ",(0,r.jsx)(n.strong,{children:"Salt Minion"})," where to find the master server:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"nano /etc/salt/minion.d/master.conf\n"})}),"\n",(0,r.jsx)(n.p,{children:"In my case the master is running on the same server but I will still use the local IP:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"master: 192.168.2.110\n"})}),"\n",(0,r.jsxs)(n.p,{children:["We can now start the ",(0,r.jsx)(n.strong,{children:"Salt Minion"})," daemon and check the minion key with the following commands:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"salt-minion -d\r\nsalt-key\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Your minion should have send a connection request with a identifying key. Your master should have this key listed under ",(0,r.jsx)(n.em,{children:"Unaccepted Keys"}),". Since the key is not very readable we first want to change it. To do this we can first stop the minion process:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"systemctl stop salt-minion\r\nsystemctl status salt-minion\n"})}),"\n",(0,r.jsxs)(n.p,{children:["You can delete the old key with ",(0,r.jsx)(n.code,{children:"salt-key -d 'old-key'"}),". You can replace the key with something sensible, e.g. ",(0,r.jsx)(n.code,{children:"salt-master_minion"}),". For this we first have to find out the Master public key:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"salt-key --finger-all\r\n\r\nLocal Keys:\r\nmaster.pem:  f1:d3:52:eb:f4:...\r\nmaster.pub:  64:12:61:93:3e:...\n"})}),"\n",(0,r.jsxs)(n.p,{children:["And then add both the key and the desired Minion ID to our ",(0,r.jsx)(n.code,{children:"/etc/salt/minion.d/master.conf"})," file:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cfg",children:"# Set the location of the salt master server. If the master server cannot be\r\n# resolved, then the minion will fail to start.\r\nmaster: 192.168.2.110\r\n\r\n# Fingerprint of the master public key to validate the identity of your Salt master\r\n# before the initial key exchange. The master fingerprint can be found by running\r\n# \"salt-key -f master.pub\" on the Salt master.\r\nmaster_finger: '64:12:61:93:3e:...'\r\n\r\n# Explicitly declare the id for this minion to use, if left commented the id\r\n# will be the hostname as returned by the python call: socket.getfqdn()\r\n# Since salt uses detached ids it is possible to run multiple minions on the\r\n# same machine but with different ids, this can be useful for salt compute\r\n# clusters.\r\nid: salt-master_minion\n"})}),"\n",(0,r.jsx)(n.p,{children:"Now restart the minion with:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"systemctl start salt-minion\r\nsystemctl status salt-minion\n"})}),"\n",(0,r.jsxs)(n.p,{children:["If we re-run the key command we will now see our Minion key listed with the new name (below I added another server - so now I have the ",(0,r.jsx)(n.code,{children:"master_minion"})," and a regular ",(0,r.jsx)(n.code,{children:"minion"})," waiting for approval):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"salt-key\r\n\r\nAccepted Keys:\r\nDenied Keys:\r\nUnaccepted Keys:\r\nsalt-master_minion\r\nsalt-minion\n"})}),"\n",(0,r.jsx)(n.p,{children:"I can accept them with the following command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"salt-key -a salt-*\n"})}),"\n",(0,r.jsx)(n.h2,{id:"salt-command-line-interface",children:"Salt Command Line Interface"}),"\n",(0,r.jsx)(n.h3,{id:"manageup",children:"manage.up"}),"\n",(0,r.jsx)(n.p,{children:"We can now verify that all minions are up and ready:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"salt-run manage.up\r\n\r\n- salt-master_minion\r\n- salt-minion\n"})}),"\n",(0,r.jsx)(n.h3,{id:"cmdrun",children:"cmd.run"}),"\n",(0,r.jsx)(n.p,{children:"We can also execute commands directly on our minions:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"salt salt-minion cmd.run 'ls -lah /etc'\r\nsalt salt-minion cmd.run 'uptime'\r\nsalt salt-master_minion cmd.run 'hostname'\n"})}),"\n",(0,r.jsx)(n.h3,{id:"execution-modules",children:"Execution Modules"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://docs.saltstack.com/en/latest/ref/modules/all/index.html",children:"Salt Module Reference"})}),"\n",(0,r.jsx)(n.h4,{id:"testping",children:"test.ping"}),"\n",(0,r.jsx)(n.p,{children:"Module for running arbitrary tests"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://docs.saltstack.com/en/latest/ref/modules/all/salt.modules.test.html#module-salt.modules.test",children:"test"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"salt 'salt-*' test.ping\r\nsalt-master_minion:\r\n    True\r\nsalt-minion:\r\n    True\n"})}),"\n",(0,r.jsx)(n.h4,{id:"useradd",children:"user.add"}),"\n",(0,r.jsx)(n.p,{children:"Manage users with the useradd command"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://docs.saltstack.com/en/latest/ref/modules/all/salt.modules.useradd.html#module-salt.modules.useradd",children:"useradd"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"salt 'salt-minion' user.add 'zabbix'\r\n\r\nsalt-minion:\r\n    True\n"})}),"\n",(0,r.jsxs)(n.p,{children:["You can verify that the user was added on your Minion with ",(0,r.jsx)(n.code,{children:"cat /etc/passwd"}),". You can ",(0,r.jsx)(n.code,{children:"delete"})," the user (and ",(0,r.jsx)(n.code,{children:"remove"})," the home directory) with:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"salt 'salt-minion' user.delete zabbix remove=True force=True\n"})}),"\n",(0,r.jsx)(n.h4,{id:"fileappend",children:"file.append"}),"\n",(0,r.jsx)(n.p,{children:"Manage information about regular files, directories, and special files on the minion, set/read user, group, mode, and data."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://docs.saltstack.com/en/latest/ref/modules/all/salt.modules.file.html#module-salt.modules.file",children:"file"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"salt 'salt-minion' file.append /root/test 'Salty Dayz, Sailors'\r\n\r\nsalt-minion:\r\n    Wrote 1 lines to \"/root/test\"\n"})}),"\n",(0,r.jsx)(n.h4,{id:"aptpkg--yumpkg",children:"aptpkg / yumpkg"}),"\n",(0,r.jsx)(n.p,{children:"Support for APT (Advanced Packaging Tool)"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://docs.saltstack.com/en/latest/ref/modules/all/salt.modules.aptpkg.html#module-salt.modules.aptpkg",children:"aptpkg"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"salt '*' pkg.install git\n"})}),"\n",(0,r.jsx)(n.h2,{id:"salt-grains-pillars-and-saltutil",children:"Salt Grains, Pillars and SaltUtil"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Grains"})," return system variables"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"salt salt-minion grains.items\r\n\r\nsalt-minion:\r\n    ----------\r\n    apps:\r\n        ----------\r\n        port:\r\n            7777\r\n    biosreleasedate:\r\n        07/31/2018\r\n    biosversion:\r\n        0407\r\n    cpu_model:\r\n        Intel(R) Core(TM) i3-8130U CPU @ 2.20GHz\r\n    cpuarch:\r\n        x86_64\r\n    dns:\r\n        ----------\r\n        domain:\r\n        ip4_nameservers:\r\n            - 127.0.0.53\r\n        ip6_nameservers:\r\n        nameservers:\r\n            - 127.0.0.53\r\n        options:\r\n            - edns0\r\n        search:\r\n            - workgroup\r\n        sortlist:\r\n    domain:\r\n    fqdn:\r\n        salt-minion\r\n    fqdn_ip4:\r\n        - 127.0.1.1\r\n    fqdn_ip6:\r\n    fqdns:\r\n        - registry.salt-minion\r\n        - salt-minion\r\n\r\n...\n"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Pillars"})," should be used to store secrets (SSH logins, api keys, etc.). Those information are stored on the master server and only securely transferred to the minion server that needs the information. Pillar data has to be synced using the ",(0,r.jsx)(n.strong,{children:"SaltUtil"})," accordingly."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"salt salt-minion saltutil.pillar_refresh\r\nsalt-minion:\r\n    True\r\n\r\nsalt salt-minion saltutil.sync_all\r\nsalt-minion:\r\n    ----------\r\n    beacons:\r\n    clouds:\r\n    engines:\r\n    executors:\r\n    grains:\r\n    log_handlers:\r\n    matchers:\r\n    modules:\r\n    output:\r\n    proxymodules:\r\n    renderers:\r\n    returners:\r\n    sdb:\r\n    serializers:\r\n    states:\r\n    thorium:\r\n    utils:\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.ah)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},603905:(e,n,s)=>{s.d(n,{ah:()=>d});var r=s(667294);function t(e,n,s){return n in e?Object.defineProperty(e,n,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[n]=s,e}function a(e,n){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),s.push.apply(s,r)}return s}function l(e){for(var n=1;n<arguments.length;n++){var s=null!=arguments[n]?arguments[n]:{};n%2?a(Object(s),!0).forEach((function(n){t(e,n,s[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):a(Object(s)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(s,n))}))}return e}function i(e,n){if(null==e)return{};var s,r,t=function(e,n){if(null==e)return{};var s,r,t={},a=Object.keys(e);for(r=0;r<a.length;r++)s=a[r],n.indexOf(s)>=0||(t[s]=e[s]);return t}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)s=a[r],n.indexOf(s)>=0||Object.prototype.propertyIsEnumerable.call(e,s)&&(t[s]=e[s])}return t}var o=r.createContext({}),d=function(e){var n=r.useContext(o),s=n;return e&&(s="function"==typeof e?e(n):l(l({},n),e)),s},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},h=r.forwardRef((function(e,n){var s=e.components,t=e.mdxType,a=e.originalType,o=e.parentName,h=i(e,["components","mdxType","originalType","parentName"]),u=d(s),m=t,p=u["".concat(o,".").concat(m)]||u[m]||c[m]||a;return s?r.createElement(p,l(l({ref:n},h),{},{components:s})):r.createElement(p,l({ref:n},h))}));h.displayName="MDXCreateElement"},558909:(e,n,s)=>{s.d(n,{Z:()=>r});const r=s.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-2215e4912b7f3d1beed1d8b83bac94aa.jpg"}}]);