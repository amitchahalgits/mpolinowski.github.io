"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[84637],{70565:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>o,frontMatter:()=>l,metadata:()=>r,toc:()=>c});var d=i(474848),s=i(28453);const l={sidebar_position:4480,slug:"2023-04-11",title:"Locally Linear Embedding (LLE)",authors:"mpolinowski",tags:["Python","Machine Learning"],description:"LLE is an unsupervised learning algorithm that computes low dimensional, neighborhood preserving embeddings of high dimensional data."},t="Dimensionality Reduction",r={id:"IoT-and-Machine-Learning/ML/2023-04-11-locally-linear-embedding/index",title:"Locally Linear Embedding (LLE)",description:"LLE is an unsupervised learning algorithm that computes low dimensional, neighborhood preserving embeddings of high dimensional data.",source:"@site/docs/IoT-and-Machine-Learning/ML/2023-04-11-locally-linear-embedding/index.md",sourceDirName:"IoT-and-Machine-Learning/ML/2023-04-11-locally-linear-embedding",slug:"/IoT-and-Machine-Learning/ML/2023-04-11-locally-linear-embedding/2023-04-11",permalink:"/docs/IoT-and-Machine-Learning/ML/2023-04-11-locally-linear-embedding/2023-04-11",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IoT-and-Machine-Learning/ML/2023-04-11-locally-linear-embedding/index.md",tags:[{label:"Python",permalink:"/docs/tags/python"},{label:"Machine Learning",permalink:"/docs/tags/machine-learning"}],version:"current",sidebarPosition:4480,frontMatter:{sidebar_position:4480,slug:"2023-04-11",title:"Locally Linear Embedding (LLE)",authors:"mpolinowski",tags:["Python","Machine Learning"],description:"LLE is an unsupervised learning algorithm that computes low dimensional, neighborhood preserving embeddings of high dimensional data."},sidebar:"tutorialSidebar",previous:{title:"tStochastic Neighbor Embedding (t-SNE)",permalink:"/docs/IoT-and-Machine-Learning/ML/2023-04-12-tstochastic-neighbor-embedding/2023-04-12"},next:{title:"Principal Component Analysis (PCA)",permalink:"/docs/IoT-and-Machine-Learning/ML/2023-04-09-principal-component-analysis/2023-04-09"}},a={},c=[{value:"Dataset",id:"dataset",level:2},{value:"Locally Linear Embedding",id:"locally-linear-embedding",level:2},{value:"2-Dimensional Plot",id:"2-dimensional-plot",level:3},{value:"3-Dimensional Plot",id:"3-dimensional-plot",level:3}];function h(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.p,{children:(0,d.jsx)(n.img,{alt:"Victoria Harbour, Hongkong",src:i(383459).A+"",width:"2385",height:"858"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.a,{href:"#dimensionality-reduction",children:"Dimensionality Reduction"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"#dataset",children:"Dataset"})}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.a,{href:"#locally-linear-embedding",children:"Locally Linear Embedding"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"#2-dimensional-plot",children:"2-Dimensional Plot"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"#3-dimensional-plot",children:"3-Dimensional Plot"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"https://github.com/mpolinowski/local-linear-embedding",children:"Github Repository"})}),"\n",(0,d.jsx)(n.h1,{id:"dimensionality-reduction",children:"Dimensionality Reduction"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.a,{href:"https://scikit-learn.org/stable/modules/manifold.html",children:"Manifold learning"})," is an approach to non-linear dimensionality reduction. Algorithms for this task are based on the idea that the dimensionality of many data sets is only artificially high."]}),"\n",(0,d.jsx)(n.p,{children:"High-dimensional datasets can be very difficult to visualize. While data in two or three dimensions can be plotted to show the inherent structure of the data, equivalent high-dimensional plots are much less intuitive. To aid visualization of the structure of a dataset, the dimension must be reduced in some way."}),"\n",(0,d.jsx)(n.p,{children:"The simplest way to accomplish this dimensionality reduction is by taking a random projection of the data. Though this allows some degree of visualization of the data structure, the randomness of the choice leaves much to be desired. In a random projection, it is likely that the more interesting structure within the data will be lost."}),"\n",(0,d.jsx)(n.p,{children:"To address this concern, a number of supervised and unsupervised linear dimensionality reduction frameworks have been designed, such as:"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"/docs/IoT-and-Machine-Learning/ML/2023-04-09-principal-component-analysis/2023-04-09",children:"Principal Component Analysis (PCA)"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"/docs/IoT-and-Machine-Learning/ML/2023-04-11-locally-linear-embedding/2023-04-11",children:"Locally Linear Embedding (LLE)"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"/docs/IoT-and-Machine-Learning/ML/2023-04-12-tstochastic-neighbor-embedding/2023-04-12",children:"tStochastic Neighbor Embedding (t-SNE)"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"/docs/IoT-and-Machine-Learning/ML/2023-04-13-multi-dimensional-scaling/2023-04-13",children:"Multidimensional Scaling (MDS)"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"/docs/IoT-and-Machine-Learning/ML/2023-04-13-isometric-mapping/2023-04-13",children:"Isometric Mapping (ISOMAP)"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"/docs/IoT-and-Machine-Learning/ML/2023-04-13-multi-dimensional-scaling/2023-04-13",children:"Fisher Linear Discriminant Analysis (LDA)"})}),"\n"]}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.a,{href:"https://cs.nyu.edu/~roweis/lle/papers/lleintro.pdf",children:"An Introduction to Locally Linear Embedding"}),": Many problems in information processing involve some form of dimensionality reduction. Here we describe locally linear embedding (LLE), an unsupervised learning algorithm that computes low dimensional, neighborhood preserving embeddings of high dimensional data. LLE attempts to discover nonlinear structure in high dimensional data by exploiting the local symmetries of linear reconstructions.\n",(0,d.jsx)(n.code,{children:"Lawrence K. Saul"}),", ",(0,d.jsx)(n.code,{children:"Sam T. Roweis"})]}),"\n"]}),"\n",(0,d.jsx)(n.h2,{id:"dataset",children:"Dataset"}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.a,{href:"https://www.researchgate.net/publication/243766527_A_multivariate_study_of_variation_in_two_species_of_rock_crab_of_genus_Leptograpsus",children:"A multivariate study of variation in two species of rock crab of genus Leptograpsus"}),": A multivariate approach has been used to study morphological variation in the blue and orange-form species of rock crab of the genus Leptograpsus. Objective criteria for the identification of the two species are established, based on the following characters:"]}),"\n"]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"SP"}),": Species (Blue or Orange)"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Sex"}),": Male or Female"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"FL"}),": Width of the frontal region of the carapace;"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"RW"}),": Width of the posterior region of the carapace (rear width);"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"CL"}),": Length of the carapace along the midline;"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"CW"}),": Maximum width of the carapace;"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"BD"}),": and the depth of the body;"]}),"\n"]}),"\n",(0,d.jsxs)(n.p,{children:["The dataset can be ",(0,d.jsx)(n.a,{href:"https://github.com/tercen/crabs_dataset",children:"downloaded from Github"}),"."]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsxs)(n.em,{children:["(see introduction in: ",(0,d.jsx)(n.a,{href:"https://mpolinowski.github.io/docs/IoT-and-Machine-Learning/ML/2023-04-09-principal-component-analysis/2023-04-09",children:"Principal Component Analysis PCA"}),")"]})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"raw_data = pd.read_csv('data/A_multivariate_study_of_variation_in_two_species_of_rock_crab_of_genus_Leptograpsus.csv')\n\ndata = raw_data.rename(columns={\n    'sp' : 'Species',\n    'sex' : 'Sex',\n    'index' : 'Index',\n    'FL' : 'Frontal Lobe',\n    'RW' : 'Rear Width',\n    'CL' : 'Carapace Midline',\n    'CW' : 'Maximum Width',\n    'BD' : 'Body Depth'\n})\n\ndata['Species'] = data['Species'].map({'B':'Blue', 'O':'Orange'})\ndata['Sex'] = data['Sex'].map({'M':'Male', 'F':'Female'})\n\ndata.head(5)\n"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{}),(0,d.jsx)(n.th,{children:"Species"}),(0,d.jsx)(n.th,{children:"Sex"}),(0,d.jsx)(n.th,{children:"Index"}),(0,d.jsx)(n.th,{children:"Frontal Lobe"}),(0,d.jsx)(n.th,{children:"Rear Width"}),(0,d.jsx)(n.th,{children:"Carapace Midline"}),(0,d.jsx)(n.th,{children:"Maximum Width"}),(0,d.jsx)(n.th,{children:"Body Depth"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"0"}),(0,d.jsx)(n.td,{children:"Blue"}),(0,d.jsx)(n.td,{children:"Male"}),(0,d.jsx)(n.td,{children:"1"}),(0,d.jsx)(n.td,{children:"8.1"}),(0,d.jsx)(n.td,{children:"6.7"}),(0,d.jsx)(n.td,{children:"16.1"}),(0,d.jsx)(n.td,{children:"19.0"}),(0,d.jsx)(n.td,{children:"7.0"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"1"}),(0,d.jsx)(n.td,{children:"Blue"}),(0,d.jsx)(n.td,{children:"Male"}),(0,d.jsx)(n.td,{children:"2"}),(0,d.jsx)(n.td,{children:"8.8"}),(0,d.jsx)(n.td,{children:"7.7"}),(0,d.jsx)(n.td,{children:"18.1"}),(0,d.jsx)(n.td,{children:"20.8"}),(0,d.jsx)(n.td,{children:"7.4"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"2"}),(0,d.jsx)(n.td,{children:"Blue"}),(0,d.jsx)(n.td,{children:"Male"}),(0,d.jsx)(n.td,{children:"3"}),(0,d.jsx)(n.td,{children:"9.2"}),(0,d.jsx)(n.td,{children:"7.8"}),(0,d.jsx)(n.td,{children:"19.0"}),(0,d.jsx)(n.td,{children:"22.4"}),(0,d.jsx)(n.td,{children:"7.7"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"3"}),(0,d.jsx)(n.td,{children:"Blue"}),(0,d.jsx)(n.td,{children:"Male"}),(0,d.jsx)(n.td,{children:"4"}),(0,d.jsx)(n.td,{children:"9.6"}),(0,d.jsx)(n.td,{children:"7.9"}),(0,d.jsx)(n.td,{children:"20.1"}),(0,d.jsx)(n.td,{children:"23.1"}),(0,d.jsx)(n.td,{children:"8.2"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"4"}),(0,d.jsx)(n.td,{children:"Blue"}),(0,d.jsx)(n.td,{children:"Male"}),(0,d.jsx)(n.td,{children:"5"}),(0,d.jsx)(n.td,{children:"9.8"}),(0,d.jsx)(n.td,{children:"8.0"}),(0,d.jsx)(n.td,{children:"20.3"}),(0,d.jsx)(n.td,{children:"23.0"}),(0,d.jsx)(n.td,{children:"8.2"})]})]})]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"# generate a class variable for all 4 classes\ndata['Class'] = data.Species + data.Sex\n\nprint(data['Class'].value_counts())\ndata.head(1)\n"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["BlueMale: ",(0,d.jsx)(n.code,{children:"50"})]}),"\n",(0,d.jsxs)(n.li,{children:["BlueFemale: ",(0,d.jsx)(n.code,{children:"50"})]}),"\n",(0,d.jsxs)(n.li,{children:["OrangeMale: ",(0,d.jsx)(n.code,{children:"50"})]}),"\n",(0,d.jsxs)(n.li,{children:["OrangeFemale: ",(0,d.jsx)(n.code,{children:"50"})]}),"\n"]}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{}),(0,d.jsx)(n.th,{children:"species"}),(0,d.jsx)(n.th,{children:"sex"}),(0,d.jsx)(n.th,{children:"index"}),(0,d.jsx)(n.th,{children:"Frontal Lobe"}),(0,d.jsx)(n.th,{children:"Rear Width"}),(0,d.jsx)(n.th,{children:"Carapace Midline"}),(0,d.jsx)(n.th,{children:"Maximum Width"}),(0,d.jsx)(n.th,{children:"Body Depth"}),(0,d.jsx)(n.th,{children:"Class"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"0"}),(0,d.jsx)(n.td,{children:"Blue"}),(0,d.jsx)(n.td,{children:"Male"}),(0,d.jsx)(n.td,{children:"1"}),(0,d.jsx)(n.td,{children:"8.1"}),(0,d.jsx)(n.td,{children:"6.7"}),(0,d.jsx)(n.td,{children:"16.1"}),(0,d.jsx)(n.td,{children:"19.0"}),(0,d.jsx)(n.td,{children:"7.0"}),(0,d.jsx)(n.td,{children:"BlueMale"})]})})]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"data_columns = ['Frontal Lobe', 'Rear Width', 'Carapace Midline', 'Maximum Width', 'Body Depth']\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"# normalizing each feature to a given range to make them compareable\ndata_norm = data.copy()\ndata_norm[data_columns] = MinMaxScaler().fit_transform(data[data_columns])\n\ndata_norm.head()\n"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{}),(0,d.jsx)(n.th,{children:"species"}),(0,d.jsx)(n.th,{children:"sex"}),(0,d.jsx)(n.th,{children:"index"}),(0,d.jsx)(n.th,{children:"Frontal Lobe"}),(0,d.jsx)(n.th,{children:"Rear Width"}),(0,d.jsx)(n.th,{children:"Carapace Midline"}),(0,d.jsx)(n.th,{children:"Maximum Width"}),(0,d.jsx)(n.th,{children:"Body Depth"}),(0,d.jsx)(n.th,{children:"Class"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"0"}),(0,d.jsx)(n.td,{children:"Blue"}),(0,d.jsx)(n.td,{children:"Male"}),(0,d.jsx)(n.td,{children:"1"}),(0,d.jsx)(n.td,{children:"0.056604"}),(0,d.jsx)(n.td,{children:"0.014599"}),(0,d.jsx)(n.td,{children:"0.042553"}),(0,d.jsx)(n.td,{children:"0.050667"}),(0,d.jsx)(n.td,{children:"0.058065"}),(0,d.jsx)(n.td,{children:"BlueMale"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"1"}),(0,d.jsx)(n.td,{children:"Blue"}),(0,d.jsx)(n.td,{children:"Male"}),(0,d.jsx)(n.td,{children:"2"}),(0,d.jsx)(n.td,{children:"0.100629"}),(0,d.jsx)(n.td,{children:"0.087591"}),(0,d.jsx)(n.td,{children:"0.103343"}),(0,d.jsx)(n.td,{children:"0.098667"}),(0,d.jsx)(n.td,{children:"0.083871"}),(0,d.jsx)(n.td,{children:"BlueMale"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"2"}),(0,d.jsx)(n.td,{children:"Blue"}),(0,d.jsx)(n.td,{children:"Male"}),(0,d.jsx)(n.td,{children:"3"}),(0,d.jsx)(n.td,{children:"0.125786"}),(0,d.jsx)(n.td,{children:"0.094891"}),(0,d.jsx)(n.td,{children:"0.130699"}),(0,d.jsx)(n.td,{children:"0.141333"}),(0,d.jsx)(n.td,{children:"0.103226"}),(0,d.jsx)(n.td,{children:"BlueMale"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"3"}),(0,d.jsx)(n.td,{children:"Blue"}),(0,d.jsx)(n.td,{children:"Male"}),(0,d.jsx)(n.td,{children:"4"}),(0,d.jsx)(n.td,{children:"0.150943"}),(0,d.jsx)(n.td,{children:"0.102190"}),(0,d.jsx)(n.td,{children:"0.164134"}),(0,d.jsx)(n.td,{children:"0.160000"}),(0,d.jsx)(n.td,{children:"0.135484"}),(0,d.jsx)(n.td,{children:"BlueMale"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"4"}),(0,d.jsx)(n.td,{children:"Blue"}),(0,d.jsx)(n.td,{children:"Male"}),(0,d.jsx)(n.td,{children:"5"}),(0,d.jsx)(n.td,{children:"0.163522"}),(0,d.jsx)(n.td,{children:"0.109489"}),(0,d.jsx)(n.td,{children:"0.170213"}),(0,d.jsx)(n.td,{children:"0.157333"}),(0,d.jsx)(n.td,{children:"0.135484"}),(0,d.jsx)(n.td,{children:"BlueMale"})]})]})]}),"\n",(0,d.jsx)(n.h2,{id:"locally-linear-embedding",children:"Locally Linear Embedding"}),"\n",(0,d.jsxs)(n.p,{children:["The standard ",(0,d.jsx)(n.a,{href:"https://scikit-learn.org/stable/modules/manifold.html#locally-linear-embedding",children:"LLE algorithm"})," has the following stages:"]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Nearest Neighbors Search"}),": The data is projected into a lower dimensional space while trying to preserve distances between neighbors."]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Weight Matrix Construction"}),": The weight matrix contains the information that preserves the reconstruction of the input data with fewer dimensions."]}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"# number of components = data columns = 5\n# to reduce dimensionality we are going to discard 3\nno_components = 3\nno_neighbors = 15\nlle = LocallyLinearEmbedding(n_components = no_components, n_neighbors = no_neighbors)\n\ndata_lle = lle.fit_transform(data_norm[data_columns])\n\n# Note that the reconstruction error increases when adding dimensions\nprint('Reconstruction Error: ', lle.reconstruction_error_)\n# with no_components=3 I get:\n# Reconstruction Error:  1.5214133597467682e-05\n# with no_components=2:\n# Reconstruction Error:  2.1530288023162284e-06\n\n# data_lle contains 1 column for each component\n# we can add them to our normalized data set\ndata_norm[['LLE1', 'LLE2', 'LLE3']] = data_lle\n\ndata_norm.head()\n"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{}),(0,d.jsx)(n.th,{children:"Species"}),(0,d.jsx)(n.th,{children:"Sex"}),(0,d.jsx)(n.th,{children:"Index"}),(0,d.jsx)(n.th,{children:"Frontal Lobe"}),(0,d.jsx)(n.th,{children:"Rear Width"}),(0,d.jsx)(n.th,{children:"Carapace Midline"}),(0,d.jsx)(n.th,{children:"Maximum Width"}),(0,d.jsx)(n.th,{children:"Body Depth"}),(0,d.jsx)(n.th,{children:"Class"}),(0,d.jsx)(n.th,{children:"LLE1"}),(0,d.jsx)(n.th,{children:"LLE2"}),(0,d.jsx)(n.th,{children:"LLE3"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"0"}),(0,d.jsx)(n.td,{children:"Blue"}),(0,d.jsx)(n.td,{children:"Male"}),(0,d.jsx)(n.td,{children:"1"}),(0,d.jsx)(n.td,{children:"0.056604"}),(0,d.jsx)(n.td,{children:"0.014599"}),(0,d.jsx)(n.td,{children:"0.042553"}),(0,d.jsx)(n.td,{children:"0.050667"}),(0,d.jsx)(n.td,{children:"0.058065"}),(0,d.jsx)(n.td,{children:"BlueMale"}),(0,d.jsx)(n.td,{children:"-0.145449"}),(0,d.jsx)(n.td,{children:"0.060973"}),(0,d.jsx)(n.td,{children:"0.092920"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"1"}),(0,d.jsx)(n.td,{children:"Blue"}),(0,d.jsx)(n.td,{children:"Male"}),(0,d.jsx)(n.td,{children:"2"}),(0,d.jsx)(n.td,{children:"0.100629"}),(0,d.jsx)(n.td,{children:"0.087591"}),(0,d.jsx)(n.td,{children:"0.103343"}),(0,d.jsx)(n.td,{children:"0.098667"}),(0,d.jsx)(n.td,{children:"0.083871"}),(0,d.jsx)(n.td,{children:"BlueMale"}),(0,d.jsx)(n.td,{children:"-0.133111"}),(0,d.jsx)(n.td,{children:"0.057664"}),(0,d.jsx)(n.td,{children:"0.059493"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"2"}),(0,d.jsx)(n.td,{children:"Blue"}),(0,d.jsx)(n.td,{children:"Male"}),(0,d.jsx)(n.td,{children:"3"}),(0,d.jsx)(n.td,{children:"0.125786"}),(0,d.jsx)(n.td,{children:"0.094891"}),(0,d.jsx)(n.td,{children:"0.130699"}),(0,d.jsx)(n.td,{children:"0.141333"}),(0,d.jsx)(n.td,{children:"0.103226"}),(0,d.jsx)(n.td,{children:"BlueMale"}),(0,d.jsx)(n.td,{children:"-0.126506"}),(0,d.jsx)(n.td,{children:"0.053316"}),(0,d.jsx)(n.td,{children:"0.053484"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"3"}),(0,d.jsx)(n.td,{children:"Blue"}),(0,d.jsx)(n.td,{children:"Male"}),(0,d.jsx)(n.td,{children:"4"}),(0,d.jsx)(n.td,{children:"0.150943"}),(0,d.jsx)(n.td,{children:"0.102190"}),(0,d.jsx)(n.td,{children:"0.164134"}),(0,d.jsx)(n.td,{children:"0.160000"}),(0,d.jsx)(n.td,{children:"0.135484"}),(0,d.jsx)(n.td,{children:"BlueMale"}),(0,d.jsx)(n.td,{children:"-0.118650"}),(0,d.jsx)(n.td,{children:"0.028331"}),(0,d.jsx)(n.td,{children:"0.059578"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"4"}),(0,d.jsx)(n.td,{children:"Blue"}),(0,d.jsx)(n.td,{children:"Male"}),(0,d.jsx)(n.td,{children:"5"}),(0,d.jsx)(n.td,{children:"0.163522"}),(0,d.jsx)(n.td,{children:"0.109489"}),(0,d.jsx)(n.td,{children:"0.170213"}),(0,d.jsx)(n.td,{children:"0.157333"}),(0,d.jsx)(n.td,{children:"0.135484"}),(0,d.jsx)(n.td,{children:"BlueMale"}),(0,d.jsx)(n.td,{children:"-0.117088"}),(0,d.jsx)(n.td,{children:"0.022013"}),(0,d.jsx)(n.td,{children:"0.060005"})]})]})]}),"\n",(0,d.jsx)(n.h3,{id:"2-dimensional-plot",children:"2-Dimensional Plot"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"fig = plt.figure(figsize=(10, 8))\nsns.scatterplot(data=data_norm, x='LLE1', y='LLE2', hue='Class')\n"})}),"\n",(0,d.jsx)(n.p,{children:"Already the 2d projection allows us to distinguish between the two species - Orange and Blue:"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.img,{alt:"Local Linear Embedding",src:i(802582).A+"",width:"866",height:"679"})}),"\n",(0,d.jsx)(n.h3,{id:"3-dimensional-plot",children:"3-Dimensional Plot"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"class_colours = {\n    'BlueMale': '#0027c4', #blue\n    'BlueFemale': '#f18b0a', #orange\n    'OrangeMale': '#0af10a', # green\n    'OrangeFemale': '#ff1500', #red\n}\n\ncolours = data['Class'].apply(lambda x: class_colours[x])\n\nx=data_norm.LLE1\ny=data_norm.LLE2\nz=data_norm.LLE3\n\nfig = plt.figure(figsize=(10,10))\nax = fig.add_subplot(projection='3d')\n\nax.scatter(xs=x, ys=y, zs=z, s=50, c=colours)\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.img,{alt:"Local Linear Embedding",src:i(616557).A+"",width:"794",height:"790"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"plot = px.scatter_3d(\n    data_norm,\n    x = 'LLE1',\n    y = 'LLE2',\n    z='LLE3',\n    color='Class')\n\nplot.show()\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.img,{alt:"Local Linear Embedding",src:i(362660).A+"",width:"1519",height:"452"})})]})}function o(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}},802582:(e,n,i)=>{i.d(n,{A:()=>d});const d=i.p+"assets/images/Local_Linear_Embedding_01-017de33597d8804c21f863744eb53d54.png"},616557:(e,n,i)=>{i.d(n,{A:()=>d});const d=i.p+"assets/images/Local_Linear_Embedding_02-5c77886e89e6a5afed5b4d401b8027cb.png"},362660:(e,n,i)=>{i.d(n,{A:()=>d});const d=i.p+"assets/images/Local_Linear_Embedding_03-3c9573668d8424c741a330d80848c8b5.png"},383459:(e,n,i)=>{i.d(n,{A:()=>d});const d=i.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-936fe81d44bf1beb4563551aafeb5788.jpg"},28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>r});var d=i(296540);const s={},l=d.createContext(s);function t(e){const n=d.useContext(l);return d.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),d.createElement(l.Provider,{value:n},e.children)}}}]);