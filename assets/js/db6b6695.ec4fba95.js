"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[29161],{125712:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>o});var s=a(785893),t=a(603905);const l={sidebar_position:3930,slug:"2022-12-03",title:"Hashicorp Vault - Installation 2023",authors:"mpolinowski",tags:["Vault","LINUX"],description:"Getting started with Hashicorp Vault"},i=void 0,r={id:"DevOps/Hashicorp/2022-12-03-hashicorp-vault-installation/index",title:"Hashicorp Vault - Installation 2023",description:"Getting started with Hashicorp Vault",source:"@site/docs/DevOps/Hashicorp/2022-12-03-hashicorp-vault-installation/index.md",sourceDirName:"DevOps/Hashicorp/2022-12-03-hashicorp-vault-installation",slug:"/DevOps/Hashicorp/2022-12-03-hashicorp-vault-installation/2022-12-03",permalink:"/docs/DevOps/Hashicorp/2022-12-03-hashicorp-vault-installation/2022-12-03",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Hashicorp/2022-12-03-hashicorp-vault-installation/index.md",tags:[{label:"Vault",permalink:"/docs/tags/vault"},{label:"LINUX",permalink:"/docs/tags/linux"}],version:"current",sidebarPosition:3930,frontMatter:{sidebar_position:3930,slug:"2022-12-03",title:"Hashicorp Vault - Installation 2023",authors:"mpolinowski",tags:["Vault","LINUX"],description:"Getting started with Hashicorp Vault"},sidebar:"tutorialSidebar",previous:{title:"Hashicorp Consul - Vault Cert Management Part 1",permalink:"/docs/DevOps/Hashicorp/2022-12-04-hashicorp-consul-vault-certificates-part1/2022-12-04"},next:{title:"Hashicorp Nomad - Working with Consul Connect",permalink:"/docs/DevOps/Hashicorp/2022-11-24-hashicorp-consul-connect/2022-11-24"}},c={},o=[{value:"Installation",id:"installation",level:2},{value:"Configuring Vault Storage",id:"configuring-vault-storage",level:3},{value:"Configuring HTTP Access",id:"configuring-http-access",level:3},{value:"Initialize Vault server",id:"initialize-vault-server",level:3},{value:"Seal/Unseal",id:"sealunseal",level:3},{value:"Vault Login",id:"vault-login",level:3},{value:"Start using Vault",id:"start-using-vault",level:2},{value:"Advanced Use-cases",id:"advanced-use-cases",level:3}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.ah)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Shen Zhen, China",src:a(399262).Z+"",width:"2230",height:"839"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#installation",children:"Installation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#configuring-vault-storage",children:"Configuring Vault Storage"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#configuring-http-access",children:"Configuring HTTP Access"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#initialize-vault-server",children:"Initialize Vault server"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#sealunseal",children:"Seal/Unseal"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#vault-login",children:"Vault Login"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#start-using-vault",children:"Start using Vault"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#advanced-use-cases",children:"Advanced Use-cases"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Vault takes the security burden away from developers by providing a secure, centralized secret store for an application\u2019s sensitive data: credentials, certificates, encryption keys, and more."}),"\n",(0,s.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(n.p,{children:"Add PGP for the package signing key (can be skipped if you already installed other Hashicorp products):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo apt update && sudo apt install gpg\n"})}),"\n",(0,s.jsx)(n.p,{children:"Add the HashiCorp GPG key (can be skipped if you already installed other Hashicorp products):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg >/dev/null\n"})}),"\n",(0,s.jsx)(n.p,{children:"Add the official HashiCorp Linux repository (can be skipped if you already installed other Hashicorp products):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list\n'})}),"\n",(0,s.jsx)(n.p,{children:"Update and install:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo apt update && sudo apt install vault\n\nvault -v                                                                                                                   \nVault v1.12.2 (415e1fe3118eebd5df6cb60d13defdc01aa17b03), built 2022-11-23T12:53:46Z\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"ls -la /etc/vault.d\n-rw-r--r--  1 vault vault    0 Nov 23 21:55 vault.env\n-rw-r--r--  1 vault vault  975 Nov 23 21:55 vault.hcl\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"ls -la /opt/vault/tls\n-rw------- 1 vault vault 1850 Dec  4 05:37 tls.crt\n-rw------- 1 vault vault 3272 Dec  4 05:37 tls.key\n"})}),"\n",(0,s.jsx)(n.h3,{id:"configuring-vault-storage",children:"Configuring Vault Storage"}),"\n",(0,s.jsx)(n.p,{children:"Vault can either store it's data internally:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"/etc/vault.d/vault.hcl"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'storage "raft" {\n  path    = "./vault/data"\n  node_id = "node1"\n}\n\nstorage "file" {\n  path = "/opt/vault/data"\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Or use Consul:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"/etc/vault.d/vault.hcl"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'storage "consul" {\n address = "127.0.0.1:8500"\n path    = "vault"\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["If you want to use Consul make sure that the ",(0,s.jsx)(n.strong,{children:"HTTP port"})," is configured in accordingly:"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"/etc/consul.d/server.hcl"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"ports {\n  grpc  = 8503\n  grpc_tls = 8502\n  dns = -1\n  http = 8500\n  https = 8501\n  serf_lan = 8301\n  serf_wan = 8302\n  server = 8300\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"configuring-http-access",children:"Configuring HTTP Access"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"/etc/vault.d/vault.hcl"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# HTTP listener\nlistener "tcp" {\n address = "127.0.0.1:8200"\n tls_disable = 1\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["One or more listeners determine how Vault listens for API requests. The example above listens on localhost port ",(0,s.jsx)(n.code,{children:"8200"})," without TLS. We can add another listener for the HTTPS connection"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"/etc/vault.d/vault.hcl"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# HTTPS listener\nlistener "tcp" {\n  address       = "my.server.ip.or.domain:8201"\n  tls_cert_file = "/opt/vault/tls/tls.crt"\n  tls_key_file  = "/opt/vault/tls/tls.key"\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Enable the Vault service:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"systemctl enable vault\nsystemctl start vault\n"})}),"\n",(0,s.jsx)(n.h3,{id:"initialize-vault-server",children:"Initialize Vault server"}),"\n",(0,s.jsxs)(n.p,{children:["Run the following command to initialize Vault server and receive an ",(0,s.jsx)(n.a,{href:"https://developer.hashicorp.com/vault/docs/concepts/seal",children:"unseal key"})," and initial ",(0,s.jsx)(n.a,{href:"https://developer.hashicorp.com/vault/docs/concepts/tokens",children:"root token"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"vault operator init\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Error Message"}),": ",(0,s.jsx)(n.code,{children:"http: server gave HTTP response to HTTPS client"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"In your environment set the Vault address so the Vault client will connect without TLS. Add the following to your shell config:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"export VAULT_ADDR=http://127.0.0.1:8200\n"})}),"\n",(0,s.jsx)(n.p,{children:"Now it works:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'vault operator init                                                                                                        \nUnseal Key 1: 4jYbl2CBIv6SpkKj6Hos9iD32k5RfGkLzlosrrq/JgOm\nUnseal Key 2: B05G1DRtfYckFV5BbdBvXq0wkK5HFqB9g2jcDmNfTQiS\nUnseal Key 3: Arig0N9rN9ezkTRo7qTB7gsIZDaonOcc53EHo83F5chA\nUnseal Key 4: 0cZE0C/gEk3YHaKjIWxhyyfs8REhqkRW/CSXTnmTilv+\nUnseal Key 5: fYhZOseRgzxmJCmIqUdxEm9C3jB5Q27AowER9w4FC2Ck\n\nInitial Root Token: s.KkNJYWF5g0pomcCLEmDdOVCW\n\nVault initialized with 5 key shares and a key threshold of 3. Please securely\ndistribute the key shares printed above. When the Vault is re-sealed,\nrestarted, or stopped, you must supply at least 3 of these keys to unseal it\nbefore it can start servicing requests.\n\nVault does not store the generated root key. Without at least 3 keys to\nreconstruct the root key, Vault will remain permanently sealed!\n\nIt is possible to generate new unseal keys, provided you have a quorum of\nexisting unseal keys shares. See "vault operator rekey" for more information.\n'})}),"\n",(0,s.jsx)(n.h3,{id:"sealunseal",children:"Seal/Unseal"}),"\n",(0,s.jsxs)(n.p,{children:["Every initialized Vault server starts in the sealed state. From the configuration, Vault can access the physical storage, but it can't read any of it because it doesn't know how to decrypt it. Unsealing has to happen ",(0,s.jsx)(n.strong,{children:"every time"})," Vault starts. It can be done via the API and via the command line. To unseal the Vault, you must have ",(0,s.jsx)(n.strong,{children:"3 unseal keys"}),". Run the following command 3 times with different keys until the ",(0,s.jsx)(n.strong,{children:"Unseal Progress"})," reaches ",(0,s.jsx)(n.code,{children:"3/3"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"vault operator unseal                                                                                                      \nUnseal Key (will be hidden): \nKey                    Value\n---                    -----\nSeal Type              shamir\nInitialized            true\nSealed                 false\nTotal Shares           5\nThreshold              3\nVersion                1.12.2\nBuild Date             2022-11-23T12:53:46Z\nStorage Type           consul\nCluster Name           vault-cluster-0ba62cae\nCluster ID             7d49e5fd-a1a4-c1d1-55e2-7962e43006a1\nHA Enabled             true\nHA Cluster             n/a\nHA Mode                standby\nActive Node Address    <none>\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.strong,{children:"Storage Type"})," is set to ",(0,s.jsx)(n.code,{children:"consul"})," and I am able to see the K/V entries in Consul:"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Hashicorp Vault - Installation 2023",src:a(817020).Z+"",width:"1361",height:"450"})}),"\n",(0,s.jsx)(n.h3,{id:"vault-login",children:"Vault Login"}),"\n",(0,s.jsxs)(n.p,{children:["Use the ",(0,s.jsx)(n.code,{children:"Initial Root Token: s.KkNJYWF5g0pomcCLEmDdOVCW"})," you were given to log into Vault:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'vault login\n\nSuccess! You are now authenticated. The token information displayed below\nis already stored in the token helper. You do NOT need to run "vault login"\nagain. Future Vault requests will automatically use this token.\n\nKey                  Value\n---                  -----\ntoken                s.spAZOi7SlpdFTNed50sYYCIU\ntoken_accessor       OevFmMXjbmOCQ8rSubY84vVp\ntoken_duration       \u221e\ntoken_renewable      false\ntoken_policies       ["root"]\nidentity_policies    []\npolicies             ["root"]\n'})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["The token can also be set as a global variable during development ",(0,s.jsx)(n.code,{children:'export VAULT_TOKEN="s.KkNJYWF5g0pomcCLEmDdOVCW"'})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"You can check the Vault status and should now see that the service is active and ready for operation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"vault status                                                                                                               \nKey             Value\n---             -----\nSeal Type       shamir\nInitialized     true\nSealed          false\nTotal Shares    5\nThreshold       3\nVersion         1.12.2\nBuild Date      2022-11-23T12:53:46Z\nStorage Type    consul\nCluster Name    vault-cluster-0ba62cae\nCluster ID      7d49e5fd-a1a4-c1d1-55e2-7962e43006a1\nHA Enabled      true\nHA Cluster      https://127.0.0.1:8201\nHA Mode         active\nActive Since    2022-12-04T06:37:54.871984008Z\n"})}),"\n",(0,s.jsx)(n.p,{children:"As a root user, you can reseal the Vault with:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"vault operator seal\nSuccess! Vault is sealed.\n"})}),"\n",(0,s.jsx)(n.p,{children:"A single operator is allowed to do this. This lets a single operator lock down the Vault in an emergency without consulting other operators."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"vault status                                                                                                               \nKey                Value\n---                -----\nSeal Type          shamir\nInitialized        true\nSealed             true\nTotal Shares       5\nThreshold          3\nUnseal Progress    0/3\nUnseal Nonce       n/a\nVersion            1.12.2\nBuild Date         2022-11-23T12:53:46Z\nStorage Type       consul\nHA Enabled         true\n"})}),"\n",(0,s.jsx)(n.h2,{id:"start-using-vault",children:"Start using Vault"}),"\n",(0,s.jsx)(n.p,{children:"Adding information to the Vault key-value store:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'vault kv put -mount=secret hello foo=world\n\nError making API request.\n* preflight capability check returned 403, please ensure client\'s policies grant access to path "secret/"\n'})}),"\n",(0,s.jsx)(n.p,{children:"Sorting out the missing permissions:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"mkdir /etc/vault.d/policies && nano /etc/vault.d/policies/admin-policy.hcl\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"/etc/vault.d/policies/admin-policy.hcl"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Read system health check\npath "sys/health"\n{\n  capabilities = ["read", "sudo"]\n}\n\n# Create and manage ACL policies broadly across Vault\n\n# List existing policies\npath "sys/policies/acl"\n{\n  capabilities = ["list"]\n}\n\n# Create and manage ACL policies\npath "sys/policies/acl/*"\n{\n  capabilities = ["create", "read", "update", "delete", "list", "sudo"]\n}\n\n# Enable and manage authentication methods broadly across Vault\n\n# Manage auth methods broadly across Vault\npath "auth/*"\n{\n  capabilities = ["create", "read", "update", "delete", "list", "sudo"]\n}\n\n# Create, update, and delete auth methods\npath "sys/auth/*"\n{\n  capabilities = ["create", "update", "delete", "sudo"]\n}\n\n# List auth methods\npath "sys/auth"\n{\n  capabilities = ["read"]\n}\n\n# Enable and manage the key/value secrets engine at `secret/` path\n\n# List, create, update, and delete key/value secrets\npath "secret/*"\n{\n  capabilities = ["create", "read", "update", "delete", "list", "sudo"]\n}\n\n# List, create, update, and delete key/value pki entries\npath "pki/*"\n{\n  capabilities = ["create", "read", "update", "delete", "list", "sudo"]\n}\n\n# List, create, update, and delete key/value intermediate pki entries\npath "pki_int/*"\n{\n  capabilities = ["create", "read", "update", "delete", "list", "sudo"]\n}\n\n# Manage secrets engines\npath "sys/mounts/*"\n{\n  capabilities = ["create", "read", "update", "delete", "list", "sudo"]\n}\n\n# List existing secrets engines.\npath "sys/mounts"\n{\n  capabilities = ["read"]\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Create a policy named admin with the policy defined in admin-policy.hcl."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"vault policy write admin /etc/vault.d/policies/admin-policy.hcl\nSuccess! Uploaded policy: admin\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Hashicorp Vault - Installation 2023",src:a(601822).Z+"",width:"989",height:"565"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"vault policy list\nvault policy read admin\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Create a token with the admin policy attached and store the token in the variable ",(0,s.jsx)(n.code,{children:"ADMIN_TOKEN"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'ADMIN_TOKEN=$(vault token create -format=json -policy="admin" | jq -r ".auth.client_token")\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"echo $ADMIN_TOKEN\ns.MdNlboI0nff3Xpo97d1TfIxd\n"})}),"\n",(0,s.jsx)(n.p,{children:"Check if we actually have the rights now:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"vault token capabilities $ADMIN_TOKEN secret/                                                                              \ncreate, delete, list, read, sudo, update\n"})}),"\n",(0,s.jsx)(n.p,{children:":thumbsup:"}),"\n",(0,s.jsxs)(n.p,{children:["Hmm but I was still running into ",(0,s.jsx)(n.a,{href:"https://github.com/hashicorp/vault/issues/6616",children:"issues"})," here. It seems that I first had to activate the secrets engine:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"vault secrets enable -path=secret/ kv\n"})}),"\n",(0,s.jsx)(n.p,{children:"And now it works!"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'vault kv put secret/hello val=world\nvault kv get -format=json secret/hello                                                                                     \n{\n  "request_id": "e13372c4-9026-44c5-c912-d25469b8d7e8",\n  "lease_id": "",\n  "lease_duration": 2764800,\n  "renewable": false,\n  "data": {\n    "val": "world"\n  },\n  "warnings": null\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Hashicorp Vault - Installation 2023",src:a(669031).Z+"",width:"991",height:"353"})}),"\n",(0,s.jsx)(n.h3,{id:"advanced-use-cases",children:"Advanced Use-cases"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/DevOps/Hashicorp/2022-12-04-hashicorp-consul-vault-certificates-part1/2022-12-04",children:"Generate mTLS Certificates for Nomad using Vault Part1"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/DevOps/Hashicorp/2022-12-05-hashicorp-consul-vault-certificates-part2/2022-12-05",children:"Generate mTLS Certificates for Consul with Vault Part2"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/DevOps/Hashicorp/2022-12-05-hashicorp-consul-vault-certificates-part3/2022-12-05",children:"Generate mTLS Certificates for Consul with Vault Part3"})}),"\n",(0,s.jsx)(n.li,{children:"Generate mTLS Certificates for Nomad with Vault"}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/DevOps/Hashicorp/2022-12-07-hashicorp-vault-ca-certificates/2022-12-07",children:"Build Your Own Certificate Authority (CA)"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.ah)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},603905:(e,n,a)=>{a.d(n,{ah:()=>o});var s=a(667294);function t(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function l(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);n&&(s=s.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,s)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?l(Object(a),!0).forEach((function(n){t(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function r(e,n){if(null==e)return{};var a,s,t=function(e,n){if(null==e)return{};var a,s,t={},l=Object.keys(e);for(s=0;s<l.length;s++)a=l[s],n.indexOf(a)>=0||(t[a]=e[a]);return t}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(s=0;s<l.length;s++)a=l[s],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(t[a]=e[a])}return t}var c=s.createContext({}),o=function(e){var n=s.useContext(c),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},d={inlineCode:"code",wrapper:function(e){var n=e.children;return s.createElement(s.Fragment,{},n)}},h=s.forwardRef((function(e,n){var a=e.components,t=e.mdxType,l=e.originalType,c=e.parentName,h=r(e,["components","mdxType","originalType","parentName"]),u=o(a),p=t,g=u["".concat(c,".").concat(p)]||u[p]||d[p]||l;return a?s.createElement(g,i(i({ref:n},h),{},{components:a})):s.createElement(g,i({ref:n},h))}));h.displayName="MDXCreateElement"},817020:(e,n,a)=>{a.d(n,{Z:()=>s});const s=a.p+"assets/images/Hashicorp_Vault_01-bafcbbcc27d3a8ca08b0f8155964e528.png"},601822:(e,n,a)=>{a.d(n,{Z:()=>s});const s=a.p+"assets/images/Hashicorp_Vault_02-260bde6775efbf1fd477d72848d99927.png"},669031:(e,n,a)=>{a.d(n,{Z:()=>s});const s=a.p+"assets/images/Hashicorp_Vault_03-d30adb244c645ea09f39ab1d84905640.png"},399262:(e,n,a)=>{a.d(n,{Z:()=>s});const s=a.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-6c1edb088dfea3a7d39f8eebb8e9dc23.jpg"}}]);