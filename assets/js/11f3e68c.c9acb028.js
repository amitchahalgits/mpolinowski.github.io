"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[54714],{926640:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>t,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var a=n(474848),l=n(28453);const r={sidebar_position:9070,slug:"2020-06-17",title:"Salt Pillars & Formulas",authors:"mpolinowski",tags:["LINUX","Salt"]},t=void 0,i={id:"DevOps/Salt/2020-06-17--salt-pillars-formulas/index",title:"Salt Pillars & Formulas",description:"Guangzhou, China",source:"@site/docs/DevOps/Salt/2020-06-17--salt-pillars-formulas/index.mdx",sourceDirName:"DevOps/Salt/2020-06-17--salt-pillars-formulas",slug:"/DevOps/Salt/2020-06-17--salt-pillars-formulas/2020-06-17",permalink:"/docs/DevOps/Salt/2020-06-17--salt-pillars-formulas/2020-06-17",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Salt/2020-06-17--salt-pillars-formulas/index.mdx",tags:[{label:"LINUX",permalink:"/docs/tags/linux"},{label:"Salt",permalink:"/docs/tags/salt"}],version:"current",sidebarPosition:9070,frontMatter:{sidebar_position:9070,slug:"2020-06-17",title:"Salt Pillars & Formulas",authors:"mpolinowski",tags:["LINUX","Salt"]},sidebar:"tutorialSidebar",previous:{title:"Salt Execution Order",permalink:"/docs/DevOps/Salt/2020-06-18--salt-execution-order/2020-06-18"},next:{title:"Salt State",permalink:"/docs/DevOps/Salt/2020-06-16--salt-state/2020-06-16"}},o={},c=[{value:"Working with Pillars",id:"working-with-pillars",level:2},{value:"Working with Formulas",id:"working-with-formulas",level:2}];function d(e){const s={a:"a",code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.p,{children:(0,a.jsx)(s.img,{alt:"Guangzhou, China",src:n(291934).A+"",width:"1500",height:"623"})}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.a,{href:"#working-with-secure-data",children:"Working with Secure Data"})}),"\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.a,{href:"#working-with-formulas",children:"Working with Formulas"})}),"\n"]}),"\n",(0,a.jsx)(s.h2,{id:"working-with-pillars",children:"Working with Pillars"}),"\n",(0,a.jsxs)(s.p,{children:["Pillars in Salt is arbitrary, minion-specific data. There is a large volume of ",(0,a.jsx)(s.a,{href:"https://docs.saltstack.com/en/master/ref/pillar/all/index.html",children:"Pillar Modules"})," available to pull this data into Salt from external sources."]}),"\n",(0,a.jsxs)(s.p,{children:["Instructions on how to pull this data in is stored in ",(0,a.jsx)(s.code,{children:"*.sls"})," files. Start by creating the directory ",(0,a.jsx)(s.code,{children:"/srv/pillar"})," and add the following files:"]}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.strong,{children:"top.sls"})}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-yaml",children:"base:\r\n  '*':\r\n    - name\n"})}),"\n",(0,a.jsxs)(s.p,{children:["The ",(0,a.jsx)(s.code,{children:"Top File"})," sets the permission - what minions have access to a specific file. In this case all minions will have access to the file ",(0,a.jsx)(s.code,{children:"name.sls"}),":"]}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.strong,{children:"name.sls"})}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-yaml",children:"{% if grains.os == 'Ubuntu' %}\r\nname: Ubuntu Rocks\r\n{% elif grains.os == 'Centos' %}\r\nname: CentOS Rocks\r\n{% endif %}\n"})}),"\n",(0,a.jsx)(s.p,{children:"We can clean this up by using a dictionary:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-yaml",children:"{% set lookup = {\r\n  'Ubuntu': 'Ubuntu Rocks',\r\n  'Centos': 'Centos Rocks'\r\n} %}\r\n\r\n{% set name = lookup[grains.os] %}\r\n\r\nname: {{ name | json() }}\n"})}),"\n",(0,a.jsx)(s.p,{children:"Or:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-yaml",children:"{% set os = salt.grains.filter_by({\r\n    'Ubuntu': {\r\n        'name': 'Ubuntu Rocks'\r\n    },\r\n    'Centos': {\r\n        'name': 'Centos Rocks'\r\n    }\r\n}) %}\r\n\r\nname: {{ os.name }}\n"})}),"\n",(0,a.jsx)(s.p,{children:"Run the following command to update all minions:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"sudo salt '*' saltutil.refresh_pillar\r\n\r\nubuntuAsus:\r\n    True\n"})}),"\n",(0,a.jsx)(s.p,{children:"We can use this data for example in our Apache landing page (see previous tutorial):"}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.strong,{children:"welcome.sls"})}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-yaml",children:"# Adding a blank front page\r\n{% set name = salt.pillar.get('name') %}\r\n\r\ncheck_pillar_values:\r\n  test.check_pillar:\r\n    - present:\r\n      - name\r\n    - failhard: True\r\n\r\nwelcome_page:\r\n  file.managed:\r\n    - name: /var/www/html/index.html\r\n    - contents: |\r\n        <!doctype html>\r\n        <body>\r\n            <h1>{{ name }}.</h1>\r\n        </body>\n"})}),"\n",(0,a.jsx)(s.p,{children:"You should be able to see that you Minions have access to your pillars:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"sudo salt '*' pillar.items\n"})}),"\n",(0,a.jsx)(s.p,{children:"And check that your front page was updated:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"sudo salt '*' state.sls apache.welcome\n"})}),"\n",(0,a.jsxs)(s.p,{children:["You can also manually set the value of ",(0,a.jsx)(s.code,{children:"name"})," - but this data will be send to all minions and is NOT PRIVATE:"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"sudo salt '*' state.sls apache.welcome pillar='{name: Override}'\n"})}),"\n",(0,a.jsx)(s.h2,{id:"working-with-formulas",children:"Working with Formulas"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.a,{href:"https://docs.saltstack.com/en/latest/topics/development/conventions/formulas.html",children:"Formulas are pre-written Salt States"}),". They are as open-ended as Salt States themselves and can be used for tasks such as installing a package, configuring, and starting a service, setting up users or permissions, and many other common tasks."]}),"\n",(0,a.jsxs)(s.p,{children:["All official Salt Formulas are found as separate Git repositories in the ",(0,a.jsx)(s.a,{href:"https://github.com/saltstack-formulas",children:"'saltstack-formulas' organization on GitHub"}),". They can be downloaded using the ",(0,a.jsx)(s.a,{href:"https://docs.saltstack.com/en/master/ref/file_server/all/salt.fileserver.gitfs.html#module-salt.fileserver.gitfs",children:"GIT Fileserver Backend"}),". To be able to use Git you first have to uncomment it in your ",(0,a.jsx)(s.code,{children:"/etc/salt/master"})," config. Or use a ",(0,a.jsx)(s.code,{children:"local.conf"})," in ",(0,a.jsx)(s.code,{children:"/etc/salt/master.d/local.conf"}),":"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-yaml",children:"fileserver_backend:\r\n  - git\r\n  - roots\r\n\r\ngitfs_remotes:\r\n  - https://github.com/saltstack-formulas/memcached-formula\n"})}),"\n",(0,a.jsxs)(s.p,{children:["After adding your ",(0,a.jsx)(s.a,{href:"https://github.com/saltstack-formulas",children:"desired Formulas"})," restart the Salt master and use the ",(0,a.jsx)(s.code,{children:"cp.list_master"})," or ",(0,a.jsx)(s.code,{children:"cp.list_states"})," command to get a list of all available configuration files to make sure that ",(0,a.jsx)(s.code,{children:"memcached"})," was successfully cloned from Github:"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"sudo systemctl restart salt-master\r\n\r\nsudo salt ubuntuAsus cp.list_states\r\nubuntuAsus:\r\n    - apache\r\n    - apache.map\r\n    - apache.mods\r\n    - apache.welcome\r\n    - memcached\r\n    - memcached.config\r\n    - memcached.libmemcached\r\n    - memcached.macros\r\n    - memcached.python_memcached\r\n    - memcached.uninstall\n"})}),"\n",(0,a.jsx)(s.p,{children:"Continue installing the following package:"}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.strong,{children:"on CentOS"})}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:"yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\r\nyum install GitPython\n"})}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.strong,{children:"on Ubuntu"})}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:"sudo apt install python-git-doc\n"})})]})}function h(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},291934:(e,s,n)=>{n.d(s,{A:()=>a});const a=n.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-a9b30aa80e5cdc115144c7d8a07f3c41.jpg"},28453:(e,s,n)=>{n.d(s,{R:()=>t,x:()=>i});var a=n(296540);const l={},r=a.createContext(l);function t(e){const s=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),a.createElement(r.Provider,{value:s},e.children)}}}]);