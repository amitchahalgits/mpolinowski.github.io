"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[74517],{287433:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>r});var o=t(474848),s=t(28453);const i={sidebar_position:5897,slug:"2023-06-13",title:"Typescript DOM",authors:"mpolinowski",tags:["Javascript"],description:"Using Typescript 5 to build browser applications"},d=void 0,c={id:"Development/Javascript/2023-06-13-typescript-dom/index",title:"Typescript DOM",description:"Using Typescript 5 to build browser applications",source:"@site/docs/Development/Javascript/2023-06-13-typescript-dom/index.md",sourceDirName:"Development/Javascript/2023-06-13-typescript-dom",slug:"/Development/Javascript/2023-06-13-typescript-dom/2023-06-13",permalink:"/docs/Development/Javascript/2023-06-13-typescript-dom/2023-06-13",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Development/Javascript/2023-06-13-typescript-dom/index.md",tags:[{label:"Javascript",permalink:"/docs/tags/javascript"}],version:"current",sidebarPosition:5897,frontMatter:{sidebar_position:5897,slug:"2023-06-13",title:"Typescript DOM",authors:"mpolinowski",tags:["Javascript"],description:"Using Typescript 5 to build browser applications"},sidebar:"tutorialSidebar",previous:{title:"Typescript DOM Webpack",permalink:"/docs/Development/Javascript/2023-06-13-typescript-dom-webpack/2023-06-13"},next:{title:"Typescript Design Pattern",permalink:"/docs/Development/Javascript/2023-06-12-typescript-pattern/2023-06-12"}},l={},r=[{value:"Setup",id:"setup",level:2},{value:"Build the obligatory TODO List",id:"build-the-obligatory-todo-list",level:3}];function a(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"TST, Hongkong",src:t(461559).A+"",width:"2359",height:"864"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"#setup",children:"Setup"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#build-the-obligatory-todo-list",children:"Build the obligatory TODO List"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"/docs/Development/Javascript/2023-06-12-typescript-2023/2023-06-12",children:"Basic Typescript Setup"})}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"build-the-obligatory-todo-list",children:"Build the obligatory TODO List"}),"\n",(0,o.jsx)(n.p,{children:"Use the same setup as above but instead of running the compiled JS file inside Node.js it will now be embedded inside an HTML file and executed inside a web browser:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"./dist/index.html"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="utf-8">\n    <title>Typescript DOM Project</title>\n  </head>\n  <body>\n    <header></header>\n    <main>\n      <input id="input" type="text" placeholder="Enter a TODO!">\n      <button id=\'clickme\'>Use Input Value!</button>\n    </main>\n    <footer></footer>\n    <script type="module" src="index.js"><\/script>\n  </body>\n</html>\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"./src/index.ts"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"const btn = document.getElementById('clickme') as HTMLButtonElement\nconst input = document.getElementById('input') as HTMLInputElement\n\nbtn?.addEventListener('click', function(){\n    console.log(input.value)\n    input.value = ''\n})\n"})}),"\n",(0,o.jsx)(n.p,{children:"Adding a Form element with submit event listener:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"./src/index.ts"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"const btn = document.getElementById('submit') as HTMLButtonElement\nconst input = document.querySelector<HTMLInputElement>('#input')!\nconst form = document.querySelector<HTMLFormElement>('#form')\nconst list = document.getElementById('list') as HTMLUListElement\n\nfunction handleSubmit(e: SubmitEvent) {\n    e.preventDefault()\n    console.log(`INFO :: New TODO ${input.value}`)\n\n    const todoText = input.value\n    const newListElement = document.createElement('li')\n    const checkBox = document.createElement('input')\n    checkBox.type = 'checkbox'\n\n    newListElement.append(todoText)\n    newListElement.append(checkBox)\n    list?.append(newListElement)\n    input.value = ''\n}\n\nform?.addEventListener('submit', handleSubmit)\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"./dist/index.html"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:'<body>\n    <header><h1>TODO List</h1></header>\n    <main>\n      <ul id="list"></ul>\n      <form id="form" action="">\n        <input id="input" type="text" placeholder="Enter a TODO!">\n        <button id=\'submit\' type="submit">Add</button>\n      </form>\n    </main>\n    <footer><code><small>Build with Typescript</small></code></footer>\n    <script src="index.js"><\/script>\n  </body>\n'})}),"\n",(0,o.jsxs)(n.p,{children:["To add list items to local browser storage first start by writing all todos to an ",(0,o.jsx)(n.code,{children:"todos"})," array on creation:"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"./src/index.ts"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"interface Todo {\n    text: string\n    completed: boolean\n}\n\nconst todos: Todo[] = []\n\nconst btn = document.getElementById('submit') as HTMLButtonElement\nconst input = document.querySelector<HTMLInputElement>('#input')!\nconst form = document.querySelector<HTMLFormElement>('#form')\nconst list = document.getElementById('list') as HTMLUListElement\n\n\nfunction handleSubmit(e: SubmitEvent) {\n    e.preventDefault()\n    console.log(`INFO :: New TODO ${input.value}`)\n\n    const todo: Todo = {\n        text: input.value,\n        completed: false\n    }\n\n    createTodo(todo)\n    todos.push(todo)\n\n}\n\nconst createTodo = (todo: Todo) => {\n    const newListElement = document.createElement('li')\n    const checkBox = document.createElement('input')\n    checkBox.type = 'checkbox'\n\n    newListElement.append(todo.text)\n    newListElement.append(checkBox)\n    list?.append(newListElement)\n    input.value = ''\n}\n\nform?.addEventListener('submit', handleSubmit)\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"todos"})," array can now be written to ",(0,o.jsx)(n.code,{children:"localStorage"})," and re-instantiated from storage on a page re-load using the ",(0,o.jsx)(n.code,{children:"createTodo"})," function:"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"./src/index.ts"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"const getStoredTodos = (): Todo[] => {\n    const storedTodos = localStorage.getItem('todos')\n\n    if (storedTodos === null) {\n        return []\n    } else {\n        return JSON.parse(storedTodos)\n    }\n}\n\n\nconst createTodo = (todo: Todo) => {\n    const newListElement = document.createElement('li')\n    const checkBox = document.createElement('input')\n    checkBox.type = 'checkbox'\n\n    newListElement.append(todo.text)\n    newListElement.append(checkBox)\n    list?.append(newListElement)\n    input.value = ''\n}\n\n\nconst todos: Todo[] = getStoredTodos()\ntodos.forEach(createTodo)\n\n\n\nconst handleSubmit = (e: SubmitEvent) => {\n    e.preventDefault()\n    console.log(`INFO :: New TODO ${input.value}`)\n\n    const todo: Todo = {\n        text: input.value,\n        completed: false\n    }\n\n    createTodo(todo)\n    todos.push(todo)\n\n    localStorage.setItem(\"todos\", JSON.stringify(todos))\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"This handles the text for all Todos but so far ignores the completion status and todos cannot be deleted:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"./src/index.ts"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"interface Todo {\n    text: string\n    completed: boolean\n}\n\nconst btn = document.getElementById('submit') as HTMLButtonElement\nconst input = document.querySelector<HTMLInputElement>('#input')!\nconst form = document.querySelector<HTMLFormElement>('#form')\nconst list = document.getElementById('list') as HTMLUListElement\n\n\nconst getStoredTodos = (): Todo[] => {\n    const storedTodos = localStorage.getItem('todos')\n\n    if (storedTodos === null) {\n        return []\n    } else {\n        return JSON.parse(storedTodos)\n    }\n}\n\n\nconst createTodo = (todo: Todo) => {\n    const newListElement = document.createElement('li')\n    const deleteButton = document.createElement('button')\n    const checkBox = document.createElement('input')\n    checkBox.type = 'checkbox'\n    checkBox.checked = todo.completed\n\n    deleteButton.addEventListener('click', function() {\n        todos = todos.filter(value => value !== todo)\n        saveTodos()\n    }) \n\n    checkBox.addEventListener('change', function() {\n        todo.completed = checkBox.checked\n        saveTodos()\n    })\n\n    newListElement.append(todo.text)\n    newListElement.append(checkBox)\n    newListElement.append(deleteButton)\n    list?.append(newListElement)\n    input.value = ''\n}\n\n\nconst saveTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos))\n}\n\n\nconst handleSubmit = (e: SubmitEvent) => {\n    e.preventDefault()\n    console.log(`INFO :: New TODO ${input.value}`)\n\n    const todo: Todo = {\n        text: input.value,\n        completed: false\n    }\n\n    createTodo(todo)\n    todos.push(todo)\n\n    saveTodos()\n}\n\n\nform?.addEventListener('submit', handleSubmit)\n\n\nlet todos: Todo[] = getStoredTodos()\ntodos.forEach(createTodo)\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},461559:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-c3aedc7eed015cc5372c21f9c394693d.jpg"},28453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>c});var o=t(296540);const s={},i=o.createContext(s);function d(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);