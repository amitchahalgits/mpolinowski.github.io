"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[26830],{51134:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>o,frontMatter:()=>t,metadata:()=>l,toc:()=>c});var d=r(474848),i=r(28453);const t={sidebar_position:4600,slug:"2023-07-10",title:"Serving your SciKit Image Model as a Prediction API",authors:"mpolinowski",tags:["Python","Machine Learning","SKlearn","Flask"],description:"Use Flask, Docker to Deploy your ML Model to the Web"},s="Serving your SciKit Learn Model as a Prediction API",l={id:"IoT-and-Machine-Learning/AIOps/2023-07-10-scikit-image-model-deployment-part1/index",title:"Serving your SciKit Image Model as a Prediction API",description:"Use Flask, Docker to Deploy your ML Model to the Web",source:"@site/docs/IoT-and-Machine-Learning/AIOps/2023-07-10-scikit-image-model-deployment-part1/index.md",sourceDirName:"IoT-and-Machine-Learning/AIOps/2023-07-10-scikit-image-model-deployment-part1",slug:"/IoT-and-Machine-Learning/AIOps/2023-07-10-scikit-image-model-deployment-part1/2023-07-10",permalink:"/docs/IoT-and-Machine-Learning/AIOps/2023-07-10-scikit-image-model-deployment-part1/2023-07-10",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IoT-and-Machine-Learning/AIOps/2023-07-10-scikit-image-model-deployment-part1/index.md",tags:[{label:"Python",permalink:"/docs/tags/python"},{label:"Machine Learning",permalink:"/docs/tags/machine-learning"},{label:"SKlearn",permalink:"/docs/tags/s-klearn"},{label:"Flask",permalink:"/docs/tags/flask"}],version:"current",sidebarPosition:4600,frontMatter:{sidebar_position:4600,slug:"2023-07-10",title:"Serving your SciKit Image Model as a Prediction API",authors:"mpolinowski",tags:["Python","Machine Learning","SKlearn","Flask"],description:"Use Flask, Docker to Deploy your ML Model to the Web"},sidebar:"tutorialSidebar",previous:{title:"Serving your SciKit Image Model as a Prediction API",permalink:"/docs/IoT-and-Machine-Learning/AIOps/2023-07-12-scikit-image-model-deployment-part2/2023-07-12"},next:{title:"AutoML with AutoGluon for Timeseries Forecasts",permalink:"/docs/IoT-and-Machine-Learning/AIOps/2023-06-23-automl-with-autogluon-timeseries-forecast/2023-06-23"}},a={},c=[{value:"Image Data Preprocessing",id:"image-data-preprocessing",level:2},{value:"Image Dataset Preparation",id:"image-dataset-preparation",level:2},{value:"Get Image Dataset from Local Directory",id:"get-image-dataset-from-local-directory",level:3},{value:"Get Image Labels from Folder Structure",id:"get-image-labels-from-folder-structure",level:3},{value:"Dataset Export",id:"dataset-export",level:3},{value:"Data Preprocessing",id:"data-preprocessing",level:2},{value:"Feature Extraction",id:"feature-extraction",level:3},{value:"Histogram of Oriented Gradients (HOG)",id:"histogram-of-oriented-gradients-hog",level:4},{value:"Model Training",id:"model-training",level:2},{value:"SGD Classifier Training Pipeline",id:"sgd-classifier-training-pipeline",level:3},{value:"Model Evaluation",id:"model-evaluation",level:3},{value:"Hyperparameter Tuning",id:"hyperparameter-tuning",level:2},{value:"Training Pipeline",id:"training-pipeline",level:3},{value:"GridSearch",id:"gridsearch",level:3},{value:"Best Model Evaluation",id:"best-model-evaluation",level:3},{value:"Trained Model Export",id:"trained-model-export",level:3},{value:"Deployment Model",id:"deployment-model",level:2},{value:"Model Training",id:"model-training-1",level:3},{value:"Model Evaluation",id:"model-evaluation-1",level:3},{value:"Model Export",id:"model-export",level:3}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.p,{children:(0,d.jsx)(n.img,{alt:"TST, HongKong",src:r(507076).A+"",width:"1500",height:"512"})}),"\n",(0,d.jsx)(n.h1,{id:"serving-your-scikit-learn-model-as-a-prediction-api",children:"Serving your SciKit Learn Model as a Prediction API"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"https://github.com/mpolinowski/i-know-flowers",children:"Github Repository"})}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.a,{href:"#serving-your-scikit-learn-model-as-a-prediction-api",children:"Serving your SciKit Learn Model as a Prediction API"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"#image-data-preprocessing",children:"Image Data Preprocessing"})}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.a,{href:"#image-dataset-preparation",children:"Image Dataset Preparation"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"#get-image-dataset-from-local-directory",children:"Get Image Dataset from Local Directory"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"#get-image-labels-from-folder-structure",children:"Get Image Labels from Folder Structure"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"#dataset-export",children:"Dataset Export"})}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.a,{href:"#data-preprocessing",children:"Data Preprocessing"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.a,{href:"#feature-extraction",children:"Feature Extraction"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"#histogram-of-oriented-gradients-hog",children:"Histogram of Oriented Gradients (HOG)"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.a,{href:"#model-training",children:"Model Training"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"#sgd-classifier-training-pipeline",children:"SGD Classifier Training Pipeline"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"#model-evaluation",children:"Model Evaluation"})}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.a,{href:"#hyperparameter-tuning",children:"Hyperparameter Tuning"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"#training-pipeline",children:"Training Pipeline"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"#gridsearch",children:"GridSearch"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"#best-model-evaluation",children:"Best Model Evaluation"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"#trained-model-export",children:"Trained Model Export"})}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.a,{href:"#deployment-model",children:"Deployment Model"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"#model-training-1",children:"Model Training"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"#model-evaluation-1",children:"Model Evaluation"})}),"\n",(0,d.jsx)(n.li,{children:(0,d.jsx)(n.a,{href:"#model-export",children:"Model Export"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.h2,{id:"image-data-preprocessing",children:"Image Data Preprocessing"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"import collections\nfrom glob import glob\nimport matplotlib.pyplot as plt\nfrom matplotlib import patches\nimport numpy as np\nimport os\nimport pandas as pd\nimport pickle\nimport re\nfrom scipy import ndimage\nfrom skimage import (\n    io,\n    color,\n    exposure,\n    transform,\n    feature\n)\nimport seaborn as sns\nfrom sklearn.metrics import (\n    classification_report,\n    confusion_matrix,\n    ConfusionMatrixDisplay)\nfrom sklearn.base import BaseEstimator, TransformerMixin\nfrom sklearn.linear_model import SGDClassifier\nfrom sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.pipeline import Pipeline, make_pipeline\nfrom sklearn.preprocessing import StandardScaler\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"SEED = 42\n"})}),"\n",(0,d.jsx)(n.h2,{id:"image-dataset-preparation",children:"Image Dataset Preparation"}),"\n",(0,d.jsx)(n.h3,{id:"get-image-dataset-from-local-directory",children:"Get Image Dataset from Local Directory"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"# get list of images https://paperswithcode.com/dataset/food-101\ndata_dir = os.listdir('dataset/animals')\nprint(data_dir)\n# ['bear', 'cat', 'chicken', 'cow', 'deer', 'dog', 'duck', 'eagle', 'elephant', 'human', 'lion', 'monkey', 'mouse', 'panda', 'pigeon', 'rabbit', 'sheep', 'tiger', 'wolf']\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"glob('./dataset/animals/{}/*.jpg'.format('wolf'))\n\n# ['./dataset/animals/wolf/wolffrontal0001.jpg',\n#  './dataset/animals/wolf/wolffrontal0002.jpg',\n#  './dataset/animals/wolf/wolffrontal0003.jpg',\n#  ...\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"all_files = []\nfor subfolder in data_dir:\n    all_files += glob('./dataset/animals/{}/*.jpg'.format(subfolder))\n    \nlen(all_files)\n# 2015\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"data_collection = io.ImageCollection(all_files)\ndata_collection.files\n# ['./dataset/animals/bear/bearfrontal0001.jpg',\n#  './dataset/animals/bear/bearfrontal0002.jpg',\n#  './dataset/animals/bear/bearfrontal0003.jpg',\n#  './dataset/animals/bear/bearfrontal0004.jpg',\n#...\n"})}),"\n",(0,d.jsx)(n.h3,{id:"get-image-labels-from-folder-structure",children:"Get Image Labels from Folder Structure"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"# use regular expression to extract folder name as label - example:\nre.search(\n    r'./dataset/animals/(.*?)/',\n    './dataset/animals/bear/bearfrontal0001.jpg'\n).group(1)\n# label extracted: 'bear'\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"def extract_labels(location):\n    label = re.search(\n        r'./dataset/animals/(.*?)/', location\n    ).group(1)\n    \n    return label\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"labels = list(map(extract_labels, data_collection.files))\nlist(set(labels))\n# ['human',\n#  'cat',\n#  'lion',\n#  'sheep',\n#  'cow',\n#  'mouse',\n#  'pigeon',\n#  'tiger',\n#  'rabbit',\n#  'elephant',\n#  'deer',\n#  'eagle',\n#  'dog',\n#  'wolf',\n#  'panda',\n#  'monkey',\n#  'duck',\n#  'chicken',\n#  'bear']\n"})}),"\n",(0,d.jsx)(n.h3,{id:"dataset-export",children:"Dataset Export"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"def buffer(item):\n    return item\n\n# dataset_arrs = np.array(list(map(buffer,dataset)))\ndataset_list = list(map(buffer, data_collection))\ndataset_array = np.asarray(dataset_list)\ndataset_array.shape\n# (2015, 80, 80, 3)\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"data_dict = dict()\n\ndata_dict['description'] = '2015 80x80 RGB images of 19 classes.'\ndata_dict['data'] = dataset_array\ndata_dict['target'] = labels\ndata_dict['labels'] = set(labels)\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"label_distribution = collections.Counter(data_dict['target'])\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"plt.figure(figsize=(16, 5))\nplt.title('Target Distribution in Dataset')\n\nsns.countplot(\n    data=data_dict,\n    x='target'\n)\n\nplt.savefig('assets/Scikit_Image_Model_Deployment_01.webp', bbox_inches='tight')\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.img,{alt:"Scikit-Image Introduction",src:r(318638).A+"",width:"1315",height:"451"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"# plot multiple random images with labels\nran_gen = np.random.default_rng()\n\nplt.figure(figsize=(12, 12))\n\nfor i in range(12):\n    ax = plt.subplot(4, 4, i+1)\n    random_index = ran_gen.integers(low=0, high=2015, size=1)\n    plt.imshow(data_dict['data'][random_index[0]])\n    plt.title(data_dict['target'][random_index[0]])\n    plt.axis(False)\n\nplt.savefig('assets/Scikit_Image_Model_Deployment_02.webp', bbox_inches='tight')\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.img,{alt:"Scikit-Image Introduction",src:r(751087).A+"",width:"948",height:"725"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"# save the dateset\noutput = open('dataset/animals.pkl', 'wb')\npickle.dump(data_dict, output)\n"})}),"\n",(0,d.jsx)(n.h2,{id:"data-preprocessing",children:"Data Preprocessing"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"# load dataset pickle\ndataset = pickle.load(open('dataset/animals.pkl', 'rb'))\ndataset['description']\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"X = dataset['data']\ny = dataset['target']\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"# train-test-split\nX_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size=0.2, stratify=y, random_state=SEED\n)\nprint(X_train.shape, X_test.shape)\n# (1612, 80, 80, 3) (403, 80, 80, 3)\n"})}),"\n",(0,d.jsx)(n.h3,{id:"feature-extraction",children:"Feature Extraction"}),"\n",(0,d.jsx)(n.h4,{id:"histogram-of-oriented-gradients-hog",children:"Histogram of Oriented Gradients (HOG)"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"testimg = io.imread('assets/lion.jpg')\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"# hog feature descriptor\nfeature_vector, hog_image = feature.hog(testimg, orientations=8, pixels_per_cell=(16, 16),\n                    cells_per_block=(1, 1), visualize=True, channel_axis=-1)\n\n# Rescale histogram for better display\nhog_image_rescaled = exposure.rescale_intensity(hog_image, in_range=(0, 5))\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(12, 5), sharex=True, sharey=True)\n\nax1.axis('off')\nax1.imshow(testimg, cmap=plt.cm.gray)\nax1.set_title('Input image')\n\nax2.axis('off')\nax2.imshow(hog_image_rescaled, cmap=plt.cm.gray)\nax2.set_title('Histogram of Oriented Gradients')\nplt.show()\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.img,{alt:"Scikit-Image Introduction",src:r(793996).A+"",width:"950",height:"324"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"class hog_transformer(BaseEstimator, TransformerMixin):\n    def __init__(\n        self,\n        orientations=9,\n        pixels_per_cell=(8, 8),\n        cells_per_block=(3, 3)\n    ):\n        self.orientations = orientations\n        self.pixels_per_cell = pixels_per_cell\n        self.cells_per_block = cells_per_block\n    \n    def fit(self, X, y=None):\n        return self\n    \n    def transform(self, X, y=None):\n        def local_hog(img):\n            feature_vector = feature.hog(\n                img,\n                orientations=self.orientations,\n                pixels_per_cell = self.pixels_per_cell,\n                cells_per_block = self.cells_per_block,\n                channel_axis=-1\n            )\n            \n            return feature_vector\n        \n        return [local_hog(x) for x in X]\n"})}),"\n",(0,d.jsx)(n.h2,{id:"model-training",children:"Model Training"}),"\n",(0,d.jsx)(n.h3,{id:"sgd-classifier-training-pipeline",children:"SGD Classifier Training Pipeline"}),"\n",(0,d.jsxs)(n.ol,{children:["\n",(0,d.jsx)(n.li,{children:"Feature Extraction"}),"\n",(0,d.jsx)(n.li,{children:"Normalization"}),"\n",(0,d.jsx)(n.li,{children:"Model Fitting"}),"\n"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"feature_extractor = hog_transformer()\nscaler = StandardScaler()\nmodel_sgd = SGDClassifier(loss='hinge', learning_rate='adaptive', eta0=0.1, early_stopping=True)\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"X_train_fv = feature_extractor.fit_transform(X_train)\nX_test_fv = feature_extractor.transform(X_test)\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"X_train_fv_scaled = scaler.fit_transform(X_train_fv)\nX_test_fv_scaled = scaler.transform(X_test_fv)\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"model_sgd.fit(X_train_fv_scaled, y_train)\n"})}),"\n",(0,d.jsx)(n.h3,{id:"model-evaluation",children:"Model Evaluation"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"y_pred = model_sgd.predict(X_test_fv_scaled)\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"# plot predictions\nran_gen = np.random.default_rng()\n\nplt.figure(figsize=(12, 12))\n\nfor i in range(12):\n    ax = plt.subplot(4, 4, i+1)\n    random_index = ran_gen.integers(low=0, high=403, size=1)\n    plt.imshow(X_test[random_index[0]])\n    plt.title(y_pred[random_index[0]])\n    plt.axis(False)\n\nplt.savefig('assets/Scikit_Image_Model_Deployment_04.webp', bbox_inches='tight')\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.img,{alt:"Scikit-Image Introduction",src:r(915069).A+"",width:"948",height:"725"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"conf_mtx = ConfusionMatrixDisplay(\n    confusion_matrix=confusion_matrix(y_test, y_pred.tolist()),\n    display_labels=[False]\n)\n\nconf_mtx.plot(cmap='plasma')\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.img,{alt:"Scikit-Image Introduction",src:r(412306).A+"",width:"500",height:"413"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"eval_report = classification_report(y_test, y_pred, output_dict=True)\neval_df = pd.DataFrame(eval_report)\neval_df.transpose()\n"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{}),(0,d.jsx)(n.th,{children:"precision"}),(0,d.jsx)(n.th,{children:"recall"}),(0,d.jsx)(n.th,{children:"f1-score"}),(0,d.jsx)(n.th,{children:"support"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"bear"}),(0,d.jsx)(n.td,{children:"0.428571"}),(0,d.jsx)(n.td,{children:"0.450000"}),(0,d.jsx)(n.td,{children:"0.439024"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"cat"}),(0,d.jsx)(n.td,{children:"0.600000"}),(0,d.jsx)(n.td,{children:"0.562500"}),(0,d.jsx)(n.td,{children:"0.580645"}),(0,d.jsx)(n.td,{children:"32.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"chicken"}),(0,d.jsx)(n.td,{children:"0.611111"}),(0,d.jsx)(n.td,{children:"0.550000"}),(0,d.jsx)(n.td,{children:"0.578947"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"cow"}),(0,d.jsx)(n.td,{children:"0.500000"}),(0,d.jsx)(n.td,{children:"0.600000"}),(0,d.jsx)(n.td,{children:"0.545455"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"deer"}),(0,d.jsx)(n.td,{children:"0.695652"}),(0,d.jsx)(n.td,{children:"0.800000"}),(0,d.jsx)(n.td,{children:"0.744186"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"dog"}),(0,d.jsx)(n.td,{children:"0.517241"}),(0,d.jsx)(n.td,{children:"0.576923"}),(0,d.jsx)(n.td,{children:"0.545455"}),(0,d.jsx)(n.td,{children:"26.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"duck"}),(0,d.jsx)(n.td,{children:"0.777778"}),(0,d.jsx)(n.td,{children:"0.700000"}),(0,d.jsx)(n.td,{children:"0.736842"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"eagle"}),(0,d.jsx)(n.td,{children:"0.466667"}),(0,d.jsx)(n.td,{children:"0.736842"}),(0,d.jsx)(n.td,{children:"0.571429"}),(0,d.jsx)(n.td,{children:"19.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"elephant"}),(0,d.jsx)(n.td,{children:"0.541667"}),(0,d.jsx)(n.td,{children:"0.650000"}),(0,d.jsx)(n.td,{children:"0.590909"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"human"}),(0,d.jsx)(n.td,{children:"0.826087"}),(0,d.jsx)(n.td,{children:"0.950000"}),(0,d.jsx)(n.td,{children:"0.883721"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"lion"}),(0,d.jsx)(n.td,{children:"0.375000"}),(0,d.jsx)(n.td,{children:"0.300000"}),(0,d.jsx)(n.td,{children:"0.333333"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"monkey"}),(0,d.jsx)(n.td,{children:"0.466667"}),(0,d.jsx)(n.td,{children:"0.350000"}),(0,d.jsx)(n.td,{children:"0.400000"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"mouse"}),(0,d.jsx)(n.td,{children:"0.416667"}),(0,d.jsx)(n.td,{children:"0.250000"}),(0,d.jsx)(n.td,{children:"0.312500"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"panda"}),(0,d.jsx)(n.td,{children:"0.678571"}),(0,d.jsx)(n.td,{children:"0.826087"}),(0,d.jsx)(n.td,{children:"0.745098"}),(0,d.jsx)(n.td,{children:"23.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"pigeon"}),(0,d.jsx)(n.td,{children:"0.631579"}),(0,d.jsx)(n.td,{children:"0.600000"}),(0,d.jsx)(n.td,{children:"0.615385"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"rabbit"}),(0,d.jsx)(n.td,{children:"0.800000"}),(0,d.jsx)(n.td,{children:"0.600000"}),(0,d.jsx)(n.td,{children:"0.685714"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"sheep"}),(0,d.jsx)(n.td,{children:"0.550000"}),(0,d.jsx)(n.td,{children:"0.550000"}),(0,d.jsx)(n.td,{children:"0.550000"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"tiger"}),(0,d.jsx)(n.td,{children:"0.800000"}),(0,d.jsx)(n.td,{children:"0.695652"}),(0,d.jsx)(n.td,{children:"0.744186"}),(0,d.jsx)(n.td,{children:"23.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"wolf"}),(0,d.jsx)(n.td,{children:"0.444444"}),(0,d.jsx)(n.td,{children:"0.400000"}),(0,d.jsx)(n.td,{children:"0.421053"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"accuracy"}),(0,d.jsx)(n.td,{children:"0.588089"}),(0,d.jsx)(n.td,{children:"0.588089"}),(0,d.jsx)(n.td,{children:"0.588089"}),(0,d.jsx)(n.td,{children:"0.588089"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"macro avg"}),(0,d.jsx)(n.td,{children:"0.585669"}),(0,d.jsx)(n.td,{children:"0.586737"}),(0,d.jsx)(n.td,{children:"0.580204"}),(0,d.jsx)(n.td,{children:"403.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"weighted avg"}),(0,d.jsx)(n.td,{children:"0.587659"}),(0,d.jsx)(n.td,{children:"0.588089"}),(0,d.jsx)(n.td,{children:"0.582170"}),(0,d.jsx)(n.td,{children:"403.000000"})]})]})]}),"\n",(0,d.jsx)(n.h2,{id:"hyperparameter-tuning",children:"Hyperparameter Tuning"}),"\n",(0,d.jsx)(n.h3,{id:"training-pipeline",children:"Training Pipeline"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"train_pipeline = Pipeline([\n    ('feature_extraction', hog_transformer(\n        orientations=9,\n        pixels_per_cell=(8, 8),\n        cells_per_block=(3, 3))\n    ),\n    ('normalization', StandardScaler()),\n    ('model_training', SGDClassifier(\n        loss='hinge', eta0=0.1,\n        learning_rate='adaptive',\n        early_stopping=True)\n    )\n])\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"train_pipeline.fit(X_train, y_train)\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"y_pred_pipe = train_pipeline.predict(X_test)\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"eval_report = classification_report(y_test, y_pred_pipe, output_dict=True)\neval_df = pd.DataFrame(eval_report)\neval_df.transpose()\n"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{}),(0,d.jsx)(n.th,{children:"precision"}),(0,d.jsx)(n.th,{children:"recall"}),(0,d.jsx)(n.th,{children:"f1-score"}),(0,d.jsx)(n.th,{children:"support"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"bear"}),(0,d.jsx)(n.td,{children:"0.368421"}),(0,d.jsx)(n.td,{children:"0.350000"}),(0,d.jsx)(n.td,{children:"0.358974"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"cat"}),(0,d.jsx)(n.td,{children:"0.607143"}),(0,d.jsx)(n.td,{children:"0.531250"}),(0,d.jsx)(n.td,{children:"0.566667"}),(0,d.jsx)(n.td,{children:"32.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"chicken"}),(0,d.jsx)(n.td,{children:"0.571429"}),(0,d.jsx)(n.td,{children:"0.600000"}),(0,d.jsx)(n.td,{children:"0.585366"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"cow"}),(0,d.jsx)(n.td,{children:"0.681818"}),(0,d.jsx)(n.td,{children:"0.750000"}),(0,d.jsx)(n.td,{children:"0.714286"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"deer"}),(0,d.jsx)(n.td,{children:"0.772727"}),(0,d.jsx)(n.td,{children:"0.850000"}),(0,d.jsx)(n.td,{children:"0.809524"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"dog"}),(0,d.jsx)(n.td,{children:"0.354839"}),(0,d.jsx)(n.td,{children:"0.423077"}),(0,d.jsx)(n.td,{children:"0.385965"}),(0,d.jsx)(n.td,{children:"26.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"duck"}),(0,d.jsx)(n.td,{children:"0.500000"}),(0,d.jsx)(n.td,{children:"0.550000"}),(0,d.jsx)(n.td,{children:"0.523810"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"eagle"}),(0,d.jsx)(n.td,{children:"0.473684"}),(0,d.jsx)(n.td,{children:"0.473684"}),(0,d.jsx)(n.td,{children:"0.473684"}),(0,d.jsx)(n.td,{children:"19.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"elephant"}),(0,d.jsx)(n.td,{children:"0.444444"}),(0,d.jsx)(n.td,{children:"0.600000"}),(0,d.jsx)(n.td,{children:"0.510638"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"human"}),(0,d.jsx)(n.td,{children:"0.680000"}),(0,d.jsx)(n.td,{children:"0.850000"}),(0,d.jsx)(n.td,{children:"0.755556"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"lion"}),(0,d.jsx)(n.td,{children:"0.500000"}),(0,d.jsx)(n.td,{children:"0.350000"}),(0,d.jsx)(n.td,{children:"0.411765"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"monkey"}),(0,d.jsx)(n.td,{children:"0.500000"}),(0,d.jsx)(n.td,{children:"0.400000"}),(0,d.jsx)(n.td,{children:"0.444444"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"mouse"}),(0,d.jsx)(n.td,{children:"0.307692"}),(0,d.jsx)(n.td,{children:"0.200000"}),(0,d.jsx)(n.td,{children:"0.242424"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"panda"}),(0,d.jsx)(n.td,{children:"0.772727"}),(0,d.jsx)(n.td,{children:"0.739130"}),(0,d.jsx)(n.td,{children:"0.755556"}),(0,d.jsx)(n.td,{children:"23.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"pigeon"}),(0,d.jsx)(n.td,{children:"0.608696"}),(0,d.jsx)(n.td,{children:"0.700000"}),(0,d.jsx)(n.td,{children:"0.651163"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"rabbit"}),(0,d.jsx)(n.td,{children:"0.600000"}),(0,d.jsx)(n.td,{children:"0.600000"}),(0,d.jsx)(n.td,{children:"0.600000"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"sheep"}),(0,d.jsx)(n.td,{children:"0.500000"}),(0,d.jsx)(n.td,{children:"0.550000"}),(0,d.jsx)(n.td,{children:"0.523810"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"tiger"}),(0,d.jsx)(n.td,{children:"0.722222"}),(0,d.jsx)(n.td,{children:"0.565217"}),(0,d.jsx)(n.td,{children:"0.634146"}),(0,d.jsx)(n.td,{children:"23.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"wolf"}),(0,d.jsx)(n.td,{children:"0.789474"}),(0,d.jsx)(n.td,{children:"0.750000"}),(0,d.jsx)(n.td,{children:"0.769231"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"accuracy"}),(0,d.jsx)(n.td,{children:"0.568238"}),(0,d.jsx)(n.td,{children:"0.568238"}),(0,d.jsx)(n.td,{children:"0.568238"}),(0,d.jsx)(n.td,{children:"0.568238"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"macro avg"}),(0,d.jsx)(n.td,{children:"0.566069"}),(0,d.jsx)(n.td,{children:"0.570124"}),(0,d.jsx)(n.td,{children:"0.564053"}),(0,d.jsx)(n.td,{children:"403.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"weighted avg"}),(0,d.jsx)(n.td,{children:"0.567078"}),(0,d.jsx)(n.td,{children:"0.568238"}),(0,d.jsx)(n.td,{children:"0.563651"}),(0,d.jsx)(n.td,{children:"403.000000"})]})]})]}),"\n",(0,d.jsx)(n.h3,{id:"gridsearch",children:"GridSearch"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"estimator = Pipeline([\n    ('feature_extraction', hog_transformer()),\n    ('normalization', StandardScaler()),\n    ('model_training', SGDClassifier())\n])\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"param_grid = [\n    {\n        'feature_extraction__orientations': [7, 8, 9, 10, 11],\n        'feature_extraction__pixels_per_cell': [(7, 7), (8, 8), (9, 9)],\n        'feature_extraction__cells_per_block': [(2, 2), (3, 3), (4, 4)],\n        'model_training__loss': ['hinge', 'squared_hinge', 'perceptron'],\n        'model_training__eta0': [0.001, 0.1, 1],\n        'model_training__learning_rate': ['optimal', 'adaptive']\n    }\n]\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"model_grid = GridSearchCV(\n    estimator,\n    param_grid,\n    scoring='accuracy',\n    cv=3,\n    n_jobs=-1,\n    verbose=2\n)\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"model_grid.fit(X_train, y_train)\n# Fitting 3 folds for each of 810 candidates, totalling 2430 fits\n# time for a coffee break :)\n"})}),"\n",(0,d.jsx)(n.h3,{id:"best-model-evaluation",children:"Best Model Evaluation"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"model_grid.best_params_\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"model_grid.best_score_\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"model_best = model_grid.best_estimator_\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"y_pred_best = model_best.predict(X_test)\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"eval_report_best = classification_report(y_test, y_pred_best, output_dict=True)\neval_best_df = pd.DataFrame(eval_report_best)\neval_best_df.transpose()\n"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{}),(0,d.jsx)(n.th,{children:"precision"}),(0,d.jsx)(n.th,{children:"recall"}),(0,d.jsx)(n.th,{children:"f1-score"}),(0,d.jsx)(n.th,{children:"support"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"bear"}),(0,d.jsx)(n.td,{children:"0.680000"}),(0,d.jsx)(n.td,{children:"0.850000"}),(0,d.jsx)(n.td,{children:"0.755556"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"cat"}),(0,d.jsx)(n.td,{children:"0.750000"}),(0,d.jsx)(n.td,{children:"0.656250"}),(0,d.jsx)(n.td,{children:"0.700000"}),(0,d.jsx)(n.td,{children:"32.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"chicken"}),(0,d.jsx)(n.td,{children:"0.809524"}),(0,d.jsx)(n.td,{children:"0.850000"}),(0,d.jsx)(n.td,{children:"0.829268"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"cow"}),(0,d.jsx)(n.td,{children:"0.809524"}),(0,d.jsx)(n.td,{children:"0.850000"}),(0,d.jsx)(n.td,{children:"0.829268"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"deer"}),(0,d.jsx)(n.td,{children:"0.869565"}),(0,d.jsx)(n.td,{children:"1.000000"}),(0,d.jsx)(n.td,{children:"0.930233"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"dog"}),(0,d.jsx)(n.td,{children:"0.607143"}),(0,d.jsx)(n.td,{children:"0.653846"}),(0,d.jsx)(n.td,{children:"0.629630"}),(0,d.jsx)(n.td,{children:"26.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"duck"}),(0,d.jsx)(n.td,{children:"0.789474"}),(0,d.jsx)(n.td,{children:"0.750000"}),(0,d.jsx)(n.td,{children:"0.769231"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"eagle"}),(0,d.jsx)(n.td,{children:"0.647059"}),(0,d.jsx)(n.td,{children:"0.578947"}),(0,d.jsx)(n.td,{children:"0.611111"}),(0,d.jsx)(n.td,{children:"19.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"elephant"}),(0,d.jsx)(n.td,{children:"0.782609"}),(0,d.jsx)(n.td,{children:"0.900000"}),(0,d.jsx)(n.td,{children:"0.837209"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"human"}),(0,d.jsx)(n.td,{children:"1.000000"}),(0,d.jsx)(n.td,{children:"0.900000"}),(0,d.jsx)(n.td,{children:"0.947368"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"lion"}),(0,d.jsx)(n.td,{children:"0.692308"}),(0,d.jsx)(n.td,{children:"0.450000"}),(0,d.jsx)(n.td,{children:"0.545455"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"monkey"}),(0,d.jsx)(n.td,{children:"0.631579"}),(0,d.jsx)(n.td,{children:"0.600000"}),(0,d.jsx)(n.td,{children:"0.615385"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"mouse"}),(0,d.jsx)(n.td,{children:"0.684211"}),(0,d.jsx)(n.td,{children:"0.650000"}),(0,d.jsx)(n.td,{children:"0.666667"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"panda"}),(0,d.jsx)(n.td,{children:"0.916667"}),(0,d.jsx)(n.td,{children:"0.956522"}),(0,d.jsx)(n.td,{children:"0.936170"}),(0,d.jsx)(n.td,{children:"23.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"pigeon"}),(0,d.jsx)(n.td,{children:"0.666667"}),(0,d.jsx)(n.td,{children:"0.800000"}),(0,d.jsx)(n.td,{children:"0.727273"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"rabbit"}),(0,d.jsx)(n.td,{children:"0.866667"}),(0,d.jsx)(n.td,{children:"0.650000"}),(0,d.jsx)(n.td,{children:"0.742857"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"sheep"}),(0,d.jsx)(n.td,{children:"0.750000"}),(0,d.jsx)(n.td,{children:"0.750000"}),(0,d.jsx)(n.td,{children:"0.750000"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"tiger"}),(0,d.jsx)(n.td,{children:"0.800000"}),(0,d.jsx)(n.td,{children:"0.869565"}),(0,d.jsx)(n.td,{children:"0.833333"}),(0,d.jsx)(n.td,{children:"23.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"wolf"}),(0,d.jsx)(n.td,{children:"0.809524"}),(0,d.jsx)(n.td,{children:"0.850000"}),(0,d.jsx)(n.td,{children:"0.829268"}),(0,d.jsx)(n.td,{children:"20.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"accuracy"}),(0,d.jsx)(n.td,{children:"0.764268"}),(0,d.jsx)(n.td,{children:"0.764268"}),(0,d.jsx)(n.td,{children:"0.764268"}),(0,d.jsx)(n.td,{children:"0.764268"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"macro avg"}),(0,d.jsx)(n.td,{children:"0.766448"}),(0,d.jsx)(n.td,{children:"0.766586"}),(0,d.jsx)(n.td,{children:"0.762383"}),(0,d.jsx)(n.td,{children:"403.000000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"weighted avg"}),(0,d.jsx)(n.td,{children:"0.765251"}),(0,d.jsx)(n.td,{children:"0.764268"}),(0,d.jsx)(n.td,{children:"0.760746"}),(0,d.jsx)(n.td,{children:"403.000000"})]})]})]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"conf_mtx_best = ConfusionMatrixDisplay(\n    confusion_matrix=confusion_matrix(y_test, y_pred_best.tolist()),\n    display_labels=[False]\n)\n\nconf_mtx_best.plot(cmap='plasma')\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.img,{alt:"Scikit-Image Introduction",src:r(543027).A+"",width:"500",height:"413"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"# plot predictions\nran_gen = np.random.default_rng()\n\nplt.figure(figsize=(12, 12))\n\nfor i in range(12):\n    ax = plt.subplot(4, 4, i+1)\n    random_index = ran_gen.integers(low=0, high=403, size=1)\n    plt.imshow(X_test[random_index[0]])\n    plt.title(y_pred_best[random_index[0]])\n    plt.axis(False)\n\nplt.savefig('assets/Scikit_Image_Model_Deployment_07.webp', bbox_inches='tight')\n"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.img,{alt:"Scikit-Image Introduction",src:r(620816).A+"",width:"948",height:"725"})}),"\n",(0,d.jsx)(n.h3,{id:"trained-model-export",children:"Trained Model Export"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"# save the model\noutput = open('model/animal_model_best.pkl', 'wb')\npickle.dump(model_best, output)\n"})}),"\n",(0,d.jsx)(n.h2,{id:"deployment-model",children:"Deployment Model"}),"\n",(0,d.jsx)(n.h3,{id:"model-training-1",children:"Model Training"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"best_params = {'feature_extraction__cells_per_block': (2, 2),\n 'feature_extraction__orientations': 11,\n 'feature_extraction__pixels_per_cell': (8, 8),\n 'model_training__eta0': 0.1,\n 'model_training__learning_rate': 'optimal',\n 'model_training__loss': 'perceptron'}\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"feature_extractor_pipe = make_pipeline(\n    hog_transformer(\n        orientations=11,\n        pixels_per_cell=(8, 8),\n        cells_per_block=(2, 2))\n    )\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"feature_vectors = feature_extractor_pipe.fit_transform(X_train)\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"normalizer = StandardScaler()\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"feature_normed = normalizer.fit_transform(feature_vectors)\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"classifier = SGDClassifier(\n        loss='perceptron', eta0=0.1,\n        learning_rate='optimal',\n        early_stopping=True\n)\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"classifier.fit(feature_normed, y_train)\n"})}),"\n",(0,d.jsx)(n.h3,{id:"model-evaluation-1",children:"Model Evaluation"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"feature_vectors_test = feature_extractor_pipe.transform(X_test)\nfeature_normed_test = normalizer.transform(feature_vectors_test)\ny_pred_deploy = classifier.predict(feature_normed_test)\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"eval_report_best = classification_report(y_test, y_pred_deploy, output_dict=True)\neval_best_df = pd.DataFrame(eval_report_best)\neval_best_df.transpose()\n"})}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{}),(0,d.jsx)(n.th,{children:"precision"}),(0,d.jsx)(n.th,{children:"recall"}),(0,d.jsx)(n.th,{children:"f1-score"}),(0,d.jsx)(n.th,{children:"support"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"bear"}),(0,d.jsx)(n.td,{children:"0.700000"}),(0,d.jsx)(n.td,{children:"0.700000"}),(0,d.jsx)(n.td,{children:"0.700000"}),(0,d.jsx)(n.td,{children:"20.00000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"cat"}),(0,d.jsx)(n.td,{children:"0.862069"}),(0,d.jsx)(n.td,{children:"0.781250"}),(0,d.jsx)(n.td,{children:"0.819672"}),(0,d.jsx)(n.td,{children:"32.00000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"chicken"}),(0,d.jsx)(n.td,{children:"0.937500"}),(0,d.jsx)(n.td,{children:"0.750000"}),(0,d.jsx)(n.td,{children:"0.833333"}),(0,d.jsx)(n.td,{children:"20.00000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"cow"}),(0,d.jsx)(n.td,{children:"0.625000"}),(0,d.jsx)(n.td,{children:"0.750000"}),(0,d.jsx)(n.td,{children:"0.681818"}),(0,d.jsx)(n.td,{children:"20.00000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"deer"}),(0,d.jsx)(n.td,{children:"0.809524"}),(0,d.jsx)(n.td,{children:"0.850000"}),(0,d.jsx)(n.td,{children:"0.829268"}),(0,d.jsx)(n.td,{children:"20.00000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"dog"}),(0,d.jsx)(n.td,{children:"0.588235"}),(0,d.jsx)(n.td,{children:"0.769231"}),(0,d.jsx)(n.td,{children:"0.666667"}),(0,d.jsx)(n.td,{children:"26.00000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"duck"}),(0,d.jsx)(n.td,{children:"0.750000"}),(0,d.jsx)(n.td,{children:"0.750000"}),(0,d.jsx)(n.td,{children:"0.750000"}),(0,d.jsx)(n.td,{children:"20.00000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"eagle"}),(0,d.jsx)(n.td,{children:"0.590909"}),(0,d.jsx)(n.td,{children:"0.684211"}),(0,d.jsx)(n.td,{children:"0.634146"}),(0,d.jsx)(n.td,{children:"19.00000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"elephant"}),(0,d.jsx)(n.td,{children:"0.761905"}),(0,d.jsx)(n.td,{children:"0.800000"}),(0,d.jsx)(n.td,{children:"0.780488"}),(0,d.jsx)(n.td,{children:"20.00000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"human"}),(0,d.jsx)(n.td,{children:"1.000000"}),(0,d.jsx)(n.td,{children:"0.950000"}),(0,d.jsx)(n.td,{children:"0.974359"}),(0,d.jsx)(n.td,{children:"20.00000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"lion"}),(0,d.jsx)(n.td,{children:"0.647059"}),(0,d.jsx)(n.td,{children:"0.550000"}),(0,d.jsx)(n.td,{children:"0.594595"}),(0,d.jsx)(n.td,{children:"20.00000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"monkey"}),(0,d.jsx)(n.td,{children:"0.875000"}),(0,d.jsx)(n.td,{children:"0.700000"}),(0,d.jsx)(n.td,{children:"0.777778"}),(0,d.jsx)(n.td,{children:"20.00000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"mouse"}),(0,d.jsx)(n.td,{children:"0.647059"}),(0,d.jsx)(n.td,{children:"0.550000"}),(0,d.jsx)(n.td,{children:"0.594595"}),(0,d.jsx)(n.td,{children:"20.00000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"panda"}),(0,d.jsx)(n.td,{children:"0.956522"}),(0,d.jsx)(n.td,{children:"0.956522"}),(0,d.jsx)(n.td,{children:"0.956522"}),(0,d.jsx)(n.td,{children:"23.00000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"pigeon"}),(0,d.jsx)(n.td,{children:"0.666667"}),(0,d.jsx)(n.td,{children:"0.800000"}),(0,d.jsx)(n.td,{children:"0.727273"}),(0,d.jsx)(n.td,{children:"20.00000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"rabbit"}),(0,d.jsx)(n.td,{children:"0.769231"}),(0,d.jsx)(n.td,{children:"0.500000"}),(0,d.jsx)(n.td,{children:"0.606061"}),(0,d.jsx)(n.td,{children:"20.00000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"sheep"}),(0,d.jsx)(n.td,{children:"0.619048"}),(0,d.jsx)(n.td,{children:"0.650000"}),(0,d.jsx)(n.td,{children:"0.634146"}),(0,d.jsx)(n.td,{children:"20.00000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"tiger"}),(0,d.jsx)(n.td,{children:"0.800000"}),(0,d.jsx)(n.td,{children:"0.869565"}),(0,d.jsx)(n.td,{children:"0.833333"}),(0,d.jsx)(n.td,{children:"23.00000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"wolf"}),(0,d.jsx)(n.td,{children:"0.761905"}),(0,d.jsx)(n.td,{children:"0.800000"}),(0,d.jsx)(n.td,{children:"0.780488"}),(0,d.jsx)(n.td,{children:"20.00000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"accuracy"}),(0,d.jsx)(n.td,{children:"0.749380"}),(0,d.jsx)(n.td,{children:"0.749380"}),(0,d.jsx)(n.td,{children:"0.749380"}),(0,d.jsx)(n.td,{children:"0.74938"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"macro avg"}),(0,d.jsx)(n.td,{children:"0.756191"}),(0,d.jsx)(n.td,{children:"0.745304"}),(0,d.jsx)(n.td,{children:"0.746028"}),(0,d.jsx)(n.td,{children:"403.00000"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"weighted avg"}),(0,d.jsx)(n.td,{children:"0.759071"}),(0,d.jsx)(n.td,{children:"0.749380"}),(0,d.jsx)(n.td,{children:"0.749534"}),(0,d.jsx)(n.td,{children:"403.00000"})]})]})]}),"\n",(0,d.jsx)(n.h3,{id:"model-export",children:"Model Export"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"# save the model\noutput = open('model/animal_model_deployment.pkl', 'wb')\npickle.dump(classifier, output)\n"})}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-python",children:"# save fitted normalizer\noutput = open('model/animal_model_deployment_scaler.pkl', 'wb')\npickle.dump(normalizer, output)\n"})})]})}function o(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}},318638:(e,n,r)=>{r.d(n,{A:()=>d});const d=r.p+"assets/images/Scikit_Image_Model_Deployment_01-80812a58e9581c9e80ff66ac81e9bd8d.webp"},751087:(e,n,r)=>{r.d(n,{A:()=>d});const d=r.p+"assets/images/Scikit_Image_Model_Deployment_02-ec9f97f5cc34ee8e777283b7c9875897.webp"},793996:(e,n,r)=>{r.d(n,{A:()=>d});const d=r.p+"assets/images/Scikit_Image_Model_Deployment_03-3b3931a2a80bc2183c6d7f44069f44d0.webp"},915069:(e,n,r)=>{r.d(n,{A:()=>d});const d=r.p+"assets/images/Scikit_Image_Model_Deployment_04-55734fda0fc5812b2381442f25649cfd.webp"},412306:(e,n,r)=>{r.d(n,{A:()=>d});const d=r.p+"assets/images/Scikit_Image_Model_Deployment_05-36d8b114c04dc17de288ca12796cbc10.webp"},543027:(e,n,r)=>{r.d(n,{A:()=>d});const d=r.p+"assets/images/Scikit_Image_Model_Deployment_06-050534d42c01062b548cd55cdc3354ee.webp"},620816:(e,n,r)=>{r.d(n,{A:()=>d});const d=r.p+"assets/images/Scikit_Image_Model_Deployment_07-a3ba534c4017a6abcd3c060ef1e48ab7.webp"},507076:(e,n,r)=>{r.d(n,{A:()=>d});const d=r.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-c77de99ac2aaaf4bfc10d6424f4476da.jpg"},28453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>l});var d=r(296540);const i={},t=d.createContext(i);function s(e){const n=d.useContext(t);return d.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),d.createElement(t.Provider,{value:n},e.children)}}}]);