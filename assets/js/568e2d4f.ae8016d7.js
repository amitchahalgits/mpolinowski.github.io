"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[33191],{764289:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>o});var a=t(474848),i=t(28453);const s={sidebar_position:7030,slug:"2021-08-22",title:"Hashicorp Vault - ACL Policies",authors:"mpolinowski",tags:["Vault","Linux"]},l=void 0,r={id:"DevOps/Hashicorp/2021-08-22--hashicorp-vault-policies/index",title:"Hashicorp Vault - ACL Policies",description:"Shenzhen, China",source:"@site/docs/DevOps/Hashicorp/2021-08-22--hashicorp-vault-policies/index.md",sourceDirName:"DevOps/Hashicorp/2021-08-22--hashicorp-vault-policies",slug:"/DevOps/Hashicorp/2021-08-22--hashicorp-vault-policies/2021-08-22",permalink:"/docs/DevOps/Hashicorp/2021-08-22--hashicorp-vault-policies/2021-08-22",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Hashicorp/2021-08-22--hashicorp-vault-policies/index.md",tags:[{label:"Vault",permalink:"/docs/tags/vault"},{label:"Linux",permalink:"/docs/tags/linux"}],version:"current",sidebarPosition:7030,frontMatter:{sidebar_position:7030,slug:"2021-08-22",title:"Hashicorp Vault - ACL Policies",authors:"mpolinowski",tags:["Vault","Linux"]},sidebar:"tutorialSidebar",previous:{title:"Hashicorp Vault - Rest API",permalink:"/docs/DevOps/Hashicorp/2021-08-23--hashicorp-vault-rest-api/2021-08-23"},next:{title:"Hashicorp Vault - Secrets & Tokens",permalink:"/docs/DevOps/Hashicorp/2021-08-21--hashicorp-vault-secrets-tokens/2021-08-21"}},c={},o=[{value:"Write a Policy using API",id:"write-a-policy-using-api",level:2},{value:"Write a policy",id:"write-a-policy",level:3},{value:"Create a policy",id:"create-a-policy",level:3},{value:"Display a policy",id:"display-a-policy",level:3},{value:"Apply a Policy to an Auth Token",id:"apply-a-policy-to-an-auth-token",level:2},{value:"Creating the Policy",id:"creating-the-policy",level:3},{value:"Attaching an Auth Token",id:"attaching-an-auth-token",level:3},{value:"Testing the Token",id:"testing-the-token",level:3},{value:"Vault UI",id:"vault-ui",level:2},{value:"Updating a Policy",id:"updating-a-policy",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Shenzhen, China",src:t(868839).A+"",width:"1500",height:"582"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"#write-a-policy-using-api",children:"Write a Policy using API"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#write-a-policy",children:"Write a policy"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#create-a-policy",children:"Create a policy"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#display-a-policy",children:"Display a policy"})}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"#apply-a-policy-to-an-auth-token",children:"Apply a Policy to an Auth Token"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#creating-the-policy",children:"Creating the Policy"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#attaching-an-auth-token",children:"Attaching an Auth Token"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#testing-the-token",children:"Testing the Token"})}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"#vault-ui",children:"Vault UI"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#updating-a-policy",children:"Updating a Policy"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Every Vault operation performed through the command-line interface (CLI), API, or web UI require that the authenticated client is granted access; access defined through policies. Everything in Vault is stored at different paths, like a filesystem, and every action in Vault has a corresponding path and capability. ",(0,a.jsx)(n.a,{href:"https://www.vaultproject.io/docs/concepts/policies#policy-syntax",children:"Policies"})," provide a declarative way to grant or forbid access to paths and the capabilities at each path."]}),"\n",(0,a.jsxs)(n.p,{children:["E.g. have all the rights to add and delete secrets under the path ",(0,a.jsx)(n.code,{children:"sys/auth"})," and be allowed to read them:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'path "sys/auth/*" {\r\n  capabilities = ["create", "update", "delete", "sudo"]\r\n}\r\n\r\npath "sys/auth" {\r\n  capabilities = ["read"]\r\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"write-a-policy-using-api",children:"Write a Policy using API"}),"\n",(0,a.jsx)(n.h3,{id:"write-a-policy",children:"Write a policy"}),"\n",(0,a.jsx)(n.p,{children:"An admin user must be able to:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Read system health check"}),"\n",(0,a.jsx)(n.li,{children:"Create and manage ACL policies broadly across Vault"}),"\n",(0,a.jsx)(n.li,{children:"Enable and manage authentication methods broadly across Vault"}),"\n",(0,a.jsx)(n.li,{children:"Manage the Key-Value secrets engine enabled at secret/ path"}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Define the ",(0,a.jsx)(n.a,{href:"https://www.vaultproject.io/docs/concepts/policies#policy-syntax",children:"admin policy"})," in the file named ",(0,a.jsx)(n.code,{children:"admin-policy.hcl"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'tee admin-policy.hcl <<EOF\r\n# Read system health check\r\npath "sys/health"\r\n{\r\n  capabilities = ["read", "sudo"]\r\n}\r\n\r\n# Create and manage ACL policies broadly across Vault\r\n\r\n# List existing policies\r\npath "sys/policies/acl"\r\n{\r\n  capabilities = ["list"]\r\n}\r\n\r\n# Create and manage ACL policies\r\npath "sys/policies/acl/*"\r\n{\r\n  capabilities = ["create", "read", "update", "delete", "list", "sudo"]\r\n}\r\n\r\n# Enable and manage authentication methods broadly across Vault\r\n\r\n# Manage auth methods broadly across Vault\r\npath "auth/*"\r\n{\r\n  capabilities = ["create", "read", "update", "delete", "list", "sudo"]\r\n}\r\n\r\n# Create, update, and delete auth methods\r\npath "sys/auth/*"\r\n{\r\n  capabilities = ["create", "update", "delete", "sudo"]\r\n}\r\n\r\n# List auth methods\r\npath "sys/auth"\r\n{\r\n  capabilities = ["read"]\r\n}\r\n\r\n# Enable and manage the key/value secrets engine at `secret/` path\r\n\r\n# List, create, update, and delete key/value secrets\r\npath "secret/*"\r\n{\r\n  capabilities = ["create", "read", "update", "delete", "list", "sudo"]\r\n}\r\n\r\n# Manage secrets engines\r\npath "sys/mounts/*"\r\n{\r\n  capabilities = ["create", "read", "update", "delete", "list", "sudo"]\r\n}\r\n\r\n# List existing secrets engines.\r\npath "sys/mounts"\r\n{\r\n  capabilities = ["read"]\r\n}\r\nEOF\n'})}),"\n",(0,a.jsx)(n.p,{children:"A policy define one or more paths and a list of permitted capabilities. Most of these capabilities map to the HTTP verbs supported by the Vault API:"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Capability"}),(0,a.jsx)(n.th,{children:"Associated HTTP verbs"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"create"})}),(0,a.jsx)(n.td,{children:"POST/PUT"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"read"})}),(0,a.jsx)(n.td,{children:"GET"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"update"})}),(0,a.jsx)(n.td,{children:"POST/PUT"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"delete"})}),(0,a.jsx)(n.td,{children:"DELETE"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"list"})}),(0,a.jsx)(n.td,{children:"LIST"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"sudo"})}),(0,a.jsxs)(n.td,{children:["The sudo capability allows access to paths that are root-protected (Refer to the ",(0,a.jsx)(n.a,{href:"https://learn.hashicorp.com/tutorials/vault/policies?in=vault/policies#root-protected-api-endpoints",children:"Root protected endpoints section"}),")."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"deny"})}),(0,a.jsx)(n.td,{children:"The deny capability disables access to the path. When combined with other capabilities it always precedence."})]})]})]}),"\n",(0,a.jsx)(n.h3,{id:"create-a-policy",children:"Create a policy"}),"\n",(0,a.jsxs)(n.p,{children:["Create a policy named admin with the policy defined in ",(0,a.jsx)(n.code,{children:"admin-policy.hcl"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"vault policy write admin admin-policy.hcl\r\nSuccess! Uploaded policy: admin\n"})}),"\n",(0,a.jsx)(n.h3,{id:"display-a-policy",children:"Display a policy"}),"\n",(0,a.jsx)(n.p,{children:"List all the policies:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"vault policy list\r\n\r\nadmin\r\ndefault\r\nroot\n"})}),"\n",(0,a.jsx)(n.p,{children:"Read the admin policy:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"vault policy read admin\n"})}),"\n",(0,a.jsx)(n.p,{children:"The output displays the paths and capabilities defined for this policy."}),"\n",(0,a.jsx)(n.h2,{id:"apply-a-policy-to-an-auth-token",children:"Apply a Policy to an Auth Token"}),"\n",(0,a.jsx)(n.h3,{id:"creating-the-policy",children:"Creating the Policy"}),"\n",(0,a.jsx)(n.p,{children:"Start by enabling a secret engine for your policy:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"vault secrets enable -path=secret/ kv\r\nSuccess! Enabled the kv secrets engine at: secret/\n"})}),"\n",(0,a.jsx)(n.p,{children:"Write the policy:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'tee test-elastic.hcl <<EOF\r\n# Create/Read Elastic login\r\npath "secret/login/elastic"\r\n{\r\n  capabilities = ["create", "read"]\r\n}\r\nEOF\n'})}),"\n",(0,a.jsx)(n.p,{children:"Create the policy:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"vault policy write elastic_login test-elastic.hcl\n"})}),"\n",(0,a.jsx)(n.h3,{id:"attaching-an-auth-token",children:"Attaching an Auth Token"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'vault token create -policy="elastic_login"\r\n\r\nKey                  Value\r\n---                  -----\r\ntoken                s.GZHF5D5zYJk1zmzxLmxivPY8\r\ntoken_accessor       lfJsAlfKqZEALqv2Yyw7SlNP\r\ntoken_duration       768h\r\ntoken_renewable      true\r\ntoken_policies       ["default" "elastic_login"]\r\nidentity_policies    []\r\npolicies             ["default" "elastic_login"]\n'})}),"\n",(0,a.jsx)(n.h3,{id:"testing-the-token",children:"Testing the Token"}),"\n",(0,a.jsx)(n.p,{children:"Since I am logged in to Vault with my environment I first have to unset my token before I can use the new one to login with:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'unset VAULT_TOKEN\r\n\r\nvault login\r\n\r\nToken (will be hidden): s.GZHF5D5zYJk1zmzxLmxivPY8\r\nSuccess! You are now authenticated. The token information displayed below\r\nis already stored in the token helper. You do NOT need to run "vault login"\r\nagain. Future Vault requests will automatically use this token.\r\n\r\nKey                  Value\r\n---                  -----\r\ntoken                s.GZHF5D5zYJk1zmzxLmxivPY8\r\ntoken_accessor       lfJsAlfKqZEALqv2Yyw7SlNP\r\ntoken_duration       767h58m43s\r\ntoken_renewable      true\r\ntoken_policies       ["default" "elastic_login"]\r\nidentity_policies    []\r\npolicies             ["default" "elastic_login"]\n'})}),"\n",(0,a.jsx)(n.p,{children:"Verify that you have all the rights assigned to you by the policy:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"vault token capabilities secret/login/elastic\r\ncreate, read\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Now I am logged in with the created token and should have the right to add a secret to ",(0,a.jsx)(n.code,{children:"secret/login/elastic"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'vault kv put secret/login/elastic password="Hzo3aku+S37JDzeXGUxZX+H5WE"\r\nSuccess! Data written to: secret/login/elastic\n'})}),"\n",(0,a.jsx)(n.p,{children:"And also read it:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"vault kv get secret/login/elastic\r\n\r\n====== Data ======\r\nKey         Value\r\n---         -----\r\npassword    Hzo3aku+S37JDzeXGUxZX+H5WE\n"})}),"\n",(0,a.jsx)(n.h2,{id:"vault-ui",children:"Vault UI"}),"\n",(0,a.jsx)(n.p,{children:"You can also use the user interface to access the secret:"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Hashicorp Vault",src:t(743285).A+"",width:"1243",height:"604"})}),"\n",(0,a.jsx)(n.h3,{id:"updating-a-policy",children:"Updating a Policy"}),"\n",(0,a.jsxs)(n.p,{children:["Here I noticed a problem with my policy - I am allowed to read ",(0,a.jsx)(n.code,{children:"secret/login/policy"}),". But the UI forces me to click on ",(0,a.jsx)(n.code,{children:"secret/"})," then ",(0,a.jsx)(n.code,{children:"secret/login/"})," to get there - and I don't have access to those. I will have to update the policy accordingly:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'tee test-elastic.hcl <<EOF\r\n# Read everything stored under secret/\r\npath "secret/*" {\r\n  capabilities = ["read", "list"]\r\n}\r\n\r\n# Create/Update Elastic login\r\npath "secret/login/elastic"\r\n{\r\n  capabilities = ["create", "update", "read"]\r\n}\r\nEOF\n'})}),"\n",(0,a.jsx)(n.p,{children:"Update the policy (remember to re-login with the root token):"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"vault policy write elastic_login test-elastic.hcl \r\nSuccess! Uploaded policy: elastic_login\n"})}),"\n",(0,a.jsx)(n.p,{children:"Verify:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'vault policy read elastic_login\r\n\r\n# Read everything stored under secret/\r\npath "secret/*" {\r\n  capabilities = ["read", "list"]\r\n}\r\n\r\n# Create/Update Elastic login\r\npath "secret/login/elastic"\r\n{\r\n  capabilities = ["create", "update", "read"]\r\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"And I am able to access and edit the variable:"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Hashicorp Vault",src:t(657534).A+"",width:"1241",height:"299"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},743285:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/HashiCorp_Vault_01-02c8961d12259ab5f9fbb06030cb053f.png"},657534:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/HashiCorp_Vault_02-caca84fd686c99ffc214131464289390.png"},868839:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-55a3986e2b95d2352897e24a05d0a6a7.jpg"},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var a=t(296540);const i={},s=a.createContext(i);function l(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);