"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[50141],{662504:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var t=a(474848),o=a(28453);const s={sidebar_position:3970,slug:"2022-11-16",title:"Deploy Mautic with Hashicorp Nomad",authors:"mpolinowski",tags:["Nomad","Consul","LINUX"],description:"Using Nomad to deploy the Mautic Marketing Automation Platform"},i=void 0,r={id:"DevOps/Hashicorp/2022-11-16-hashicorp-nomad-mautic/index",title:"Deploy Mautic with Hashicorp Nomad",description:"Using Nomad to deploy the Mautic Marketing Automation Platform",source:"@site/docs/DevOps/Hashicorp/2022-11-16-hashicorp-nomad-mautic/index.md",sourceDirName:"DevOps/Hashicorp/2022-11-16-hashicorp-nomad-mautic",slug:"/DevOps/Hashicorp/2022-11-16-hashicorp-nomad-mautic/2022-11-16",permalink:"/docs/DevOps/Hashicorp/2022-11-16-hashicorp-nomad-mautic/2022-11-16",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Hashicorp/2022-11-16-hashicorp-nomad-mautic/index.md",tags:[{label:"Nomad",permalink:"/docs/tags/nomad"},{label:"Consul",permalink:"/docs/tags/consul"},{label:"LINUX",permalink:"/docs/tags/linux"}],version:"current",sidebarPosition:3970,frontMatter:{sidebar_position:3970,slug:"2022-11-16",title:"Deploy Mautic with Hashicorp Nomad",authors:"mpolinowski",tags:["Nomad","Consul","LINUX"],description:"Using Nomad to deploy the Mautic Marketing Automation Platform"},sidebar:"tutorialSidebar",previous:{title:"Deploy Grav CMS with Hashicorp Nomad",permalink:"/docs/DevOps/Hashicorp/2022-11-18-hashicorp-nomad-grav/2022-11-18"},next:{title:"Hashicorp Nomad for NGINX Load-balancing",permalink:"/docs/DevOps/Hashicorp/2022-11-15-hashicorp-nomad-nginx-load-balancing/2022-11-15"}},c={},d=[{value:"Docker-Compose",id:"docker-compose",level:2},{value:"Nomad Job",id:"nomad-job",level:2},{value:"Complete Job File",id:"complete-job-file",level:3}];function m(n){const e={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.p,{children:(0,t.jsx)(e.img,{alt:"Shen Zhen, China",src:a(25174).A+"",width:"2230",height:"839"})}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"#docker-compose",children:"Docker-Compose"})}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.a,{href:"#nomad-job",children:"Nomad Job"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"#complete-job-file",children:"Complete Job File"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"docker-compose",children:"Docker-Compose"}),"\n",(0,t.jsxs)(e.p,{children:["To test the container we can use ",(0,t.jsx)(e.code,{children:"docker compose up -d"})," (see ",(0,t.jsx)(e.a,{href:"/docs/DevOps/Provisioning/2022-11-16--mautic-docker/2022-11-16",children:"initial setup"}),"):"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yml",children:'version: "3.9"\n\nservices:\n  database:\n    image: mariadb:latest\n    container_name: mautic-db\n    environment:\n      MYSQL_ROOT_PASSWORD: mypassword\n    ports:\n      - "3306:3306"\n    volumes:\n      - mautic-db:/var/lib/mysql:rw\n    restart: always\n    networks:\n      - mauticnet\n    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci --sql-mode=""\n\n  mautic:\n    container_name: mautic\n    image: mautic/mautic:v4-apache\n    volumes:\n      - mautic-data:/var/www/html:rw\n    environment:\n      - MAUTIC_DB_HOST=database\n      - MAUTIC_DB_USER=root\n      - MAUTIC_DB_PASSWORD=mypassword\n      - MAUTIC_DB_NAME=mautic4\n      - MAUTIC_DB_TABLE_PREFIX=mautic4\n    restart: always\n    depends_on:\n      - database\n    links:\n      - database\n    networks:\n      - mauticnet\n    ports:\n      - "8888:80"\n\nnetworks:\n  mauticnet:\n\nvolumes:\n  mautic-db:\n  mautic-data:\n'})}),"\n",(0,t.jsx)(e.h2,{id:"nomad-job",children:"Nomad Job"}),"\n",(0,t.jsxs)(e.p,{children:["In Nomad we first need to create the volumes on our host in ",(0,t.jsx)(e.em,{children:"/etc/nomad.d/client.hcl"})," and then define it here:"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:'volume "mautic_db" {\n    type      = "host"\n    read_only = false\n    source    = "mautic_db"\n}\n\nvolume "mautic_data" {\n    type      = "host"\n    read_only = false\n    source    = "mautic_data"\n}\n'})}),"\n",(0,t.jsx)(e.p,{children:"It can then be mounted into the container:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:'volume_mount {\n    volume      = "mautic_db"\n    destination = "/var/lib/mysql"\n    read_only   = false\n}\n\nvolume_mount {\n    volume      = "mautic_data"\n    destination = "/var/www/html"\n    read_only   = false\n}\n'})}),"\n",(0,t.jsx)(e.h3,{id:"complete-job-file",children:"Complete Job File"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:'job "mautic" {\n  datacenters = ["dc1"]\n    group "mautic" {\n        \n        network {\n            mode = "host"\n            port "tcp" {\n                static = 3306\n            }\n            port "http" {\n                static = 80\n            }\n        }\n\n        update {\n            max_parallel = 1\n            min_healthy_time  = "10s"\n            healthy_deadline  = "5m"\n            progress_deadline = "10m"\n            auto_revert = true\n            auto_promote = true\n            canary = 1\n        }\n\n        restart {\n            attempts = 10\n            interval = "5m"\n            delay    = "25s"\n            mode     = "delay"\n        }\n\n        volume "mautic_db" {\n            type      = "host"\n            read_only = false\n            source    = "mautic_db"\n        }\n\n        volume "mautic_data" {\n            type      = "host"\n            read_only = false\n            source    = "mautic_data"\n        }\n\n        service {\n            name = "mautic-db"\n            port = "tcp"\n            tags = [\n                "database"\n            ]\n\n            check {\n                name     = "DB Health"\n                port     = "tcp"\n                type     = "tcp"\n                interval = "30s"\n                timeout  = "4s"\n            }\n        }\n\n        service {\n            name = "mautic-frontend"\n            port = "http"\n            tags = [\n                "frontend"\n            ]\n\n            check {\n                name     = "HTTP Health"\n                path     = "/"\n                type     = "http"\n                protocol = "http"\n                interval = "10s"\n                timeout  = "2s"\n            }\n        }\n\n        task "mautic-db" {\n            driver = "docker"\n\n            config {\n                image = "mariadb:latest"\n                ports = ["tcp"]\n                network_mode = "host"\n                force_pull = false\n            }\n\n            volume_mount {\n                volume      = "mautic_db"\n                destination = "/var/lib/mysql" # <-- inside container\n                read_only   = false\n            }\n\n            env {\n                MYSQL_ROOT_PASSWORD = "mypassword"\n                MYSQL_USER = "mautic4"\n                MYSQL_PASSWORD = "mypassword"\n                MYSQL_DATABASE = "mautic4"\n                CONTAINER_NAME = "127.0.0.1"\n            }\n        }\n\n        task "mautic-frontend" {\n            driver = "docker"\n\n            volume_mount {\n                volume      = "mautic_data"\n                destination = "/var/www/html"\n                read_only   = false\n            }\n\n            config {\n                image = "mautic/mautic:v4-apache"\n                ports = ["http"]\n                network_mode = "host"\n                force_pull = false\n            }\n\n            env {\n              MAUTIC_DB_HOST = "127.0.0.1"\n              MAUTIC_DB_USER = "mautic4"\n              MAUTIC_DB_PASSWORD = "mypassword"\n              MAUTIC_DB_NAME = "mautic4"\n              MAUTIC_DB_TABLE_PREFIX = "mautic4"\n            }\n\n            resources {\n                cpu    = 1000\n                memory = 1024\n            }\n        }\n    }\n}\n'})})]})}function l(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(m,{...n})}):m(n)}},25174:(n,e,a)=>{a.d(e,{A:()=>t});const t=a.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-6c1edb088dfea3a7d39f8eebb8e9dc23.jpg"},28453:(n,e,a)=>{a.d(e,{R:()=>i,x:()=>r});var t=a(296540);const o={},s=t.createContext(o);function i(n){const e=t.useContext(s);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:i(n.components),t.createElement(s.Provider,{value:e},n.children)}}}]);