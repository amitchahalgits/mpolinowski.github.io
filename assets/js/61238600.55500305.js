"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[68768],{938914:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var o=n(785893),i=n(603905);const r={sidebar_position:9020,slug:"2022-10-08",title:"Python - PyQt Desktop App",authors:"mpolinowski",tags:["Python"],description:"Using PyQt6 to build desktop app with Python."},a=void 0,s={id:"Development/Python/2022-10-08-python-desktop-app/index",title:"Python - PyQt Desktop App",description:"Using PyQt6 to build desktop app with Python.",source:"@site/docs/Development/Python/2022-10-08-python-desktop-app/index.md",sourceDirName:"Development/Python/2022-10-08-python-desktop-app",slug:"/Development/Python/2022-10-08-python-desktop-app/2022-10-08",permalink:"/docs/Development/Python/2022-10-08-python-desktop-app/2022-10-08",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Development/Python/2022-10-08-python-desktop-app/index.md",tags:[{label:"Python",permalink:"/docs/tags/python"}],version:"current",sidebarPosition:9020,frontMatter:{sidebar_position:9020,slug:"2022-10-08",title:"Python - PyQt Desktop App",authors:"mpolinowski",tags:["Python"],description:"Using PyQt6 to build desktop app with Python."},sidebar:"tutorialSidebar",previous:{title:"Python - Flask Frontend to generate Elasticsearch Docs from Sitemaps",permalink:"/docs/Development/Python/2022-10-09-python-flask-elasticsearch/2022-10-09"},next:{title:"Python - Deploying a Web App with Flask",permalink:"/docs/Development/Python/2022-10-08-python-flask-app/2022-10-08"}},d={},c=[{value:"Setup",id:"setup",level:2},{value:"Hello World",id:"hello-world",level:3},{value:"Signals",id:"signals",level:2},{value:"Working with User Inputs",id:"working-with-user-inputs",level:2},{value:"Web Scraping",id:"web-scraping",level:2},{value:"Advanced UI Elements",id:"advanced-ui-elements",level:2},{value:"Advanced Layouts",id:"advanced-layouts",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.ah)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Sham Sui Po, Hong Kong",src:n(881688).Z+"",width:"1500",height:"548"})}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"#setup",children:"Setup"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"#hello-world",children:"Hello World"})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"#signals",children:"Signals"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"#working-with-user-inputs",children:"Working with User Inputs"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"#web-scraping",children:"Web Scraping"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"#advanced-ui-elements",children:"Advanced UI Elements"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"#advanced-layouts",children:"Advanced Layouts"})}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://github.com/mpolinowski/py-Qt6-app",children:"Github Repository"})}),"\n",(0,o.jsx)(t.h2,{id:"setup",children:"Setup"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"pip install PyQt6\n"})}),"\n",(0,o.jsx)(t.h3,{id:"hello-world",children:"Hello World"}),"\n",(0,o.jsx)(t.p,{children:"Create a simple Layout in Qt6:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-py",children:"from PyQt6.QtWidgets import QApplication, QWidget, QVBoxLayout\nfrom PyQt6.QtWidgets import QLabel, QPushButton, QLineEdit\n\napp = QApplication([])\nwindow = QWidget()\nwindow.setWindowTitle('PyQt6 Application')\n\nlayout = QVBoxLayout()\n\ntext = QLineEdit()\n\nlayout.addWidget(text)\n\nwindow.setLayout(layout)\nwindow.show()\napp.exec()\n"})}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Python - PyQt Desktop App",src:n(547536).Z+"",width:"911",height:"211"})}),"\n",(0,o.jsx)(t.h2,{id:"signals",children:"Signals"}),"\n",(0,o.jsx)(t.p,{children:'State is exchanged in Qt by "signals":'}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-py",children:"def make_it_so():\n    input_text = text.text()\n    output_label.setText(input_text)\n\nbtn = QPushButton('Make it so!')\nlayout.addWidget(btn)\nbtn.clicked.connect(make_it_so)\n\noutput_label = QLabel('')\nlayout.addWidget(output_label)\n"})}),"\n",(0,o.jsx)(t.p,{children:"When the button is clicked it triggers a function that then pushes the state - text input - of the input field to an label widget."}),"\n",(0,o.jsx)(t.h2,{id:"working-with-user-inputs",children:"Working with User Inputs"}),"\n",(0,o.jsx)(t.p,{children:"Once we have the user input from our text widget we can add some functionality to it - for example turning input strings into URL-safe base64 representations:"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Python - PyQt Desktop App",src:n(808127).Z+"",width:"955",height:"248"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-py",children:'from PyQt6.QtWidgets import QApplication, QWidget, QVBoxLayout\nfrom PyQt6.QtWidgets import QLabel, QPushButton, QLineEdit\n\nimport base64\n\n# Add functions - what do you want to do with the user input\n\ndef to_base64():\n    input_text = text_encode.text()\n    encoded_bytes = base64.urlsafe_b64encode(input_text.encode("utf-8"))\n    encoded_text = str(encoded_bytes, "utf-8")\n    output_encode.setText("Encoded String: " + encoded_text)\n\ndef from_base64():\n    input_text = text_decode.text()\n    decoded_bytes = base64.urlsafe_b64decode(input_text.encode("utf-8"))\n    decoded_text = str(decoded_bytes, "utf-8")\n    output_decode.setText("Decoded String: " + decoded_text)\n\n# App scaffolding\n\napp = QApplication([])\nwindow = QWidget()\nwindow.setWindowTitle(\'base64 de/encoder\')\nlayout = QVBoxLayout()\n\n# Encode string to base64\n\ntext_encode = QLineEdit()\nlayout.addWidget(text_encode)\n\nbtn = QPushButton(\'base64 Encode\')\nlayout.addWidget(btn)\nbtn.clicked.connect(to_base64)\n\noutput_encode = QLabel(\'\')\nlayout.addWidget(output_encode)\n\n# Decode string from base64\n\ntext_decode = QLineEdit()\nlayout.addWidget(text_decode)\n\nbtn = QPushButton(\'base64 Decode\')\nlayout.addWidget(btn)\nbtn.clicked.connect(from_base64)\n\noutput_decode = QLabel(\'\')\nlayout.addWidget(output_decode)\n\n## Execute\n\nwindow.setLayout(layout)\nwindow.show()\napp.exec()\n'})}),"\n",(0,o.jsx)(t.h2,{id:"web-scraping",children:"Web Scraping"}),"\n",(0,o.jsx)(t.p,{children:"Using Beautiful Soup to scrape information from the web."}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Python - PyQt Desktop App",src:n(505660).Z+"",width:"850",height:"386"})}),"\n",(0,o.jsx)(t.p,{children:"Calculate the price of an INSTAR camera by scraping the latest prize from the INSTAR web shop:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-py",children:"from PyQt6.QtWidgets import QApplication, QWidget, QVBoxLayout\nfrom PyQt6.QtWidgets import QLabel, QPushButton, QLineEdit\n\nfrom bs4 import BeautifulSoup\nimport requests\n\ndef get_prize():\n    url = f'https://www.instar.com/produkte/wlan-aussenkameras-poe-ip-kameras-wetterfeste-netzwerkkameras-outdoor-uberwachungskameras/in-9408-2k-serie-wlan-uberwachungskamera-ai-objekterkennung-apple-homekit-mqtt-sftp-nachtsicht/in-9408-2k-poe-weiss-ip-kamera.html'\n    content = requests.get(url).text\n    soup = BeautifulSoup(content, 'html.parser')\n    prize = soup.find(\"span\", class_=\"price\").get_text()\n    prize_intl = prize.replace(',', '.')\n    prize_float = float(prize_intl[:-2])\n    \n    return prize_float\n\n\ndef calc_value():\n    number = float(number_input.text())\n    prize = get_prize()\n    calculated_value = str(number * prize)\n    number_output.setText(calculated_value)\n\n# App scaffolding\n\napp = QApplication([])\nwindow = QWidget()\nwindow.setWindowTitle('Price Calculator - INSTAR IN-9408 2k+')\nlayout = QVBoxLayout()\n\n# Encode string to base64\n\nnumber_input = QLineEdit()\nlayout.addWidget(number_input)\n\nbtn = QPushButton('Get Price')\nlayout.addWidget(btn)\nbtn.clicked.connect(calc_value)\n\nnumber_output = QLabel('')\nlayout.addWidget(number_output)\n\n## Execute\n\nwindow.setLayout(layout)\nwindow.show()\napp.exec()\n"})}),"\n",(0,o.jsx)(t.h2,{id:"advanced-ui-elements",children:"Advanced UI Elements"}),"\n",(0,o.jsx)(t.p,{children:"Using Dropdown menus:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-py",children:"currencies = ['USD','EUR','GBP','CNY']\n\nselect_inCurrency = QComboBox()\nselect_inCurrency.addItems(currencies)\nlayout.addWidget(select_inCurrency)\n\nselect_outCurrency = QComboBox()\nselect_outCurrency.addItems(currencies)\nlayout.addWidget(select_outCurrency)\n"})}),"\n",(0,o.jsx)(t.h2,{id:"advanced-layouts",children:"Advanced Layouts"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Python - PyQt Desktop App",src:n(687047).Z+"",width:"926",height:"341"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-py",children:"from PyQt6.QtWidgets import QApplication, QWidget, QVBoxLayout, QHBoxLayout\nfrom PyQt6.QtWidgets import QLabel, QPushButton, QLineEdit, QComboBox\n\nfrom bs4 import BeautifulSoup\nimport requests\n\ndef get_conversion(in_currency, out_currency):\n    url = f'https://www.x-rates.com/calculator/?from={in_currency}&to={out_currency}&amount=1'\n    content = requests.get(url).text\n    soup = BeautifulSoup(content, 'html.parser')\n    rate = soup.find(\"span\", class_=\"ccOutputRslt\").get_text()\n    rate_float = float(rate[:-4])\n\n    return rate_float\n\ndef calc_value():\n    number = float(number_input.text())\n    in_currency = select_inCurrency.currentText()\n    out_currency = select_outCurrency.currentText()\n    rate = get_conversion(in_currency, out_currency)\n    calculated_value = str(number * rate)\n    message = f'{number} {in_currency} is {calculated_value} {out_currency}'\n    number_output.setText(message)\n\n# App scaffolding\n\napp = QApplication([])\nwindow = QWidget()\nwindow.setWindowTitle('Currency Converter')\n\nlayoutMain = QVBoxLayout()\nlayoutContainer = QHBoxLayout()\nlayoutMain.addLayout(layoutContainer)\n\nlayoutLeftBox = QVBoxLayout()\nlayoutContainer.addLayout(layoutLeftBox)\nlayoutRightBox = QVBoxLayout()\nlayoutContainer.addLayout(layoutRightBox)\n\n\n# Select Currencies\n\ncurrencies = ['USD','EUR','GBP','CNY']\n\nselect_inCurrency = QComboBox()\nselect_inCurrency.addItems(currencies)\nlayoutLeftBox.addWidget(select_inCurrency)\n\nselect_outCurrency = QComboBox()\nselect_outCurrency.addItems(currencies)\nlayoutLeftBox.addWidget(select_outCurrency)\n\n# Convert to Target Currency\n\nnumber_input = QLineEdit()\nlayoutRightBox.addWidget(number_input)\n\nbtn = QPushButton('Convert')\nlayoutMain.addWidget(btn)\nbtn.clicked.connect(calc_value)\n\nnumber_output = QLabel('')\nlayoutRightBox.addWidget(number_output)\n\n## Execute\n\nwindow.setLayout(layoutMain)\nwindow.show()\napp.exec()\n"})})]})}function u(e={}){const{wrapper:t}={...(0,i.ah)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},603905:(e,t,n)=>{n.d(t,{ah:()=>c});var o=n(667294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=o.createContext({}),c=function(e){var t=o.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,d=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),h=i,y=p["".concat(d,".").concat(h)]||p[h]||l[h]||r;return n?o.createElement(y,a(a({ref:t},u),{},{components:n})):o.createElement(y,a({ref:t},u))}));u.displayName="MDXCreateElement"},547536:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/Python_PyQt6_Desktop_App_01-ef56f178092312ef49f26542b44b76d6.png"},808127:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/Python_PyQt6_Desktop_App_02-48736ef5f1c4723c3b621bc97c38bcd5.png"},505660:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/Python_PyQt6_Desktop_App_03-be5c86e7b36c20386b5f2dd662206187.png"},687047:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/Python_PyQt6_Desktop_App_04-a4e37a95913d727d83e83e84f3d54dea.png"},881688:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-5f44d483789c3ce79f05418f930f5cd2.jpg"}}]);