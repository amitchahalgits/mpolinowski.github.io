"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[84237],{176029:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>a});var r=s(474848),l=s(28453);const i={sidebar_position:6060,slug:"2021-10-11",title:"Hashicorp Consul in Production",authors:"mpolinowski",tags:["Consul"]},c=void 0,o={id:"DevOps/Hashicorp/2021-10-11--hashicorp-consul-in-production/index",title:"Hashicorp Consul in Production",description:"Shenzhen, China",source:"@site/docs/DevOps/Hashicorp/2021-10-11--hashicorp-consul-in-production/index.md",sourceDirName:"DevOps/Hashicorp/2021-10-11--hashicorp-consul-in-production",slug:"/DevOps/Hashicorp/2021-10-11--hashicorp-consul-in-production/2021-10-11",permalink:"/docs/DevOps/Hashicorp/2021-10-11--hashicorp-consul-in-production/2021-10-11",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Hashicorp/2021-10-11--hashicorp-consul-in-production/index.md",tags:[{label:"Consul",permalink:"/docs/tags/consul"}],version:"current",sidebarPosition:6060,frontMatter:{sidebar_position:6060,slug:"2021-10-11",title:"Hashicorp Consul in Production",authors:"mpolinowski",tags:["Consul"]},sidebar:"tutorialSidebar",previous:{title:"Hashicorp Nomad Refresher",permalink:"/docs/DevOps/Hashicorp/2022-05-15-hashicorp-nomad-refresher/2022-05-15"},next:{title:"Hashicorp Nomad in Production",permalink:"/docs/DevOps/Hashicorp/2021-10-10--hashicorp-nomad-in-production/2021-10-10"}},t={},a=[{value:"Installation",id:"installation",level:2},{value:"Security Credentials",id:"security-credentials",level:2},{value:"Gossip Encryption Key",id:"gossip-encryption-key",level:3},{value:"Generate TLS certificates for RPC encryption",id:"generate-tls-certificates-for-rpc-encryption",level:3},{value:"Configure Consul",id:"configure-consul",level:2},{value:"Masters",id:"masters",level:3},{value:"Minions",id:"minions",level:3},{value:"Ports",id:"ports",level:2},{value:"Run as a Service",id:"run-as-a-service",level:2},{value:"Setup Consul environment variables",id:"setup-consul-environment-variables",level:2},{value:"Enable Consul ACLs",id:"enable-consul-acls",level:2},{value:"Consul UI",id:"consul-ui",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Shenzhen, China",src:s(742131).A+"",width:"1500",height:"355"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#installation",children:"Installation"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#security-credentials",children:"Security Credentials"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#gossip-encryption-key",children:"Gossip Encryption Key"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#generate-tls-certificates-for-rpc-encryption",children:"Generate TLS certificates for RPC encryption"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#configure-consul",children:"Configure Consul"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#masters",children:"Masters"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#minions",children:"Minions"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#ports",children:"Ports"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#run-as-a-service",children:"Run as a Service"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#setup-consul-environment-variables",children:"Setup Consul environment variables"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#enable-consul-acls",children:"Enable Consul ACLs"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#consul-ui",children:"Consul UI"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsxs)(n.p,{children:["To install the precompiled binary, ",(0,r.jsx)(n.a,{href:"https://www.consul.io/downloads",children:"download the appropriate package"})," for your system."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"wget https://releases.hashicorp.com/consul/1.10.3/consul_1.10.3_linux_amd64.zip\r\nwget https://releases.hashicorp.com/consul/1.10.3/consul_1.10.3_SHA256SUMS\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"SHA256SUMS"})," shows me the corresponding check sum for this file:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"50afd45daaffd3af5ab67b03ff616117eca9961014ca0ef25ed2aaa27a7be698  consul_1.10.3_linux_amd64.zip\n"})}),"\n",(0,r.jsx)(n.p,{children:"The following command has to give you the same sum - if you downloaded the correct version of the file:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sha256sum consul_1.10.3_linux_amd64.zip\r\n50afd45daaffd3af5ab67b03ff616117eca9961014ca0ef25ed2aaa27a7be698  consul_1.10.3_linux_amd64.zip\n"})}),"\n",(0,r.jsx)(n.p,{children:"Now that we know that the zip container has not been tempered with we can unzip it to a place that is in our system PATH:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"echo $PATH\r\n\r\n/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"unzip ./consul_1.10.3_linux_amd64.zip\r\nrm ./consul_1.10.3_linux_amd64.zip\r\nmv consul /usr/bin/consul\n"})}),"\n",(0,r.jsx)(n.p,{children:"Verify that it is working:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"consul -v\r\nConsul v1.10.3\r\nRevision c976ffd2d\n"})}),"\n",(0,r.jsx)(n.p,{children:"The consul command features opt-in autocompletion for flags, subcommands, and arguments (where supported). Enable autocompletion:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"consul -autocomplete-install\r\ncomplete -C /usr/bin/consul consul\n"})}),"\n",(0,r.jsx)(n.p,{children:"Create a unique, non-privileged system user to run Consul and create its data directory:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"useradd --system --home /etc/consul.d --shell /bin/false consul\r\nmkdir --parents /opt/consul\r\nchown --recursive consul:consul /opt/consul\n"})}),"\n",(0,r.jsx)(n.h2,{id:"security-credentials",children:"Security Credentials"}),"\n",(0,r.jsx)(n.h3,{id:"gossip-encryption-key",children:"Gossip Encryption Key"}),"\n",(0,r.jsx)(n.p,{children:"Gossip is encrypted with a symmetric key, since gossip between nodes is done over UDP. All agents must have the same encryption key. You can create the encryption key via the Consul CLI even though no Consul agents are running yet. Generate the encryption key:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"consul keygen\r\nqDOPBEr+/oUVeOFQOnVypxwDaHzLrD+lvjo5vCEBbZ0=\n"})}),"\n",(0,r.jsx)(n.p,{children:"You will need to add the newly generated key to the encrypt option in the server configuration on all Consul agents. Save your key in a safe location. You will need to reference the key throughout the installation."}),"\n",(0,r.jsx)(n.h3,{id:"generate-tls-certificates-for-rpc-encryption",children:"Generate TLS certificates for RPC encryption"}),"\n",(0,r.jsx)(n.p,{children:"Start by creating the CA on your admin instance, using the Consul CLI:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"mkdir /opt/consul/certs\r\ncd /opt/consul/certs\r\nconsul tls ca create\n"})}),"\n",(0,r.jsx)(n.p,{children:"Next create a set of certificates, one for each Consul agent. You will need to select a name for your primary datacenter now, so that the certificates are named properly. First, for your Consul servers, use the following command to create a certificate for each server:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"consul tls cert create -server -dc my_dc\n"})}),"\n",(0,r.jsx)(n.p,{children:"Use the following command with the -client flag to create client certificates. The file name increments automatically:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"consul tls cert create -client -dc my_dc\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Now we need to copy the certificates to all master (server) and minion (client) servers into the ",(0,r.jsx)(n.code,{children:"/etc/consul.d/"})," directory:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"mkdir /etc/consul.d\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Masters"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"consul-agent-ca.pem"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"my_dc-server-consul-0-key.pem"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"my_dc-server-consul-0.pem"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Minions"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"consul-agent-ca.pem"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"my_dc-client-consul-0-key.pem"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"my_dc-client-consul-0.pem"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"configure-consul",children:"Configure Consul"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"touch /etc/consul.d/consul.hcl\r\nchown --recursive consul:consul /etc/consul.d\r\nchmod 640 /etc/consul.d/consul.hcl\r\nnano /etc/consul.d/consul.hcl\n"})}),"\n",(0,r.jsx)(n.h3,{id:"masters",children:"Masters"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"/etc/consul.d/consul.hcl"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'datacenter = "my_dc"\r\nnode_name = "consul-server"\r\nclient_addr = "0.0.0.0"\r\nbind_addr = "172.217.160.110"\r\nadvertise_addr = "172.217.160.110"\r\nserver    = true\r\nbootstrap = true\r\nui_config {\r\n  enabled = true\r\n}\r\ndata_dir   = "/opt/consul"\r\nlog_level  = "INFO"\r\naddresses {\r\n  http = "0.0.0.0"\r\n}\r\nports {\r\n  https = 8501\r\n}\r\nconnect {\r\n  enabled = true\r\n}\r\nkey_file = "/etc/consul.d/my_dc-server-consul-0-key.pem"\r\ncert_file = "/etc/consul.d/my_dc-server-consul-0.pem"\r\nca_file = "/etc/consul.d/consul-agent-ca.pem"\r\nencrypt = "qDOPBEr+/oUVeOFQOnVypxwDaHzLrD+lvjo5vCEBbZ0="\r\nverify_incoming = true\r\nverify_outgoing = true\r\nverify_server_hostname = true\r\nretry_join = ["157.240.7.35"]\n'})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"WARNING"})," The ",(0,r.jsx)(n.code,{children:"join"})," or ",(0,r.jsx)(n.code,{children:"retry_join"})," is a required parameter for the systemd process to complete successfully and send its notify signal on LAN join."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"minions",children:"Minions"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"/etc/consul.d/consul.hcl"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'datacenter = "my_dc"\r\nnode_name = "consul-minion"\r\nbind_addr = "157.240.7.35"\r\nadvertise_addr = "157.240.7.35"\r\nserver    = false\r\nui_config {\r\n  enabled = false\r\n}\r\ndata_dir   = "/opt/consul"\r\nlog_level  = "INFO"\r\naddresses {\r\n  http = "0.0.0.0"\r\n}\r\nports {\r\n  https = 8501\r\n}\r\nconnect {\r\n  enabled = true\r\n}\r\nkey_file = "/etc/consul.d/my_dc-client-consul-0-key.pem"\r\ncert_file = "/etc/consul.d/my_dc-client-consul-0.pem"\r\nca_file = "/etc/consul.d/consul-agent-ca.pem"\r\nencrypt = "qDOPBEr+/oUVeOFQOnVypxwDaHzLrD+lvjo5vCEBbZ0="\r\nverify_incoming = true\r\nverify_outgoing = true\r\nverify_server_hostname = true\n'})}),"\n",(0,r.jsx)(n.h2,{id:"ports",children:"Ports"}),"\n",(0,r.jsx)(n.p,{children:"Consul requires up to 6 different ports to work properly, some on TCP, UDP, or both protocols. Below we document the requirements for each port:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Use"}),(0,r.jsx)(n.th,{children:"Default Ports"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"DNS: The DNS server (TCP and UDP)"}),(0,r.jsx)(n.td,{children:"8600"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"HTTP: The HTTP API (TCP Only)"}),(0,r.jsx)(n.td,{children:"8500"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"HTTPS: The HTTPs API"}),(0,r.jsx)(n.td,{children:"disabled (8501)*"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"gRPC: The gRPC API"}),(0,r.jsx)(n.td,{children:"disabled (8502)*"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"LAN Serf: The Serf LAN port (TCP and UDP)"}),(0,r.jsx)(n.td,{children:"8301"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Wan Serf: The Serf WAN port (TCP and UDP)"}),(0,r.jsx)(n.td,{children:"8302"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"server: Server RPC address (TCP Only)"}),(0,r.jsx)(n.td,{children:"8300"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Sidecar Proxy Min: Inclusive min port number to use for automatically assigned sidecar service registrations."}),(0,r.jsx)(n.td,{children:"21000"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Sidecar Proxy Max: Inclusive max port number to use for automatically assigned sidecar service registrations."}),(0,r.jsx)(n.td,{children:"21255"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"*For HTTPS and gRPC the ports specified in the table are recommendations."}),"\n",(0,r.jsx)(n.p,{children:"Those ports are used for:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"DNS Interface"})," Used to resolve DNS queries."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"HTTP API"})," This is used by clients to talk to the HTTP API."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"HTTPS API (Optional)"})," Is off by default, but port 8501 is a convention used by various tools as the default."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"gRPC API (Optional)"})," Currently gRPC is only used to expose the xDS API to Envoy proxies. It is off by default, but port 8502 is a convention used by various tools as the default. Defaults to 8502 in -dev mode."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Serf LAN"})," This is used to handle gossip in the LAN. Required by all agents."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Serf WAN"})," This is used by servers to gossip over the WAN, to other servers. As of Consul 0.8 the WAN join flooding feature requires the Serf WAN port (TCP/UDP) to be listening on both WAN and LAN interfaces."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Server RPC"})," This is used by servers to handle incoming requests from other agents."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"firewall-cmd --permanent --zone=public --add-port=8301/tcp --add-port=8301/udp --add-port=8302/tcp --add-port=8302/udp\r\nfirewall-cmd --reload\r\nfirewall-cmd --zone=public --list-all\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"ufw allow 8301\r\nufw allow 8302\r\nufw reload\r\nufw status\n"})}),"\n",(0,r.jsx)(n.h2,{id:"run-as-a-service",children:"Run as a Service"}),"\n",(0,r.jsx)(n.p,{children:"Create a Consul service file:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"nano /usr/lib/systemd/system/consul.service\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.em,{children:["or ",(0,r.jsx)(n.code,{children:"/usr/lib/systemd/user/consul.service"})]})}),"\n",(0,r.jsx)(n.p,{children:"Add this configuration to the Consul service file:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yml",children:'[Unit]\r\nDescription="HashiCorp Consul"\r\nDocumentation=https://www.consul.io/\r\nRequires=network-online.target\r\nAfter=network-online.target\r\nConditionFileNotEmpty=/etc/consul.d/consul.hcl\r\n\r\n[Service]\r\nType=notify\r\nUser=consul\r\nGroup=consul\r\nExecStart=/usr/bin/consul agent -config-dir=/etc/consul.d/\r\nExecReload=/bin/kill --signal HUP $MAINPID\r\nKillMode=process\r\nKillSignal=SIGTERM\r\nRestart=on-failure\r\nLimitNOFILE=65536\r\n\r\n[Install]\r\nWantedBy=multi-user.target\n'})}),"\n",(0,r.jsx)(n.p,{children:"Check that your configuration file is valid, with the Consul CLI validate command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"consul validate /etc/consul.d/consul.hcl\r\n\r\nbootstrap = true: do not enable unless necessary\r\nConfiguration is valid!\n"})}),"\n",(0,r.jsx)(n.p,{children:"Enable and start Consul using the systemctl command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"systemctl enable --now  consul\r\nservice consul status\n"})}),"\n",(0,r.jsx)(n.h2,{id:"setup-consul-environment-variables",children:"Setup Consul environment variables"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Masters"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"export CONSUL_CACERT=/etc/consul.d/consul-agent-ca.pem\r\nexport CONSUL_CLIENT_CERT=/etc/consul.d/my_dc-server-consul-0.pem\r\nexport CONSUL_CLIENT_KEY=/etc/consul.d/my_dc-server-consul-0-key.pem\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Minions"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"export CONSUL_CACERT=/etc/consul.d/consul-agent-ca.pem\r\nexport CONSUL_CLIENT_CERT=/etc/consul.d/my_dc-client-consul-0.pem\r\nexport CONSUL_CLIENT_KEY=/etc/consul.d/my_dc-client-consul-0-key.pem\n"})}),"\n",(0,r.jsx)(n.h2,{id:"enable-consul-acls",children:"Enable Consul ACLs"}),"\n",(0,r.jsx)(n.p,{children:'Add the ACL configuration to the consul.hcl configuration file and choose a default policy of "allow" (allow all traffic unless explicitly denied) or "deny" (deny all traffic unless explicitly allowed).'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'acl = {\r\n  enabled = true\r\n  default_policy = "allow"\r\n  enable_token_persistence = true\r\n}\r\nperformance {\r\n  raft_multiplier = 1\r\n}\n'})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"raft_multiplier"})," - An integer multiplier used by Consul servers to scale key Raft timing parameters. Setting this to a value of 1 will configure Raft to its highest-performance mode, equivalent to the default timing of Consul prior to 0.7, and is recommended for production Consul servers."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Generate the bootstrap token from your master server:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"consul acl bootstrap\n"})}),"\n",(0,r.jsx)(n.p,{children:"This will return the Consul bootstrap token. You will need the SecretID for all subsequent Consul API requests (including CLI and UI). Ensure that you save the SecretID."}),"\n",(0,r.jsxs)(n.p,{children:["Set ",(0,r.jsx)(n.strong,{children:"CONSUL_MGMT_TOKEN"})," env variable:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'export CONSUL_HTTP_TOKEN="<Token SecretID from previous step>"\r\nexport CONSUL_MGMT_TOKEN="<Token SecretID from previous step>"\n'})}),"\n",(0,r.jsx)(n.p,{children:"Create a node policy file with write access for nodes related actions and read access for service related actions:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"mkdir /etc/consul.d/policies\r\nnano /etc/consul.d/policies/node-policy.hcl\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"node-policy.hcl"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'agent_prefix "" {\r\n  policy = "write"\r\n}\r\nnode_prefix "" {\r\n  policy = "write"\r\n}\r\nservice_prefix "" {\r\n  policy = "read"\r\n}\r\nsession_prefix "" {\r\n  policy = "read"\r\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Generate the Consul node ACL policy with the newly created policy file:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'cd /etc/consul.d/policies\r\n\r\nconsul acl policy create \\\r\n  -token=${CONSUL_MGMT_TOKEN} \\\r\n  -name node-policy \\\r\n  -rules @node-policy.hcl\r\n\r\nID:           secret\r\nName:         node-policy\r\nDescription:\r\nDatacenters:\r\nRules:\r\nagent_prefix "" {\r\n  policy = "write"\r\n}\r\nnode_prefix "" {\r\n  policy = "write"\r\n}\r\nservice_prefix "" {\r\n  policy = "read"\r\n}\r\nsession_prefix "" {\r\n  policy = "read"\r\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"Create the node token with the newly created policy:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'consul acl token create \\\r\n  -token=${CONSUL_MGMT_TOKEN} \\\r\n  -description "node token" \\\r\n  -policy-name node-policy\r\n\r\nAccessorID:       secret\r\nSecretID:         secret\r\nDescription:      node token\r\nLocal:            false\r\nCreate Time:      2021-10-25 07:28:39.420612336 +0200 CEST\r\nPolicies:\r\n   secret - node-policy\n'})}),"\n",(0,r.jsx)(n.p,{children:"On all Consul Servers add the node token."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'consul acl set-agent-token \\\r\n  -token="<Management Token SecretID>" \\\r\n  agent "<Node Token SecretID>"\r\n\r\nACL token "agent" set successfully\n'})}),"\n",(0,r.jsx)(n.h2,{id:"consul-ui",children:"Consul UI"}),"\n",(0,r.jsx)(n.p,{children:"I did not forward the HTTP port, but I can still test the Nomad UI by tunnelling the user interface through SSH onto your local server:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"ssh myuser@my-server-ip -p ssh-port -L8500:localhost:8500\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Access the ",(0,r.jsx)(n.strong,{children:"Nodes"})," tab and you should see both the Master and Minion server connected:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"http://localhost:8500/ui/my_dc/nodes\n"})})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},742131:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-886bf7aab4c3160277fc1a129600b944.jpg"},28453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>o});var r=s(296540);const l={},i=r.createContext(l);function c(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:c(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);