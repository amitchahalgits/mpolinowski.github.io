"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[45417],{3905:(t,l,n)=>{n.d(l,{Zo:()=>d,kt:()=>y});var e=n(67294);function i(t,l,n){return l in t?Object.defineProperty(t,l,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[l]=n,t}function u(t,l){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(t);l&&(e=e.filter((function(l){return Object.getOwnPropertyDescriptor(t,l).enumerable}))),n.push.apply(n,e)}return n}function a(t){for(var l=1;l<arguments.length;l++){var n=null!=arguments[l]?arguments[l]:{};l%2?u(Object(n),!0).forEach((function(l){i(t,l,n[l])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(l){Object.defineProperty(t,l,Object.getOwnPropertyDescriptor(n,l))}))}return t}function r(t,l){if(null==t)return{};var n,e,i=function(t,l){if(null==t)return{};var n,e,i={},u=Object.keys(t);for(e=0;e<u.length;e++)n=u[e],l.indexOf(n)>=0||(i[n]=t[n]);return i}(t,l);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(t);for(e=0;e<u.length;e++)n=u[e],l.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var c=e.createContext({}),k=function(t){var l=e.useContext(c),n=l;return t&&(n="function"==typeof t?t(l):a(a({},l),t)),n},d=function(t){var l=k(t.components);return e.createElement(c.Provider,{value:l},t.children)},_={inlineCode:"code",wrapper:function(t){var l=t.children;return e.createElement(e.Fragment,{},l)}},o=e.forwardRef((function(t,l){var n=t.components,i=t.mdxType,u=t.originalType,c=t.parentName,d=r(t,["components","mdxType","originalType","parentName"]),o=k(n),y=i,p=o["".concat(c,".").concat(y)]||o[y]||_[y]||u;return n?e.createElement(p,a(a({ref:l},d),{},{components:n})):e.createElement(p,a({ref:l},d))}));function y(t,l){var n=arguments,i=l&&l.mdxType;if("string"==typeof t||i){var u=n.length,a=new Array(u);a[0]=o;var r={};for(var c in l)hasOwnProperty.call(l,c)&&(r[c]=l[c]);r.originalType=t,r.mdxType="string"==typeof t?t:i,a[1]=r;for(var k=2;k<u;k++)a[k]=n[k];return e.createElement.apply(null,a)}return e.createElement.apply(null,n)}o.displayName="MDXCreateElement"},10897:(t,l,n)=>{n.r(l),n.d(l,{assets:()=>c,contentTitle:()=>a,default:()=>_,frontMatter:()=>u,metadata:()=>r,toc:()=>k});var e=n(87462),i=(n(67294),n(3905));const u={sidebar_position:4115,slug:"2023-09-11",title:"Scikit-Learn ML Model Explainability",authors:"mpolinowski",tags:["Python","Machine Learning","SKlearn"],description:"SHAP is a game theoretic approach to explain the output of any machine learning model."},a=void 0,r={unversionedId:"IoT-and-Machine-Learning/ML/2023-09-10--model-explainability-shap/index",id:"IoT-and-Machine-Learning/ML/2023-09-10--model-explainability-shap/index",title:"Scikit-Learn ML Model Explainability",description:"SHAP is a game theoretic approach to explain the output of any machine learning model.",source:"@site/docs/IoT-and-Machine-Learning/ML/2023-09-10--model-explainability-shap/index.md",sourceDirName:"IoT-and-Machine-Learning/ML/2023-09-10--model-explainability-shap",slug:"/IoT-and-Machine-Learning/ML/2023-09-10--model-explainability-shap/2023-09-11",permalink:"/docs/IoT-and-Machine-Learning/ML/2023-09-10--model-explainability-shap/2023-09-11",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IoT-and-Machine-Learning/ML/2023-09-10--model-explainability-shap/index.md",tags:[{label:"Python",permalink:"/docs/tags/python"},{label:"Machine Learning",permalink:"/docs/tags/machine-learning"},{label:"SKlearn",permalink:"/docs/tags/s-klearn"}],version:"current",sidebarPosition:4115,frontMatter:{sidebar_position:4115,slug:"2023-09-11",title:"Scikit-Learn ML Model Explainability",authors:"mpolinowski",tags:["Python","Machine Learning","SKlearn"],description:"SHAP is a game theoretic approach to explain the output of any machine learning model."},sidebar:"tutorialSidebar",previous:{title:"YOLOv8 License Plate Detection",permalink:"/docs/IoT-and-Machine-Learning/ML/2023-09-15--yolo8-tracking-and-ocr/2023-09-15"},next:{title:"Using Tensorflow Models in OpenCV",permalink:"/docs/IoT-and-Machine-Learning/ML/2023-09-05--semantic-segmentation-in-opencv/2023-09-05"}},c={},k=[{value:"Dataset",id:"dataset",level:2},{value:"Preprocessing",id:"preprocessing",level:2},{value:"Data Transformation",id:"data-transformation",level:2},{value:"Model Training",id:"model-training",level:2},{value:"Grid Search",id:"grid-search",level:3},{value:"Model Evaluation",id:"model-evaluation",level:2},{value:"Model Explainability",id:"model-explainability",level:2}],d={toc:k};function _(t){let{components:l,...u}=t;return(0,i.kt)("wrapper",(0,e.Z)({},d,u,{components:l,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Shenzhen, China",src:n(16853).Z,width:"1500",height:"624"})),(0,i.kt)("h1",{id:"using-tensorflow-models-in-opencv"},"Using Tensorflow Models in OpenCV"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/mpolinowski/sklearn-model-explainability"},"Github Repository"))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#using-tensorflow-models-in-opencv"},"Using Tensorflow Models in OpenCV")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#scikit-learn-ml-model-explainability"},"Scikit-Learn ML Model Explainability"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#dataset"},"Dataset")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#preprocessing"},"Preprocessing")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#data-transformation"},"Data Transformation")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#model-training"},"Model Training"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#grid-search"},"Grid Search")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#model-evaluation"},"Model Evaluation")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#model-explainability"},"Model Explainability"))))),(0,i.kt)("h1",{id:"scikit-learn-ml-model-explainability"},"Scikit-Learn ML Model Explainability"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/shap/shap"},"SHAP (SHapley Additive exPlanations)")," is a game theoretic approach to explain the output of any machine learning model. It connects optimal credit allocation with local explanations using the classic Shapley values from game theory and their related extensions."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"import boto3\nfrom datetime import date\nimport lightgbm as lgb\nimport math\nimport matplotlib.pyplot as plt\nimport numpy as pd\nimport pandas as pd\nimport seaborn as sns\nimport shap\n\nfrom sklearn import metrics\nfrom sklearn.model_selection import StratifiedShuffleSplit, GridSearchCV, train_test_split\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Using `tqdm.autonotebook.tqdm` in notebook mode. Use `tqdm.tqdm` instead to force console mode (e.g. in jupyter console)\n")),(0,i.kt)("h2",{id:"dataset"},"Dataset"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.kaggle.com/datasets/arashnic/hr-analytics-job-change-of-data-scientists"},"Kaggle"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"df_train = pd.read_csv('data/train.csv')\ndf_test = pd.read_csv('data/test.csv')\n\ndf = pd.concat([df_train, df_test])\ndf.shape\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"(21287, 14)\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"df.head().transpose()\n")),(0,i.kt)("div",null,(0,i.kt)("table",null,(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",null),(0,i.kt)("th",null,"0"),(0,i.kt)("th",null,"1"),(0,i.kt)("th",null,"2"),(0,i.kt)("th",null,"3"),(0,i.kt)("th",null,"4"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("th",null,"enrollee_id"),(0,i.kt)("td",null,"8949"),(0,i.kt)("td",null,"29725"),(0,i.kt)("td",null,"11561"),(0,i.kt)("td",null,"33241"),(0,i.kt)("td",null,"666")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"city"),(0,i.kt)("td",null,"city_103"),(0,i.kt)("td",null,"city_40"),(0,i.kt)("td",null,"city_21"),(0,i.kt)("td",null,"city_115"),(0,i.kt)("td",null,"city_162")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"city_development_index"),(0,i.kt)("td",null,"0.92"),(0,i.kt)("td",null,"0.776"),(0,i.kt)("td",null,"0.624"),(0,i.kt)("td",null,"0.789"),(0,i.kt)("td",null,"0.767")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"gender"),(0,i.kt)("td",null,"Male"),(0,i.kt)("td",null,"Male"),(0,i.kt)("td",null,"NaN"),(0,i.kt)("td",null,"NaN"),(0,i.kt)("td",null,"Male")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"relevent_experience"),(0,i.kt)("td",null,"Has relevent experience"),(0,i.kt)("td",null,"No relevent experience"),(0,i.kt)("td",null,"No relevent experience"),(0,i.kt)("td",null,"No relevent experience"),(0,i.kt)("td",null,"Has relevent experience")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"enrolled_university"),(0,i.kt)("td",null,"no_enrollment"),(0,i.kt)("td",null,"no_enrollment"),(0,i.kt)("td",null,"Full time course"),(0,i.kt)("td",null,"NaN"),(0,i.kt)("td",null,"no_enrollment")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"education_level"),(0,i.kt)("td",null,"Graduate"),(0,i.kt)("td",null,"Graduate"),(0,i.kt)("td",null,"Graduate"),(0,i.kt)("td",null,"Graduate"),(0,i.kt)("td",null,"Masters")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"major_discipline"),(0,i.kt)("td",null,"STEM"),(0,i.kt)("td",null,"STEM"),(0,i.kt)("td",null,"STEM"),(0,i.kt)("td",null,"Business Degree"),(0,i.kt)("td",null,"STEM")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"experience"),(0,i.kt)("td",null,">20"),(0,i.kt)("td",null,"15"),(0,i.kt)("td",null,"5"),(0,i.kt)("td",null,"<1"),(0,i.kt)("td",null,">20")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"company_size"),(0,i.kt)("td",null,"NaN"),(0,i.kt)("td",null,"50-99"),(0,i.kt)("td",null,"NaN"),(0,i.kt)("td",null,"NaN"),(0,i.kt)("td",null,"50-99")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"company_type"),(0,i.kt)("td",null,"NaN"),(0,i.kt)("td",null,"Pvt Ltd"),(0,i.kt)("td",null,"NaN"),(0,i.kt)("td",null,"Pvt Ltd"),(0,i.kt)("td",null,"Funded Startup")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"last_new_job"),(0,i.kt)("td",null,"1"),(0,i.kt)("td",null,">4"),(0,i.kt)("td",null,"never"),(0,i.kt)("td",null,"never"),(0,i.kt)("td",null,"4")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"training_hours"),(0,i.kt)("td",null,"36"),(0,i.kt)("td",null,"47"),(0,i.kt)("td",null,"83"),(0,i.kt)("td",null,"52"),(0,i.kt)("td",null,"8")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"target"),(0,i.kt)("td",null,"1.0"),(0,i.kt)("td",null,"0.0"),(0,i.kt)("td",null,"0.0"),(0,i.kt)("td",null,"1.0"),(0,i.kt)("td",null,"0.0"))))),(0,i.kt)("h2",{id:"preprocessing"},"Preprocessing"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"# can ID be used as unique identifier?\ndf['enrollee_id'].nunique() == df.shape[0]\n# there are as many IDs as there are rows in the dataset\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"True\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"df['duplicated'] = df.drop(columns=['enrollee_id']).duplicated()\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"df['duplicated'].value_counts()\n# there are 50 ids that are dups\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"False    21237\nTrue        50\nName: duplicated, dtype: int64\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"# drop all lines that are duplicated entries\ndf.drop(df[df['duplicated'] == True].index, inplace = True)\ndf['duplicated'].value_counts()\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"False    21235\nName: duplicated, dtype: int64\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"for col in df.columns:\n    print(f' \\n {col.upper()} :: {df[col].nunique()} UNIQUE :: {df[col].isnull().sum()} NULL')\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"}," ENROLLEE_ID :: 21235 UNIQUE :: 0 NULL\n \n CITY :: 123 UNIQUE :: 0 NULL\n \n CITY_DEVELOPMENT_INDEX :: 93 UNIQUE :: 0 NULL\n \n GENDER :: 3 UNIQUE :: 5015 NULL\n \n RELEVENT_EXPERIENCE :: 2 UNIQUE :: 0 NULL\n \n ENROLLED_UNIVERSITY :: 3 UNIQUE :: 417 NULL\n \n EDUCATION_LEVEL :: 5 UNIQUE :: 512 NULL\n \n MAJOR_DISCIPLINE :: 6 UNIQUE :: 3121 NULL\n \n EXPERIENCE :: 22 UNIQUE :: 70 NULL\n \n COMPANY_SIZE :: 8 UNIQUE :: 6541 NULL\n \n COMPANY_TYPE :: 6 UNIQUE :: 6755 NULL\n \n LAST_NEW_JOB :: 6 UNIQUE :: 463 NULL\n \n TRAINING_HOURS :: 241 UNIQUE :: 0 NULL\n \n TARGET :: 2 UNIQUE :: 2127 NULL\n \n DUPLICATED :: 1 UNIQUE :: 0 NULL\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"# remove all entires that don't have the target value\ndf.dropna(subset=['target'], how='all', inplace=True)\ndf['target'].value_counts()\n# we need a model that can handle imbalanced datasets -> gradient boosted decision trees (lightgbm)\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"0.0    14343\n1.0     4765\nName: target, dtype: int64\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"df['company_size'].value_counts()\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"50-99        3080\n100-500      2560\n10000+       2009\n10/49        1470\n1000-4999    1322\n<10          1308\n500-999       877\n5000-9999     562\nName: company_size, dtype: int64\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"df['company_size'] = df['company_size'].apply(lambda x: '10-49' if x == '10/49' else x)\ndf['company_size'].value_counts()\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"50-99        3080\n100-500      2560\n10000+       2009\n10-49        1470\n1000-4999    1322\n<10          1308\n500-999       877\n5000-9999     562\nName: company_size, dtype: int64\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"df['training_hours'].hist()\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"<Axes: >\n")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"png",src:n(26305).Z,width:"570",height:"413"})),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"sns.boxplot(data=df, x='education_level', y='training_hours', hue='target')\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"<Axes: xlabel='education_level', ylabel='training_hours'>\n")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"png",src:n(47972).Z,width:"574",height:"435"})),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"# drop columns that will not have an influence on the target variable\ndf_train = df.drop(['duplicated', 'enrollee_id'], axis=1)\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"# make target variable int\ndf_train['target'] = pd.to_numeric(df_train['target'])\ndf_train['target'] = df_train['target'].astype(int)\n")),(0,i.kt)("h2",{id:"data-transformation"},"Data Transformation"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"# encode categorical columns\ncategorical_columns = []\n\nfor col in df_train.columns:\n    print('\\n')\n    print(f'INFO :: Column {col} is of type {df_train[col].dtype} .')\n    if df_train[col].dtype == 'object':\n        print('PROCESSING :: Added for dummy variable creation.')\n        categorical_columns.append(col)\n\ndf_train = pd.get_dummies(df_train, columns=categorical_columns)\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"INFO :: Column city is of type object .\nPROCESSING :: Added for dummy variable creation.\n\n\nINFO :: Column city_development_index is of type float64 .\n\n\nINFO :: Column gender is of type object .\nPROCESSING :: Added for dummy variable creation.\n\n\nINFO :: Column relevent_experience is of type object .\nPROCESSING :: Added for dummy variable creation.\n\n\nINFO :: Column enrolled_university is of type object .\nPROCESSING :: Added for dummy variable creation.\n\n\nINFO :: Column education_level is of type object .\nPROCESSING :: Added for dummy variable creation.\n\n\nINFO :: Column major_discipline is of type object .\nPROCESSING :: Added for dummy variable creation.\n\n\nINFO :: Column experience is of type object .\nPROCESSING :: Added for dummy variable creation.\n\n\nINFO :: Column company_size is of type object .\nPROCESSING :: Added for dummy variable creation.\n\n\nINFO :: Column company_type is of type object .\nPROCESSING :: Added for dummy variable creation.\n\n\nINFO :: Column last_new_job is of type object .\nPROCESSING :: Added for dummy variable creation.\n\n\nINFO :: Column training_hours is of type int64 .\n\n\nINFO :: Column target is of type int64 .\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"# correlation to target\ndef gen_correlation_df(dataframe, target):\n    correlations = {\n        'variable': [],\n        'corr': []\n    }\n    \n    for col in list(dataframe.columns):\n        if dataframe[col].dtype not in ['object', '<M8[ns]'] and col !=  target:\n            r = dataframe[target].corr(dataframe[col])\n            correlations['variable'].append(col)\n            correlations['corr'].append(r)\n            \n    return pd.DataFrame(correlations).sort_values(by=['corr'], ascending = False)\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"df_cor = gen_correlation_df(df_train, 'target')\ndf_cor\n")),(0,i.kt)("div",null,(0,i.kt)("table",null,(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",null),(0,i.kt)("th",null,"variable"),(0,i.kt)("th",null,"corr"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("th",null,"66"),(0,i.kt)("td",null,"city_city_21"),(0,i.kt)("td",null,"0.319434")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"130"),(0,i.kt)("td",null,"enrolled_university_Full time course"),(0,i.kt)("td",null,"0.149529")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"129"),(0,i.kt)("td",null,"relevent_experience_No relevent experience"),(0,i.kt)("td",null,"0.127994")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"13"),(0,i.kt)("td",null,"city_city_11"),(0,i.kt)("td",null,"0.091457")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"133"),(0,i.kt)("td",null,"education_level_Graduate"),(0,i.kt)("td",null,"0.087214")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"164"),(0,i.kt)("td",null,"experience_<1"),(0,i.kt)("td",null,"0.079047")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"144"),(0,i.kt)("td",null,"experience_1"),(0,i.kt)("td",null,"0.069583")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"157"),(0,i.kt)("td",null,"experience_3"),(0,i.kt)("td",null,"0.066304")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"26"),(0,i.kt)("td",null,"city_city_128"),(0,i.kt)("td",null,"0.050778")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"143"),(0,i.kt)("td",null,"major_discipline_STEM"),(0,i.kt)("td",null,"0.050013")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"158"),(0,i.kt)("td",null,"experience_4"),(0,i.kt)("td",null,"0.049482")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"5"),(0,i.kt)("td",null,"city_city_101"),(0,i.kt)("td",null,"0.047004")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"155"),(0,i.kt)("td",null,"experience_2"),(0,i.kt)("td",null,"0.046997")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"104"),(0,i.kt)("td",null,"city_city_74"),(0,i.kt)("td",null,"0.046142")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"185"),(0,i.kt)("td",null,"last_new_job_never"),(0,i.kt)("td",null,"0.045534")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"41"),(0,i.kt)("td",null,"city_city_145"),(0,i.kt)("td",null,"0.044923")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"46"),(0,i.kt)("td",null,"city_city_155"),(0,i.kt)("td",null,"0.033568")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"180"),(0,i.kt)("td",null,"last_new_job_1"),(0,i.kt)("td",null,"0.029297")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"75"),(0,i.kt)("td",null,"city_city_33"),(0,i.kt)("td",null,"0.027429")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"81"),(0,i.kt)("td",null,"city_city_42"),(0,i.kt)("td",null,"0.026713")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"24"),(0,i.kt)("td",null,"city_city_126"),(0,i.kt)("td",null,"0.025354")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"159"),(0,i.kt)("td",null,"experience_5"),(0,i.kt)("td",null,"0.025253")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"108"),(0,i.kt)("td",null,"city_city_78"),(0,i.kt)("td",null,"0.024855")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"161"),(0,i.kt)("td",null,"experience_7"),(0,i.kt)("td",null,"0.024617")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"63"),(0,i.kt)("td",null,"city_city_19"),(0,i.kt)("td",null,"0.023563")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"34"),(0,i.kt)("td",null,"city_city_139"),(0,i.kt)("td",null,"0.020590")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"100"),(0,i.kt)("td",null,"city_city_70"),(0,i.kt)("td",null,"0.020259")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"160"),(0,i.kt)("td",null,"experience_6"),(0,i.kt)("td",null,"0.019471")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"82"),(0,i.kt)("td",null,"city_city_43"),(0,i.kt)("td",null,"0.019350")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"86"),(0,i.kt)("td",null,"city_city_48"),(0,i.kt)("td",null,"0.017434")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"16"),(0,i.kt)("td",null,"city_city_115"),(0,i.kt)("td",null,"0.017167")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"11"),(0,i.kt)("td",null,"city_city_107"),(0,i.kt)("td",null,"0.017094")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"118"),(0,i.kt)("td",null,"city_city_90"),(0,i.kt)("td",null,"0.015416")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"39"),(0,i.kt)("td",null,"city_city_143"),(0,i.kt)("td",null,"0.015099")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"60"),(0,i.kt)("td",null,"city_city_179"),(0,i.kt)("td",null,"0.013111")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"56"),(0,i.kt)("td",null,"city_city_171"),(0,i.kt)("td",null,"0.012551")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"119"),(0,i.kt)("td",null,"city_city_91"),(0,i.kt)("td",null,"0.011924")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"121"),(0,i.kt)("td",null,"city_city_94"),(0,i.kt)("td",null,"0.011539")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"125"),(0,i.kt)("td",null,"gender_Female"),(0,i.kt)("td",null,"0.008742")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"69"),(0,i.kt)("td",null,"city_city_25"),(0,i.kt)("td",null,"0.008382")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"52"),(0,i.kt)("td",null,"city_city_162"),(0,i.kt)("td",null,"0.007534")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"19"),(0,i.kt)("td",null,"city_city_118"),(0,i.kt)("td",null,"0.007300")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"48"),(0,i.kt)("td",null,"city_city_158"),(0,i.kt)("td",null,"0.006651")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"38"),(0,i.kt)("td",null,"city_city_142"),(0,i.kt)("td",null,"0.006401")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"142"),(0,i.kt)("td",null,"major_discipline_Other"),(0,i.kt)("td",null,"0.006048")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"83"),(0,i.kt)("td",null,"city_city_44"),(0,i.kt)("td",null,"0.005959")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"109"),(0,i.kt)("td",null,"city_city_79"),(0,i.kt)("td",null,"0.005943")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"42"),(0,i.kt)("td",null,"city_city_146"),(0,i.kt)("td",null,"0.005943")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"88"),(0,i.kt)("td",null,"city_city_53"),(0,i.kt)("td",null,"0.004976")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"85"),(0,i.kt)("td",null,"city_city_46"),(0,i.kt)("td",null,"0.004568")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"12"),(0,i.kt)("td",null,"city_city_109"),(0,i.kt)("td",null,"0.004213")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"10"),(0,i.kt)("td",null,"city_city_106"),(0,i.kt)("td",null,"0.004213")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"29"),(0,i.kt)("td",null,"city_city_131"),(0,i.kt)("td",null,"0.004213")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"103"),(0,i.kt)("td",null,"city_city_73"),(0,i.kt)("td",null,"0.004204")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"139"),(0,i.kt)("td",null,"major_discipline_Business Degree"),(0,i.kt)("td",null,"0.004155")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"106"),(0,i.kt)("td",null,"city_city_76"),(0,i.kt)("td",null,"0.003626")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"18"),(0,i.kt)("td",null,"city_city_117"),(0,i.kt)("td",null,"0.003517")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"59"),(0,i.kt)("td",null,"city_city_176"),(0,i.kt)("td",null,"0.003467")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"115"),(0,i.kt)("td",null,"city_city_84"),(0,i.kt)("td",null,"0.003467")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"31"),(0,i.kt)("td",null,"city_city_134"),(0,i.kt)("td",null,"0.003260")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"127"),(0,i.kt)("td",null,"gender_Other"),(0,i.kt)("td",null,"0.002882")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"92"),(0,i.kt)("td",null,"city_city_59"),(0,i.kt)("td",null,"0.002678")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"55"),(0,i.kt)("td",null,"city_city_167"),(0,i.kt)("td",null,"0.002678")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"23"),(0,i.kt)("td",null,"city_city_123"),(0,i.kt)("td",null,"0.002450")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"22"),(0,i.kt)("td",null,"city_city_121"),(0,i.kt)("td",null,"0.002432")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"40"),(0,i.kt)("td",null,"city_city_144"),(0,i.kt)("td",null,"0.002387")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"90"),(0,i.kt)("td",null,"city_city_55"),(0,i.kt)("td",null,"0.002275")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"117"),(0,i.kt)("td",null,"city_city_9"),(0,i.kt)("td",null,"0.002016")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"131"),(0,i.kt)("td",null,"enrolled_university_Part time course"),(0,i.kt)("td",null,"0.001623")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"62"),(0,i.kt)("td",null,"city_city_180"),(0,i.kt)("td",null,"0.001608")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"35"),(0,i.kt)("td",null,"city_city_14"),(0,i.kt)("td",null,"0.000056")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"61"),(0,i.kt)("td",null,"city_city_18"),(0,i.kt)("td",null,"0.000021")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"74"),(0,i.kt)("td",null,"city_city_31"),(0,i.kt)("td",null,"0.000021")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"54"),(0,i.kt)("td",null,"city_city_166"),(0,i.kt)("td",null,"0.000021")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"44"),(0,i.kt)("td",null,"city_city_150"),(0,i.kt)("td",null,"-0.000435")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"141"),(0,i.kt)("td",null,"major_discipline_No Major"),(0,i.kt)("td",null,"-0.000687")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"116"),(0,i.kt)("td",null,"city_city_89"),(0,i.kt)("td",null,"-0.001449")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"177"),(0,i.kt)("td",null,"company_type_Other"),(0,i.kt)("td",null,"-0.001790")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"89"),(0,i.kt)("td",null,"city_city_54"),(0,i.kt)("td",null,"-0.002196")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"58"),(0,i.kt)("td",null,"city_city_175"),(0,i.kt)("td",null,"-0.002196")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"43"),(0,i.kt)("td",null,"city_city_149"),(0,i.kt)("td",null,"-0.002384")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"30"),(0,i.kt)("td",null,"city_city_133"),(0,i.kt)("td",null,"-0.002611")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"25"),(0,i.kt)("td",null,"city_city_127"),(0,i.kt)("td",null,"-0.002611")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"162"),(0,i.kt)("td",null,"experience_8"),(0,i.kt)("td",null,"-0.003014")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"68"),(0,i.kt)("td",null,"city_city_24"),(0,i.kt)("td",null,"-0.003108")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"70"),(0,i.kt)("td",null,"city_city_26"),(0,i.kt)("td",null,"-0.003364")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"21"),(0,i.kt)("td",null,"city_city_120"),(0,i.kt)("td",null,"-0.003388")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"4"),(0,i.kt)("td",null,"city_city_100"),(0,i.kt)("td",null,"-0.003633")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"45"),(0,i.kt)("td",null,"city_city_152"),(0,i.kt)("td",null,"-0.004028")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"36"),(0,i.kt)("td",null,"city_city_140"),(0,i.kt)("td",null,"-0.004170")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"53"),(0,i.kt)("td",null,"city_city_165"),(0,i.kt)("td",null,"-0.004531")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"112"),(0,i.kt)("td",null,"city_city_81"),(0,i.kt)("td",null,"-0.004713")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"120"),(0,i.kt)("td",null,"city_city_93"),(0,i.kt)("td",null,"-0.004869")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"156"),(0,i.kt)("td",null,"experience_20"),(0,i.kt)("td",null,"-0.005391")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"99"),(0,i.kt)("td",null,"city_city_7"),(0,i.kt)("td",null,"-0.005581")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"20"),(0,i.kt)("td",null,"city_city_12"),(0,i.kt)("td",null,"-0.005761")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"174"),(0,i.kt)("td",null,"company_type_Early Stage Startup"),(0,i.kt)("td",null,"-0.005792")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"71"),(0,i.kt)("td",null,"city_city_27"),(0,i.kt)("td",null,"-0.006643")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"77"),(0,i.kt)("td",null,"city_city_37"),(0,i.kt)("td",null,"-0.006666")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"14"),(0,i.kt)("td",null,"city_city_111"),(0,i.kt)("td",null,"-0.007223")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"27"),(0,i.kt)("td",null,"city_city_129"),(0,i.kt)("td",null,"-0.007223")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"80"),(0,i.kt)("td",null,"city_city_41"),(0,i.kt)("td",null,"-0.007451")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"111"),(0,i.kt)("td",null,"city_city_80"),(0,i.kt)("td",null,"-0.007518")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"181"),(0,i.kt)("td",null,"last_new_job_2"),(0,i.kt)("td",null,"-0.007570")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"51"),(0,i.kt)("td",null,"city_city_160"),(0,i.kt)("td",null,"-0.007645")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"73"),(0,i.kt)("td",null,"city_city_30"),(0,i.kt)("td",null,"-0.008166")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"110"),(0,i.kt)("td",null,"city_city_8"),(0,i.kt)("td",null,"-0.008340")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"113"),(0,i.kt)("td",null,"city_city_82"),(0,i.kt)("td",null,"-0.008340")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"37"),(0,i.kt)("td",null,"city_city_141"),(0,i.kt)("td",null,"-0.008801")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"47"),(0,i.kt)("td",null,"city_city_157"),(0,i.kt)("td",null,"-0.008868")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"98"),(0,i.kt)("td",null,"city_city_69"),(0,i.kt)("td",null,"-0.009085")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"94"),(0,i.kt)("td",null,"city_city_62"),(0,i.kt)("td",null,"-0.009325")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"146"),(0,i.kt)("td",null,"experience_11"),(0,i.kt)("td",null,"-0.009632")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"166"),(0,i.kt)("td",null,"company_size_10-49"),(0,i.kt)("td",null,"-0.010248")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"138"),(0,i.kt)("td",null,"major_discipline_Arts"),(0,i.kt)("td",null,"-0.010679")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"64"),(0,i.kt)("td",null,"city_city_2"),(0,i.kt)("td",null,"-0.011034")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"102"),(0,i.kt)("td",null,"city_city_72"),(0,i.kt)("td",null,"-0.011176")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"2"),(0,i.kt)("td",null,"city_city_1"),(0,i.kt)("td",null,"-0.011431")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"65"),(0,i.kt)("td",null,"city_city_20"),(0,i.kt)("td",null,"-0.013150")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"78"),(0,i.kt)("td",null,"city_city_39"),(0,i.kt)("td",null,"-0.013833")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"182"),(0,i.kt)("td",null,"last_new_job_3"),(0,i.kt)("td",null,"-0.013902")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"79"),(0,i.kt)("td",null,"city_city_40"),(0,i.kt)("td",null,"-0.014132")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"28"),(0,i.kt)("td",null,"city_city_13"),(0,i.kt)("td",null,"-0.014426")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"124"),(0,i.kt)("td",null,"city_city_99"),(0,i.kt)("td",null,"-0.014593")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"17"),(0,i.kt)("td",null,"city_city_116"),(0,i.kt)("td",null,"-0.014710")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"183"),(0,i.kt)("td",null,"last_new_job_4"),(0,i.kt)("td",null,"-0.015328")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"178"),(0,i.kt)("td",null,"company_type_Public Sector"),(0,i.kt)("td",null,"-0.015365")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"49"),(0,i.kt)("td",null,"city_city_159"),(0,i.kt)("td",null,"-0.015976")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"140"),(0,i.kt)("td",null,"major_discipline_Humanities"),(0,i.kt)("td",null,"-0.016998")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"163"),(0,i.kt)("td",null,"experience_9"),(0,i.kt)("td",null,"-0.017082")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"114"),(0,i.kt)("td",null,"city_city_83"),(0,i.kt)("td",null,"-0.017769")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"148"),(0,i.kt)("td",null,"experience_13"),(0,i.kt)("td",null,"-0.019034")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"84"),(0,i.kt)("td",null,"city_city_45"),(0,i.kt)("td",null,"-0.019214")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"95"),(0,i.kt)("td",null,"city_city_64"),(0,i.kt)("td",null,"-0.019522")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"9"),(0,i.kt)("td",null,"city_city_105"),(0,i.kt)("td",null,"-0.020172")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"107"),(0,i.kt)("td",null,"city_city_77"),(0,i.kt)("td",null,"-0.020649")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"91"),(0,i.kt)("td",null,"city_city_57"),(0,i.kt)("td",null,"-0.020956")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"145"),(0,i.kt)("td",null,"experience_10"),(0,i.kt)("td",null,"-0.021133")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"1"),(0,i.kt)("td",null,"training_hours"),(0,i.kt)("td",null,"-0.021179")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"154"),(0,i.kt)("td",null,"experience_19"),(0,i.kt)("td",null,"-0.022050")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"123"),(0,i.kt)("td",null,"city_city_98"),(0,i.kt)("td",null,"-0.022057")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"3"),(0,i.kt)("td",null,"city_city_10"),(0,i.kt)("td",null,"-0.022491")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"6"),(0,i.kt)("td",null,"city_city_102"),(0,i.kt)("td",null,"-0.023017")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"147"),(0,i.kt)("td",null,"experience_12"),(0,i.kt)("td",null,"-0.023773")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"176"),(0,i.kt)("td",null,"company_type_NGO"),(0,i.kt)("td",null,"-0.024453")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"96"),(0,i.kt)("td",null,"city_city_65"),(0,i.kt)("td",null,"-0.024939")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"57"),(0,i.kt)("td",null,"city_city_173"),(0,i.kt)("td",null,"-0.025485")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"152"),(0,i.kt)("td",null,"experience_17"),(0,i.kt)("td",null,"-0.025806")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"153"),(0,i.kt)("td",null,"experience_18"),(0,i.kt)("td",null,"-0.027003")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"172"),(0,i.kt)("td",null,"company_size_5000-9999"),(0,i.kt)("td",null,"-0.027311")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"149"),(0,i.kt)("td",null,"experience_14"),(0,i.kt)("td",null,"-0.027454")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"101"),(0,i.kt)("td",null,"city_city_71"),(0,i.kt)("td",null,"-0.028219")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"87"),(0,i.kt)("td",null,"city_city_50"),(0,i.kt)("td",null,"-0.028243")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"122"),(0,i.kt)("td",null,"city_city_97"),(0,i.kt)("td",null,"-0.029486")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"33"),(0,i.kt)("td",null,"city_city_138"),(0,i.kt)("td",null,"-0.030509")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"137"),(0,i.kt)("td",null,"education_level_Primary School"),(0,i.kt)("td",null,"-0.034393")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"76"),(0,i.kt)("td",null,"city_city_36"),(0,i.kt)("td",null,"-0.035708")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"93"),(0,i.kt)("td",null,"city_city_61"),(0,i.kt)("td",null,"-0.036076")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"67"),(0,i.kt)("td",null,"city_city_23"),(0,i.kt)("td",null,"-0.036596")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"150"),(0,i.kt)("td",null,"experience_15"),(0,i.kt)("td",null,"-0.036696")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"136"),(0,i.kt)("td",null,"education_level_Phd"),(0,i.kt)("td",null,"-0.037587")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"171"),(0,i.kt)("td",null,"company_size_500-999"),(0,i.kt)("td",null,"-0.038555")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"72"),(0,i.kt)("td",null,"city_city_28"),(0,i.kt)("td",null,"-0.039877")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"151"),(0,i.kt)("td",null,"experience_16"),(0,i.kt)("td",null,"-0.040968")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"97"),(0,i.kt)("td",null,"city_city_67"),(0,i.kt)("td",null,"-0.041123")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"134"),(0,i.kt)("td",null,"education_level_High School"),(0,i.kt)("td",null,"-0.042942")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"105"),(0,i.kt)("td",null,"city_city_75"),(0,i.kt)("td",null,"-0.043489")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"135"),(0,i.kt)("td",null,"education_level_Masters"),(0,i.kt)("td",null,"-0.043751")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"7"),(0,i.kt)("td",null,"city_city_103"),(0,i.kt)("td",null,"-0.044411")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"8"),(0,i.kt)("td",null,"city_city_104"),(0,i.kt)("td",null,"-0.045717")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"169"),(0,i.kt)("td",null,"company_size_10000+"),(0,i.kt)("td",null,"-0.046135")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"173"),(0,i.kt)("td",null,"company_size_<10"),(0,i.kt)("td",null,"-0.048945")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"175"),(0,i.kt)("td",null,"company_type_Funded Startup"),(0,i.kt)("td",null,"-0.059407")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"32"),(0,i.kt)("td",null,"city_city_136"),(0,i.kt)("td",null,"-0.059726")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"168"),(0,i.kt)("td",null,"company_size_1000-4999"),(0,i.kt)("td",null,"-0.061808")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"184"),(0,i.kt)("td",null,"last_new_job_>4"),(0,i.kt)("td",null,"-0.069695")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"170"),(0,i.kt)("td",null,"company_size_50-99"),(0,i.kt)("td",null,"-0.073381")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"126"),(0,i.kt)("td",null,"gender_Male"),(0,i.kt)("td",null,"-0.074494")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"167"),(0,i.kt)("td",null,"company_size_100-500"),(0,i.kt)("td",null,"-0.080041")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"50"),(0,i.kt)("td",null,"city_city_16"),(0,i.kt)("td",null,"-0.090270")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"15"),(0,i.kt)("td",null,"city_city_114"),(0,i.kt)("td",null,"-0.094945")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"165"),(0,i.kt)("td",null,"experience_>20"),(0,i.kt)("td",null,"-0.100802")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"128"),(0,i.kt)("td",null,"relevent_experience_Has relevent experience"),(0,i.kt)("td",null,"-0.127994")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"132"),(0,i.kt)("td",null,"enrolled_university_no_enrollment"),(0,i.kt)("td",null,"-0.140493")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"179"),(0,i.kt)("td",null,"company_type_Pvt Ltd"),(0,i.kt)("td",null,"-0.161860")),(0,i.kt)("tr",null,(0,i.kt)("th",null,"0"),(0,i.kt)("td",null,"city_development_index"),(0,i.kt)("td",null,"-0.341331"))))),(0,i.kt)("h2",{id:"model-training"},"Model Training"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"# train-test split\ntrain, test = train_test_split(df_train, test_size=0.2)\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"# remove target label from training dataset\nX_cols = list(set(train.columns) - set(['target']))\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"def split_xy(train_in, test_in, X_cols, target):\n    train = train_in.copy()\n    test = test_in.copy()\n\n    X_train = train[X_cols].copy()\n    X_test = test[X_cols].copy()\n\n    y_train = train[target]\n    y_test = test[target]\n\n    return X_train, X_test, y_train, y_test\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"X_train, X_test, y_train, y_test = split_xy(test, train, X_cols, 'target')\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"# verify 80/20 train-test split\nprint(X_test.shape[0] / (X_train.shape[0] + X_test.shape[0]) * 100)\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"79.99790663596399\n")),(0,i.kt)("h3",{id:"grid-search"},"Grid Search"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"# create shuffled splits\ncv_split = StratifiedShuffleSplit(n_splits=5, test_size=0.2, random_state=77)\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"# create search params\nparam_grid = {\n    'learning_rate': [0.05],\n    'n_estimators': [400],\n    'max_depth': [5, 7],\n    'min_child_samples': [50, 200, 600],\n    'num_leaves': [31, 63]\n}\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"def fit_lgb(param_grid, X, y, cv):\n    gbm = lgb.LGBMClassifier(\n        objective='binary',\n        feature_fraction=0.9\n    )\n\n    grid_search = GridSearchCV(\n        gbm,\n        param_grid=param_grid,\n        scoring='roc_auc',\n        cv=cv,\n        verbose=1,\n        n_jobs=-1\n    )\n\n    grid_search.fit(X=X, y=y.values.ravel())\n\n    print(grid_search.best_score_)\n    print(grid_search.best_estimator_)\n    print(grid_search.best_params_)\n\n    return grid_search\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"grid_search = fit_lgb(param_grid, X_train, y_train, cv_split)\n\n# 0.8067351303514142\n# LGBMClassifier(feature_fraction=0.9, learning_rate=0.05, max_depth=5,\n#                min_child_samples=50, n_estimators=400, objective='binary')\n# {'learning_rate': 0.05, 'max_depth': 5, 'min_child_samples': 50, 'n_estimators': 400, 'num_leaves': 31}\n")),(0,i.kt)("h2",{id:"model-evaluation"},"Model Evaluation"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"# pass test data to trained model\ny_pred = grid_search.best_estimator_.predict_proba(X_test)[:,1]\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9\n[LightGBM] [Warning] Accuracy may be bad since you didn't explicitly set num_leaves OR 2^max_depth > num_leaves. (num_leaves=31).\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"auc = metrics.roc_auc_score(y_true=y_test, y_score=y_pred)\nauc\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"0.7834230893204323\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"feature_importance = pd.Series(grid_search.best_estimator_.feature_importances_, index=X_cols).sort_values(ascending=False)\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"feature_importance\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"training_hours                                 1530\ncity_development_index                          651\nlast_new_job_1                                  208\ncompany_type_Pvt Ltd                            205\neducation_level_Graduate                        126\ncompany_size_50-99                              112\nrelevent_experience_No relevent experience      109\ncity_city_103                                   102\nenrolled_university_no_enrollment                85\nmajor_discipline_STEM                            80\nexperience_3                                     79\nlast_new_job_never                               77\ncity_city_21                                     73\ncompany_type_Funded Startup                      68\ngender_Male                                      66\ncompany_type_Public Sector                       64\ncompany_size_1000-4999                           62\ncompany_size_<10                                 58\nexperience_>20                                   56\ncompany_size_100-500                             56\ngender_Female                                    56\nenrolled_university_Full time course             54\ncompany_type_Early Stage Startup                 54\neducation_level_Masters                          53\nexperience_4                                     52\nlast_new_job_2                                   51\nexperience_<1                                    49\nlast_new_job_4                                   47\ncompany_size_10000+                              45\ncompany_type_NGO                                 44\nrelevent_experience_Has relevent experience      42\ncompany_size_500-999                             40\nexperience_2                                     39\nexperience_8                                     30\nenrolled_university_Part time course             30\ncity_city_100                                    29\nexperience_9                                     27\ncompany_size_5000-9999                           25\nexperience_17                                    25\ncompany_size_10-49                               24\ncity_city_16                                     23\nexperience_11                                    23\nmajor_discipline_Humanities                      23\ncity_city_160                                    23\nmajor_discipline_No Major                        22\nexperience_14                                    22\nmajor_discipline_Business Degree                 21\ncity_city_67                                     20\nexperience_10                                    19\ncity_city_136                                    19\nlast_new_job_>4                                  18\nmajor_discipline_Other                           18\neducation_level_High School                      17\nlast_new_job_3                                   17\nexperience_13                                    16\nexperience_16                                    16\nexperience_12                                    14\ncity_city_114                                    13\neducation_level_Primary School                   13\nexperience_15                                    10\nexperience_6                                     10\ncity_city_102                                     9\nexperience_7                                      9\nexperience_5                                      6\ncity_city_104                                     6\nexperience_19                                     3\ncity_city_11                                      3\nexperience_1                                      3\ncity_city_142                                     0\ncity_city_74                                      0\ncity_city_141                                     0\ncity_city_144                                     0\ncity_city_9                                       0\ncity_city_138                                     0\ncity_city_175                                     0\ncity_city_26                                      0\ncity_city_109                                     0\ncity_city_70                                      0\ncity_city_77                                      0\ncity_city_94                                      0\ncity_city_149                                     0\ncity_city_2                                       0\ncity_city_75                                      0\ncity_city_64                                      0\ncity_city_159                                     0\neducation_level_Phd                               0\ncity_city_18                                      0\ncity_city_166                                     0\ncity_city_81                                      0\ncity_city_45                                      0\ncity_city_13                                      0\ncity_city_55                                      0\ncity_city_146                                     0\ncity_city_37                                      0\ncity_city_28                                      0\ncity_city_123                                     0\ncity_city_116                                     0\ncity_city_76                                      0\ncity_city_72                                      0\nmajor_discipline_Arts                             0\ncity_city_57                                      0\ncity_city_73                                      0\ncity_city_12                                      0\ncity_city_33                                      0\ncity_city_59                                      0\ncity_city_126                                     0\ncity_city_25                                      0\ncity_city_7                                       0\ncity_city_118                                     0\ncity_city_107                                     0\ncity_city_139                                     0\ncity_city_176                                     0\ncity_city_179                                     0\ncity_city_39                                      0\nexperience_18                                     0\ncity_city_143                                     0\ncity_city_127                                     0\ncity_city_69                                      0\ncity_city_105                                     0\ncity_city_80                                      0\ncity_city_71                                      0\ncity_city_117                                     0\ncity_city_140                                     0\ncity_city_50                                      0\ncity_city_131                                     0\ncity_city_150                                     0\ncity_city_171                                     0\ncity_city_93                                      0\ncity_city_120                                     0\ncity_city_24                                      0\ncity_city_53                                      0\ncity_city_41                                      0\ncity_city_91                                      0\ncity_city_1                                       0\ncity_city_152                                     0\nexperience_20                                     0\ncity_city_54                                      0\ncity_city_133                                     0\ncity_city_145                                     0\ncity_city_173                                     0\ncity_city_82                                      0\ncity_city_106                                     0\ncity_city_78                                      0\ncity_city_98                                      0\ncity_city_27                                      0\ncity_city_157                                     0\ncity_city_180                                     0\ncity_city_79                                      0\ncity_city_99                                      0\ncity_city_8                                       0\ncity_city_40                                      0\ncity_city_31                                      0\ncity_city_19                                      0\ncity_city_46                                      0\ncity_city_42                                      0\ncity_city_128                                     0\ncity_city_20                                      0\ncity_city_97                                      0\ncity_city_36                                      0\ncity_city_101                                     0\ncity_city_44                                      0\ncity_city_134                                     0\ncity_city_10                                      0\ngender_Other                                      0\ncity_city_115                                     0\ncompany_type_Other                                0\ncity_city_158                                     0\ncity_city_162                                     0\ncity_city_129                                     0\ncity_city_61                                      0\ncity_city_30                                      0\ncity_city_84                                      0\ncity_city_90                                      0\ncity_city_83                                      0\ncity_city_165                                     0\ncity_city_48                                      0\ncity_city_65                                      0\ncity_city_23                                      0\ncity_city_43                                      0\ncity_city_155                                     0\ncity_city_111                                     0\ncity_city_121                                     0\ncity_city_14                                      0\ncity_city_62                                      0\ncity_city_167                                     0\ncity_city_89                                      0\ndtype: int32\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"plt.figure(figsize=(48, 5))\nplt.plot(feature_importance)\nplt.xticks(rotation=45)\n\nplt.savefig('assets/Feature_Importance.png', bbox_inches='tight')\n")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Scikit-Learn ML Model Explainability",src:n(91641).Z,width:"3784",height:"653"})),(0,i.kt)("h2",{id:"model-explainability"},"Model Explainability"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"# fit the explainer\nexplainer = shap.Explainer(grid_search.best_estimator_.predict, X_test)\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"# calculate shap values\nshap_values = explainer(X_test)\n")),(0,i.kt)("p",null,"The above explanation shows features each contributing to push the model output from the base value (the average model output over the training dataset we passed) to the model output. Features pushing the prediction higher are shown in red, those pushing the prediction lower are in blue."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"# visualize the first prediction's explanation\nshap.plots.waterfall(shap_values[0])\n")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Scikit-Learn ML Model Explainability",src:n(90126).Z,width:"948",height:"600"})),(0,i.kt)("p",null,"The mean absolute value of the SHAP values for each feature:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"# show mean absolute effect\nshap.plots.bar(shap_values)\n")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Scikit-Learn ML Model Explainability",src:n(61270).Z,width:"1053",height:"568"})),(0,i.kt)("p",null,"To get an overview of which features are most important for a model we can plot the SHAP values of every feature for every sample. The plot below sorts features by the sum of SHAP value magnitudes over all samples, and uses SHAP values to show the distribution of the impacts each feature has on the model output. The color represents the feature value (red high, blue low). This reveals for example that a high ",(0,i.kt)("inlineCode",{parentName:"p"},"city_development_index")," lowers the predicted target - chance that an employee is searching for a new job."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"shap.summary_plot(shap_values, plot_size=(12,12), max_display=30)\n")),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Scikit-Learn ML Model Explainability",src:n(10332).Z,width:"1151",height:"1189"})))}_.isMDXComponent=!0},91641:(t,l,n)=>{n.d(l,{Z:()=>e});const e=n.p+"assets/images/Feature_Importance-1420c47b9be2b0938123a4bcb1c19e35.webp"},61270:(t,l,n)=>{n.d(l,{Z:()=>e});const e=n.p+"assets/images/MEAN_SHAP_Values-3b868dbaa5694bccba4e5dec3cc935cd.webp"},10332:(t,l,n)=>{n.d(l,{Z:()=>e});const e=n.p+"assets/images/SHAP_Values_Model_Impact-49951aa41d84ad2cb53b95e7628d6a3e.webp"},90126:(t,l,n)=>{n.d(l,{Z:()=>e});const e=n.p+"assets/images/SHAP_Values_Model_Waterfall-dd683da6219dd60f8c77558539cc32f2.webp"},26305:(t,l,n)=>{n.d(l,{Z:()=>e});const e=n.p+"assets/images/output_14_1-1a6bc28bd984fe82bd6bb066a08fe3a5.png"},47972:(t,l,n)=>{n.d(l,{Z:()=>e});const e=n.p+"assets/images/output_15_1-dae8b513ade1104212219a0c79afc6ad.png"},16853:(t,l,n)=>{n.d(l,{Z:()=>e});const e=n.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-df671776e753774d784b1add0ffd032b.jpg"}}]);