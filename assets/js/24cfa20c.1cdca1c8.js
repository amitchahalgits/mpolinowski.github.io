"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[87266],{786144:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var n=t(785893),i=t(603905);const r={sidebar_position:5980,slug:"2022-11-04",title:"Check the Filesystem",authors:"mpolinowski",tags:["LINUX"],description:"Check the Filesystem of a mounted SD Card using fsck"},c=void 0,o={id:"DevOps/Linux/2022-11-04--check-filesystem/index",title:"Check the Filesystem",description:"Check the Filesystem of a mounted SD Card using fsck",source:"@site/docs/DevOps/Linux/2022-11-04--check-filesystem/index.md",sourceDirName:"DevOps/Linux/2022-11-04--check-filesystem",slug:"/DevOps/Linux/2022-11-04--check-filesystem/2022-11-04",permalink:"/docs/DevOps/Linux/2022-11-04--check-filesystem/2022-11-04",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Linux/2022-11-04--check-filesystem/index.md",tags:[{label:"LINUX",permalink:"/docs/tags/linux"}],version:"current",sidebarPosition:5980,frontMatter:{sidebar_position:5980,slug:"2022-11-04",title:"Check the Filesystem",authors:"mpolinowski",tags:["LINUX"],description:"Check the Filesystem of a mounted SD Card using fsck"},sidebar:"tutorialSidebar",previous:{title:"Resistance is futile - Borg with Docker",permalink:"/docs/DevOps/Linux/2022-11-09--docker-borg-backupserver/2022-11-09"},next:{title:"Build a Chrony NTS Client from Source",permalink:"/docs/DevOps/Linux/2022-09-29--build-an-chrony-nts-client-from-source/2022-09-29"}},a={},l=[{value:"Find the Partition",id:"find-the-partition",level:2},{value:"Check the Filesystem",id:"check-the-filesystem",level:2},{value:"Repair the Filesystem",id:"repair-the-filesystem",level:3},{value:"Benchmarking",id:"benchmarking",level:2}];function d(e){const s={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.ah)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"TST, Hong Kong",src:t(458895).Z+"",width:"1500",height:"517"})}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#find-the-partition",children:"Find the Partition"})}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"#check-the-filesystem",children:"Check the Filesystem"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#repair-the-filesystem",children:"Repair the Filesystem"})}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"#benchmarking",children:"Benchmarking"})}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"find-the-partition",children:"Find the Partition"}),"\n",(0,n.jsx)(s.p,{children:"First we need to find the partition of the mounted SD card:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"sudo fdisk -l\n"})}),"\n",(0,n.jsx)(s.p,{children:"This returns information about all mounted disks - we can identify our SD card by it's capacity:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"Disk /dev/sdb: 29.54 GiB, 31719424000 bytes, 61952000 sectors\r\nDisk model: STORAGE DEVICE  \r\nUnits: sectors of 1 * 512 = 512 bytes\r\nSector size (logical/physical): 512 bytes / 512 bytes\r\nI/O size (minimum/optimal): 512 bytes / 512 bytes\r\nDisklabel type: dos\r\nDisk identifier: 0x00000000\r\n\r\nDevice     Boot Start      End  Sectors  Size Id Type\r\n/dev/sdb1        8192 61951999 61943808 29.5G  c W95 FAT32 (LBA)\n"})}),"\n",(0,n.jsx)(s.h2,{id:"check-the-filesystem",children:"Check the Filesystem"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"fsck"})," cannot be used on a mounted partition. If you do so, there is a high chance that it will damage the filesystem. To check our SD card ",(0,n.jsx)(s.code,{children:"/dev/sdb1"}),", find the location it was mounted in:"]}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"Check the Filesystem",src:t(598271).Z+"",width:"1006",height:"576"})}),"\n",(0,n.jsx)(s.p,{children:"And use the following commands:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"umount /run/media/myuser/0012-D687/\r\nfsck /dev/sdb1\r\n\r\nfsck from util-linux 2.38.1\r\nfsck.fat 4.2 (2021-01-31)\r\nThere are differences between boot sector and its backup.\r\nThis is mostly harmless. Differences: (offset:original/backup)\r\n  65:01/00\r\n1) Copy original to backup\r\n2) Copy backup to original\r\n3) No action\r\n[123?q]? 1\r\nDirty bit is set. Fs was not properly unmounted and some data may be corrupt.\r\n1) Remove dirty bit\r\n2) No action\r\n[12?q]? 1\r\n\r\n*** Filesystem was changed ***\r\nThe changes have not yet been written, you can still choose to leave the\r\nfilesystem unmodified:\r\n1) Write changes\r\n2) Leave filesystem unchanged\r\n[12?q]? 1\r\n/dev/sdb1: 0 files, 1/967616 clusters\n"})}),"\n",(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"There are differences between boot sector and its backup. This is mostly harmless. Differences: (offset:original/backup) 65:01/00"}),": The byte at offset ",(0,n.jsx)(s.code,{children:"65"})," (",(0,n.jsx)(s.code,{children:"0x41"}),") is the ",(0,n.jsx)(s.em,{children:"dirty bit"})," that is set when a drive is not unmounted properly."]}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"repair-the-filesystem",children:"Repair the Filesystem"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"-A"}),": Used for checking all filesystems. The list is taken from /etc/fstab."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"-C"}),": Show progress bar."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"-l"}),": Locks the device to guarantee no other program will try to use the partition during the check."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"-M"}),": Do not check mounted filesystems."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"-N"}),": Only show what would be done \u2013 no actual changes are made."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"-P"}),": If you want to check filesystems in parallel, including root."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"-R"}),": Do not check root filesystem. This is useful only with \u2018-A\u2018."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"-r"}),": Provide statistics for each device that is being checked."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"-T"}),": Does not show the title."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"-t"}),": Exclusively specify the filesystem types to be checked. Types can be comma separated list."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"-V"}),": Provide description what is being done."]}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["During the filesystem check, if errors are detected, you can get \u201cfsck\u201d to auto repair the filesystem with the ",(0,n.jsx)(s.code,{children:"-a"})," flag:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"sudo fsck -ar /dev/sdb1\r\n\r\nfsck from util-linux 2.38.1\r\nfsck.fat 4.2 (2021-01-31)\r\n/dev/sdb1: 0 files, 1/967616 clusters\r\n/dev/sdb1: status 0, rss 17280, real 0.410190, user 0.028351, sys 0.033435\n"})}),"\n",(0,n.jsx)(s.h2,{id:"benchmarking",children:"Benchmarking"}),"\n",(0,n.jsxs)(s.p,{children:["Using the ",(0,n.jsx)(s.a,{href:"https://archlinux.org/packages/extra/x86_64/gnome-disk-utility/",children:"gnome-disk-utility"}),":"]}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"Check the Filesystem",src:t(779107).Z+"",width:"898",height:"422"})}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"Check the Filesystem",src:t(201968).Z+"",width:"901",height:"590"})}),"\n",(0,n.jsx)(s.p,{children:"I am using an SD Card reader that - I know - is very slow. So I cannot estimate the max read/write speeds. But I can check if the speeds are constant:"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"Check the Filesystem",src:t(745964).Z+"",width:"896",height:"594"})}),"\n",(0,n.jsx)(s.p,{children:"The first card looks OK with reasonable and consistent speeds. But the second card seems to have some issues:"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"Check the Filesystem",src:t(19573).Z+"",width:"879",height:"599"})}),"\n",(0,n.jsx)(s.p,{children:"It becomes a little better after re-formatting (over-writing everything with zeros):"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"Check the Filesystem",src:t(952731).Z+"",width:"889",height:"592"})})]})}function h(e={}){const{wrapper:s}={...(0,i.ah)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},603905:(e,s,t)=>{t.d(s,{ah:()=>l});var n=t(667294);function i(e,s,t){return s in e?Object.defineProperty(e,s,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[s]=t,e}function r(e,s){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);s&&(n=n.filter((function(s){return Object.getOwnPropertyDescriptor(e,s).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var s=1;s<arguments.length;s++){var t=null!=arguments[s]?arguments[s]:{};s%2?r(Object(t),!0).forEach((function(s){i(e,s,t[s])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(s){Object.defineProperty(e,s,Object.getOwnPropertyDescriptor(t,s))}))}return e}function o(e,s){if(null==e)return{};var t,n,i=function(e,s){if(null==e)return{};var t,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],s.indexOf(t)>=0||(i[t]=e[t]);return i}(e,s);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],s.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var a=n.createContext({}),l=function(e){var s=n.useContext(a),t=s;return e&&(t="function"==typeof e?e(s):c(c({},s),e)),t},d={inlineCode:"code",wrapper:function(e){var s=e.children;return n.createElement(n.Fragment,{},s)}},h=n.forwardRef((function(e,s){var t=e.components,i=e.mdxType,r=e.originalType,a=e.parentName,h=o(e,["components","mdxType","originalType","parentName"]),u=l(t),m=i,p=u["".concat(a,".").concat(m)]||u[m]||d[m]||r;return t?n.createElement(p,c(c({ref:s},h),{},{components:t})):n.createElement(p,c({ref:s},h))}));h.displayName="MDXCreateElement"},598271:(e,s,t)=>{t.d(s,{Z:()=>n});const n=t.p+"assets/images/Filesystem_Linux_01-1355924013eb480134b3502c974051a9.png"},779107:(e,s,t)=>{t.d(s,{Z:()=>n});const n=t.p+"assets/images/Filesystem_Linux_02-d09dbeade36d1abae6640d5a83a01392.png"},201968:(e,s,t)=>{t.d(s,{Z:()=>n});const n=t.p+"assets/images/Filesystem_Linux_03-b2fca5368cf16ae2577ddba1feeddc61.png"},745964:(e,s,t)=>{t.d(s,{Z:()=>n});const n=t.p+"assets/images/Filesystem_Linux_04-7cfb3af3db1331dacd5fe4dff87c37f5.png"},19573:(e,s,t)=>{t.d(s,{Z:()=>n});const n=t.p+"assets/images/Filesystem_Linux_05-bb529892ab07861b5c0adb0bc7989507.png"},952731:(e,s,t)=>{t.d(s,{Z:()=>n});const n=t.p+"assets/images/Filesystem_Linux_06-28340d35437ac6284c00f37be223c25a.png"},458895:(e,s,t)=>{t.d(s,{Z:()=>n});const n=t.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-ec671595d585b88a85b017a7908fb619.jpg"}}]);