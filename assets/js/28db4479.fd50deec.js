"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[39699],{457641:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>t,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var a=s(474848),r=s(28453);const i={sidebar_position:1e4,slug:"2020-11-18",title:"Setting up a Ansible on Debian Buster",authors:"mpolinowski",tags:["LINUX","Ansible"]},t=void 0,l={id:"DevOps/Ansible/2020-11-18--ansible-on-debian-buster/index",title:"Setting up a Ansible on Debian Buster",description:"Shenzhen, China",source:"@site/docs/DevOps/Ansible/2020-11-18--ansible-on-debian-buster/index.md",sourceDirName:"DevOps/Ansible/2020-11-18--ansible-on-debian-buster",slug:"/DevOps/Ansible/2020-11-18--ansible-on-debian-buster/2020-11-18",permalink:"/docs/DevOps/Ansible/2020-11-18--ansible-on-debian-buster/2020-11-18",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Ansible/2020-11-18--ansible-on-debian-buster/index.md",tags:[{label:"LINUX",permalink:"/docs/tags/linux"},{label:"Ansible",permalink:"/docs/tags/ansible"}],version:"current",sidebarPosition:1e4,frontMatter:{sidebar_position:1e4,slug:"2020-11-18",title:"Setting up a Ansible on Debian Buster",authors:"mpolinowski",tags:["LINUX","Ansible"]},sidebar:"tutorialSidebar",previous:{title:"Ansible Playbooks",permalink:"/docs/DevOps/Ansible/2020-11-19--ansible-playbooks/2020-11-19"},next:{title:"Server Security",permalink:"/docs/category/server-security"}},o={},c=[{value:"Installing Ansible",id:"installing-ansible",level:2},{value:"Using APT Packages",id:"using-apt-packages",level:3},{value:"Via Ubuntu PPA",id:"via-ubuntu-ppa",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Inventory",id:"inventory",level:2},{value:"Adding SSH Public Keys",id:"adding-ssh-public-keys",level:3},{value:"Ansible Commands",id:"ansible-commands",level:2},{value:"Ansible Facts",id:"ansible-facts",level:2},{value:"Ansible Variables",id:"ansible-variables",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Shenzhen, China",src:s(500319).A+"",width:"1500",height:"520"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"#installing-ansible",children:"Installing Ansible"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#using-apt-packages",children:"Using APT Packages"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#via-ubuntu-ppa",children:"Via Ubuntu PPA"})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#configuration",children:"Configuration"})}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"#inventory",children:"Inventory"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#adding-ssh-public-keys",children:"Adding SSH Public Keys"})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#ansible-commands",children:"Ansible Commands"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#ansible-facts",children:"Ansible Facts"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#ansible-variables",children:"Ansible Variables"})}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"installing-ansible",children:"Installing Ansible"}),"\n",(0,a.jsx)(n.p,{children:"You install Ansible on a control node, which then uses SSH (by default) to communicate with your managed nodes (those end devices you want to automate)."}),"\n",(0,a.jsx)(n.h3,{id:"using-apt-packages",children:"Using APT Packages"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"apt install -y ansible\n"})}),"\n",(0,a.jsx)(n.h3,{id:"via-ubuntu-ppa",children:"Via Ubuntu PPA"}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Why ? EDIT: ",(0,a.jsx)(n.strong,{children:"apt"})," installed version ",(0,a.jsx)(n.code,{children:"ansible 2.7.7"}),". Via ",(0,a.jsx)(n.strong,{children:"Ubuntu PPA"})," I received the version ",(0,a.jsx)(n.code,{children:"ansible/trusty 2.9.15"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Add the following line to ",(0,a.jsx)(n.code,{children:"/etc/apt/sources.list"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"deb http://ppa.launchpad.net/ansible/ansible/ubuntu trusty main\n"})}),"\n",(0,a.jsx)(n.p,{children:"Then run these commands:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 93C4A3FD7BB9C367\r\napt update\r\napt install ansible\n"})}),"\n",(0,a.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"/etc/ansible\r\n\u251c\u2500\u2500 ansible.cfg\r\n\u2514\u2500\u2500 hosts\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cfg",children:"[defaults]\r\n\r\ninventory      = /etc/ansible/hosts\r\nlibrary        = /usr/share/my_modules/\r\nmodule_utils   = /usr/share/my_module_utils/\r\nremote_tmp     = ~/.ansible/tmp\r\nlocal_tmp      = ~/.ansible/tmp\r\nplugin_filters_cfg = /etc/ansible/plugin_filters.yml\r\nforks          = 5\r\npoll_interval  = 15\r\nsudo_user      = root\r\nask_sudo_pass = True\r\nask_pass      = True\r\ntransport      = smart\r\nremote_port    = 22\r\nmodule_lang    = C\r\nmodule_set_locale = False\n"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Ansible facts ~ Salt grains. Can be limited to speed up playbook executions"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cfg",children:"# plays will gather facts by default, which contain information about\r\n# the remote system.\r\n#\r\n# smart - gather by default, but don't regather if already gathered\r\n# implicit - gather by default, turn off with gather_facts: False\r\n# explicit - do not gather by default, must say gather_facts: True\r\ngathering = implicit\r\n\r\n# This only affects the gathering done by a play's gather_facts directive,\r\n# by default gathering retrieves all facts subsets\r\n# all - gather all subsets\r\n# network - gather min and network facts\r\n# hardware - gather hardware facts (longest facts to retrieve)\r\n# virtual - gather min and virtual facts\r\n# facter - import facts from facter\r\n# ohai - import facts from ohai\r\n# You can combine them using comma (ex: network,virtual)\r\n# You can negate them using ! (ex: !hardware,!facter,!ohai)\r\n# A minimal set of facts is always gathered.\r\ngather_subset = all\n"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Accept all SSH hosts without prompts"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cfg",children:"# uncomment this to disable SSH key host checking\r\nhost_key_checking = False\n"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Increase timeout for high latency Environments"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cfg",children:"# SSH timeout\r\ntimeout = 10\n"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Log path for debugging"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cfg",children:"# logging is off by default unless this path is defined\r\n# if so defined, consider logrotate\r\nlog_path = /var/log/ansible.log\n"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://docs.ansible.com/ansible/latest/user_guide/vault.html#vault",children:"Vault"})," for passwords/secrets"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cfg",children:"# If set, configures the path to the Vault password file as an alternative to\r\n# specifying --vault-password-file on the command line.\r\nvault_password_file = /path/to/vault_password_file\n"})}),"\n",(0,a.jsx)(n.h2,{id:"inventory",children:"Inventory"}),"\n",(0,a.jsxs)(n.p,{children:["This is the default ansible ",(0,a.jsx)(n.strong,{children:"hosts"})," file It should live in ",(0,a.jsx)(n.code,{children:"/etc/ansible/hosts"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ini",children:"# Ex 1: Ungrouped hosts, specify before any group headers.\r\n\r\ngreen.example.com\r\nblue.example.com\r\n192.168.100.1\r\n192.168.100.10\r\n\r\n# Ex 2: A collection of hosts belonging to the 'webservers' group\r\n\r\n[webservers]\r\nalpha.example.org\r\nbeta.example.org\r\n192.168.1.100\r\n192.168.1.110\r\n\r\n# If you have multiple hosts following a pattern you can specify\r\n# them like this:\r\n\r\nwww[001:006].example.com\r\ndb-[99:101]-node.example.com\n"})}),"\n",(0,a.jsx)(n.p,{children:"I am going delete this templates data and add the server I am running Ansible on as my test node:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ini",children:"[test]\r\n192.168.2.111 ansible_user=root\n"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["I am specifying the user that I want to be used for the SSH login. I don't have to do this in my case as the default user is set to ",(0,a.jsx)(n.code,{children:"root"})," anyhow - see configuration file above."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"adding-ssh-public-keys",children:"Adding SSH Public Keys"}),"\n",(0,a.jsx)(n.p,{children:"We can try to verify that everything is set up correctly by pinging all hosts inside our inventory:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'ansible -m ping all\r\n\r\n192.168.2.111 | UNREACHABLE! => {\r\n    "changed": false,\r\n    "msg": "Failed to connect to the host via ssh: root@192.168.2.111: Permission denied (publickey,password).",\r\n    "unreachable": true\r\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["This fails, since I did not specify the SSH password anywhere. You can now use ",(0,a.jsx)(n.a,{href:"https://docs.ansible.com/ansible/latest/user_guide/vault.html#vault",children:"Vault"})," to add your password. Or generate a RSA key pair to have Ansible use the public key to login:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"ssh-keygen -t rsa -b 2048\r\n\r\nGenerating public/private rsa key pair.\r\nEnter file in which to save the key (/root/.ssh/id_rsa):\r\nEnter passphrase (empty for no passphrase):\r\nEnter same passphrase again:\r\nYour identification has been saved in /root/.ssh/id_rsa\r\nYour public key has been saved in /root/.ssh/id_rsa.pub\n"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"I left the passphrase empty"}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["I set the permissions for both the pub key and the ",(0,a.jsx)(n.code,{children:".ssh"})," folder:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"chmod 0400 $HOME/.ssh/id_rsa.pub\r\nchmod 600 ~/.ssh/authorized_keys\r\nchmod 0700 $HOME/.ssh/\n"})}),"\n",(0,a.jsx)(n.p,{children:"I can now copy the generated ID to my host server (in my case they just happen to be the same PC):"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"ssh-copy-id root@192.168.2.111\r\n\r\n/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: \"/root/.ssh/id_rsa.pub\"\r\nThe authenticity of host '192.168.2.111 (192.168.2.111)' can't be established.\r\nECDSA key fingerprint is SHA256:6bWFxW4mJV/KVpdBFf8N0grugHHNqttF3jyX3cmVI9s.\r\nAre you sure you want to continue connecting (yes/no/[fingerprint])? yes\r\n\r\n/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys\r\nroot@192.168.2.111's password:\r\n\r\nNumber of key(s) added: 1\r\n\r\nNow try logging into the machine, with:   \"ssh 'root@192.168.2.111'\"\r\nand check to make sure that only the key(s) you wanted were added.\n"})}),"\n",(0,a.jsx)(n.p,{children:"This will add the key of my Ansible minion to the Ansible master. You can verify that the key was added by executing:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cat ~/.ssh/authorized_keys\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Running the ping again should now give us the desired result - ",(0,a.jsx)(n.strong,{children:"SUCCESS"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'ansible all -m ping\r\n\r\n192.168.2.111 | SUCCESS => {\r\n    "ansible_facts": {\r\n        "discovered_interpreter_python": "/usr/bin/python3"\r\n    },\r\n    "changed": false,\r\n    "ping": "pong"\r\n}\n'})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["We can also ping our generated host group ",(0,a.jsx)(n.code,{children:"ansible test -m ping"})," or a single host with ",(0,a.jsx)(n.code,{children:"ansible 192.168.2.111 -m ping"}),". Since I only have this one host all of those give me the identical result."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"ansible-commands",children:"Ansible Commands"}),"\n",(0,a.jsx)(n.p,{children:"An example for an ad-hoc Ansible command is the ping command we used above - they all follow the same format:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"ansible <target> -m <module> -a <arguments>\n"})}),"\n",(0,a.jsxs)(n.p,{children:["As an example, we can copy a file to the remote location using the ",(0,a.jsx)(n.strong,{children:"Copy"})," module (you can check all available modules with ",(0,a.jsx)(n.code,{children:"ansible-doc -l"})," - or get information about the specific module ",(0,a.jsx)(n.code,{children:"ansible-doc copy"}),"):"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'ansible 192.168.2.111 -m copy -a "src=/tmp/test1 dest=/tmp/test2"\r\n\r\n192.168.2.111 | CHANGED => {\r\n    "ansible_facts": {\r\n        "discovered_interpreter_python": "/usr/bin/python3"\r\n    },\r\n    "changed": true,\r\n    "checksum": "da39a3ee5e6b4b0d3255bfef95601890afd80709",\r\n    "dest": "/tmp/test2",\r\n    "gid": 0,\r\n    "group": "root",\r\n    "md5sum": "d41d8cd98f00b204e9800998ecf8427e",\r\n    "mode": "0644",\r\n    "owner": "root",\r\n    "size": 0,\r\n    "src": "/root/.ansible/tmp/ansible-tmp-1605901636.6985757-12382-77236351905118/source",\r\n    "state": "file",\r\n    "uid": 0\r\n}\n'})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Make sure that the ",(0,a.jsx)(n.code,{children:"test1"})," file exist on your Ansible master - ",(0,a.jsx)(n.code,{children:"touch /tmp/test1"}),". After running the Copy command you should see both a ",(0,a.jsx)(n.code,{children:"test1"})," and ",(0,a.jsx)(n.code,{children:"test2"})," file inside the ",(0,a.jsx)(n.code,{children:"/tmp"})," directory (as minion and master are on the same host)."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"ansible-facts",children:"Ansible Facts"}),"\n",(0,a.jsxs)(n.p,{children:["Just like Salt with ",(0,a.jsx)(n.strong,{children:"Grains"})," Ansible collects system information as ",(0,a.jsx)(n.strong,{children:"Facts"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'ansible 192.168.2.111 -m setup\r\n\r\n192.168.2.111 | SUCCESS => {\r\n    "ansible_facts": {\r\n        "ansible_all_ipv4_addresses": [\r\n            "172.17.0.1",\r\n            "172.18.0.1",\r\n            "192.168.2.111"\r\n        ],\r\n        "ansible_all_ipv6_addresses": [\r\n            "fe80::e020:79ff:fed8:34a4",\r\n        ],\r\n        "ansible_apparmor": {\r\n            "status": "enabled"\r\n        }\r\n        "module_setup": true\r\n    },\r\n\r\n\r\n    ...\r\n\r\n    "changed": false\r\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"ansible-variables",children:"Ansible Variables"}),"\n",(0,a.jsxs)(n.p,{children:["Variables naming convention - alphanumeric, cannot start with a number and contain ",(0,a.jsx)(n.code,{children:"-"}),", ",(0,a.jsx)(n.code,{children:"&"}),", ",(0,a.jsx)(n.code,{children:"%"})," or SPACES."]}),"\n",(0,a.jsx)(n.p,{children:"Variables can be used to hold configurations that you might have to change over time or are different between different hosts - a global variable that is than used by playbook, e.g. a port for a service. The variables can be defined in the Ansible Inventory, inside a playbook or inside a separate file that can be included into a playbook."}),"\n",(0,a.jsxs)(n.p,{children:["I already defined a variable inside the host inventory by setting the ansible user to ",(0,a.jsx)(n.code,{children:"root"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ini",children:"[test]\r\n192.168.2.111 ansible_user=root\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},500319:(e,n,s)=>{s.d(n,{A:()=>a});const a=s.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-2215e4912b7f3d1beed1d8b83bac94aa.jpg"},28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>l});var a=s(296540);const r={},i=a.createContext(r);function t(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);