"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[13024],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,a=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),h=l(n),d=s,m=h["".concat(c,".").concat(d)]||h[d]||u[d]||a;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function d(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var a=n.length,o=new Array(a);o[0]=h;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:s,o[1]=i;for(var l=2;l<a;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},27384:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var r=n(87462),s=(n(67294),n(3905));const a={sidebar_position:8960,slug:"2022-10-14",title:"Python - Working with the Elasticsearch REST API",authors:"mpolinowski",tags:["Python"],description:"Run OpenSearch search queries and process the JSON response."},o=void 0,i={unversionedId:"Development/Python/2022-10-14-python-rest-elastic/index",id:"Development/Python/2022-10-14-python-rest-elastic/index",title:"Python - Working with the Elasticsearch REST API",description:"Run OpenSearch search queries and process the JSON response.",source:"@site/docs/Development/Python/2022-10-14-python-rest-elastic/index.md",sourceDirName:"Development/Python/2022-10-14-python-rest-elastic",slug:"/Development/Python/2022-10-14-python-rest-elastic/2022-10-14",permalink:"/docs/Development/Python/2022-10-14-python-rest-elastic/2022-10-14",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Development/Python/2022-10-14-python-rest-elastic/index.md",tags:[{label:"Python",permalink:"/docs/tags/python"}],version:"current",sidebarPosition:8960,frontMatter:{sidebar_position:8960,slug:"2022-10-14",title:"Python - Working with the Elasticsearch REST API",authors:"mpolinowski",tags:["Python"],description:"Run OpenSearch search queries and process the JSON response."},sidebar:"tutorialSidebar",previous:{title:"Python",permalink:"/docs/category/python"},next:{title:"Python - Working with REST API Requests",permalink:"/docs/Development/Python/2022-10-13-python-rest-api/2022-10-13"}},c={},l=[{value:"Search - cURL to Python",id:"search---curl-to-python",level:2},{value:"Dynamic Search Terms",id:"dynamic-search-terms",level:2}],p={toc:l};function u(e){let{components:t,...a}=e;return(0,s.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Sham Sui Po, Hong Kong",src:n(24552).Z,width:"1500",height:"548"})),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#search---curl-to-python"},"Search - cURL to Python")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#dynamic-search-terms"},"Dynamic Search Terms"))),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://github.com/mpolinowski/python-search"},"Github Repository")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Step 1"),": ",(0,s.kt)("a",{parentName:"li",href:"/docs/DevOps/Elasticsearch/2022-10-11--opensearch-docker-compose/2022-10-11"},"Set up a Single Node Opensearch or Elasticsearch Cluster")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Step 2"),": ",(0,s.kt)("a",{parentName:"li",href:"/docs/Development/Python/2022-10-07-python-docusaurus-elasticsearch/2022-10-07#elasticsearch"},"Create an Index Mapping and Ingest your Data")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"Step 3"),": ",(0,s.kt)("a",{parentName:"li",href:"/docs/Development/Python/2022-10-13-python-rest-api/2022-10-13"},"Testing the Opensearch Rest API using cURL"))),(0,s.kt)("h2",{id:"search---curl-to-python"},"Search - cURL to Python"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"curl -XGET \"https://localhost:9200/_search?q=Continuous%20Integration&filter_path=took,hits.hits._id,hits.hits._score,hits.hits._source&_source=title&pretty\" --insecure -H 'Content-Type: application/json' -u admin\n")),(0,s.kt)("p",null,"In Python again, I am running into the HTTPS/Certificate issue on localhost and have to add a ",(0,s.kt)("inlineCode",{parentName:"p"},", verify=False")," to the request:"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("inlineCode",{parentName:"p"},"requests.exceptions.SSLError: HTTPSConnectionPool(host='localhost', port=9200): Max retries exceeded with url: /_search?q=Continuous%20Integration&filter_path=took,hits.hits._id,hits.hits._score,hits.hits._source&_source=title&pretty (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:997)')))"))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-py"},"import requests\nimport json\nfrom requests.auth import HTTPBasicAuth\n\nusername = 'admin'\npassword = 'admin'\n\nresponse = requests.get('https://localhost:9200/_search?q=Continuous%20Integration&filter_path=took,hits.hits._id,hits.hits._score,hits.hits._source&_source=title', auth = HTTPBasicAuth(username, password), verify=False)\n\nprint(response.content)\n")),(0,s.kt)("p",null,"This returns the correctly filtered byte response:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'b\'{"took":5,"hits":{"hits":[{"_id":"docs_ci-cd","_score":3.0692163,"_source":{"title":"What is meant by CI/CD?"}},{"_id":"docs_dev-intro","_score":0.7032547,"_source":{"title":"Application Development and Server Operation"}}]}}\'\n')),(0,s.kt)("p",null,"To extract the JSON string:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-py"},"result = response.content.decode()\nprint(type(result))\n\nresult_dictionary = json.loads(result)\nprint(type(result_dictionary))\n\nbest_match = result_dictionary['hits']['hits'][0]\nprint(best_match)\n")),(0,s.kt)("p",null,"This decoded the bytes into a string and extracted the JSON object from it:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"<class 'str'>\n<class 'dict'>\n{'_id': 'docs_ci-cd', '_score': 3.0692163, '_source': {'title': 'What is meant by CI/CD?'}}\n")),(0,s.kt)("h2",{id:"dynamic-search-terms"},"Dynamic Search Terms"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-py"},"import requests\nimport json\nfrom requests.auth import HTTPBasicAuth\n\nfrom elastic_config import *\n\ndef ask_es(query):\n    url = f'https://{elastic_url}/{elastic_index}/_search?q={query}'\n    response = requests.get(url, auth = HTTPBasicAuth(elastic_user, elastic_pass), verify=False)\n    result = response.content.decode()\n    result_dictionary = json.loads(result)\n    \n    return result_dictionary\n\nresults = ask_es(query='Continuous%20Integration')\n\nfor result in results['hits']['hits']:\n    print(result['_source']['title'])\n    print(result['_source']['abstract'])\n")),(0,s.kt)("p",null,"with ",(0,s.kt)("inlineCode",{parentName:"p"},"elastic_config.py"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-py"},"elastic_user = 'admin'\nelastic_pass = 'admin'\nelastic_url = 'localhost:9200'\nelastic_index = 'dev_2022_08_20' \n")))}u.isMDXComponent=!0},24552:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-5f44d483789c3ce79f05418f930f5cd2.jpg"}}]);