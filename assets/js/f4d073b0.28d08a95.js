"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[48095],{131604:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=o(785893),t=o(603905);const a={sidebar_position:6010,slug:"2022-02-16",title:"Yolo App - Train a Model with Tensorflow",authors:"mpolinowski",tags:["Tensorflow","Machine Learning","Python","YOLO"]},s=void 0,i={id:"IoT-and-Machine-Learning/ML/2022-02-16--yolo-app-tensorflow-model/index",title:"Yolo App - Train a Model with Tensorflow",description:"Shenzhen, China",source:"@site/docs/IoT-and-Machine-Learning/ML/2022-02-16--yolo-app-tensorflow-model/index.md",sourceDirName:"IoT-and-Machine-Learning/ML/2022-02-16--yolo-app-tensorflow-model",slug:"/IoT-and-Machine-Learning/ML/2022-02-16--yolo-app-tensorflow-model/2022-02-16",permalink:"/docs/IoT-and-Machine-Learning/ML/2022-02-16--yolo-app-tensorflow-model/2022-02-16",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IoT-and-Machine-Learning/ML/2022-02-16--yolo-app-tensorflow-model/index.md",tags:[{label:"Tensorflow",permalink:"/docs/tags/tensorflow"},{label:"Machine Learning",permalink:"/docs/tags/machine-learning"},{label:"Python",permalink:"/docs/tags/python"},{label:"YOLO",permalink:"/docs/tags/yolo"}],version:"current",sidebarPosition:6010,frontMatter:{sidebar_position:6010,slug:"2022-02-16",title:"Yolo App - Train a Model with Tensorflow",authors:"mpolinowski",tags:["Tensorflow","Machine Learning","Python","YOLO"]},sidebar:"tutorialSidebar",previous:{title:"Yolo App - Pipeline Predictions",permalink:"/docs/IoT-and-Machine-Learning/ML/2022-02-17--yolo-app-prediction-pipeline/2022-02-17"},next:{title:"Yolo App - Data Collection",permalink:"/docs/IoT-and-Machine-Learning/ML/2022-02-15--yolo-app-get-data/2022-02-15"}},l={},c=[{value:"Prepare the Neural Network",id:"prepare-the-neural-network",level:2},{value:"Train your Model",id:"train-your-model",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.ah)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Shenzhen, China",src:o(227861).Z+"",width:"1500",height:"688"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/IoT-and-Machine-Learning/ML/2022-02-15--yolo-app-get-data/2022-02-15",children:"Prepare your Images and get Data"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/IoT-and-Machine-Learning/ML/2022-02-16--yolo-app-tensorflow-model/2022-02-16",children:"Train your Tensorflow Model"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/IoT-and-Machine-Learning/ML/2022-02-17--yolo-app-prediction-pipeline/2022-02-17",children:"Use your Model to do Predictions"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/IoT-and-Machine-Learning/ML/2022-02-18--yolo-app-ocr/2022-02-18",children:"Use Tesseract to Read Number Plates"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/IoT-and-Machine-Learning/ML/2022-02-19--yolo-app-flask/2022-02-19",children:"Flask Web Application"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/IoT-and-Machine-Learning/ML/2022-02-20--yolo-app-yolov5-data-prep/2022-02-20",children:"Yolo v5 - Data Prep"})}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#prepare-the-neural-network",children:"Prepare the Neural Network"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#train-your-model",children:"Train your Model"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"prepare-the-neural-network",children:"Prepare the Neural Network"}),"\n",(0,r.jsx)(n.p,{children:"When running the following code I kept getting this warning:"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://stackoverflow.com/questions/44232898/memoryerror-in-tensorflow-and-successful-numa-node-read-from-sysfs-had-negativ",children:"Memory Error in Tensorflow"}),": ",(0,r.jsx)(n.code,{children:"I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:936] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Running the following command from my console to set each device to ",(0,r.jsx)(n.code,{children:"0"})," got rid of the warning:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"for a in /sys/bus/pci/devices/*; do echo 0 | sudo tee -a $a/numa_node; done\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-py",children:"import tensorflow as tf\r\nfrom tensorflow.keras.applications import MobileNetV2, InceptionV3, InceptionResNetV2\r\nfrom tensorflow.keras.layers import Dense, Dropout, Flatten\r\nfrom tensorflow.keras.models import Model\r\n\r\n# Inception ResNet for 224x224 3-channel image source\r\ninception_resnet = InceptionResNetV2(weights=\"imagenet\", include_top=False, input_tensor=Input(shape=(224, 224, 3)))\r\ninception_resnet.trainable=False\r\nheadmodel = inception_resnet.output\r\nheadmodel = Flatten()(headmodel)\r\n# Build neural network layers\r\nheadmodel = Dense(500,activation='relu')(headmodel)\r\nheadmodel = Dense(250,activation='relu')(headmodel)\r\nheadmodel = Dense(4, activation='sigmoid')(headmodel)\r\n# Define inputs / outputs for your model\r\nmodel = Model(inception_resnet.input, outputs=headmodel)\r\n# Compile the model\r\nmodel.compile(loss='mse', optimizer=tf.keras.optimizers.Adam(learning_rate=1e-4))\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"2022-03-05 16:55:55.576063: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1525] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 4607 MB memory:  -> device: 0, name: NVIDIA GeForce GTX 1060 6GB, pci bus id: 0000:01:00.0, compute capability: 6.1\n"})}),"\n",(0,r.jsx)(n.h2,{id:"train-your-model",children:"Train your Model"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-py",children:"from tensorflow.keras.callbacks import TensorBoard\r\ntfb = TensorBoard('object_detection')\r\nhistory = model.fit(x=x_train, y=y_train, batch_size=10, epochs=100, validation_data=(x_test, y_test), callbacks=[tfb])\n"})}),"\n",(0,r.jsxs)(n.p,{children:["With ",(0,r.jsx)(n.code,{children:"tensorflow-gpu"})," on an Nvidia GTX 1060 I am getting training cycles of 2-3s:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"Epoch 1/100\r\n\r\n2022-03-05 17:44:41.082245: I tensorflow/stream_executor/cuda/cuda_dnn.cc:368] Loaded cuDNN version 8301\r\n\r\n18/18 [==============================] - 13s 289ms/step - loss: 0.1179 - val_loss: 0.1214\r\nEpoch 2/100\r\n18/18 [==============================] - 2s 128ms/step - loss: 0.1204 - val_loss: 0.1146\r\nEpoch 3/100\r\n18/18 [==============================] - 2s 129ms/step - loss: 0.1223 - val_loss: 0.1235\r\n...\r\nEpoch 499/500\r\n20/20 [==============================] - 3s 136ms/step - loss: 3.2455e-05 - val_loss: 0.0042\r\nEpoch 500/500\r\n20/20 [==============================] - 3s 137ms/step - loss: 2.7786e-05 - val_loss: 0.0042\n"})}),"\n",(0,r.jsx)(n.p,{children:"To save the model run:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-py",children:"model.save('../models/object_detection.h5')\n"})}),"\n",(0,r.jsx)(n.p,{children:"I can use Tensorboard to check the results - run the following command from your console and point it to your training data folder:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"tensorboard --logdir=object_detection\r\n\r\nTensorBoard 2.8.0 at http://localhost:6006/ (Press CTRL+C to quit)\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Yolo App Tensorflow Model",src:o(206175).Z+"",width:"1120",height:"746"})})]})}function p(e={}){const{wrapper:n}={...(0,t.ah)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},603905:(e,n,o)=>{o.d(n,{ah:()=>c});var r=o(667294);function t(e,n,o){return n in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,e}function a(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,r)}return o}function s(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?a(Object(o),!0).forEach((function(n){t(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}function i(e,n){if(null==e)return{};var o,r,t=function(e,n){if(null==e)return{};var o,r,t={},a=Object.keys(e);for(r=0;r<a.length;r++)o=a[r],n.indexOf(o)>=0||(t[o]=e[o]);return t}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)o=a[r],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(t[o]=e[o])}return t}var l=r.createContext({}),c=function(e){var n=r.useContext(l),o=n;return e&&(o="function"==typeof e?e(n):s(s({},n),e)),o},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var o=e.components,t=e.mdxType,a=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),h=c(o),u=t,m=h["".concat(l,".").concat(u)]||h[u]||d[u]||a;return o?r.createElement(m,s(s({ref:n},p),{},{components:o})):r.createElement(m,s({ref:n},p))}));p.displayName="MDXCreateElement"},206175:(e,n,o)=>{o.d(n,{Z:()=>r});const r=o.p+"assets/images/Yolo_App_Tensorflow_01-f530809d82db700a9ed45a2467113b16.png"},227861:(e,n,o)=>{o.d(n,{Z:()=>r});const r=o.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-ffe80356d19fb4b090a3bef79b45aab3.jpg"}}]);