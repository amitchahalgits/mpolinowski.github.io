"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[31248],{493954:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var o=n(474848),s=n(28453);const i={sidebar_position:9070,slug:"2022-05-04",title:"React Native Hooks",authors:"mpolinowski",tags:["Javascript","React","ReactNative"]},a=void 0,r={id:"Development/ReactNative/2022-05-04-react-native-hooks/index",title:"React Native Hooks",description:"Victoria Harbour, Hongkong",source:"@site/docs/Development/ReactNative/2022-05-04-react-native-hooks/index.md",sourceDirName:"Development/ReactNative/2022-05-04-react-native-hooks",slug:"/Development/ReactNative/2022-05-04-react-native-hooks/2022-05-04",permalink:"/docs/Development/ReactNative/2022-05-04-react-native-hooks/2022-05-04",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Development/ReactNative/2022-05-04-react-native-hooks/index.md",tags:[{label:"Javascript",permalink:"/docs/tags/javascript"},{label:"React",permalink:"/docs/tags/react"},{label:"ReactNative",permalink:"/docs/tags/react-native"}],version:"current",sidebarPosition:9070,frontMatter:{sidebar_position:9070,slug:"2022-05-04",title:"React Native Hooks",authors:"mpolinowski",tags:["Javascript","React","ReactNative"]},sidebar:"tutorialSidebar",previous:{title:"React Native Context & Hooks",permalink:"/docs/Development/ReactNative/2022-05-05-react-native-context-hooks/2022-05-05"},next:{title:"React Native Context API",permalink:"/docs/Development/ReactNative/2022-05-03-react-native-contextapi/2022-05-03"}},c={},d=[{value:"Setup",id:"setup",level:2},{value:"useState Hook in Functional Components",id:"usestate-hook-in-functional-components",level:2},{value:"Working with Form Data",id:"working-with-form-data",level:3},{value:"useEffect Hook in Functional Components",id:"useeffect-hook-in-functional-components",level:2}];function l(e){const t={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Victoria Harbour, Hongkong",src:n(241624).A+"",width:"1500",height:"565"})}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"#setup",children:"Setup"})}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"#usestate-hook-in-functional-components",children:"useState Hook in Functional Components"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"#working-with-form-data",children:"Working with Form Data"})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"#useeffect-hook-in-functional-components",children:"useEffect Hook in Functional Components"})}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://github.com/mpolinowski/react-native-hooks",children:"Github Repository"})}),"\n",(0,o.jsx)(t.h2,{id:"setup",children:"Setup"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"npm install -g expo-cli\nexpo init react-native-hooks\n"})}),"\n",(0,o.jsxs)(t.p,{children:["Choose the ",(0,o.jsx)(t.strong,{children:"blank"})," template and run the client:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"cd react-native-hooks\nnpm install styled-components\nnpm start\n"})}),"\n",(0,o.jsxs)(t.p,{children:["I can test code by scanning the QR Code using the ",(0,o.jsx)(t.strong,{children:"Expo Go"})," app under Android or by pressing the ",(0,o.jsx)(t.code,{children:"w"})," key to activate a web preview."]}),"\n",(0,o.jsxs)(t.blockquote,{children:["\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"error:0308010C:digital envelope routines::unsupported"}),": Newer versions of Node.js use OpenSSLv3 that brought some ",(0,o.jsx)(t.a,{href:"https://wiki.openssl.org/index.php/OpenSSL_3.0#Upgrading_to_OpenSSL_3.0_from_OpenSSL_1.0.2",children:"breaking changes"}),". Can be fixed (",(0,o.jsx)(t.strong,{children:">=Nodejs v17"}),") by adding the following option to the start script inside your ",(0,o.jsx)(t.code,{children:"package.json"})," -> ",(0,o.jsx)(t.code,{children:'"start": "export NODE_OPTIONS=--openssl-legacy-provider && expo start"'})]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"usestate-hook-in-functional-components",children:"useState Hook in Functional Components"}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"useState"})," function allows us to access state in functional components. In a ",(0,o.jsx)(t.a,{href:"obsidian://open?vault=Obsidian%20Vault&file=2022-05-02-react-native-navigation%2F2022-05-02-react-native-navigation",children:"previous example"})," we used state in a class component to add items to a React Native ",(0,o.jsx)(t.strong,{children:"FlatList"}),". Here is how this would look like in a functional component:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-jsx",children:"import React, {useState} from 'react'\nimport { View, Text } from 'react-native'\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { StyledList, ListButton, ListButtonTitle } from './_styles'\n\nconst ToDoList = () => {\n\n    const [todos, setTodos] = useState([\n        {text: 'Qu\xe9 tengas un lindo d\xeda!', id: `${uuidv4()}`},\n    ])\n\n    const addTodo = () => {\n        setTodos([...todos, {text: '\xa1Y otra cosa que hacer!', id: `${uuidv4()}`}])\n    }\n\n    return (\n        <View>\n            <StyledList \n                data={todos}\n                keyExtractor={(todo) => todo.id}\n                renderItem={ ({ item }) => {\n                    return (\n                        <Text>{item.text}</Text>\n                    )\n                }}\n            />\n            <ListButton onPress={addTodo}>\n                <ListButtonTitle>A\xf1adir art\xedculo</ListButtonTitle>\n            </ListButton>\n        </View>\n    )\n}\n\nexport default ToDoList\n"})}),"\n",(0,o.jsx)(t.h3,{id:"working-with-form-data",children:"Working with Form Data"}),"\n",(0,o.jsxs)(t.p,{children:["Instead of adding some hard coded text we can now create an input field and use the user input to add new items to our list. This will be done in a component ",(0,o.jsx)(t.strong,{children:"AddToDo"})," that will feed the user input into our ",(0,o.jsx)(t.code,{children:"addTodo"})," function:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-jsx",children:"import React, {useState} from 'react'\nimport { View, Text } from 'react-native'\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { StyledList } from './_styles'\nimport AddToDo from './AddToDo';\n\nconst ToDoList = () => {\n\n    const [todos, setTodos] = useState([\n        {text: 'Qu\xe9 tengas un lindo d\xeda!', id: `${uuidv4()}`},\n    ])\n\n    const addTodo = (text) => {\n        setTodos([...todos, { text, id: `${uuidv4()}`}])\n    }\n\n    return (\n        <View>\n            <StyledList \n                data={todos}\n                keyExtractor={(todo) => todo.id}\n                renderItem={ ({ item }) => {\n                    return (\n                        <Text>{item.text}</Text>\n                    )\n                }}\n            />\n            <AddToDo addTodo={addTodo} />\n        </View>\n    )\n}\n\nexport default ToDoList\n"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-jsx",children:"import React, {useState} from 'react'\n\nimport {StyledTextInput, ListButton, ListButtonTitle, FormContainer, FormHeader } from './_styles'\n\nconst AddToDo = ({addTodo}) => {\n\n    const [input, setTodo] = useState('')\n\n    const onButtonPress = () => {\n        // Push input from state to parent component to add to list\n        addTodo(input)\n        // Clean input field once done\n        setTodo('')\n    }\n\n    return (\n        <FormContainer>\n\t            <FormHeader>Agregar un nuevo elemento de tareas pendientes:</FormHeader>\n            <StyledTextInput \n                // set value of field to it's content\n                value={input}\n                // update state with the user input text\n                onChangeText={(text) => setTodo(text)}\n            />\n            <ListButton onPress={onButtonPress} >\n                <ListButtonTitle>A\xf1adir art\xedculo</ListButtonTitle>\n            </ListButton>\n        </FormContainer>\n    )\n}\n\nexport default AddToDo\n"})}),"\n",(0,o.jsx)(t.h2,{id:"useeffect-hook-in-functional-components",children:"useEffect Hook in Functional Components"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"useEffect"})," replaces the life cycle function that allows you to run functions every time a component renders:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-jsx",children:"useEffect (() => {\n        console.log('useEffect', todos)\n    })\n"})}),"\n",(0,o.jsx)(t.p,{children:"We can limit the function to only run when a certain value changes, e.g. :"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-jsx",children:"useEffect (() => {\n        console.log('useEffect', todos)\n    }, [todos])\n"})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},241624:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-23d027067cc9016279f834178a642545.jpg"},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var o=n(296540);const s={},i=o.createContext(s);function a(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);