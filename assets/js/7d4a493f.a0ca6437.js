"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[60825],{535286:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>t,metadata:()=>o,toc:()=>d});var i=r(474848),a=r(28453);const t={sidebar_position:7010,slug:"2021-12-02",title:"OpenCV, Streams and Video Files",authors:"mpolinowski",tags:["Machine Learning","Python","OpenCV"]},s=void 0,o={id:"IoT-and-Machine-Learning/ML/2021-12-02--opencv-with-videos/index",title:"OpenCV, Streams and Video Files",description:"Shenzhen, China",source:"@site/docs/IoT-and-Machine-Learning/ML/2021-12-02--opencv-with-videos/index.md",sourceDirName:"IoT-and-Machine-Learning/ML/2021-12-02--opencv-with-videos",slug:"/IoT-and-Machine-Learning/ML/2021-12-02--opencv-with-videos/2021-12-02",permalink:"/docs/IoT-and-Machine-Learning/ML/2021-12-02--opencv-with-videos/2021-12-02",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IoT-and-Machine-Learning/ML/2021-12-02--opencv-with-videos/index.md",tags:[{label:"Machine Learning",permalink:"/docs/tags/machine-learning"},{label:"Python",permalink:"/docs/tags/python"},{label:"OpenCV",permalink:"/docs/tags/open-cv"}],version:"current",sidebarPosition:7010,frontMatter:{sidebar_position:7010,slug:"2021-12-02",title:"OpenCV, Streams and Video Files",authors:"mpolinowski",tags:["Machine Learning","Python","OpenCV"]},sidebar:"tutorialSidebar",previous:{title:"OpenCV Image Operations",permalink:"/docs/IoT-and-Machine-Learning/ML/2021-12-03--opencv-image-operations/2021-12-03"},next:{title:"OpenCV and Images",permalink:"/docs/IoT-and-Machine-Learning/ML/2021-12-01--opencv-with-images/2021-12-01"}},c={},d=[{value:"Setup OpenCV",id:"setup-opencv",level:2},{value:"Webcam Capture",id:"webcam-capture",level:2},{value:"IP Camera Capture",id:"ip-camera-capture",level:2},{value:"Video Stream Recording",id:"video-stream-recording",level:2},{value:"Playback Video Files",id:"playback-video-files",level:2}];function p(e){const n={a:"a",code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Shenzhen, China",src:r(381020).A+"",width:"2385",height:"919"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#setup-opencv",children:"Setup OpenCV"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#webcam-capture",children:"Webcam Capture"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#ip-camera-capture",children:"IP Camera Capture"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#video-stream-recording",children:"Video Stream Recording"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#playback-video-files",children:"Playback Video Files"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/mpolinowski/opencv-with-videos",children:"Github Repo"})}),"\n",(0,i.jsx)(n.h2,{id:"setup-opencv",children:"Setup OpenCV"}),"\n",(0,i.jsx)(n.p,{children:"Create and activate a virtual work environment:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"python -m venv .env\r\nsource .env/bin/activate\r\npython -m pip install --upgrade pip\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Add a file ",(0,i.jsx)(n.code,{children:"dependencies.txt"})," with all project ",(0,i.jsx)(n.strong,{children:"pip dependencies"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"opencv-python\r\nnumpy\n"})}),"\n",(0,i.jsx)(n.p,{children:"Install all dependencies with:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pip install -r dependencies.txt\n"})}),"\n",(0,i.jsx)(n.h2,{id:"webcam-capture",children:"Webcam Capture"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"import cv2\r\n\r\nwebcam = cv2.VideoCapture(0)\r\n\r\nwhile (True):\r\n    ret_, frame = webcam.read()\r\n    cv2.imshow(\"webcam\", frame)\r\n    if cv2.waitKey(1) & 0xFF == ord('q'):\r\n        webcam.release()\r\n        break\r\n\r\ncv2.destroyAllWindows()\n"})}),"\n",(0,i.jsx)(n.h2,{id:"ip-camera-capture",children:"IP Camera Capture"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"import cv2\r\nimport os\r\n\r\nRTSP_URL = 'rtsp://admin:instar@192.168.2.19/livestream/13'\r\n\r\nos.environ['OPENCV_FFMPEG_CAPTURE_OPTIONS'] = 'rtsp_transport;udp' # Use tcp instead of udp if stream is unstable\r\n\r\ncap = cv2.VideoCapture(RTSP_URL, cv2.CAP_FFMPEG)\r\n\r\nif not cap.isOpened():\r\n    print('Cannot open RTSP stream')\r\n    exit(-1)\r\n\r\nwhile True:\r\n    success, img = cap.read()\r\n    cv2.imshow('RTSP stream', img)\r\n\r\n    if cv2.waitKey(1) & 0xFF == ord('q'):  # Keep running until you press `q`\r\n        cap.release()\r\n        break\r\n\r\ncv2.destroyAllWindows()\n"})}),"\n",(0,i.jsx)(n.h2,{id:"video-stream-recording",children:"Video Stream Recording"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"import cv2\r\nimport os\r\n\r\nRTSP_URL = 'rtsp://admin:instar@192.168.2.19/livestream/13'\r\n\r\nos.environ['OPENCV_FFMPEG_CAPTURE_OPTIONS'] = 'rtsp_transport;udp' # Use tcp instead of udp if stream is unstable\r\n\r\ncap = cv2.VideoCapture(RTSP_URL, cv2.CAP_FFMPEG)\r\n\r\nif not cap.isOpened():\r\n    print('Cannot open RTSP stream')\r\n    exit(-1)\r\n\r\nframe_width = int(cap.get(3))\r\nframe_height = int(cap.get(4))\r\nfps = 15\r\n\r\nvideo_codec = cv2.VideoWriter_fourcc(*'XVID')\r\nvideo_output = cv2.VideoWriter('recording/captured_video.mp4', video_codec, fps, (frame_width, frame_height))\r\n\r\nwhile True:\r\n    ret, frame = cap.read()\r\n\r\n    if ret == True:\r\n        video_output.write(frame)\r\n        cv2.imshow(\"Video Recording\", frame)\r\n\r\n        if cv2.waitKey(1) & 0xFF == ord('q'):\r\n            break\r\n\r\n    else:\r\n        break\r\n\r\ncap.release()\r\nvideo_output.release()\r\ncv2.destroyAllWindows()\r\nprint('Video was saved!')\n"})}),"\n",(0,i.jsx)(n.h2,{id:"playback-video-files",children:"Playback Video Files"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import cv2\r\n\r\ncap = cv2.VideoCapture("recording/captured_video.mp4")\r\n\r\nwhile (True):\r\n    ret, frame = cap.read()\r\n    cv2.imshow("Video Recording", frame)\r\n\r\n    if cv2.waitKey(1) & 0xFF == ord(\'q\'):\r\n        break\r\n\r\ncap.release()\r\ncv2.destroyAllWindows()\n'})})]})}function l(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},381020:(e,n,r)=>{r.d(n,{A:()=>i});const i=r.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-5a0b68587d9242bbb46a1f1aaab44216.jpg"},28453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>o});var i=r(296540);const a={},t=i.createContext(a);function s(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);