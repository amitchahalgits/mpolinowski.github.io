"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[3809],{155120:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>o});var r=s(474848),l=s(28453);const a={sidebar_position:9070,slug:"2020-07-27",title:"Securing Webservers - FirewallD Deployment on Ubuntu 20.04",authors:"mpolinowski",tags:["LINUX","Security","FirewallD","fail2ban"]},i=void 0,t={id:"DevOps/Security/2020-07-27--firewalld-deployment-ubuntu/index",title:"Securing Webservers - FirewallD Deployment on Ubuntu 20.04",description:"TST, Hong Kong",source:"@site/docs/DevOps/Security/2020-07-27--firewalld-deployment-ubuntu/index.md",sourceDirName:"DevOps/Security/2020-07-27--firewalld-deployment-ubuntu",slug:"/DevOps/Security/2020-07-27--firewalld-deployment-ubuntu/2020-07-27",permalink:"/docs/DevOps/Security/2020-07-27--firewalld-deployment-ubuntu/2020-07-27",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Security/2020-07-27--firewalld-deployment-ubuntu/index.md",tags:[{label:"LINUX",permalink:"/docs/tags/linux"},{label:"Security",permalink:"/docs/tags/security"},{label:"FirewallD",permalink:"/docs/tags/firewall-d"},{label:"fail2ban",permalink:"/docs/tags/fail-2-ban"}],version:"current",sidebarPosition:9070,frontMatter:{sidebar_position:9070,slug:"2020-07-27",title:"Securing Webservers - FirewallD Deployment on Ubuntu 20.04",authors:"mpolinowski",tags:["LINUX","Security","FirewallD","fail2ban"]},sidebar:"tutorialSidebar",previous:{title:"Securing Webservers - Fail2Ban Ubuntu 20.10",permalink:"/docs/DevOps/Security/2020-07-28--fail2ban-ubuntu-server/2020-07-28"},next:{title:"Securing Webservers - FirewallD Deployment on Debian 9",permalink:"/docs/DevOps/Security/2020-07-27--firewalld-deployment-debian/2020-07-27"}},c={},o=[{value:"Installation",id:"installation",level:2},{value:"Setup",id:"setup",level:2},{value:"Services",id:"services",level:3},{value:"Ports",id:"ports",level:3},{value:"Docker",id:"docker",level:4},{value:"Enable FirewallD",id:"enable-firewalld",level:2},{value:"Prevent Bruteforce SSH attacks",id:"prevent-bruteforce-ssh-attacks",level:3},{value:"Create a Blacklist",id:"create-a-blacklist",level:3},{value:"Block and Enable ICMP",id:"block-and-enable-icmp",level:3},{value:"Lockdown Rules",id:"lockdown-rules",level:3},{value:"How to Reset when things go Wrong",id:"how-to-reset-when-things-go-wrong",level:3},{value:"fail2ban-firewalld",id:"fail2ban-firewalld",level:3},{value:"fail2ban",id:"fail2ban",level:2},{value:"Unbanning an IP Address",id:"unbanning-an-ip-address",level:3},{value:"Blacklisting Script and Configuration",id:"blacklisting-script-and-configuration",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"TST, Hong Kong",src:s(995502).A+"",width:"1500",height:"517"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#installation",children:"Installation"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#setup",children:"Setup"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#services",children:"Services"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#ports",children:"Ports"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#docker",children:"Docker"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#enable-firewalld",children:"Enable FirewallD"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#prevent-bruteforce-ssh-attacks",children:"Prevent Bruteforce SSH attacks"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#create-a-blacklist",children:"Create a Blacklist"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#block-and-enable-icmp",children:"Block and Enable ICMP"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#lockdown-rules",children:"Lockdown Rules"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#how-to-reset-when-things-go-wrong",children:"How to Reset when things go Wrong"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#fail2ban-firewalld",children:"fail2ban-firewalld"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#fail2ban",children:"fail2ban"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#unbanning-an-ip-address",children:"Unbanning an IP Address"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#blacklisting-script-and-configuration",children:"Blacklisting Script and Configuration"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"apt-get remove ufw\r\napt-get install firewall-applet\n"})}),"\n",(0,r.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,r.jsx)(n.p,{children:"Before enabling your firewall you need to check what ports are in use on your server:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"netstat -lntup\n"})}),"\n",(0,r.jsx)(n.p,{children:"This will list all processes that are actively listening on ports on your system:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"Active Internet connections (only servers)\r\nProto Recv-Q Send-Q Local Address           PID/Program name\r\ntcp        0      0 127.0.0.53:53           621/systemd-resolve\r\ntcp        0      0 0.0.0.0:22              689/sshd: /usr/sbin\r\ntcp6       0      0 :::22                   689/sshd: /usr/sbin\r\ntcp6       0      0 :::443                  1045/docker-proxy\r\ntcp6       0      0 :::10050                4130/docker-proxy\r\ntcp6       0      0 :::2222                 1078/docker-proxy\r\ntcp6       0      0 :::8080                 1099/docker-proxy\r\ntcp6       0      0 :::80                   1065/docker-proxy\n"})}),"\n",(0,r.jsxs)(n.p,{children:["You can also run ",(0,r.jsx)(n.code,{children:"netstat -ltup"})," to get a list where known ports are named by the service that usually occupies them - in case you don't know what a certain port is doing in this list:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"Active Internet connections (only servers)\r\nProto Recv-Q Send-Q Local Address           PID/Program name\r\ntcp        0      0 localhost:domain        621/systemd-resolve\r\ntcp        0      0 0.0.0.0:ssh             689/sshd: /usr/sbin\r\ntcp6       0      0 [::]:ssh                689/sshd: /usr/sbin\r\ntcp6       0      0 [::]:https              1045/docker-proxy\r\ntcp6       0      0 [::]:zabbix-agent       4130/docker-proxy\r\ntcp6       0      0 [::]:2222               1078/docker-proxy\r\ntcp6       0      0 [::]:http-alt           1099/docker-proxy\r\ntcp6       0      0 [::]:http               1065/docker-proxy\n"})}),"\n",(0,r.jsx)(n.h3,{id:"services",children:"Services"}),"\n",(0,r.jsx)(n.p,{children:"FirewallD offers service presets that you can use to allow all necessary traffic for those services to work correctly:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"firewall-cmd --get-services\r\n\r\nRH-Satellite-6 amanda-client amanda-k5-client amqp amqps apcupsd audit bacula bacula-client bb bgp bitcoin bitcoin-rpc bitcoin-testnet bitcoin-testnet-rpc bittorrent-lsd ceph ceph-mon cfengine cockpit condor-collector ctdb dhcp dhcpv6 dhcpv6-client distcc dns dns-over-tls docker-registry docker-swarm dropbox-lansync elasticsearch etcd-client etcd-server finger freeipa-4 freeipa-ldap freeipa-ldaps freeipa-replication freeipa-trust ftp ganglia-client ganglia-master git grafana gre high-availability http https imap imaps ipp ipp-client ipsec irc ircs iscsi-target isns jenkins kadmin kdeconnect kerberos kibana klogin kpasswd kprop kshell kube-apiserver ldap ldaps libvirt libvirt-tls lightning-network llmnr managesieve matrix mdns memcache minidlna mongodb mosh mountd mqtt mqtt-tls ms-wbt mssql murmur mysql nfs nfs3 nmea-0183 nrpe ntp nut openvpn ovirt-imageio ovirt-storageconsole ovirt-vmconsole plex pmcd pmproxy pmwebapi pmwebapis pop3 pop3s postgresql privoxy prometheus proxy-dhcp ptp pulseaudio puppetmaster quassel radius rdp redis redis-sentinel rpc-bind rsh rsyncd rtsp salt-master samba samba-client samba-dc sane sip sips slp smtp smtp-submission smtps snmp snmptrap spideroak-lansync spotify-sync squid ssdp ssh steam-streaming svdrp svn syncthing syncthing-gui synergy syslog syslog-tls telnet tentacle tftp tftp-client tile38 tinc tor-socks transmission-client upnp-client vdsm vnc-server wbem-http wbem-https wsman wsmans xdmcp xmpp-bosh xmpp-client xmpp-local xmpp-server zabbix-agent zabbix-server\n"})}),"\n",(0,r.jsxs)(n.p,{children:["You can find out what ports are opened by a service inside the definition files in ",(0,r.jsx)(n.code,{children:"/usr/lib/firewalld/services/"})," - e.g.:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'cat /usr/lib/firewalld/services/zabbix-server.xml\r\n\r\n<?xml version="1.0" encoding="utf-8"?>\r\n<service>\r\n  <short>Zabbix Server</short>\r\n  <description>Zabbix is a mature and effortless enterprise-class open source monitoring solution for network monitoring and application monitoring of millions of metrics.</description>\r\n  <port protocol="tcp" port="10051"/>\r\n</service>\n'})}),"\n",(0,r.jsx)(n.p,{children:"We can add all releavant service presets with:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"firewall-cmd --permanent --zone=public --add-service=ssh\r\nfirewall-cmd --permanent --zone=public --add-service=git\r\nfirewall-cmd --permanent --zone=public --add-service=http\r\nfirewall-cmd --permanent --zone=public --add-service=https\n"})}),"\n",(0,r.jsx)(n.h3,{id:"ports",children:"Ports"}),"\n",(0,r.jsx)(n.p,{children:"To add specialized ports run:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"firewall-cmd --permanent --zone=public --add-port=2222/tcp\r\nfirewall-cmd --permanent --zone=public --add-port=8080/tcp\r\nfirewall-cmd --permanent --zone=public --add-port=4505-4506/tcp\r\nfirewall-cmd --reload\n"})}),"\n",(0,r.jsx)(n.h4,{id:"docker",children:"Docker"}),"\n",(0,r.jsx)(n.p,{children:"To actively reject traffic to a specific port:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'firewall-cmd --permanent --add-rich-rule=\'rule family=ipv4 port port="9200" protocol="tcp" reject\'\r\nfirewall-cmd --reload\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"BUT"})," Docker will override this! Make sure to bind all ports that you don't want to be open to the internet to localhost!"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"})," ",(0,r.jsx)(n.code,{children:"docker-compose.yml"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yml",children:"ports:\r\n  - '127.0.0.1:9200:9200'\r\n  - '127.0.0.1:9300:9300'\n"})}),"\n",(0,r.jsx)(n.h2,{id:"enable-firewalld",children:"Enable FirewallD"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"systemctl enable --now firewalld\r\nsystemctl status firewalld\n"})}),"\n",(0,r.jsx)(n.p,{children:"Verify that everything is set up correctly:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"firewall-cmd --zone=public --list-all\r\n\r\npublic\r\n  target: default\r\n  icmp-block-inversion: no\r\n  interfaces:\r\n  sources:\r\n  services: dhcpv6-client git http https salt-master ssh zabbix-agent zabbix-server\r\n  ports: 2222/tcp 8080/tcp\r\n  protocols:\r\n  masquerade: no\r\n  forward-ports:\r\n  source-ports:\r\n  icmp-blocks:\r\n  rich rules:\n"})}),"\n",(0,r.jsx)(n.h3,{id:"prevent-bruteforce-ssh-attacks",children:"Prevent Bruteforce SSH attacks"}),"\n",(0,r.jsx)(n.p,{children:"Reject new incoming ipv4 connections when more than 2 attempts per minute are made. It will also log a message about this:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'firewall-cmd --add-rich-rule=\'rule family="ipv4" service name="ssh" log prefix="SSH Bruteforce:" level="warning" limit value="2/m" accept limit value="2/m"\' --permanent\n'})}),"\n",(0,r.jsx)(n.p,{children:"If you have both ipv4 and ipv6 configured you\u2019ll probably want the more generic version:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'firewall-cmd --add-rich-rule=\'rule service name="ssh" log prefix="SSH Bruteforce:" level="warning" limit value="2/m" accept limit value="2/m"\' --permanent\n'})}),"\n",(0,r.jsx)(n.h3,{id:"create-a-blacklist",children:"Create a Blacklist"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"firewall-cmd --permanent --new-ipset=blacklist --type=hash:net --option=family=inet --option=hashsize=4096 --option=maxelem=200000\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"\u2013permanent"})," = use to make changes to the permanent configuration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"\u2013new-ipset"})," = name of the new IP/net blacklist"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"\u2013type"}),' = storage hash type, "net" is for subnets, while "ip" for individual ip addresses']}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"\u2013option=family"})," = IPv4 or IPv6 network, inet is for IPv4"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"\u2013option=hashsize"})," = the initial hash size of the list"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"\u2013option=maxelem"})," = max number of elements"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://www.ipdeny.com/ipblocks/",children:"Download net blocks"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"wget https://www.ipdeny.com/ipblocks/data/aggregated/ru-aggregated.zone\n"})}),"\n",(0,r.jsx)(n.p,{children:"Populate the blacklist:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"firewall-cmd --permanent --ipset=blacklist --add-entries-from-file=./ru-aggregated.zone\n"})}),"\n",(0,r.jsx)(n.p,{children:"To add individual IP addresses or net blocks by yourself:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"firewall-cmd --permanent --ipset=blacklist --add-entry=4.46.116.112\r\nfirewall-cmd --ipset=blacklist --add-entry=4.46.116.112\n"})}),"\n",(0,r.jsx)(n.p,{children:"Redirect the blacklist to the drop zone"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"firewall-cmd --permanent --zone=drop --add-source=ipset:blacklist\r\nfirewall-cmd --reload\n"})}),"\n",(0,r.jsx)(n.h3,{id:"block-and-enable-icmp",children:"Block and Enable ICMP"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"firewall-cmd --zone=public --query-icmp-block=echo-reply\n"})}),"\n",(0,r.jsx)(n.p,{children:'If you get "no", that means there isn\u2019t any icmp block applied, let\u2019s enable (block) icmp.'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"firewall-cmd --zone=public --add-icmp-block=echo-reply\n"})}),"\n",(0,r.jsx)(n.h3,{id:"lockdown-rules",children:"Lockdown Rules"}),"\n",(0,r.jsx)(n.p,{children:"It\u2019s possible to change the firewalld rules by any local applications, which have the root privileges. To avoid making changes to firewalld rules, we have to put a lock-down in \u2018firewalld.conf\u2018 file. This mostly used to protect the firewalld from any unwanted rules changes by any applications."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"nano /etc/firewalld/firewalld.conf\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cfg",children:"Lockdown=yes\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"firewall-cmd --reload\r\nfirewall-cmd --query-lockdown\n"})}),"\n",(0,r.jsx)(n.p,{children:"To On/Off lockdown mode, use the following combination."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"firewall-cmd --lockdown-on\r\nfirewall-cmd --lockdown-off\n"})}),"\n",(0,r.jsx)(n.h3,{id:"how-to-reset-when-things-go-wrong",children:"How to Reset when things go Wrong"}),"\n",(0,r.jsx)(n.p,{children:"Delete your Zone Settings:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"rm -rf /etc/firewalld/zones\n"})}),"\n",(0,r.jsx)(n.p,{children:"Using the below set of commands you will set accept rule for all types of connections."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"iptables -P INPUT ACCEPT\r\niptables -P OUTPUT ACCEPT\r\niptables -P FORWARD ACCEPT\n"})}),"\n",(0,r.jsx)(n.p,{children:"This will confirm, iptables gonna accept all requests for all types of connections."}),"\n",(0,r.jsx)(n.p,{children:"Using below set of commands, delete your currently configured rules from iptables."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"iptables -F INPUT\r\niptables -F OUTPUT\r\niptables -F FORWARD\n"})}),"\n",(0,r.jsx)(n.p,{children:"Or you can do it in single command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"iptables -F\n"})}),"\n",(0,r.jsx)(n.p,{children:"That\u2019s it! Your iptables are reset to default settings i.e. accept all!"}),"\n",(0,r.jsx)(n.h3,{id:"fail2ban-firewalld",children:"fail2ban-firewalld"}),"\n",(0,r.jsxs)(n.p,{children:["Configure ",(0,r.jsx)(n.a,{href:"https://fedoraproject.org/wiki/Fail2ban_with_FirewallD#fail2ban-firewalld",children:"fail2ban"})," (",(0,r.jsx)(n.strong,{children:"see below"}),") to block hosts via firewalld."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"apt-get update && apt-get upgrade -y\r\napt-get install fail2ban\n"})}),"\n",(0,r.jsx)(n.h2,{id:"fail2ban",children:"fail2ban"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://www.fail2ban.org/wiki/index.php/Main_Page",children:"fail2ban"})," is a daemon to ban hosts that cause multiple authentication errors."]}),"\n",(0,r.jsx)(n.p,{children:"fail2ban will monitor the SystemD journal to look for failed authentication attempts for whichever jails have been enabled. After the number of failed attempts specified it will add a firewall rule to block that specific IP address for an amount of time configured."}),"\n",(0,r.jsxs)(n.p,{children:["Start by ",(0,r.jsx)(n.a,{href:"https://www.fail2ban.org/wiki/index.php/Downloads",children:"installing the package"})," on your system - ",(0,r.jsx)(n.a,{href:"https://packages.debian.org/stable/net/fail2ban",children:"Debian"}),", ",(0,r.jsx)(n.a,{href:"https://packages.ubuntu.com/search?keywords=fail2ban",children:"Ubuntu"})," or on Centos through EPEL."]}),"\n",(0,r.jsx)(n.p,{children:"The jail.conf file will enable Fail2ban for SSH by default for Debian and Ubuntu, but not CentOS. All other protocols and configurations (HTTP, FTP, etc.) are commented out. If you want to change this, create a jail.local for editing:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local\n"})}),"\n",(0,r.jsx)(n.p,{children:"Once installed the next step is to configure a jail (a service you want to monitor and ban at whatever thresholds you\u2019ve set). By default IPs are banned for 1 hour. The best practice is to override the system defaults using _.local files instead of directly modifying the _.config files:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cfg",children:'# cat /etc/fail2ban/jail.local\r\n[DEFAULT]\r\n# "bantime" is the number of seconds that a host is banned.\r\nbantime  = 1d\r\n\r\n# A host is banned if it has generated "maxretry" during the last "findtime"\r\n# seconds.\r\nfindtime  = 1h\r\n\r\n# "maxretry" is the number of failures before a host get banned.\r\nmaxretry = 5\n'})}),"\n",(0,r.jsx)(n.p,{children:"After 5 attempts within the last hour the IP will be blocked for 1 day."}),"\n",(0,r.jsxs)(n.p,{children:["The next step is to configure a jail. In this tutorial sshd is shown but the steps are more or less the same for other services. Create a configuration file inside ",(0,r.jsx)(n.code,{children:"/etc/fail2ban/jail.d"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# cat /etc/fail2ban/jail.d/sshd.local\r\n[sshd]\r\nenabled = true\n"})}),"\n",(0,r.jsx)(n.p,{children:"Next enable and start the fail2ban service."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"systemctl enable --now fail2ban\r\nsystemctl status fail2ban\n"})}),"\n",(0,r.jsx)(n.p,{children:"to check the status of fail2ban and make sure the jail is enabled enter:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"fail2ban-client status\r\n\r\nStatus\r\n|- Number of jail:\t1\r\n`- Jail list:\tsshd\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"fail2ban-client status sshd\r\nStatus for the jail: sshd\r\n|- Filter\r\n|  |- Currently failed:\t8\r\n|  |- Total failed:\t4399\r\n|  `- Journal matches:\t_SYSTEMD_UNIT=sshd.service + _COMM=sshd\r\n`- Actions\r\n   |- Currently banned:\t101\r\n   |- Total banned:\t684\r\n   `- Banned IP list:   ...\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"tail -f /var/log/fail2ban.log\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Check IP address geo location and add country ban lists where necessary ",(0,r.jsx)(n.code,{children:"whois ip-addrss | grep -i country"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"unbanning-an-ip-address",children:"Unbanning an IP Address"}),"\n",(0,r.jsx)(n.p,{children:'In order to remove an IP address from the banned list, parameter IPADDRESS is set to appropriate IP which needs unbanning. The name "sshd" is the name of the jail, in this case the "sshd" jail that we configured above. The following command does the job.'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"fail2ban-client set sshd unbanip IPADDRESS\n"})}),"\n",(0,r.jsx)(n.h2,{id:"blacklisting-script-and-configuration",children:"Blacklisting Script and Configuration"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.a,{href:"https://fedoramagazine.org/protect-your-system-with-fail2ban-and-firewalld-blacklists/",children:"following script"})," to automate the process as much as possible:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\r\n# Based on the below article\r\n# https://www.linode.com/community/questions/11143/top-tip-firewalld-and-ipset-country-blacklist\r\n\r\n# Source the blacklisted countries from the configuration file\r\n. /etc/blacklist-by-country\r\n\r\n# Create a temporary working directory\r\nipdeny_tmp_dir=$(mktemp -d -t blacklist-XXXXXXXXXX)\r\npushd $ipdeny_tmp_dir\r\n\r\n# Download the latest network addresses by country file\r\ncurl -LO http://www.ipdeny.com/ipblocks/data/countries/all-zones.tar.gz\r\ntar xf all-zones.tar.gz\r\n\r\n# For updates, remove the ipset blacklist and recreate\r\nif firewall-cmd -q --zone=drop --query-source=ipset:blacklist; then\r\n    firewall-cmd -q --permanent --delete-ipset=blacklist\r\nfi\r\n\r\n# Create the ipset blacklist which accepts both IP addresses and networks\r\nfirewall-cmd -q --permanent --new-ipset=blacklist --type=hash:net \\\r\n    --option=family=inet --option=hashsize=4096 --option=maxelem=200000 \\\r\n    --set-description="An ipset list of networks or ips to be dropped."\r\n\r\n# Add the address ranges by country per ipdeny.com to the blacklist\r\nfor country in $countries; do\r\n    firewall-cmd -q --permanent --ipset=blacklist \\\r\n        --add-entries-from-file=./$country.zone && \\\r\n        echo "Added $country to blacklist ipset."\r\ndone\r\n\r\n# Block individual IPs if the configuration file exists and is not empty\r\nif [ -s "/etc/blacklist-by-ip" ]; then\r\n    echo "Adding IPs blacklists."\r\n    firewall-cmd -q --permanent --ipset=blacklist \\\r\n        --add-entries-from-file=/etc/blacklist-by-ip && \\\r\n        echo "Added IPs to blacklist ipset."\r\nfi\r\n\r\n# Add the blacklist ipset to the drop zone if not already setup\r\nif firewall-cmd -q --zone=drop --query-source=ipset:blacklist; then\r\n    echo "Blacklist already in firewalld drop zone."\r\nelse\r\n    echo "Adding ipset blacklist to firewalld drop zone."\r\n    firewall-cmd --permanent --zone=drop --add-source=ipset:blacklist\r\nfi\r\n\r\nfirewall-cmd -q --reload\r\n\r\npopd\r\nrm -rf $ipdeny_tmp_dir\n'})}),"\n",(0,r.jsxs)(n.p,{children:["This should be installed to ",(0,r.jsx)(n.code,{children:"/usr/local/sbin"})," and don\u2019t forget to make it executable!"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"chmod +x /usr/local/sbin/firewalld-blacklist\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Then create a configure file: ",(0,r.jsx)(n.code,{children:"/etc/blacklist-by-country"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Which countries should be blocked?\r\n# Use the two letter designation separated by a space.\r\ncountries=""\n'})}),"\n",(0,r.jsxs)(n.p,{children:["And another configuration file ",(0,r.jsx)(n.code,{children:"/etc/blacklist-by-ip"}),", which is just one IP per line without any additional formatting."]}),"\n",(0,r.jsx)(n.p,{children:"For this example 10 random countries were selected from the ipdeny zones:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# ls | shuf -n 10 | sed \"s/\\.zone//g\" | tr '\\n' ' '\r\nnl ee ie pk is sv na om gp bn\n"})}),"\n",(0,r.jsx)(n.p,{children:"Now as long as at least one country has been added to the config file it\u2019s ready to run!"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"firewalld-blacklist\r\nfirewall-cmd --info-zone=drop\r\nfirewall-cmd --info-ipset=blacklist | less\n"})}),"\n",(0,r.jsxs)(n.p,{children:["See also - auto blacklist updates: ",(0,r.jsx)(n.a,{href:"https://pagure.io/firewalld-blacklist/tree/master",children:"https://pagure.io/firewalld-blacklist/tree/master"})]}),"\n",(0,r.jsxs)(n.p,{children:["download the service file and timer to ",(0,r.jsx)(n.code,{children:"/etc/systemd/system/"})," and enable the timer:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"systemctl daemon-reload\r\nsystemctl enable --now firewalld-blacklist.timer\n"})})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},995502:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-ec671595d585b88a85b017a7908fb619.jpg"},28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>t});var r=s(296540);const l={},a=r.createContext(l);function i(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);