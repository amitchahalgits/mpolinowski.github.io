"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[73095],{810037:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>r});var o=a(474848),i=a(28453);const s={sidebar_position:4770,slug:"2023-01-05",title:"DVC Model Access",authors:"mpolinowski",tags:["Python","Machine Learning"],description:"Retrieve your Model Data"},t=void 0,d={id:"IoT-and-Machine-Learning/AIOps/2023-01-06-dvc-model-access/index",title:"DVC Model Access",description:"Retrieve your Model Data",source:"@site/docs/IoT-and-Machine-Learning/AIOps/2023-01-06-dvc-model-access/index.md",sourceDirName:"IoT-and-Machine-Learning/AIOps/2023-01-06-dvc-model-access",slug:"/IoT-and-Machine-Learning/AIOps/2023-01-06-dvc-model-access/2023-01-05",permalink:"/docs/IoT-and-Machine-Learning/AIOps/2023-01-06-dvc-model-access/2023-01-05",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IoT-and-Machine-Learning/AIOps/2023-01-06-dvc-model-access/index.md",tags:[{label:"Python",permalink:"/docs/tags/python"},{label:"Machine Learning",permalink:"/docs/tags/machine-learning"}],version:"current",sidebarPosition:4770,frontMatter:{sidebar_position:4770,slug:"2023-01-05",title:"DVC Model Access",authors:"mpolinowski",tags:["Python","Machine Learning"],description:"Retrieve your Model Data"},sidebar:"tutorialSidebar",previous:{title:"Python Ray Basic Concepts",permalink:"/docs/IoT-and-Machine-Learning/AIOps/2023-01-22-python-ray-introduction/2023-01-22"},next:{title:"Data Version Control",permalink:"/docs/IoT-and-Machine-Learning/AIOps/2023-01-05-dvc-model-version-control/2023-01-05"}},c={},r=[{value:"Data and Model Access",id:"data-and-model-access",level:2},{value:"Find a file or Directory",id:"find-a-file-or-directory",level:3},{value:"Download",id:"download",level:3},{value:"Data Pipelines",id:"data-pipelines",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Guangzhou, China",src:a(578883).A+"",width:"1500",height:"662"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"#data-and-model-access",children:"Data and Model Access"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#find-a-file-or-directory",children:"Find a file or Directory"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#download",children:"Download"})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#data-pipelines",children:"Data Pipelines"})}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"/docs/IoT-and-Machine-Learning/AIOps/2023-01-05-dvc-model-version-control/2023-01-05",children:"We've learned how to track data and models with DVC"}),", and how to commit their versions to Git. The next questions are: How can we use these artifacts outside of the project? How do we download a model to deploy it? How to download a specific version of a model? Or reuse datasets across different projects?"]}),"\n",(0,o.jsx)(n.h2,{id:"data-and-model-access",children:"Data and Model Access"}),"\n",(0,o.jsx)(n.p,{children:"DVC's remote storage config is also saved in Git, and contains all the information needed to access and download any version of datasets, files, and models. It means that a Git repository with DVC files becomes an entry point, and can be used instead of accessing files directly."}),"\n",(0,o.jsx)(n.h3,{id:"find-a-file-or-directory",children:"Find a file or Directory"}),"\n",(0,o.jsx)(n.p,{children:"You can use dvc list to explore a DVC repository hosted on any Git server:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"dvc list https://github.com/mpolinowski/dvc-demo-project.git\n.dvcignore\ndata\n"})}),"\n",(0,o.jsx)(n.p,{children:"The benefit of this command over browsing a Git hosting website is that the list includes files and directories tracked by both Git and DVC."}),"\n",(0,o.jsx)(n.h3,{id:"download",children:"Download"}),"\n",(0,o.jsx)(n.p,{children:"One way is to simply download the data with dvc get. This is useful when working outside of a DVC project environment, for example in an automated ML model deployment task:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"dvc get https://github.com/mpolinowski/dvc-demo-project \\\n        data\n"})}),"\n",(0,o.jsxs)(n.p,{children:["And now to the magic part - while the Git repository only contains the ",(0,o.jsx)(n.code,{children:".dvc"})," configuration file that points to our data:"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Data Version Control Model Access",src:a(527121).A+"",width:"1233",height:"239"})}),"\n",(0,o.jsx)(n.p,{children:"The GET command we used above automatically pulled the data with the version that was committed to Git:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"ls -la data\n\n     256 Jan  5 17:25 .\n     232 Jan  5 17:25 ..\n14445097 Jan  5 17:25 data.xml\n      10 Jan  5 17:25 .gitignore\n"})}),"\n",(0,o.jsx)(n.h2,{id:"data-pipelines",children:"Data Pipelines"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"WiP"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},527121:(e,n,a)=>{a.d(n,{A:()=>o});const o=a.p+"assets/images/DVC-Model-Access_01-bc3d525fec33e0f38e48e3779952174c.png"},578883:(e,n,a)=>{a.d(n,{A:()=>o});const o=a.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-296769d73822f07b0ac5dc952f56bfa1.jpg"},28453:(e,n,a)=>{a.d(n,{R:()=>t,x:()=>d});var o=a(296540);const i={},s=o.createContext(i);function t(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);