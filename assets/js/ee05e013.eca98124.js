"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[34791],{433806:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var r=t(474848),i=t(28453);const o={sidebar_position:5886,slug:"2023-12-25",title:"Redux Toolkit and RTK Query",authors:"mpolinowski",tags:["Javascript","React","Rust"],description:"RTK Query or React Query ?"},a=void 0,s={id:"Development/Javascript/2023-12-25-redux-toolkit/index",title:"Redux Toolkit and RTK Query",description:"RTK Query or React Query ?",source:"@site/docs/Development/Javascript/2023-12-25-redux-toolkit/index.md",sourceDirName:"Development/Javascript/2023-12-25-redux-toolkit",slug:"/Development/Javascript/2023-12-25-redux-toolkit/2023-12-25",permalink:"/docs/Development/Javascript/2023-12-25-redux-toolkit/2023-12-25",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Development/Javascript/2023-12-25-redux-toolkit/index.md",tags:[{label:"Javascript",permalink:"/docs/tags/javascript"},{label:"React",permalink:"/docs/tags/react"},{label:"Rust",permalink:"/docs/tags/rust"}],version:"current",sidebarPosition:5886,frontMatter:{sidebar_position:5886,slug:"2023-12-25",title:"Redux Toolkit and RTK Query",authors:"mpolinowski",tags:["Javascript","React","Rust"],description:"RTK Query or React Query ?"},sidebar:"tutorialSidebar",previous:{title:"Typescript for Web APIs",permalink:"/docs/Development/Javascript/2023-12-31-js-typescript-rest/2023-12-31"},next:{title:"Building a Native IP Camera Client in React",permalink:"/docs/Development/Javascript/2023-12-24-react-query-tauri-iot-ctrl/2023-12-21"}},c={},d=[{value:"Scaffolding",id:"scaffolding",level:2},{value:"Create the Vite Frontend",id:"create-the-vite-frontend",level:3},{value:"ShadCN &amp; Tailwind",id:"shadcn--tailwind",level:3},{value:"Create the Rust Project",id:"create-the-rust-project",level:3},{value:"Tauri Bundler",id:"tauri-bundler",level:4},{value:"Linux Bundle",id:"linux-bundle",level:4},{value:"Redux Store",id:"redux-store",level:2},{value:"Hello Counter",id:"hello-counter",level:3},{value:"Async API Calls",id:"async-api-calls",level:3},{value:"RTK Query",id:"rtk-query",level:2},{value:"Connecting the Redux Store",id:"connecting-the-redux-store",level:3}];function l(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"TST, Hongkong",src:t(137836).A+"",width:"2359",height:"864"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/docs/Development/Javascript/2023-12-24-react-query-tauri-iot-ctrl/2023-12-21",children:"Related: Building a Native IP Camera Client in React"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/mpolinowski/rusty-react-query",children:"Github Repository: React-Query Elasticsearch Client"})}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#scaffolding",children:"Scaffolding"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#create-the-vite-frontend",children:"Create the Vite Frontend"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#shadcn--tailwind",children:"ShadCN & Tailwind"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#create-the-rust-project",children:"Create the Rust Project"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#tauri-bundler",children:"Tauri Bundler"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#linux-bundle",children:"Linux Bundle"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#redux-store",children:"Redux Store"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#hello-counter",children:"Hello Counter"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#async-api-calls",children:"Async API Calls"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#rtk-query",children:"RTK Query"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#connecting-the-redux-store",children:"Connecting the Redux Store"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Create ",(0,r.jsx)(n.a,{href:"https://tauri.app/v1/guides/getting-started/setup/vite",children:"Tauri app"})," using the frontend build tool Vite."]}),"\n",(0,r.jsx)(n.h2,{id:"scaffolding",children:"Scaffolding"}),"\n",(0,r.jsx)(n.h3,{id:"create-the-vite-frontend",children:"Create the Vite Frontend"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm create vite@latest rtk\n\u2714 Select a framework: \u203a React\n\u2714 Select a variant: \u203a TypeScript + SWC\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cd rtk\nnpm install\nnpm install @reduxjs/toolkit react-redux vite-tsconfig-paths tailwindcss postcss autoprefixer\nnpm install --save-dev @types/react-redux @types/node\n"})}),"\n",(0,r.jsx)(n.h3,{id:"shadcn--tailwind",children:"ShadCN & Tailwind"}),"\n",(0,r.jsx)(n.p,{children:"Making things pretty:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npx tailwindcss init -p\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"./tsconfig.json"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "compilerOptions": {\n    "baseUrl": ".",\n    "paths": {\n      "@/*": [\n        "./src/*"\n      ]\n    },\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"./vite.config.ts"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import path from \"path\"\nimport { defineConfig } from 'vite'\nimport tsconfigPaths from 'vite-tsconfig-paths'\nimport react from '@vitejs/plugin-react-swc'\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    tsconfigPaths()\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(__dirname, \"./src\"),\n    },\n  },\n})\n"})}),"\n",(0,r.jsx)(n.p,{children:"Run the shadcn-ui init command to setup your project:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npx shadcn-ui@latest init\n\n\u2714 Would you like to use TypeScript (recommended) \u203a yes\n\u2714 Which style would you like to use? \u203a New York\n\u2714 Which color would you like to use as base color? \u203a Slate\n\u2714 Where is your global CSS file? @/styles/index.css\n\u2714 Would you like to use CSS variables for colors? \u203a yes\n\u2714 Are you using a custom tailwind prefix eg. tw-? (Leave blank if not) \u2026 \n\u2714 Where is your tailwind.config.js located? \u203a tailwind.config.js\n\u2714 Configure the import alias for components: \u203a @/components\n\u2714 Configure the import alias for utils: \u203a @/utils\n\u2714 Are you using React Server Components? \u203a no\n\u2714 Write configuration to components.json. Proceed? \u203a yes\n"})}),"\n",(0,r.jsxs)(n.p,{children:["And ",(0,r.jsx)(n.a,{href:"https://ui.shadcn.com/docs/components",children:"add components"})," like:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npx shadcn-ui@latest add button card\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"./src/components/Counter.tsx"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { useState } from 'react'\n\nimport { Button } from '@/components/ui/button'\nimport {\n    Card,\n    CardContent,\n    CardDescription,\n    CardHeader,\n    CardTitle,\n  } from \"@/components/ui/card\"\n\n  export function Counter() {\n  const [count, setCount] = useState(0)\n\n  return (\n    <Card>\n        <CardHeader>\n            <CardTitle>Counter</CardTitle>\n            <CardDescription>Click the Button!</CardDescription>\n        </CardHeader>\n        <CardContent>\n                <Button onClick={() => setCount((count) => count + 1)}>\n                count is {count}\n                </Button>\n        </CardContent>\n    </Card>\n  )\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"create-the-rust-project",children:"Create the Rust Project"}),"\n",(0,r.jsxs)(n.p,{children:["Now customize ",(0,r.jsx)(n.code,{children:"vite.config.ts"})," file to get the best compatibility with Tauri:"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"./vite.config.js"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import { defineConfig } from 'vite'\nimport tsconfigPaths from 'vite-tsconfig-paths'\nimport react from '@vitejs/plugin-react-swc'\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    tsconfigPaths()\n  ],\n  // prevent vite from obscuring rust errors\n  clearScreen: false,\n  // Tauri expects a fixed port, fail if that port is not available\n  server: {\n    strictPort: true,\n  },\n  // to access the Tauri environment variables set by the CLI with information about the current target\n  envPrefix: ['VITE_', 'TAURI_PLATFORM', 'TAURI_ARCH', 'TAURI_FAMILY', 'TAURI_PLATFORM_VERSION', 'TAURI_PLATFORM_TYPE', 'TAURI_DEBUG'],\n  build: {\n    // Tauri uses Chromium on Windows and WebKit on macOS and Linux\n    target: process.env.TAURI_PLATFORM == 'windows' ? 'chrome105' : 'safari13',\n    // don't minify for debug builds\n    minify: !process.env.TAURI_DEBUG ? 'esbuild' : false,\n    // produce sourcemaps for debug builds\n    sourcemap: !!process.env.TAURI_DEBUG,\n  }\n})\n"})}),"\n",(0,r.jsx)(n.p,{children:"Add the Tauri CLI to your project:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm install --save-dev @tauri-apps/cli\n"})}),"\n",(0,r.jsx)(n.p,{children:"And add it to your npm scripts:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"./package.json"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"scripts": {\n    "dev": "vite",\n    "build": "tsc && vite build",\n    "rust": "tauri",\n    "preview": "vite preview"\n  },\n'})}),"\n",(0,r.jsx)(n.p,{children:"To scaffold a minimal Rust project that is pre-configured to use Tauri, open a terminal and run the following command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'npm run rust init\n\n\u2714 What is your app name? \xb7 rusty-react-query\n\u2714 What should the window title be? \u203a Rusty React Query\n\u2714 Where are your web assets (HTML/CSS/JS) located, relative to the "<current dir>/src-tauri/tauri.conf.json" file that will be created? \xb7 ../dist\n\u2714 What is the url of your dev server? \u203a http://localhost:5173\n\u2714 What is your frontend dev command? \xb7 npm run dev\n\u2714 What is your frontend build command? \u203a npm run build\n'})}),"\n",(0,r.jsx)(n.p,{children:"Now you can run the following command in your terminal to start a development build of your app:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm run rust dev\n"})}),"\n",(0,r.jsx)(n.h4,{id:"tauri-bundler",children:"Tauri Bundler"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.a,{href:"https://tauri.app/v1/guides/building/",children:"Tauri Bundler"})," is a Rust harness to compile your binary, package assets, and prepare a final bundle."]}),"\n",(0,r.jsx)(n.p,{children:"It will detect your operating system and build a bundle accordingly. It currently supports:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Windows: ",(0,r.jsx)(n.code,{children:"-setup.exe"}),", ",(0,r.jsx)(n.code,{children:".msi"})]}),"\n",(0,r.jsxs)(n.li,{children:["macOS: ",(0,r.jsx)(n.code,{children:".app"}),", ",(0,r.jsx)(n.code,{children:".dmg"})]}),"\n",(0,r.jsxs)(n.li,{children:["Linux: ",(0,r.jsx)(n.code,{children:".deb"}),", ",(0,r.jsx)(n.code,{children:".appimage"})]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"linux-bundle",children:"Linux Bundle"}),"\n",(0,r.jsx)(n.p,{children:"Tauri applications for Linux are distributed either with a Debian bundle (.deb file) or an AppImage (.AppImage file). The Tauri CLI automatically bundles your application code in these formats by default. Please note that .deb and .AppImage bundles can only be created on Linux as cross-compilation doesn't work yet."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"./src-tauri/tauri.conf.json"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  ...\n\n  "tauri": {\n    \n    ...\n\n    "bundle": {\n      \n      ...\n\n      "identifier": "com.instar.dev",\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm run rust build\n\n> Error You must change the bundle identifier in `tauri.conf.json > tauri > bundle > identifier`. The default value `com.tauri.dev` is not allowed as it must be unique across applications.\n"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"identifier"}),": The application identifier in reverse domain name notation (e.g. com.tauri.example). This string must be unique across applications since it is used in system configurations like the bundle ID and path to the webview data directory. This string must contain only alphanumeric characters (A\u2013Z, a\u2013z, and 0\u20139), hyphens (-), and periods (.)."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"./src-tauri/tauri.conf.json"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"bundle": {\n  ...\n  "identifier": "com.instar.dev",\n  ...\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm run rust build\n\nFinished 2 bundles at:\n  ./src-tauri/target/release/bundle/deb/rusty-react-query_0.1.0_amd64.deb\n  ./src-tauri/target/release/bundle/appimage/rusty-react-query_0.1.0_amd64.AppImage\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"chmod +x ./src-tauri/target/release/bundle/appimage/rusty-react-query_0.1.0_amd64.AppImage\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"./src-tauri/target/release/bundle/appimage/rusty-react-query_0.1.0_amd64.AppImage\n"})}),"\n",(0,r.jsx)(n.h2,{id:"redux-store",children:"Redux Store"}),"\n",(0,r.jsx)(n.h3,{id:"hello-counter",children:"Hello Counter"}),"\n",(0,r.jsx)(n.p,{children:"Start by wrapping your main app component into the Redux state provider:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"./main.tsx"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport { Provider } from 'react-redux'\nimport { store } from '@/state/store'\nimport App from '@/views/App'\nimport '@/styles/index.css'\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n  </Provider>\n)\n"})}),"\n",(0,r.jsx)(n.p,{children:"The store imported here is defined in:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"@/state/store.ts"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"import { configureStore } from '@reduxjs/toolkit'\nimport counterReducer from '@/state/counter/slice'\n\nexport const store = configureStore({\n    reducer: {\n        counter: counterReducer\n    }\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n"})}),"\n",(0,r.jsx)(n.p,{children:"Which gives us access to a slice of our state - an initial state and reducer function for a counter:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"@/state/counter/slice.ts"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'import { PayloadAction, createSlice } from "@reduxjs/toolkit"\n\nimport { CounterState } from "@/types/iGeneral"\n\nconst initialState: CounterState = {\n    value : 0\n}\n\nconst slice = createSlice({\n    name: \'counter\',\n    initialState,\n    reducers: {\n        increment: (state) => {\n            state.value += 1\n        },\n        decrement: (state) => {\n            state.value -= 1\n        },\n        incrementByAmount: (state, action: PayloadAction<{value: number}>) => {\n            state.value += action.payload.value\n        },\n        decrementByAmount: (state, action: PayloadAction<{value: number}>) => {\n            state.value -= action.payload.value\n        }\n    }\n})\n\nexport const { increment, decrement, incrementByAmount, decrementByAmount } = slice.actions\n\nexport default slice.reducer\n'})}),"\n",(0,r.jsx)(n.p,{children:"With a state store and dispatch actions in place we can now implement a counter that uses the store:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"@/components/Counter.tsx"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { useDispatch, useSelector } from 'react-redux'\nimport { Button } from \"@/components/ui/button\"\n\nimport {\n  increment,\n  decrement,\n  incrementByAmount,\n  decrementByAmount } from '@/state/counter/slice'\nimport { AppDispatch, RootState } from '@/state/store'\nimport '@/styles/App.css'\n\n\nexport default function Counter(): JSX.Element {\n  const count = useSelector((state: RootState) => state.counter.value)\n\n  const dispatch = useDispatch<AppDispatch>()\n\n  return (\n    <>\n        <h1 className='text-5xl mb-7'>Count: {count}</h1>\n        <div className='grid gap-4 grid-cols-4'>\n            <Button onClick={() => dispatch(increment())}>\n            +\n            </Button>\n            <Button onClick={() => dispatch(incrementByAmount({value: 10}))}>\n            + 10\n            </Button>\n            <Button onClick={() => dispatch(decrement())}>\n            -\n            </Button>\n            <Button onClick={() => dispatch(decrementByAmount({value: 10}))}>\n            - 10\n            </Button>\n        </div>\n    </>\n  )\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Redux Toolkit",src:t(719497).A+"",width:"1205",height:"202"})}),"\n",(0,r.jsx)(n.h3,{id:"async-api-calls",children:"Async API Calls"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:'import { PayloadAction, createAsyncThunk, createSlice } from "@reduxjs/toolkit"\n\nimport { CounterState } from "@/types/iGeneral"\n\nconst initialState: CounterState = {\n    value : 0\n}\n\nconst slice = createSlice({\n    name: \'counter\',\n    initialState,\n    reducers: {\n        increment: (state) => {\n            state.value += 1\n        },\n        decrement: (state) => {\n            state.value -= 1\n        },\n        incrementByAmount: (state, action: PayloadAction<{value: number}>) => {\n            state.value += action.payload.value\n        },\n        decrementByAmount: (state, action: PayloadAction<{value: number}>) => {\n            state.value -= action.payload.value\n        }\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(\n                incrementAsync.pending,\n                (state) => {\n                    console.log(state.value)\n            })\n            .addCase(\n                incrementAsync.fulfilled,\n                (state, action: PayloadAction<number>) => {\n                    state.value += action.payload\n            })\n    }\n})\n\n\nexport const incrementAsync = createAsyncThunk(\n    "counter/incrementAsync",\n    async (value: number) => {\n        await new Promise((resolve) => setTimeout(resolve, 1000))\n        return value\n    }\n)\n\nexport const { increment, decrement, incrementByAmount, decrementByAmount } = slice.actions\n\nexport default slice.reducer\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { useDispatch, useSelector } from 'react-redux'\nimport { Button } from \"@/components/ui/button\"\n\nimport {\n  increment,\n  decrement,\n  incrementByAmount,\n  decrementByAmount,\n  incrementAsync } from '@/state/counter/slice'\nimport { AppDispatch, RootState } from '@/state/store'\nimport '@/styles/App.css'\n\n\nexport default function Counter(): JSX.Element {\n  const count = useSelector((state: RootState) => state.counter.value)\n\n  const dispatch = useDispatch<AppDispatch>()\n\n  return (\n    <>\n        <h1 className='text-5xl mb-7'>Count: {count}</h1>\n        <div className='grid gap-4 grid-cols-5'>\n            <Button onClick={() => dispatch(increment())}>\n            +\n            </Button>\n            <Button onClick={() => dispatch(incrementAsync(99))}>\n            Increment Async +99\n            </Button>\n            <Button onClick={() => dispatch(incrementByAmount({value: 10}))}>\n            + 10\n            </Button>\n            <Button onClick={() => dispatch(decrement())}>\n            -\n            </Button>\n            <Button onClick={() => dispatch(decrementByAmount({value: 10}))}>\n            - 10\n            </Button>\n        </div>\n    </>\n  )\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Redux Toolkit",src:t(388530).A+"",width:"1329",height:"615"})}),"\n",(0,r.jsx)(n.h2,{id:"rtk-query",children:"RTK Query"}),"\n",(0,r.jsxs)(n.p,{children:["Using ",(0,r.jsx)(n.a,{href:"https://redux-toolkit.js.org/rtk-query/overview",children:"RTK Query"})," to ingest data from an API."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"./main.tsx"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import React from 'react'\nimport ReactDOM from 'react-dom/client'\n\nimport { ApiProvider } from '@reduxjs/toolkit/query/react'\n\nimport App from '@/views/App'\nimport {api} from '@/api/PokemonQuery'\nimport '@/styles/index.css'\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <ApiProvider api={api}>\n      <App />\n    </ApiProvider>\n  </React.StrictMode>\n)\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"./components/api/PokemonQuery"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { iPokemonListing, iPokemonDetailData } from '@/types/iGeneral'\n\nexport const api = createApi({\n  baseQuery: fetchBaseQuery({\n    baseUrl: `https://pokeapi.co/api/v2/`\n  }),\n  endpoints: build => ({\n    pokemonList: build.query<iPokemonListing, void>({\n      query() {\n        return {\n          url: 'pokemon',\n          params: {\n            limit: 9\n          }\n        }\n      }\n    }),\n    pokemonDetail: build.query<iPokemonDetailData, { name: string }>({\n      query({name}) {\n        return {\n          url: 'pokemon/' + name\n        }\n      }\n    })\n  })\n})\n\nexport const { usePokemonListQuery, usePokemonDetailQuery } = api\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"./src/views/App.tsx"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import React from 'react'\nimport { Button } from \"@/components/ui/button\"\n\nimport '@/styles/App.css'\nimport { PokemonList, PokemonDetails } from '../components/PokemonList'\n\nexport default function App() {\n    const [pokemon, setPokemon] = React.useState<string | undefined>(undefined);\n  \n    return (\n      <>\n        <header>\n          <h1 className='font-sans text-5xl mb-4'>My Pokedex</h1>\n        </header>\n        <main>\n          {pokemon ? (\n            <div className='grid-cols-1 space-y-4'>\n              <PokemonDetails pokemonName={pokemon} />\n              <Button className='w-80' onClick={() => setPokemon(undefined)}>back</Button>\n            </div>\n          ) : (\n            <PokemonList onPokemonSelected={setPokemon} />\n          )}\n        </main>\n      </>\n    );\n  }\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"./src/components/PokemonList.tsx"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"import { usePokemonListQuery, usePokemonDetailQuery } from '@/api/PokemonQuery'\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\"\n\nexport function PokemonList({ onPokemonSelected }: { onPokemonSelected: (name: string) => void }) {\n    const { data, isLoading, isError, isSuccess } = usePokemonListQuery()\n\n    if (isLoading) {\n      return <p>loading...</p>\n    }\n\n    if (isError) {\n      return <p>Query failed</p>\n    }\n    \n    if (isSuccess) {\n      return (\n        <Card className='mx-auto w-1/3'>\n          <CardHeader>\n            <CardTitle>Overview</CardTitle>\n            <CardDescription>Pokemons</CardDescription>\n          </CardHeader>\n          <CardContent className='grid grid-cols-3 gap-4'>\n            {data.results.map((pokemon) => (\n                <Button key={pokemon.name} onClick={() => onPokemonSelected(pokemon.name)}>\n                  {pokemon.name}\n                </Button>\n            ))}\n          </CardContent>\n        </Card>\n      )\n    }\n}\n\nexport function PokemonDetails({ pokemonName }: { pokemonName: string }) {\n  console.log('selected: ', pokemonName)\n  const { data, isLoading, isError, isSuccess } = usePokemonDetailQuery({name: pokemonName})\n\n  if (isLoading) {\n    console.log(data)\n    return <p>loading...</p>\n  }\n\n  if (isError) {\n    return <p>Query failed</p>\n  }\n  \n  if (isSuccess) {\n    console.log(data)\n    return (\n        <Card className='mx-auto w-80'>\n          <CardHeader>\n            <CardTitle>{data.name}</CardTitle>\n            <CardDescription>id: {data.id}</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <img src={data.sprites.front_default} className=\"mx-auto\" alt={data.name} />\n            <p>height: {data.height}</p>\n            <p>weight: {data.weight}</p>\n            <p>types: {data.types.map((item) => item.type.name + ' ')}</p>\n          </CardContent>\n        </Card>\n      );\n  }\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Redux Toolkit and RTK Query",src:t(472904).A+"",width:"556",height:"242"})}),"\n",(0,r.jsx)(n.h3,{id:"connecting-the-redux-store",children:"Connecting the Redux Store"}),"\n",(0,r.jsx)(n.p,{children:"Replace the API Provider with the regular Store Provider:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"./main.tsx"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import React from 'react'\nimport ReactDOM from 'react-dom/client'\n\nimport { Provider } from 'react-redux'\n\nimport App from '@/views/App'\nimport {store} from '@/redux/store'\nimport '@/styles/index.css'\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n)\n"})}),"\n",(0,r.jsx)(n.p,{children:"And use the API to update the Redux store:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"./src/redux/store.ts"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { configureStore } from '@reduxjs/toolkit'\n\nimport {api} from '@/api/PokemonQuery'\n\nexport const store = configureStore({\n    reducer: {\n      [api.reducerPath]: api.reducer,\n    },\n    middleware: (getDefaultMiddleware) =>\n      getDefaultMiddleware().concat(api.middleware),\n})\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},719497:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/Redux_Toolkit_01-a3b8c919ca38ae04623b060c62b98ee5.png"},388530:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/Redux_Toolkit_02-54ff616503bec35c3dcfe8b75da1629a.png"},472904:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/Redux_Toolkit_03-6147f99509770ad0b348c334bf0921e3.gif"},137836:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-c3aedc7eed015cc5372c21f9c394693d.jpg"},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>s});var r=t(296540);const i={},o=r.createContext(i);function a(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);