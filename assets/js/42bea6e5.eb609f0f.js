"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[34869],{418817:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var s=r(474848),t=r(28453);const o={sidebar_position:7e3,slug:"2021-01-23",title:"Node.js FTP Server",authors:"mpolinowski",tags:["LINUX","Javascript","Node"]},i=void 0,a={id:"DevOps/Provisioning/2021-01-23-nodejs-file-server/index",title:"Node.js FTP Server",description:"Shenzhen, China",source:"@site/docs/DevOps/Provisioning/2021-01-23-nodejs-file-server/index.md",sourceDirName:"DevOps/Provisioning/2021-01-23-nodejs-file-server",slug:"/DevOps/Provisioning/2021-01-23-nodejs-file-server/2021-01-23",permalink:"/docs/DevOps/Provisioning/2021-01-23-nodejs-file-server/2021-01-23",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Provisioning/2021-01-23-nodejs-file-server/index.md",tags:[{label:"LINUX",permalink:"/docs/tags/linux"},{label:"Javascript",permalink:"/docs/tags/javascript"},{label:"Node",permalink:"/docs/tags/node"}],version:"current",sidebarPosition:7e3,frontMatter:{sidebar_position:7e3,slug:"2021-01-23",title:"Node.js FTP Server",authors:"mpolinowski",tags:["LINUX","Javascript","Node"]},sidebar:"tutorialSidebar",previous:{title:"ownCloud Infinite Scale Stack",permalink:"/docs/DevOps/Provisioning/2021-01-27-owncloud-ocis/2021-01-27"},next:{title:"File Transfer Tool in Node.js",permalink:"/docs/DevOps/Provisioning/2021-01-22-file-transfer-tools-in-nodejs/2021-01-22"}},d={},l=[{value:"Setup",id:"setup",level:2},{value:"Dependencies",id:"dependencies",level:3},{value:"Environment Variables",id:"environment-variables",level:3},{value:"Server Script",id:"server-script",level:3},{value:"Run your Server",id:"run-your-server",level:2},{value:"Adding Encryption /doesn&#39;t work",id:"adding-encryption-doesnt-work",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Shenzhen, China",src:r(718199).A+"",width:"1500",height:"597"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#setup",children:"Setup"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#dependencies",children:"Dependencies"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#environment-variables",children:"Environment Variables"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#server-script",children:"Server Script"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#run-your-server",children:"Run your Server"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#adding-encryption-doesnt-work",children:"Adding Encryption /doesn't work"})}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["I want to use the ",(0,s.jsx)(n.a,{href:"https://github.com/nodeftpd/nodeftpd",children:"nodeftp"})," package to set up an FTP server for my IP camera."]}),"\n",(0,s.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,s.jsxs)(n.p,{children:["Create a folder ",(0,s.jsx)(n.code,{children:"/opt/ftpd"})," and initialize your project:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"mkdir -p /opt/ftpd/ftproot && cd /opt/ftpd\r\nnpm init\n"})}),"\n",(0,s.jsx)(n.h3,{id:"dependencies",children:"Dependencies"}),"\n",(0,s.jsx)(n.p,{children:"Then install the following dependencies:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm install dotenv\r\nnpm install fs\r\nnpm install ftpd\r\nnpm install path\n"})}),"\n",(0,s.jsx)(n.h3,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,s.jsx)(n.p,{children:"Now we need a few environment variables to define our server parameter and user authentication credentials:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"nano .env\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Add the following variables - make sure to change the host ",(0,s.jsx)(n.strong,{children:"IP"})," to the IP address of your server:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cfg",children:"IP = '192.168.2.111'\r\nPORT = 9876\r\nUSER = ftpuser\r\nPWD = password\n"})}),"\n",(0,s.jsx)(n.h3,{id:"server-script",children:"Server Script"}),"\n",(0,s.jsxs)(n.p,{children:["Now to the server itself - create a file ",(0,s.jsx)(n.code,{children:"index.js"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const ftpd = require('ftpd')\r\nconst fs = require('fs')\r\nconst path = require('path')\r\n\r\nrequire('dotenv').config()\r\n\r\nvar keyFile\r\nvar certFile\r\nvar server\r\n\r\n// use the IP and PORT from the .env file or default to localhost:21\r\nvar options = {\r\n  host: process.env.IP || '127.0.0.1',\r\n  port: process.env.PORT || 21,\r\n  tls: null,\r\n}\r\n\r\n// Check if SSL KEY / CERT are provided ELSE start without SSL support\r\nif (process.env.KEY_FILE && process.env.CERT_FILE) {\r\n  console.log('Running as FTPS server')\r\n  if (process.env.KEY_FILE.charAt(0) !== '/') {\r\n    keyFile = path.join(__dirname, process.env.KEY_FILE)\r\n  }\r\n  if (process.env.CERT_FILE.charAt(0) !== '/') {\r\n    certFile = path.join(__dirname, process.env.CERT_FILE)\r\n  }\r\n  options.tls = {\r\n    key: fs.readFileSync(keyFile),\r\n    cert: fs.readFileSync(certFile),\r\n    ca: !process.env.CA_FILES\r\n      ? null\r\n      : process.env.CA_FILES.split(':').map(function (f) {\r\n          return fs.readFileSync(f)\r\n        }),\r\n  }\r\n} else {\r\n  console.log()\r\n  console.log('###### To run as FTPS server, #####')\r\n  console.log('### set \"KEY_FILE\", \"CERT_FILE\" ###')\r\n  console.log('###### or \"CA_FILES\" env vars. ####')\r\n  console.log()\r\n}\r\n\r\n// get ftp root directory listing\r\nserver = new ftpd.FtpServer(options.host, {\r\n  getInitialCwd: function () {\r\n    return '/ftproot'\r\n  },\r\n  getRoot: function () {\r\n    return process.cwd()\r\n  },\r\n  pasvPortRangeStart: 1025,\r\n  pasvPortRangeEnd: 1050,\r\n  tlsOptions: options.tls,\r\n  allowUnauthorizedTls: true,\r\n  useWriteFile: false,\r\n  useReadFile: false,\r\n  uploadMaxSlurpSize: 7000, // N/A unless 'useWriteFile' is true.\r\n  allowedCommands: [\r\n    'XMKD',\r\n    'AUTH',\r\n    'TLS',\r\n    'SSL',\r\n    'USER',\r\n    'PASS',\r\n    'PWD',\r\n    'OPTS',\r\n    'TYPE',\r\n    'PORT',\r\n    'PASV',\r\n    'LIST',\r\n    'CWD',\r\n    'MKD',\r\n    'SIZE',\r\n    'STOR',\r\n    'MDTM',\r\n    'DELE',\r\n    'QUIT',\r\n  ],\r\n})\r\n\r\nserver.on('error', function (error) {\r\n  console.log('FTP Server error:', error)\r\n})\r\n\r\n// verify user and password from .env file\r\nserver.on('client:connected', function (connection) {\r\n  var username = null\r\n\r\n  console.log('client connected: ' + connection.remoteAddress)\r\n\r\n  connection.on('command:user', function (user, success, failure) {\r\n    if (user) {\r\n      username = process.env.USER\r\n      success()\r\n    } else {\r\n      failure()\r\n    }\r\n  })\r\n\r\n  connection.on('command:pass', function (pass, success, failure) {\r\n    if (process.env.PWD) {\r\n      success(username)\r\n    } else {\r\n      failure()\r\n    }\r\n  })\r\n})\r\n\r\nserver.debugging = 4\r\nserver.listen(options.port)\r\nconsole.log('Listening on port ' + options.port)\n"})}),"\n",(0,s.jsx)(n.h2,{id:"run-your-server",children:"Run your Server"}),"\n",(0,s.jsxs)(n.p,{children:["You can start the server with ",(0,s.jsx)(n.code,{children:"node index.js"})," or by creating an ",(0,s.jsx)(n.code,{children:"npm start"})," script and connect to your server using an FTP Client like Filezilla:"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"ftpd Nodejs FTP Server",src:r(878528).A+"",width:"999",height:"704"})}),"\n",(0,s.jsx)(n.h2,{id:"adding-encryption-doesnt-work",children:"Adding Encryption /doesn't work"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"mkdir certs && cd certs\r\nopenssl req -new -x509 -sha256 -newkey rsa:2048 -nodes -keyout key.pem -days 365 -out cert.pem\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Add the following variables - make sure to change the host ",(0,s.jsx)(n.strong,{children:"IP"})," to the IP address of your server:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cfg",children:"IP = '192.168.2.111'\r\nPORT = 9876\r\nUSER = ftpuser\r\nPWD = password\r\nCERT_FILE = './certs/cert.pem'\r\nKEY_FILE = './certs/key.pem'\n"})}),"\n",(0,s.jsx)(n.p,{children:"I am getting deprecation warnings and could not get my client to connect:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm start\r\n\r\n> node-file-server@1.0.0 start /opt/ftpd\r\n> node index.js\r\n\r\nRunning as FTPS server\r\nListening on port 9876\r\nclient connected: undefined\r\nAccepted a new client connection\r\n<::ffff:192.168.2.112> >> 220 FTP server (nodeftpd) ready\r\n<::ffff:192.168.2.112> << AUTH TLS\r\n<::ffff:192.168.2.112> FTP command: AUTH TLS\r\n<::ffff:192.168.2.112> >> 234 Honored\r\n<::ffff:192.168.2.112> Establishing secure connection...\r\n(node:44550) [DEP0064] DeprecationWarning: tls.createSecurePair() is deprecated. Please use tls.TLSSocket instead.\r\n(Use `node --trace-deprecation ...` to show where the warning was created)\r\n/opt/ftpd/node_modules/ftpd/lib/starttls.js:62\r\n    var verifyError = (pair._ssl || pair.ssl).verifyError();\r\n                                              ^\r\n\r\nTypeError: Cannot read property 'verifyError' of undefined\r\n    at SecurePair.<anonymous> (/opt/ftpd/node_modules/ftpd/lib/starttls.js:62:47)\r\n    at SecurePair.emit (events.js:315:20)\r\n    at TLSSocket.<anonymous> (tls.js:322:46)\r\n    at Object.onceWrapper (events.js:421:28)\r\n    at TLSSocket.emit (events.js:315:20)\r\n    at TLSSocket._finishInit (_tls_wrap.js:932:8)\r\n    at TLSWrap.onhandshakedone (_tls_wrap.js:149:9)\r\n    at DuplexSocket.ondata (internal/js_stream_socket.js:77:22)\r\n    at DuplexSocket.emit (events.js:315:20)\r\n    at addChunk (internal/streams/readable.js:309:12)\r\nnpm ERR! code ELIFECYCLE\r\nnpm ERR! errno 1\r\nnpm ERR! node-file-server@1.0.0 start: `node index.js`\r\nnpm ERR! Exit status 1\r\nnpm ERR!\r\nnpm ERR! Failed at the node-file-server@1.0.0 start script.\r\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     /root/.npm/_logs/2021-02-03T10_59_40_679Z-debug.log\n"})})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},878528:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/ftpd_Nodejs_FTP_Server_01-02e23e34af41ea8ff26d4aff37b96a39.png"},718199:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-91a640c918f5f3896f219eb8a3a3ead0.jpg"},28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>a});var s=r(296540);const t={},o=s.createContext(t);function i(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);