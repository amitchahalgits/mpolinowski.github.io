"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[39746],{830419:(t,e,s)=>{s.r(e),s.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>n,metadata:()=>r,toc:()=>d});var o=s(474848),i=s(28453);const n={sidebar_position:7020,slug:"2022-07-11",title:"Home Assistant - MQTT Auto-Discovery :: Automation",authors:"mpolinowski",tags:["IoT"]},a=void 0,r={id:"Automation_and_Robotics/Home_Automation/2022-07-11-home-assistant-mqtt-autodiscovery-part-ii/index",title:"Home Assistant - MQTT Auto-Discovery :: Automation",description:"Guangzhou, China",source:"@site/docs/Automation_and_Robotics/Home_Automation/2022-07-11-home-assistant-mqtt-autodiscovery-part-ii/index.md",sourceDirName:"Automation_and_Robotics/Home_Automation/2022-07-11-home-assistant-mqtt-autodiscovery-part-ii",slug:"/Automation_and_Robotics/Home_Automation/2022-07-11-home-assistant-mqtt-autodiscovery-part-ii/2022-07-11",permalink:"/docs/Automation_and_Robotics/Home_Automation/2022-07-11-home-assistant-mqtt-autodiscovery-part-ii/2022-07-11",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Automation_and_Robotics/Home_Automation/2022-07-11-home-assistant-mqtt-autodiscovery-part-ii/index.md",tags:[{label:"IoT",permalink:"/docs/tags/io-t"}],version:"current",sidebarPosition:7020,frontMatter:{sidebar_position:7020,slug:"2022-07-11",title:"Home Assistant - MQTT Auto-Discovery :: Automation",authors:"mpolinowski",tags:["IoT"]},sidebar:"tutorialSidebar",previous:{title:"Home Assistant - MQTT Auto-Discovery :: Configuration",permalink:"/docs/Automation_and_Robotics/Home_Automation/2022-07-10-home-assistant-mqtt-autodiscovery-part-i/2022-07-10"},next:{title:"Home Assistant - Python Scripts as Service",permalink:"/docs/Automation_and_Robotics/Home_Automation/2022-07-12-home-assistant-mqtt-python/2022-07-12"}},c={},d=[{value:"MQTT Autodiscovery",id:"mqtt-autodiscovery",level:2},{value:"Last Will Trigger",id:"last-will-trigger",level:3},{value:"Automation",id:"automation",level:3}];function l(t){const e={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{alt:"Guangzhou, China",src:s(115553).A+"",width:"1500",height:"516"})}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.a,{href:"#mqtt-autodiscovery",children:"MQTT Autodiscovery"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#last-will-trigger",children:"Last Will Trigger"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.a,{href:"#automation",children:"Automation"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.strong,{children:"WIP"})}),"\n",(0,o.jsx)(e.h2,{id:"mqtt-autodiscovery",children:"MQTT Autodiscovery"}),"\n",(0,o.jsxs)(e.p,{children:["The ",(0,o.jsx)(e.a,{href:"https://www.home-assistant.io/integrations/mqtt/#mqtt-discovery",children:"discovery of MQTT devices"})," will enable one to use MQTT devices with only minimal configuration effort on the side of Home Assistant. Two parts are required on the device side: The configuration topic which contains the necessary device type and unique identifier, and the remaining device configuration without the device type."]}),"\n",(0,o.jsxs)(e.p,{children:["In ",(0,o.jsx)(e.a,{href:"/docs/Automation_and_Robotics/Home_Automation/2022-07-10-home-assistant-mqtt-autodiscovery-part-i/2022-07-10",children:"Part I"}),' I looked into the configuration API and described the topic payloads needed to have Home Assistant add your camera as a new device when you connect it to the MQTT broker. Now I want to make sure that Home Assistant does not forget the device configuration if my broker "looses" those configuration topics.']}),"\n",(0,o.jsxs)(e.p,{children:["I will try to use an automation that is triggered when my camera comes ",(0,o.jsx)(e.code,{children:"alive"})," and feeds all those topics to my MQTT broker."]}),"\n",(0,o.jsx)(e.h3,{id:"last-will-trigger",children:"Last Will Trigger"}),"\n",(0,o.jsxs)(e.p,{children:["To use the automation I first need to define something that can trigger it - e.g. I can use the ",(0,o.jsx)(e.code,{children:"System Start"})," event. But a much cleaner solution is the Last-Will of my camera ",(0,o.jsx)(e.code,{children:"status/testament"})," that I configured to use the 2 strings ",(0,o.jsx)(e.code,{children:"alive"})," and ",(0,o.jsx)(e.code,{children:"dead"}),":"]}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{alt:"Home Assistant MQTT Auto-Discovery",src:s(850659).A+"",width:"909",height:"518"})}),"\n",(0,o.jsxs)(e.p,{children:["I now need to create a ",(0,o.jsx)(e.strong,{children:"MQTT Sensor"})," that reads the state of my camera's last-will:"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:'mqtt:\n  sensor:\n    - device:\n        identifiers: in9408_garden\n        manufacturer: INSTAR Deutschland GmbH\n        model: INSTAR 2k+ IN-9408 WLAN\n        name: IN-9408 2k+ Garden\n        configuration_url: "http://192.168.2.115:80"\n      availability:\n        topic: cameras/115/status/testament\n        payload_available: \'{"val":"alive"}\'\n        payload_not_available: \'{"val":"dead"}\'\n      object_id: in9408_garden_testament\n      unique_id: in9408_garden_testament\n      name: "LWT Garden"\n      state_topic: "cameras/115/status/testament"\n      value_template: "{{ value_json.val }}"\n      icon: mdi:coffin\n      qos: 1\n'})}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{alt:"Home Assistant MQTT Auto-Discovery",src:s(513800).A+"",width:"968",height:"425"})}),"\n",(0,o.jsx)(e.h3,{id:"automation",children:"Automation"}),"\n",(0,o.jsxs)(e.p,{children:["Now we can create the ",(0,o.jsx)(e.strong,{children:"Automation"})," that will publish all configuration topics for us:"]}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{alt:"Home Assistant MQTT Auto-Discovery",src:s(24017).A+"",width:"958",height:"456"})}),"\n",(0,o.jsxs)(e.p,{children:["And select the state of our camera's last-will as the ",(0,o.jsx)(e.strong,{children:"Trigger"}),":"]}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{alt:"Home Assistant MQTT Auto-Discovery",src:s(340926).A+"",width:"965",height:"679"})}),"\n",(0,o.jsxs)(e.p,{children:["As ",(0,o.jsx)(e.strong,{children:"Action"})," we select ",(0,o.jsx)(e.strong,{children:"Call Service"})," and to execute the ",(0,o.jsx)(e.a,{href:"/docs/Automation_and_Robotics/Home_Automation/2022-07-12-home-assistant-mqtt-python/2022-07-12",children:"Python Script"})," I will use the ",(0,o.jsx)(e.strong,{children:"Shell Script"})," option in HA. Start by creating a ",(0,o.jsx)(e.code,{children:"shell"})," directory inside your config path and create a shell script ",(0,o.jsx)(e.code,{children:"mqtt_autodiscover_9408_garden.sh"}),":"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"mkdir config/shell\nnano config/shell/mqtt_autodiscover_9408_garden.sh\n"})}),"\n",(0,o.jsxs)(e.p,{children:["The shell script only needs to direct the Python binary to the location you used for the ",(0,o.jsx)(e.a,{href:"/docs/Automation_and_Robotics/Home_Automation/2022-07-12-home-assistant-mqtt-python/2022-07-12",children:"Python Script"}),":"]}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.em,{children:"mqtt_autodiscover_9408_garden.sh"})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"#!/bin/bash\npython /config/python_scripts/mqtt5_client.py\n"})}),"\n",(0,o.jsxs)(e.p,{children:["To activate the ",(0,o.jsx)(e.strong,{children:"Shell Extension"})," and expose our script to HA we need to add the following lines to the ",(0,o.jsx)(e.code,{children:"configuration.yml"}),":"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-yml",children:"# Auto configure 9408 with mqtt\nshell_command:\n  mqtt_autodiscover_9408_garden: /bin/ash /config/shell//mqtt_autodiscover_9408_garden.sh\n"})}),"\n",(0,o.jsxs)(e.p,{children:["Restart HA and you should be able to find your shell script in the ",(0,o.jsx)(e.strong,{children:"Call Service"})," category:"]}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{alt:"Home Assistant MQTT Auto-Discovery",src:s(93415).A+"",width:"1068",height:"394"})}),"\n",(0,o.jsx)(e.p,{children:"You can test the automation by deleting all of the configuration topics you might already have added to your MQTT broker. Then take your camera offline. In my case the camera is also my broker - so HA will also loose the MQTT connection. After turning the camera back, after a while, you should see your script kicking into action and registering your camera:"}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{alt:"Home Assistant MQTT Auto-Discovery",src:s(190764).A+"",width:"969",height:"723"})})]})}function h(t={}){const{wrapper:e}={...(0,i.R)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(l,{...t})}):l(t)}},850659:(t,e,s)=>{s.d(e,{A:()=>o});const o=s.p+"assets/images/Home_Assistant_MQTT_Auto-Discovery_01-a4a00d4f2c816005195548b1bba080e5.png"},513800:(t,e,s)=>{s.d(e,{A:()=>o});const o=s.p+"assets/images/Home_Assistant_MQTT_Auto-Discovery_02-b2988856c100d53c4d69a25392e664bb.png"},24017:(t,e,s)=>{s.d(e,{A:()=>o});const o=s.p+"assets/images/Home_Assistant_MQTT_Auto-Discovery_03-b8a6bb93f335152355c9027963bd37fb.png"},340926:(t,e,s)=>{s.d(e,{A:()=>o});const o=s.p+"assets/images/Home_Assistant_MQTT_Auto-Discovery_04-69b8b75566e6c78c1bf02de4e9ca1c81.png"},93415:(t,e,s)=>{s.d(e,{A:()=>o});const o=s.p+"assets/images/Home_Assistant_MQTT_Auto-Discovery_05-c3cdfe3af5ad13e0275c177afd63b5bb.png"},190764:(t,e,s)=>{s.d(e,{A:()=>o});const o=s.p+"assets/images/Home_Assistant_MQTT_Auto-Discovery_06-c664349f013a9f1447e80590e12af537.png"},115553:(t,e,s)=>{s.d(e,{A:()=>o});const o=s.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-155e3666db02195caa838d2d6d5dc4bf.jpg"},28453:(t,e,s)=>{s.d(e,{R:()=>a,x:()=>r});var o=s(296540);const i={},n=o.createContext(i);function a(t){const e=o.useContext(n);return o.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function r(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:a(t.components),o.createElement(n.Provider,{value:e},t.children)}}}]);