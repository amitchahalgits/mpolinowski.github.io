"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[76799],{449341:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>t,metadata:()=>s,toc:()=>a});var i=r(785893),o=r(603905);const t={sidebar_position:5990,slug:"2022-09-29",title:"Build a Chrony NTS Client from Source",authors:"mpolinowski",tags:["LINUX","Security"],description:"Building a client from source for a time service which uses IETF RFC 8915 called \u201cNetwork Time Security\u201c (NTS)."},c=void 0,s={id:"DevOps/Linux/2022-09-29--build-an-chrony-nts-client-from-source/index",title:"Build a Chrony NTS Client from Source",description:"Building a client from source for a time service which uses IETF RFC 8915 called \u201cNetwork Time Security\u201c (NTS).",source:"@site/docs/DevOps/Linux/2022-09-29--build-an-chrony-nts-client-from-source/index.md",sourceDirName:"DevOps/Linux/2022-09-29--build-an-chrony-nts-client-from-source",slug:"/DevOps/Linux/2022-09-29--build-an-chrony-nts-client-from-source/2022-09-29",permalink:"/docs/DevOps/Linux/2022-09-29--build-an-chrony-nts-client-from-source/2022-09-29",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Linux/2022-09-29--build-an-chrony-nts-client-from-source/index.md",tags:[{label:"LINUX",permalink:"/docs/tags/linux"},{label:"Security",permalink:"/docs/tags/security"}],version:"current",sidebarPosition:5990,frontMatter:{sidebar_position:5990,slug:"2022-09-29",title:"Build a Chrony NTS Client from Source",authors:"mpolinowski",tags:["LINUX","Security"],description:"Building a client from source for a time service which uses IETF RFC 8915 called \u201cNetwork Time Security\u201c (NTS)."},sidebar:"tutorialSidebar",previous:{title:"Check the Filesystem",permalink:"/docs/DevOps/Linux/2022-11-04--check-filesystem/2022-11-04"},next:{title:"NTS-Service and Authenticated Time Synchronization",permalink:"/docs/DevOps/Linux/2022-09-28--nts-client-setup/2022-09-28"}},l={},a=[{value:"Build",id:"build",level:2},{value:"Configuration",id:"configuration",level:2}];function h(e){const n={a:"a",code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.ah)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"TST, Hong Kong",src:r(621347).Z+"",width:"1500",height:"517"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#build",children:"Build"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#configuration",children:"Configuration"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"build",children:"Build"}),"\n",(0,i.jsx)(n.p,{children:"The Chrony software is distributed as source code which has to be compiled."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git clone https://git.tuxfamily.org/chrony/chrony.git\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Git does not seem to be working atm - I ",(0,i.jsx)(n.a,{href:"https://chrony.tuxfamily.org/download.html",children:"downloaded the latest build"})," using ",(0,i.jsx)(n.code,{children:"wget"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"wget https://git.tuxfamily.org/chrony/chrony.git/snapshot/chrony-4.3.zip\r\nunzip chrony-4.3.zip\r\nrm chrony-4.3.zip && cd chrony-4.3\r\nmkdir build\n"})}),"\n",(0,i.jsx)(n.p,{children:"The following programs and libraries with their development files are needed to build chrony:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"C compiler (gcc or clang recommended)"}),"\n",(0,i.jsx)(n.li,{children:"GNU Make"}),"\n",(0,i.jsx)(n.li,{children:"Nettle, NSS, or LibTomCrypt (optional)"}),"\n",(0,i.jsx)(n.li,{children:"Editline (optional)"}),"\n",(0,i.jsx)(n.li,{children:"libcap (Linux only, optional)"}),"\n",(0,i.jsx)(n.li,{children:"libseccomp (Linux only, optional)"}),"\n",(0,i.jsx)(n.li,{children:"timepps.h header (optional)"}),"\n",(0,i.jsx)(n.li,{children:"Asciidoctor (for HTML documentation)"}),"\n",(0,i.jsx)(n.li,{children:"Bash (for testing)"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The build will use the ",(0,i.jsx)(n.code,{children:"gcc"})," compiler if not configured otherwise:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"apt install build-essential\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If development files for the ",(0,i.jsx)(n.strong,{children:"Nettle"}),", ",(0,i.jsx)(n.strong,{children:"NSS"}),", or ",(0,i.jsx)(n.strong,{children:"libtomcrypt"})," library are available, chronyd will be built with support for other cryptographic hash functions than MD5, which can be used for NTP authentication with a symmetric key. If you don\u2019t want to enable the support, specify the ",(0,i.jsx)(n.code,{children:"--disable-sechash"})," flag to configure."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"apt install libtomcrypt-dev nettle-dev\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If development files for the POSIX threads library are available, chronyd will be built with support for asynchronous resolving of hostnames specified in the server, peer, and pool directives. This allows chronyd operating as a server to respond to client requests when resolving a hostname. If you don\u2019t want to enable the support, specify the ",(0,i.jsx)(n.code,{children:"--disable-asyncdns"})," flag to configure."]}),"\n",(0,i.jsxs)(n.p,{children:["If development files for the editline or readline library are available, chronyc will be built with line editing support. If you don\u2019t want this, specify the ",(0,i.jsx)(n.code,{children:"--disable-readline"})," flag to configure."]}),"\n",(0,i.jsxs)(n.p,{children:["On Linux, if development files for the libcap library are available, chronyd will be built with support for dropping root privileges. On other systems no extra library is needed. The default user which chronyd should run as can be specified with the ",(0,i.jsx)(n.code,{children:"--with-user"})," option of the configure script."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"useradd --no-create-home chrony\n"})}),"\n",(0,i.jsx)(n.p,{children:"After unpacking the source code, change directory into it, and type:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"./configure\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This is a shell script that automatically determines the system type. There is an optional parameter ",(0,i.jsx)(n.code,{children:"--prefix"}),", which indicates the directory tree where the software should be installed:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"./configure --prefix=/home/kali/chrony/build\n"})}),"\n",(0,i.jsxs)(n.p,{children:["will install the chronyd daemon into ",(0,i.jsx)(n.code,{children:"/home/kali/chrony/build/sbin"})," and the chronyc control program into ",(0,i.jsx)(n.code,{children:"/home/kali/chrony/build/bin"}),". The default value for the prefix is ",(0,i.jsx)(n.code,{children:"/usr/local"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Bringing it all together:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"./configure --disable-sechash --disable-asyncdns --disable-readline --prefix=/home/kali/chrony/build\r\n\r\nConfiguring for  Linux-armv7l\r\nChecking for gcc : Yes\r\nChecking for hardening compiler options : Yes\r\nChecking for -fstack-protector-strong : Yes\r\nChecking for pkg-config : No\r\nChecking for 64-bit time_t : No\r\nChecking for math : No\r\nChecking for math in -lm : Yes\r\nChecking for struct in_pktinfo : Yes\r\nChecking for IPv6 support : Yes\r\nChecking for struct in6_pktinfo : No\r\nChecking for struct in6_pktinfo with _GNU_SOURCE : Yes\r\nChecking for O_NOFOLLOW flag : Yes\r\nChecking for clock_gettime() : Yes\r\nChecking for getaddrinfo() : Yes\r\nChecking for getrandom() : Yes\r\nChecking for recvmmsg() : Yes\r\nChecking for SW/HW timestamping : Yes\r\nChecking for other timestamping options : Yes\r\nChecking for <sys/timepps.h> : No\r\nChecking for <timepps.h> : No\r\nChecking for libcap : Yes\r\nChecking for <linux/rtc.h> : Yes\r\nChecking for <linux/ptp_clock.h> : Yes\r\nChecking for pthread_setschedparam() : Yes\r\nChecking for mlockall() : Yes\r\nChecking for setrlimit(RLIMIT_MEMLOCK, ...) : Yes\r\nFeatures : +CMDMON +NTP +REFCLOCK +RTC +PRIVDROP -SCFILTER -SIGND -ASYNCDNS -NTS -READLINE -SECHASH +IPV6 -DEBUG\r\nCreating Makefile\r\nCreating doc/Makefile\r\nCreating test/unit/Makefile\n"})}),"\n",(0,i.jsx)(n.p,{children:"Now we are ready to build the binaries:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"make\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"ls -la /home/kali/chrony/ | grep chrony \r\n-rwxr-xr-x 1 kali kali  418560 Oct  6 05:31 chronyc\r\n-rwxr-xr-x 1 kali kali 1160816 Oct  6 05:30 chronyd\n"})}),"\n",(0,i.jsx)(n.p,{children:"Once the programs have been successfully compiled, they need to be installed in their target locations. This step normally needs to be performed by the superuser, and requires the following command to be entered."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo make install\r\n\r\n[ -d /etc ] || mkdir -p /etc\r\n[ -d /home/kali/chrony/build/sbin ] || mkdir -p /home/kali/chrony/build/sbin\r\n[ -d /home/kali/chrony/build/bin ] || mkdir -p /home/kali/chrony/build/bin\r\n[ -d /var/lib/chrony ] || mkdir -p /var/lib/chrony\r\nif [ -f /home/kali/chrony/build/sbin/chronyd ]; then rm -f /home/kali/chrony/build/sbin/chronyd ; fi\r\nif [ -f /home/kali/chrony/build/bin/chronyc ]; then rm -f /home/kali/chrony/build/bin/chronyc ; fi\r\ncp chronyd /home/kali/chrony/build/sbin/chronyd\r\nchmod 755 /home/kali/chrony/build/sbin/chronyd\r\ncp chronyc /home/kali/chrony/build/bin/chronyc\r\nchmod 755 /home/kali/chrony/build/bin/chronyc\r\nmake -C doc install\r\nmake[1]: Entering directory '/home/kali/chrony/doc'\r\nasciidoctor  -b manpage -o chrony.conf.man.in chrony.conf.adoc\r\nmake[1]: asciidoctor: No such file or directory\r\nmake[1]: *** [Makefile:44: chrony.conf.man.in] Error 127\r\nmake[1]: Leaving directory '/home/kali/chrony/doc'\r\nmake: *** [Makefile:98: install] Error 2\n"})}),"\n",(0,i.jsx)(n.p,{children:"This will installed the binaries - but adding the man pages seems to have failed:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"tree build  \r\nbuild\r\n\u251c\u2500\u2500 bin\r\n\u2502   \u2514\u2500\u2500 chronyc\r\n\u2514\u2500\u2500 sbin\r\n    \u2514\u2500\u2500 chronyd\r\n\r\n2 directories, 2 files\n"})}),"\n",(0,i.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsxs)(n.p,{children:["Now that the software is successfully installed, the next step is to set up a configuration file. The default location of the file is ",(0,i.jsx)(n.code,{children:"/etc/chrony.conf"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Use Debian vendor zone.\r\n# pool 2.debian.pool.ntp.org iburst\r\n\r\n# This directive specify the location of the file containing ID/key pairs for\r\n# NTP authentication.\r\nkeyfile /home/kali/chrony/build/chrony.keys\r\n\r\n# This directive specify the file into which chronyd will store the rate\r\n# information.\r\ndriftfile /home/kali/chrony/build/chrony.drift\r\n\r\n# Save NTS keys and cookies.\r\nntsdumpdir /home/kali/chrony/build\r\n\r\n# Uncomment the following line to turn logging on.\r\n#log tracking measurements statistics\r\n\r\n# Log files location.\r\nlogdir /var/log/chrony\r\n\r\n# Stop bad estimates upsetting machine clock.\r\nmaxupdateskew 100.0\r\n\r\n# This directive enables kernel synchronisation (every 11 minutes) of the\r\n# real-time clock. Note that it can\u2019t be used along with the 'rtcfile' directive.\r\nrtcsync\r\n\r\n# Step the system clock instead of slewing it if the adjustment is larger than\r\n# one second, but only in the first three clock updates.\r\nmakestep 1 3\r\n\r\n# Get TAI-UTC offset and leap seconds from the system tz database.\r\n# This directive must be commented out when using time sources serving\r\n# leap-smeared time.\r\nleapsectz right/UTC\r\nserver my.server.com key 666 nts iburst\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"chown chronyd:chronyd /etc/chrony.conf\r\nmkdir /home/kali/chrony/build\r\nchown chronyd:chronyd /home/kali/chrony/build\r\nmv chronyd /home/kali/chrony/build/chronyd\n"})}),"\n",(0,i.jsx)(n.p,{children:"And add your keyfiles:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"nano /home/kali/chrony/build/chrony.keys\n"})}),"\n",(0,i.jsx)(n.p,{children:"And service file:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"nano /etc/systemd/system/chronyd.service\r\n\r\n[Unit]\r\nDescription=chrony, an NTP client/server\r\nDocumentation=man:chronyd(8) man:chronyc(1) man:chrony.conf(5)\r\nConflicts=openntpd.service ntp.service ntpsec.service\r\nWants=time-sync.target\r\nBefore=time-sync.target\r\nAfter=network.target\r\nConditionCapability=CAP_SYS_TIME\r\n\r\n[Service]\r\nType=forking\r\nPIDFile=/run/chrony/chronyd.pid\r\nEnvironmentFile=-/etc/default/chrony\r\nExecStart=/home/kali/chrony/build/chronyd $DAEMON_OPTS\r\nPrivateTmp=yes\r\nProtectHome=yes\r\nProtectSystem=full\r\nProtectControlGroups=yes\r\nProtectKernelModules=yes\r\nProtectKernelTunables=yes\r\n\r\n[Install]\r\nAlias=chronyd.service\r\nWantedBy=multi-user.target\n"})})]})}function d(e={}){const{wrapper:n}={...(0,o.ah)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},603905:(e,n,r)=>{r.d(n,{ah:()=>a});var i=r(667294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function t(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,i)}return r}function c(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?t(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):t(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,i,o=function(e,n){if(null==e)return{};var r,i,o={},t=Object.keys(e);for(i=0;i<t.length;i++)r=t[i],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(i=0;i<t.length;i++)r=t[i],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=i.createContext({}),a=function(e){var n=i.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):c(c({},n),e)),r},h={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},d=i.forwardRef((function(e,n){var r=e.components,o=e.mdxType,t=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=a(r),p=o,m=u["".concat(l,".").concat(p)]||u[p]||h[p]||t;return r?i.createElement(m,c(c({ref:n},d),{},{components:r})):i.createElement(m,c({ref:n},d))}));d.displayName="MDXCreateElement"},621347:(e,n,r)=>{r.d(n,{Z:()=>i});const i=r.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-ec671595d585b88a85b017a7908fb619.jpg"}}]);