"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[41805],{686288:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>t,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var o=r(474848),s=r(28453);const a={sidebar_position:5070,slug:"2022-01-24",title:"Getting to know the BIND9 DNS Server with Docker",authors:"mpolinowski",tags:["LINUX"]},i=void 0,c={id:"DevOps/Provisioning/2022-01-24--getting-to-know-bind9-docker/index",title:"Getting to know the BIND9 DNS Server with Docker",description:"Shenzhen, China",source:"@site/docs/DevOps/Provisioning/2022-01-24--getting-to-know-bind9-docker/index.md",sourceDirName:"DevOps/Provisioning/2022-01-24--getting-to-know-bind9-docker",slug:"/DevOps/Provisioning/2022-01-24--getting-to-know-bind9-docker/2022-01-24",permalink:"/docs/DevOps/Provisioning/2022-01-24--getting-to-know-bind9-docker/2022-01-24",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Provisioning/2022-01-24--getting-to-know-bind9-docker/index.md",tags:[{label:"LINUX",permalink:"/docs/tags/linux"}],version:"current",sidebarPosition:5070,frontMatter:{sidebar_position:5070,slug:"2022-01-24",title:"Getting to know the BIND9 DNS Server with Docker",authors:"mpolinowski",tags:["LINUX"]},sidebar:"tutorialSidebar",previous:{title:"Running a DNS Server with Docker",permalink:"/docs/DevOps/Provisioning/2022-01-25--installing-bind9-docker/2022-01-25"},next:{title:"Installing a Discourse Forum on Debian Bullseye with Docker",permalink:"/docs/DevOps/Provisioning/2022-01-23--installing-discourse-docker/2022-01-23"}},t={},l=[{value:"Test Run",id:"test-run",level:2},{value:"BIND 9 Configuration",id:"bind-9-configuration",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Shenzhen, China",src:r(825182).A+"",width:"1500",height:"671"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"#test-run",children:"Test Run"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#bind-9-configuration",children:"BIND 9 Configuration"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["BIND is open source software that implements the Domain Name System (DNS) protocols for the Internet. It is a reference implementation of those protocols, but it is also production-grade software, suitable for use in high-volume and high-reliability applications. ",(0,o.jsx)(n.a,{href:"https://www.isc.org/bind/",children:"BIND 9"})," has evolved to be a very flexible, full-featured DNS system. You can download a current version from the ",(0,o.jsx)(n.a,{href:"https://www.isc.org/download",children:"ISC website"}),". Or, install our updated ISC packages for Ubuntu, CentOS/Fedora, and the standard Debian package. I want to take a look at the ",(0,o.jsx)(n.a,{href:"https://hub.docker.com/r/internetsystemsconsortium/bind9",children:"official Docker Image"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"test-run",children:"Test Run"}),"\n",(0,o.jsxs)(n.p,{children:["Download the ",(0,o.jsx)(n.a,{href:"https://hub.docker.com/r/internetsystemsconsortium/bind9",children:"official Docker Image"})," and test run it with:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker run \\\r\n    --name=bind9 \\\r\n    --publish 53:53/udp \\\r\n    --publish 53:53/tcp \\\r\n    --publish 127.0.0.1:953:953/tcp \\\r\n    internetsystemsconsortium/bind9:9.18\n"})}),"\n",(0,o.jsx)(n.p,{children:"The container can be accessed with:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker exec -ti bind9 /bin/bash\n"})}),"\n",(0,o.jsx)(n.p,{children:"Now run the following command to check whether BIND is running:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"named -v\r\nBIND 9.18.0-2+ubuntu20.04.1+isc+1-Ubuntu (Stable Release)\n"})}),"\n",(0,o.jsx)(n.h3,{id:"bind-9-configuration",children:"BIND 9 Configuration"}),"\n",(0,o.jsxs)(n.p,{children:["All the configuration files of BIND 9 is in ",(0,o.jsx)(n.code,{children:"/etc/bind"})," and ",(0,o.jsx)(n.code,{children:"/var/cache/bind"})," directory. The main configuration files are ",(0,o.jsx)(n.code,{children:"named.conf"}),", ",(0,o.jsx)(n.code,{children:"named.conf.default-zones"}),", ",(0,o.jsx)(n.code,{children:"named.conf.local"}),", and ",(0,o.jsx)(n.code,{children:"named.conf.options"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"ls -la /etc/bind\r\n\r\n-rw-r--r-- 1 root root 2403 Jan 28 07:53 bind.keys\r\n-rw-r--r-- 1 root root  237 Jan 27 12:16 db.0\r\n-rw-r--r-- 1 root root  271 Jan 27 12:16 db.127\r\n-rw-r--r-- 1 root root  237 Jan 27 12:16 db.255\r\n-rw-r--r-- 1 root root  353 Jan 27 12:16 db.empty\r\n-rw-r--r-- 1 root root  270 Jan 27 12:16 db.local\r\n-rw-r--r-- 1 root bind  463 Jan 27 12:16 named.conf\r\n-rw-r--r-- 1 root bind  498 Jan 27 12:16 named.conf.default-zones\r\n-rw-r--r-- 1 root bind  165 Jan 27 12:16 named.conf.local\r\n-rw-r--r-- 1 root bind  846 Jan 27 12:16 named.conf.options\r\n-rw-r----- 1 bind bind  100 Jan 28 08:25 rndc.key\r\n-rw-r--r-- 1 root root 1317 Jan 27 12:16 zones.rfc1918\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"/var/cache/bind"})," directory contains all zone files. A zone file holds information about a certain domain name and its subdomains:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"nano /var/cache/bind/hello.example.com\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The zone file ",(0,o.jsx)(n.code,{children:"hello.example.com"})," defines how a domain name is resolved and what IP it is resolved to. ",(0,o.jsx)(n.code,{children:"$ORIGIN"})," defines a value for the @ symbol. Don\u2019t forget the dot(.) after example.com as it is required for the FQDN (Fully Qualified Domain Name)."]}),"\n",(0,o.jsxs)(n.p,{children:["If you don\u2019t put a FQDN in BIND zone file, then the value of ",(0,o.jsx)(n.code,{children:"$ORIGIN"})," will be appended to the name. For example, ns1 is not a FQDN. So ns1 will be ",(0,o.jsx)(n.code,{children:"ns1.example.com"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"$TTL 1d\r\n$ORIGIN example.com.\r\n\r\n@ IN  SOA   ns1 root (\r\n      1     ;Serial\r\n      1d    ;Refresh\r\n      1h    ;Retry\r\n      1w    ;Expire\r\n      1h    ;Minimum\r\n  )\r\n\r\n@      IN     A       172.17.0.2\r\n\r\n@      IN     NS      ns1\r\nns1    IN     A       172.17.0.2\r\n\r\n@       IN    NS      ns2.example.com.\r\nns2     IN    A       172.17.0.3\r\n\r\n@       IN    MX      10    mail\r\nmail    IN    A       172.17.0.4\r\nwww     IN    CNAME   example.com.\r\nftp     IN    CNAME   example.com.\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Here, ",(0,o.jsx)(n.code,{children:"example.com"})," is the domain name and ",(0,o.jsx)(n.code,{children:"hello.example.com"})," is the zone file for the domain name ",(0,o.jsx)(n.code,{children:"example.com"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["Now I have to edit ",(0,o.jsx)(n.code,{children:"/etc/bind/named.conf.local"})," to tell bind to load the data file ",(0,o.jsx)(n.code,{children:"hello.example.com"})," for the zone ",(0,o.jsx)(n.code,{children:"example.com"}),":"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"172.17.0.2"})," is the IP of the ",(0,o.jsx)(n.code,{children:"bind9"})," docker container:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"ip a\r\n\r\n13: eth0@if14: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default \r\n    link/ether 02:42:ac:11:00:02 brd ff:ff:ff:ff:ff:ff link-netnsid 0\r\n    inet 172.17.0.2/16 brd 172.17.255.255 scope global eth0\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"SOA Record"}),": nameserver authoritative for a zone example.com is ns1.example.com and admin.example.com is an email address of a person responsible for this DNS zone."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"NS Records"}),": two nameservers for the example.com zone are ns[1,2].example.com"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"MX ("})," Mail Exchange): example.com mail exachange record. Number 10 means a preference for discarding a records A \u2013 A simply means address or in other words in example.com\u2019s zone a ns1 would have an A ( address ) 192.168.0.10."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"CNAME Record"})," ( Canonical Name record ): restart the query using the canonical name instead of the original name"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Run the following command to check the configuration:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"named-checkconf\n"})}),"\n",(0,o.jsxs)(n.p,{children:["With this named-checkconf command no news is good news. If no output has been produced, your config files are ",(0,o.jsx)(n.strong,{children:"OK"}),". To check the DNS zone files we can use ",(0,o.jsx)(n.code,{children:"named-checkzone"})," command:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"named-checkzone example.com /var/cache/bind/hello.example.com\r\nzone example.com/IN: loaded serial 1\r\nOK\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"nano /etc/bind/named.conf.local\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'zone "example.com" {\r\n        type master;\r\n        file "hello.example.com";\r\n};\n'})}),"\n",(0,o.jsxs)(n.p,{children:["To restart Bind I now have to stop/start the container and reconnect. I can now use my DNS service to resolve the ",(0,o.jsx)(n.code,{children:"example.com"})," domain using ",(0,o.jsx)(n.code,{children:"dig"})," (",(0,o.jsx)(n.code,{children:"apt install dnsutils"}),"). ",(0,o.jsx)(n.code,{children:"@172.17.0.2"})," is used to tell dig to use the nameserver ",(0,o.jsx)(n.code,{children:"172.17.0.2"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"dig @172.17.0.2 hello.example.com any\r\n\r\n; <<>> DiG 9.18.0-2+ubuntu20.04.1+isc+1-Ubuntu <<>> @172.17.0.2 example.com any\r\n; (1 server found)\r\n;; global options: +cmd\r\n;; Got answer:\r\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 9397\r\n;; flags: qr aa rd ra; QUERY: 1, ANSWER: 5, AUTHORITY: 0, ADDITIONAL: 4\r\n\r\n;; OPT PSEUDOSECTION:\r\n; EDNS: version: 0, flags:; udp: 1232\r\n; COOKIE: f8ea8c503c5bc7d501000000622096e24e69af6e56bf8a80 (good)\r\n;; QUESTION SECTION:\r\n;example.com.                   IN      ANY\r\n\r\n;; ANSWER SECTION:\r\nexample.com.            86400   IN      SOA     ns1.example.com. root.example.com. 1 86400 600 259200 86400\r\nexample.com.            86400   IN      A       172.17.0.2\r\nexample.com.            86400   IN      NS      ns1.example.com.\r\nexample.com.            86400   IN      NS      ns2.example.com.\r\nexample.com.            86400   IN      MX      10 mail.example.com.\r\n\r\n;; ADDITIONAL SECTION:\r\nns1.example.com.        86400   IN      A       172.17.0.2\r\nns2.example.com.        86400   IN      A       172.17.0.3\r\nmail.example.com.       86400   IN      A       172.17.0.2\r\n\r\n;; Query time: 0 msec\r\n;; SERVER: 172.17.0.2#53(172.17.0.2) (TCP)\r\n;; WHEN: Thu Mar 03 10:22:26 UTC 2022\r\n;; MSG SIZE  rcvd: 230\n"})}),"\n",(0,o.jsxs)(n.p,{children:["I can use the server to resolve the ",(0,o.jsx)(n.code,{children:"*.example.com"})," domains using my own DNS server:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"dig @172.17.0.2 www.example.com any +noall +answer\r\nwww.example.com.        86400   IN      CNAME   example.com.\r\n\r\ndig @172.17.0.2 ftp.example.com any +noall +answer\r\nftp.example.com.        86400   IN      CNAME   example.com.\r\n\r\ndig @172.17.0.2 mail.example.com any +noall +answer\r\nmail.example.com.       86400   IN      A       172.17.0.4\r\n\r\ndig @172.17.0.2 ns1.example.com any +noall +answer\r\nns1.example.com.        86400   IN      A       172.17.0.2\r\n\r\ndig @172.17.0.2 ns2.example.com any +noall +answer\r\nns2.example.com.        86400   IN      A       172.17.0.3\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},825182:(e,n,r)=>{r.d(n,{A:()=>o});const o=r.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-bac99ee9472bf0354e396ff811a46d92.jpg"},28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>c});var o=r(296540);const s={},a=o.createContext(s);function i(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);