"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[73273],{577260:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>i,default:()=>o,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var r=t(474848),a=t(28453);const s={sidebar_position:9e3,slug:"2020-06-23",title:"Saltstack Refresh Course 2: Salt State",authors:"mpolinowski",tags:["LINUX","Salt"]},i=void 0,l={id:"DevOps/Salt/2020-06-23--saltestack-refresh-course-2-salt-state/index",title:"Saltstack Refresh Course 2: Salt State",description:"Shenzhen, China",source:"@site/docs/DevOps/Salt/2020-06-23--saltestack-refresh-course-2-salt-state/index.md",sourceDirName:"DevOps/Salt/2020-06-23--saltestack-refresh-course-2-salt-state",slug:"/DevOps/Salt/2020-06-23--saltestack-refresh-course-2-salt-state/2020-06-23",permalink:"/docs/DevOps/Salt/2020-06-23--saltestack-refresh-course-2-salt-state/2020-06-23",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Salt/2020-06-23--saltestack-refresh-course-2-salt-state/index.md",tags:[{label:"LINUX",permalink:"/docs/tags/linux"},{label:"Salt",permalink:"/docs/tags/salt"}],version:"current",sidebarPosition:9e3,frontMatter:{sidebar_position:9e3,slug:"2020-06-23",title:"Saltstack Refresh Course 2: Salt State",authors:"mpolinowski",tags:["LINUX","Salt"]},sidebar:"tutorialSidebar",previous:{title:"Saltstack Refresh Course 2: Highstate",permalink:"/docs/DevOps/Salt/2020-06-23--saltestack-refresh-course-3-highstate/2020-06-23"},next:{title:"Saltstack Refresh Course 1: Setup",permalink:"/docs/DevOps/Salt/2020-06-23--saltestack-refresh-course-1-setup/2020-06-23"}},h={},c=[{value:"Setting up a Webserver",id:"setting-up-a-webserver",level:2},{value:"Init.sls",id:"initsls",level:3},{value:"File Management",id:"file-management",level:3},{value:"Run your State",id:"run-your-state",level:3}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Shenzhen, China",src:t(390354).A+"",width:"1500",height:"520"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#setting-up-a-webserver",children:"Setting up a Webserver"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#initsls",children:"Init.sls"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#file-management",children:"File Management"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#run-your-state",children:"Run your State"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"setting-up-a-webserver",children:"Setting up a Webserver"}),"\n",(0,r.jsx)(n.p,{children:"I want to define a webserver state using a Salt state file and apply it to my minion server:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{}),(0,r.jsx)(n.th,{})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Application"}),(0,r.jsx)(n.td,{children:"Apache"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"File"}),(0,r.jsx)(n.td,{children:"/var/www/html/index.html"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Users"}),(0,r.jsx)(n.td,{children:"webadmin"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"SSH Key"}),(0,r.jsx)(n.td,{children:"For webadmin user"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"initsls",children:"Init.sls"}),"\n",(0,r.jsxs)(n.p,{children:['Every minion that with a name that starts with "salt-minion" should have the ',(0,r.jsx)(n.code,{children:"apache"})," state applied to it. We can then continue and and create said state in:"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"/srv/salt/base/apache/init.sls"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"install_apache:\r\n  pkg.installed:\r\n    - pkgs:\r\n        - apache2\r\n\r\nindex_html:\r\n  file.managed:\r\n    - name: /var/www/html/index.html\r\n    - source: salt://apache/templates/index.html\r\n    - user: www-data\r\n    - group: www-data\r\n    - mode: 644\r\n\r\napache_service:\r\n  service.running:\r\n    - name: apache2\r\n    - enable: True\n"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note"})," that the Apache package for Ubuntu is called ",(0,r.jsx)(n.code,{children:"apache2"}),". For CentOS you would have to use the package name ",(0,r.jsx)(n.code,{children:"httpd"})," instead."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"file-management",children:"File Management"}),"\n",(0,r.jsx)(n.p,{children:"This state file defines an index page that we want to use with Apache that we can now create in:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"/srv/salt/base/apache/templates/index.html"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\r\n\r\n<html lang="en">\r\n  <head>\r\n    <meta charset="utf-8" />\r\n\r\n    <title>Salty Dayz, Sailor!</title>\r\n    <meta name="description" content="Salt Apache Template" />\r\n  </head>\r\n\r\n  <body>\r\n    <h1>Salty Dayz, Sailor!</h1>\r\n  </body>\r\n</html>\n'})}),"\n",(0,r.jsx)(n.h3,{id:"run-your-state",children:"Run your State"}),"\n",(0,r.jsx)(n.p,{children:"We can now apply this state to our minion server with:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'salt \'salt-minion*\' state.sls apache\r\n\r\nsalt-minion:\r\n----------\r\n          ID: install_apache\r\n    Function: pkg.installed\r\n      Result: True\r\n     Comment: All specified packages are already installed\r\n     Started: 10:05:29.993312\r\n    Duration: 37.941 ms\r\n     Changes:\r\n----------\r\n          ID: index_html\r\n    Function: file.managed\r\n        Name: /var/www/html/index.html\r\n      Result: True\r\n     Comment: File /var/www/html/index.html updated\r\n     Started: 10:05:30.033993\r\n    Duration: 39.989 ms\r\n     Changes:\r\n              ----------\r\n              diff:\r\n                  ---\r\n                  +++\r\n                  @@ -1,4 +1,14 @@\r\n                   <!doctype html>\r\n                  +\r\n                  +<html lang="en">\r\n                  +<head>\r\n                  +  <meta charset="utf-8">\r\n                  +\r\n                  +  <title>Salty Dayz, Sailor!</title>\r\n                  +  <meta name="description" content="Salt Apache Template">\r\n                  +</head>\r\n                  +\r\n                   <body>\r\n                  -    <h1>Ubuntu Rocks.</h1>\r\n                  +  <h1>Salty Dayz, Sailor!</h1>\r\n                   </body>\r\n                  +</html>\r\n              group:\r\n                  www-data\r\n              user:\r\n                  www-data\r\n----------\r\n          ID: apache_service\r\n    Function: service.running\r\n        Name: apache2\r\n      Result: True\r\n     Comment: The service apache2 is already running\r\n     Started: 10:05:30.074597\r\n    Duration: 38.561 ms\r\n     Changes:\r\n\r\nSummary for salt-minion\r\n------------\r\nSucceeded: 3 (changed=1)\r\nFailed:    0\r\n------------\r\nTotal states run:     3\r\nTotal run time: 116.491 ms\n'})}),"\n",(0,r.jsx)(n.p,{children:"Verify that the website is online by first getting your minions IP address:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"salt 'salt-minion*' grains.get ipv4\r\n\r\nsalt-minion:\r\n    - 127.0.0.1\r\n    - 172.17.0.1\r\n    - 172.18.0.1\r\n    - 192.168.2.111\n"})}),"\n",(0,r.jsxs)(n.p,{children:["And then accessing the Apache service with your web browser ",(0,r.jsx)(n.code,{children:"http://192.168.2.111:80"}),"."]})]})}function o(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},390354:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-2215e4912b7f3d1beed1d8b83bac94aa.jpg"},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var r=t(296540);const a={},s=r.createContext(a);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);