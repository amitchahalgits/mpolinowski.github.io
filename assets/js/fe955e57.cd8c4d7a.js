"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[58724],{5773:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var s=r(474848),t=r(28453);const i={sidebar_position:5899,slug:"2023-06-12",title:"Typescript 2023",authors:"mpolinowski",tags:["Javascript","Cheating"],description:"Using Typescript 5 to consume Web Application Programming Interfaces"},a=void 0,o={id:"Development/Javascript/2023-06-12-typescript-2023/index",title:"Typescript 2023",description:"Using Typescript 5 to consume Web Application Programming Interfaces",source:"@site/docs/Development/Javascript/2023-06-12-typescript-2023/index.md",sourceDirName:"Development/Javascript/2023-06-12-typescript-2023",slug:"/Development/Javascript/2023-06-12-typescript-2023/2023-06-12",permalink:"/docs/Development/Javascript/2023-06-12-typescript-2023/2023-06-12",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Development/Javascript/2023-06-12-typescript-2023/index.md",tags:[{label:"Javascript",permalink:"/docs/tags/javascript"},{label:"Cheating",permalink:"/docs/tags/cheating"}],version:"current",sidebarPosition:5899,frontMatter:{sidebar_position:5899,slug:"2023-06-12",title:"Typescript 2023",authors:"mpolinowski",tags:["Javascript","Cheating"],description:"Using Typescript 5 to consume Web Application Programming Interfaces"},sidebar:"tutorialSidebar",previous:{title:"Typescript Design Pattern",permalink:"/docs/Development/Javascript/2023-06-12-typescript-pattern/2023-06-12"},next:{title:"Node / Express with Typescript - (Re)Introduction 2023",permalink:"/docs/Development/Javascript/2023-06-04-nodejs-typescript-sql/2023-06-04"}},l={},c=[{value:"Typescript Setup",id:"typescript-setup",level:2},{value:"TypeScript Compiler",id:"typescript-compiler",level:3},{value:"Playground",id:"playground",level:2},{value:"Functions",id:"functions",level:3},{value:"Objects",id:"objects",level:3},{value:"Arrays",id:"arrays",level:3},{value:"Tuples &amp; Enums",id:"tuples--enums",level:3},{value:"Interfaces",id:"interfaces",level:3},{value:"Classes",id:"classes",level:3},{value:"Generics",id:"generics",level:3},{value:"Type Narrowing",id:"type-narrowing",level:3},{value:"Type Predicates",id:"type-predicates",level:3},{value:"Discriminated Unions",id:"discriminated-unions",level:3},{value:"Organizing Code in ES Modules",id:"organizing-code-in-es-modules",level:3},{value:"Type Declaration Files",id:"type-declaration-files",level:3},{value:"External Libraries",id:"external-libraries",level:3}];function d(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"TST, Hongkong",src:r(318387).A+"",width:"2359",height:"864"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#typescript-setup",children:"Typescript Setup"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#typescript-compiler",children:"TypeScript Compiler"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#playground",children:"Playground"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#functions",children:"Functions"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#objects",children:"Objects"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#arrays",children:"Arrays"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#tuples--enums",children:"Tuples & Enums"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#interfaces",children:"Interfaces"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#classes",children:"Classes"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#generics",children:"Generics"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#type-narrowing",children:"Type Narrowing"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#type-predicates",children:"Type Predicates"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#discriminated-unions",children:"Discriminated Unions"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#organizing-code-in-es-modules",children:"Organizing Code in ES Modules"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#type-declaration-files",children:"Type Declaration Files"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#external-libraries",children:"External Libraries"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"typescript-setup",children:"Typescript Setup"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm init -y\nnpm install --save-dev typescript\nmkdir -p ./src && touch ./src/index.ts\necho 'console.log(\"Hello World!\")' > ./src/index.ts\n"})}),"\n",(0,s.jsx)(n.h3,{id:"typescript-compiler",children:"TypeScript Compiler"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"tsc --init\n"})}),"\n",(0,s.jsx)(n.p,{children:"``./tsconfig.json`"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "include": ["./src"],\n  "exclude": ["./node_modules", "./src/bak"],\n  "compilerOptions": {\n    /* Visit https://aka.ms/tsconfig to read more about this file */\n    /* Language and Environment */\n    "target": "es2022",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */\n    "lib": ["DOM", "ES2022"],                            /* Specify a set of bundled library declaration files that describe the target runtime environment. */\n    /* Modules */\n    "module": "ES2022",                                /* Specify what module code is generated. */\n    "sourceMap": true,                                /* Create source map files for emitted JavaScript files. */\n    "outDir": "./dist",                                   /* Specify an output folder for all emitted files. */\n    "noEmitOnError": true,                            /* Disable emitting files if any type checking errors are reported. */\n    "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables \'allowSyntheticDefaultImports\' for type compatibility. */\n    "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */\n    /* Type Checking */\n    "strict": true,                                      /* Enable all strict type-checking */\n    "skipLibCheck": true                                 /* Skip type checking all .d.ts files. */\n  }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Add the following npm scripts to your ",(0,s.jsx)(n.code,{children:"./package.json"})," file:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'"scripts": {\n    "tsc": "tsc --watch",\n    "start": "node ./dist/index.js"\n  }\n'})}),"\n",(0,s.jsx)(n.p,{children:"And execute both scripts in two separate terminals:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm run tsc\nnpm run start\n\n> typescript-2023@1.0.0 start\n> node ./src/index.js\n\nHello World!\n"})}),"\n",(0,s.jsx)(n.h2,{id:"playground",children:"Playground"}),"\n",(0,s.jsx)(n.h3,{id:"functions",children:"Functions"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const greeting = (name: string = 'World'): string => {\n    return `Hello ${name}!`\n}\n\nconsole.log(greeting())\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"function square(number: number): number {\n    return (number * number)\n}\n\nconst currency = (string: string = '$'): string => {\n    return (string)\n}\n\nconsole.log(square(16), currency('HK$'))\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// Every year that is exactly divisible by four is a leap year, except for years\n// that are exactly divisible by 100, but these centurial years are leap years if\n// they are exactly divisible by 400.\n\nfunction leapYear(year: number): boolean {\n    let isLeapYear: boolean\n\n    if (year % 4 === 0 && year % 100 !== 0 || year % 400 === 0) {\n        return isLeapYear = true\n    } else {\n        return isLeapYear = false\n    }\n}\n\nconsole.log(leapYear(2012))\nconsole.log(leapYear(2013))662607\n\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const array: (string|number)[] = ['sdfgdgsdf', 'asdfdsgdfg', 'agdfgdsfg', 'gds']\n\nconst assignment = (array: (string|number)[]): string|number  => {\n    let string!: string;\n\n    for (let seq of array) {\n        if (typeof seq !== \"number\") {\n            if(seq.length === 3){\n                string: string = seq\n            }\n        } else {\n            return seq * seq\n        }\n    }\n\n    return string\n}\n\nconst consolePrint = (array: (string|number)[]): void => {\n    console.log(assignment(array))\n}\n\nconsolePrint(array)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"objects",children:"Objects"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"let product1: {title: string, type: string[], price: number, readonly availability?: boolean} = {\n    title: 'IN-8415 2K+ WQHD',\n    type: ['indoor', 'wqhd', 'pt'],\n    price: 149.99\n}\n\nlet product2: {title: string, type: string[], price: number, readonly availability?: boolean} = {\n    title: 'IN-9420 2K+ WQHD',\n    type: ['outdoor', 'wqhd', 'ptz'],\n    price: 299.99,\n    availability: true\n}\n\nfunction printProduct(\n    product: {\n        title: string,\n        type?: string[],\n        requirements?: Requirements,\n        price: number,\n        readonly availability?: boolean,\n        shop?: string\n    }): void {\n        if (!product.availability) {\n            console.log(`ERROR :: ${product.title} not available!`)\n        } else if (!product.requirements) {\n            console.log(\n                `Camera\\n Camera Model: ${product.title}\\n Camera Type: ${product.type}\\n Camera Price: ${product.price}`\n            )\n        } else if (!product.shop) {\n            console.log(\n                `Software\\n Title: ${product.title}\\n Requirements: \\n    Operating System: ${product.requirements.os}\\n    Minimum Version: ${product.requirements.minVersion}\\n    Minimum Storage (MB): ${product.requirements.storageMb}\\n Software Price: ${product.price}`\n            )\n        } else {\n            console.log(\n                `Software\\n Title: ${product.title}\\n Requirements: \\n    Operating System: ${product.requirements.os}\\n    Minimum Version: ${product.requirements.minVersion}\\n    Minimum Storage (MB): ${product.requirements.storageMb}\\n Software Price: ${product.price}\\n Download: ${product.shop}`\n            )\n        }\n}\n\nprintProduct(product1)\n\nprintProduct(product2)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"type Requirements = {\n    os: 'Windows' | 'macOS' | 'LINUX' | 'Android' | 'iOS';\n    minVersion: number;\n    storageMb: number;\n}\n\ntype SoftwareProduct = {\n    title: string;\n    requirements: Requirements;\n    price: number;\n    readonly availability?: boolean;\n}\n\nlet product3: SoftwareProduct = {\n    title: 'InstarVision 3',\n    requirements: {\n        os: 'Windows',\n        minVersion: 8.1,\n        storageMb: 74 \n    },\n    price: 24.99,\n    availability: true\n}\n\nprintProduct(product3)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"type MobileSoftware = {\n    shop: string;\n}\n\nlet product4: SoftwareProduct & MobileSoftware = {\n    title: 'InstarVision App',\n    requirements: {\n        os: 'Android',\n        minVersion: 14,\n        storageMb: 23\n    },\n    price: 2.99,\n    availability: true,\n    shop: 'Google Play'\n}\n\nprintProduct(product4)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"arrays",children:"Arrays"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const indoorCameras: string[] = []\n\nindoorCameras.push('in-8415', 'in-8403', 'in-8401')\n\nconsole.log(indoorCameras)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"type Point = {\n    x: number;\n    y: number;\n    z: number\n}\n\nconst coords: Point[] = []\n\ncoords.push(\n    {x: 212, y: 54, z: 23},\n    {x: 324, y: 56, z: 63},\n    {x: 223, y: 76, z: 34}\n)\n\nconsole.log(coords)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const tictac: (string | number)[][] = [\n    ['X', '0', 'X'],\n    ['0', 'X', 'O'],\n    ['X', '0', 'X']\n]\n\nconsole.log(tictac)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"type Product = {\n    name: string;\n    price: number\n}\n\nconst basket: Product[] = [\n    { name: 'in-8415', price: 149.99 },\n    { name: 'in-8403', price: 129.99 },\n    { name: 'in-8401', price: 109.99 },\n]\n\nconst getTotal = (basket: Product[]): number => {\n\n    let priceArray: number[] = []\n\n    for (let order of basket) {\n        priceArray.push(order.price)\n    }\n\n    const total = priceArray.reduce((a, b) => a + b)\n    \n    return total\n}\n\nconsole.log(getTotal(basket))\n"})}),"\n",(0,s.jsx)(n.h3,{id:"tuples--enums",children:"Tuples & Enums"}),"\n",(0,s.jsx)(n.p,{children:"Tuples only exists in Typescript and are arrays of a fixed length and are ordered with specific types:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"let tuple: [string, number]\n\n// tuple = [149.99, 'in-8415'] not assignable\ntuple = ['in-8415', 149.99]\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"type ServerError = [\n    500 | 501 | 502 | 503 | 504,\n    'Internal Server Error' | 'Not Implemented' | 'Bad Gateway' | 'Service Unavailable' | 'Gateway Timeout'\n]\n    \nconst serverErrorResponse: ServerError = [503, 'Bad Gateway']\n"})}),"\n",(0,s.jsx)(n.p,{children:"Enums are a set of named constants:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const enum ServerResonse {\n    OK = 200,\n    UNAUTHORIZED = 401\n}\n\nconst makeRequest = (): void => {\n    let status = 200\n    if (status === ServerResonse.OK) {\n        console.log('INFO :: API request was successful')\n    }\n}\n\nmakeRequest()\n"})}),"\n",(0,s.jsx)(n.h3,{id:"interfaces",children:"Interfaces"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"interface AlarmEvent {\n    type: string\n    trigger: string[]\n    object?: string[]\n    readonly timestamp: string\n}\n\ninterface AlarmPush extends AlarmEvent {\n    push: (timestamp: string, type: string) => string\n}\n\nconst alarm: AlarmPush = {\n    type : 'Motion Detection',\n    trigger : ['Area1', 'Area2', 'PIR'],\n    object : ['Car','Person'],\n    timestamp : 'Monday, January 15, 2024 AM01:20:39 HKT',\n    push: (timestamp, type) => {\n        return `${timestamp} :: ${type}`\n    }\n}\n\nconst pushNotification = (event: AlarmPush): void => {\n    console.log(event.push(event.timestamp, event.type))\n}\n\npushNotification(alarm)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"classes",children:"Classes"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"interface OperatorUser {\n    username: string,\n    readonly email: string,\n    privileges: string[]\n}\n\nclass Operator implements OperatorUser {\n\n    constructor(\n        public username: string,\n        protected readonly _email: string,\n        protected _privileges: string[] = ['operator']\n    ) {}\n\n    private notify(email: string): void {\n        console.log(`INFO :: Email send to ${email}`)\n    }\n\n    alarm(): void {\n        this.notify(this.email)\n    }\n\n    get email(): string {\n        return this._email\n    }\n\n    get privileges(): string[] {\n        return this._privileges\n    }\n\n    get userPrivileges(): string {\n        return `INFO :: Active user privileges ${this._privileges}`\n    }\n\n    get nickname(): string {\n        return `INFO :: Active user nickname ${this.username}`\n    }\n\n    set nickname(newUsername: string) {\n        if (newUsername.length > 3) {\n            this.username = newUsername\n        } else {\n            console.log('ERROR :: Username must be longer than 3 characters!')\n        }\n    }\n\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Class inheritance:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"interface AdminUser extends OperatorUser {\n    isAdmin: boolean\n}\n\nclass Administrator extends Operator implements AdminUser {\n    \n    constructor(\n        username: string,\n        readonly _email: string,\n        _privileges: string[] = ['administrator'],\n        public isAdmin: boolean = true\n        ) {\n            super(username, _email, _privileges)\n        }\n    \n    addPermissions(permission: string) {\n        this.privileges.push(permission)\n    }\n\n}\n\nconst administrator = new Administrator('admin', 'admin@instar.com', ['administrator'])\n\nconsole.log('INFO :: Active user is admin: ', administrator.isAdmin)\n\nadministrator.alarm()\n\n\nconsole.log(administrator.nickname)\nadministrator.nickname = 'Mike'\nconsole.log(administrator.nickname)\n\nconsole.log(administrator.userPrivileges)\nadministrator.addPermissions('superadmin')\nconsole.log(administrator.userPrivileges)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"generics",children:"Generics"}),"\n",(0,s.jsx)(n.p,{children:"Provide a type when your generic function is being executed:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"function id<genericType>(item: genericType): genericType {\n    return item\n}\n\nconsole.log(id<string>('1337'))\nconsole.log(id<number>(1337))\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"interface Parts {\n    id: number\n    article: string\n}\n\nconst getRandomElement = <T = number>(list: T[]): T => {\n    const randIndex = Math.floor(Math.random() * list.length)\n    return list[randIndex]\n}\n\nconsole.log(getRandomElement<string>(['a','b','c','d','e']))\nconsole.log(getRandomElement<number>([0,1,2,3,4]))\nconsole.log(\n    getRandomElement<Parts>([\n        { id: 1, article: 'EF5436' },\n        { id: 2, article: 'EF3245' },\n        { id: 3, article: 'EF1245' },\n        { id: 4, article: 'EF6794' },\n        { id: 5, article: 'EF2358' },\n    ])\n)\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"interface RMA {\n    rmaid: number\n    defect: string\n}\n\nfunction merge<T,U>(prod: T, part: U) {\n    return {\n        ...prod,\n        ...part\n    }\n}\n\nlet productToRepair = merge<RMA, Parts>(\n    { 'rmaid': 456, 'defect': 'no wifi connection' },\n    { 'id': 1, article: 'EF5436'} \n)\n\nconsole.log(productToRepair)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"type-narrowing",children:"Type Narrowing"}),"\n",(0,s.jsxs)(n.p,{children:["Using a ",(0,s.jsx)(n.code,{children:"typeof"})," ",(0,s.jsx)(n.strong,{children:"Type Guard"})," to narrow down union types:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"function doMath(value: number | string): string {\n    if (typeof value === 'number') {\n        return 'INFO :: The triple value is: ' + value * 3\n    } else {\n        return 'INFO :: The triple value is: ' + Number(value) * 3\n    }\n}\n\nconsole.log(doMath(33))\nconsole.log(doMath('33'))\nconsole.log(doMath('EE'))\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Using a ",(0,s.jsx)(n.strong,{children:"Truth Guard"})," to narrow down your types:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"function registerUser(nickname: string | null, email: string| null): void {\n    if (!nickname) {\n        console.log('ERROR :: You need to add a nickname for new user!')\n    } else if (!email) {\n        console.log('ERROR :: You need to add an email for new user!')\n    } else {\n        console.log(`INFO :: User ${nickname} registered sucessfully!`)\n    }\n}\n\nregisterUser(null, null)\nregisterUser('player1', null)\nregisterUser('player1', 'player1@game.com')\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Equality"})," narrowing:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"function compareFunc (x: number | string, y: number) {\n    if (x === y) {\n        console.log('INFO :: Both variables are of type numbers!')\n    } else  {\n        console.log('INFO :: Variable x is of type string!')\n    }\n\n}\n\ncompareFunc(12, 12)\ncompareFunc('12', 12)\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"IN Operator"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"interface IEEE1394 {\n    AS5643: boolean\n}\n\ninterface USB {\n    TypeC: boolean\n}\n\nconst connector = (iface: IEEE1394 | USB ): void => {\n    if ('AS5643' in iface) {\n        console.log(`INFO :: AS5643 interfcae available: ${iface.AS5643}`)\n    } else {\n        console.log(`INFO :: TypeC interfcae available: ${iface.TypeC}`)\n    }\n}\n\nconst iface: IEEE1394 = {AS5643: true}\n\nconnector(iface)\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"instanceof"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"function prettyUTCDate(date: string | Date) {\n    if (date instanceof Date) {\n        console.log('INFO :: ', date.toUTCString())\n    } else {\n        let now = new Date(date)\n        return 'INFO :: ' + now.toUTCString() + '(from string)'\n    }\n}\n\nlet date = new Date()\n\nprettyUTCDate(date)\nconsole.log(prettyUTCDate(String(date)))\n"})}),"\n",(0,s.jsx)(n.h3,{id:"type-predicates",children:"Type Predicates"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"interface HardProduct {\n    name: string\n    type: string\n}\n\ninterface SoftProduct {\n    name: string\n    os: string\n}\n\nlet hardwareList: string[] = ['Hardware Products']\nlet softwareList: string[] = ['Software Products']\n\nfunction isSoftware(product: HardProduct | SoftProduct): product is SoftProduct {\n    return (product as SoftProduct).os !== undefined\n}\n\nfunction listProducts (product: HardProduct | SoftProduct): void {\n    if (isSoftware(product)) {\n        softwareList.push(product.name)\n        console.log(softwareList)\n    } else {\n        hardwareList.push(product.name)\n        console.log(hardwareList)\n    }\n}\n\nlet product_01: HardProduct = {\n    name: 'IN-8415',\n    type: 'Indoor Camera'\n}\n\nlistProducts(product_01)\n\nlet product_02: SoftProduct = {\n    name: 'InstarVision',\n    os: 'Windows'\n}\n\nlistProducts(product_02)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"discriminated-unions",children:"Discriminated Unions"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"interface HardKind {\n    name: string\n    __type: 'hardware'\n}\n\ninterface SoftKind {\n    name: string\n    __type: 'software'\n}\n\ntype AllProducts = SoftKind | HardKind\n\nfunction productDiscriminator(product: AllProducts) {\n    switch(product.__type) {\n        case('hardware'):\n            return 'INFO :: Hardware Product'\n        case('software'):\n            return 'INFO :: Software Product'\n        default:\n            // If we end up here something went wrong\n            const __exhaustiveCheck: never = product\n    }\n}\n\nlet mysteryProduct1: HardKind = {\n    name: 'ICB Halford 2000',\n    __type: 'hardware'\n}\n\nlet mysteryProduct2: SoftKind = {\n    name: 'Davinci Resolve Studio',\n    __type: 'software'\n}\n\nconsole.log(productDiscriminator(mysteryProduct1))\n\nconsole.log(productDiscriminator(mysteryProduct2))\n"})}),"\n",(0,s.jsx)(n.h3,{id:"organizing-code-in-es-modules",children:"Organizing Code in ES Modules"}),"\n",(0,s.jsx)(n.p,{children:"To use import/export syntax in your codebase make sure that you configure TS to generate a browser-conform output:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"./tsconfig.json"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'/* Language and Environment */\n    "target": "es2022",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */\n    "lib": ["DOM", "ES2022"],                            /* Specify a set of bundled library declaration files that describe the target runtime environment. */\n    /* Modules */\n    "module": "ES2022",                                /* Specify what module code is generated. */\n    "moduleResolution": "Node",\n'})}),"\n",(0,s.jsxs)(n.p,{children:["And add the module type to your ",(0,s.jsx)(n.code,{children:"./package.json"})," file to be able to execute the generated `js`` file inside node:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'...\n"type": "module",\n...\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Also make sure that all your module imports into the ",(0,s.jsx)(n.code,{children:"index.ts"})," file have the ",(0,s.jsx)(n.code,{children:"js"})," extension:"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"./src/modules/greeting.ts"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export const greeting = (name: string = 'World'): string => {\n    return `Hello ${name}!`\n}\n\n\n_./src/index.ts_\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'import { greeting } from "./modules/greeting.js";\n\nconsole.log(greeting())\n'})}),"\n",(0,s.jsx)(n.p,{children:"And import the generated script as type module inside your HTML file, if needed:"}),"\n",(0,s.jsx)(n.p,{children:"_./dist/index.html_s"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'...\n<script type="module" src="index.js"><\/script>\n...\n'})}),"\n",(0,s.jsx)(n.h3,{id:"type-declaration-files",children:"Type Declaration Files"}),"\n",(0,s.jsxs)(n.p,{children:["Move all type declaration and interfaces into a file ",(0,s.jsx)(n.code,{children:"types/index.d.ts"})," and import them as ",(0,s.jsx)(n.code,{children:"Types"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'import type * as Types from "./types/index";\n'})}),"\n",(0,s.jsx)(n.p,{children:"The types can now be used as:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"type AllProducts = Types.SoftKind | Types.HardKind\n"})}),"\n",(0,s.jsx)(n.h3,{id:"external-libraries",children:"External Libraries"}),"\n",(0,s.jsxs)(n.p,{children:["Axios comes with an ",(0,s.jsx)(n.code,{children:"index.d.ts"})," type declaration and can be used in Typescript directly:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm init -y\nnpm install axios\n"})}),"\n",(0,s.jsx)(n.p,{children:"An example for a JSON API we can send requests to:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'curl https://jsonplaceholder.typicode.com/users/1\n\n{\n  "id": 1,\n  "name": "Leanne Graham",\n  "username": "Bret",\n  "email": "Sincere@april.biz",\n  "address": {\n    "street": "Kulas Light",\n    "suite": "Apt. 556",\n    "city": "Gwenborough",\n    "zipcode": "92998-3874",\n    "geo": {\n      "lat": "-37.3159",\n      "lng": "81.1496"\n    }\n  },\n  "phone": "1-770-736-8031 x56442",\n  "website": "hildegard.org",\n  "company": {\n    "name": "Romaguera-Crona",\n    "catchPhrase": "Multi-layered client-server neural-net",\n    "bs": "harness real-time e-markets"\n  }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["We can add an type interface to ",(0,s.jsx)(n.code,{children:"./types/index.d.ts"})," for our Axios GET request:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export interface UserGeo {\n    lat: string\n    lng: string\n}\n\nexport interface UserAddress {\n    street: string\n    suite: string\n    city: string\n    zipcode: string\n    geo: UserGeo\n}\n\nexport interface UserCompany {\n    name: string\n    catchPhrase: string\n    bs: string\n}\n\nexport interface UserAPI {\n    id: number\n    name: string,\n    username: string,\n    email: string,\n    address: UserAddress\n    phone: string,\n    website: string,\n    company: UserCompany\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Now we can use Axios to make the request and work with the API response:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import axios from 'axios'\n\nlet apiurl: string = 'https://jsonplaceholder.typicode.com/users'\n\naxios.get<Types.UserAPI[]>(apiurl).then((res) => {\n    res.data.forEach(printUser)\n}).catch(e => {\n    return console.log('ERROR :: API GET request not successful!')\n})\n\n\nfunction printUser(user: Types.UserAPI) {\n    const userArray: string[] = []\n    userArray.push(\n        String(user.id),\n        user.name,\n        user.email\n    )\n    console.log(userArray)\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["A library that does not have types included is e.g. ",(0,s.jsx)(n.code,{children:"lodash"})," where types have to be ",(0,s.jsx)(n.a,{href:"https://github.com/DefinitelyTyped/DefinitelyTyped",children:"installed manually"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm install lodash\nnpm install --save-dev @types/lodash\n"})})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},318387:(e,n,r)=>{r.d(n,{A:()=>s});const s=r.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-c3aedc7eed015cc5372c21f9c394693d.jpg"},28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>o});var s=r(296540);const t={},i=s.createContext(t);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);