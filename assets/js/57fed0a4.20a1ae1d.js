"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[10804],{357446:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var t=r(785893),s=r(603905);const a={sidebar_position:9080,slug:"2020-12-24",title:"Tomcat 9 Cluster & Loadbalancing",authors:"mpolinowski",tags:["LINUX","Tomcat"]},o=void 0,c={id:"DevOps/Tomcat/2020-12-24-tomcat9-cluster-and-load-balancing/index",title:"Tomcat 9 Cluster & Loadbalancing",description:"Siem Reap, Cambodia",source:"@site/docs/DevOps/Tomcat/2020-12-24-tomcat9-cluster-and-load-balancing/index.md",sourceDirName:"DevOps/Tomcat/2020-12-24-tomcat9-cluster-and-load-balancing",slug:"/DevOps/Tomcat/2020-12-24-tomcat9-cluster-and-load-balancing/2020-12-24",permalink:"/docs/DevOps/Tomcat/2020-12-24-tomcat9-cluster-and-load-balancing/2020-12-24",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Tomcat/2020-12-24-tomcat9-cluster-and-load-balancing/index.md",tags:[{label:"LINUX",permalink:"/docs/tags/linux"},{label:"Tomcat",permalink:"/docs/tags/tomcat"}],version:"current",sidebarPosition:9080,frontMatter:{sidebar_position:9080,slug:"2020-12-24",title:"Tomcat 9 Cluster & Loadbalancing",authors:"mpolinowski",tags:["LINUX","Tomcat"]},sidebar:"tutorialSidebar",previous:{title:"Tomcat 10 Docker Cluster",permalink:"/docs/DevOps/Tomcat/2020-12-25-tomcat10-docker-cluster/2020-12-25"},next:{title:"Tomcat 9 Configuration",permalink:"/docs/DevOps/Tomcat/2020-12-23-tomcat9-configuration/2020-12-23"}},i={},l=[{value:"Creating Multiple Server Instances",id:"creating-multiple-server-instances",level:2},{value:"Duplicating our Server Code",id:"duplicating-our-server-code",level:3},{value:"Assigning Server Ports",id:"assigning-server-ports",level:3},{value:"Creating Startup Scripts",id:"creating-startup-scripts",level:3},{value:"Loadbalancing - Vertical Cluster",id:"loadbalancing---vertical-cluster",level:2},{value:"Setting Up NGINX",id:"setting-up-nginx",level:3}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.ah)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Siem Reap, Cambodia",src:r(515655).Z+"",width:"1500",height:"706"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#creating-multiple-server-instances",children:"Creating Multiple Server Instances"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#duplicating-our-server-code",children:"Duplicating our Server Code"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#assigning-server-ports",children:"Assigning Server Ports"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#creating-startup-scripts",children:"Creating Startup Scripts"})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#loadbalancing---vertical-cluster",children:"Loadbalancing - Vertical Cluster"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#setting-up-nginx",children:"Setting Up NGINX"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"I now want to create several instances of the Tomcat server on a single LINUX server. This is the kind of setup you would use for an microservice driven web app. For this case I will create 1:1 copies of the original server and latter add NGINX in front of it to balance out the load."}),"\n",(0,t.jsx)(n.h2,{id:"creating-multiple-server-instances",children:"Creating Multiple Server Instances"}),"\n",(0,t.jsx)(n.h3,{id:"duplicating-our-server-code",children:"Duplicating our Server Code"}),"\n",(0,t.jsxs)(n.p,{children:["Start by copying ",(0,t.jsx)(n.strong,{children:"everything but"})," the ",(0,t.jsx)(n.code,{children:"/lib"})," and ",(0,t.jsx)(n.code,{children:"/bin"})," directory from your Tomcat installation dir into 3 new folder next to the installation dir - ",(0,t.jsx)(n.code,{children:"instance1"}),", ",(0,t.jsx)(n.code,{children:"instance2"})," and ",(0,t.jsx)(n.code,{children:"instance3"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"Directories\r\n\u251c\u2500\u2500 apache-tomcat-9.0.41\r\n\u2502  \u251c\u2500\u2500 bin\r\n\u2502  \u251c\u2500\u2500 conf\r\n\u2502  \u251c\u2500\u2500 lib\r\n\u2502  \u251c\u2500\u2500 logs\r\n\u2502  \u251c\u2500\u2500 temp\r\n\u2502  \u251c\u2500\u2500 virtual-hosts\r\n\u2502  \u2502  \u251c\u2500\u2500 host1\r\n\u2502  \u2502  \u251c\u2500\u2500 host2\r\n\u2502  \u2502  \u2514\u2500\u2500 host3\r\n\u2502  \u251c\u2500\u2500 webapps\r\n\u2502  \u2502  \u251c\u2500\u2500 boilerplate\r\n\u2502  \u2502  \u251c\u2500\u2500 docs\r\n\u2502  \u2502  \u251c\u2500\u2500 examples\r\n\u2502  \u2502  \u251c\u2500\u2500 host-manager\r\n\u2502  \u2502  \u251c\u2500\u2500 manager\r\n\u2502  \u2502  \u2514\u2500\u2500 ROOT\r\n\u2502  \u2514\u2500\u2500 work\r\n\u251c\u2500\u2500 instance1\r\n\u2502  \u251c\u2500\u2500 conf\r\n\u2502  \u251c\u2500\u2500 logs\r\n\u2502  \u251c\u2500\u2500 temp\r\n\u2502  \u251c\u2500\u2500 virtual-hosts\r\n\u2502  \u2502  \u251c\u2500\u2500 host1\r\n\u2502  \u2502  \u251c\u2500\u2500 host2\r\n\u2502  \u2502  \u2514\u2500\u2500 host3\r\n\u2502  \u251c\u2500\u2500 webapps\r\n\u2502  \u2502  \u251c\u2500\u2500 boilerplate\r\n\u2502  \u2502  \u251c\u2500\u2500 docs\r\n\u2502  \u2502  \u251c\u2500\u2500 examples\r\n\u2502  \u2502  \u251c\u2500\u2500 host-manager\r\n\u2502  \u2502  \u251c\u2500\u2500 manager\r\n\u2502  \u2502  \u2514\u2500\u2500 ROOT\r\n\u2502  \u2514\u2500\u2500 work\r\n\u251c\u2500\u2500 instance2\r\n\u2502  \u251c\u2500\u2500 conf\r\n\u2502  \u251c\u2500\u2500 logs\r\n\u2502  \u251c\u2500\u2500 temp\r\n\u2502  \u251c\u2500\u2500 virtual-hosts\r\n\u2502  \u2502  \u251c\u2500\u2500 host1\r\n\u2502  \u2502  \u251c\u2500\u2500 host2\r\n\u2502  \u2502  \u2514\u2500\u2500 host3\r\n\u2502  \u251c\u2500\u2500 webapps\r\n\u2502  \u2502  \u251c\u2500\u2500 boilerplate\r\n\u2502  \u2502  \u251c\u2500\u2500 docs\r\n\u2502  \u2502  \u251c\u2500\u2500 examples\r\n\u2502  \u2502  \u251c\u2500\u2500 host-manager\r\n\u2502  \u2502  \u251c\u2500\u2500 manager\r\n\u2502  \u2502  \u2514\u2500\u2500 ROOT\r\n\u2502  \u2514\u2500\u2500 work\r\n\u251c\u2500\u2500 instance3\r\n\u2502  \u251c\u2500\u2500 conf\r\n\u2502  \u251c\u2500\u2500 logs\r\n\u2502  \u251c\u2500\u2500 temp\r\n\u2502  \u251c\u2500\u2500 virtual-hosts\r\n\u2502  \u2502  \u251c\u2500\u2500 host1\r\n\u2502  \u2502  \u251c\u2500\u2500 host2\r\n\u2502  \u2502  \u2514\u2500\u2500 host3\r\n\u2502  \u251c\u2500\u2500 webapps\r\n\u2502  \u2502  \u251c\u2500\u2500 boilerplate\r\n\u2502  \u2502  \u251c\u2500\u2500 docs\r\n\u2502  \u2502  \u251c\u2500\u2500 examples\r\n\u2502  \u2502  \u251c\u2500\u2500 host-manager\r\n\u2502  \u2502  \u251c\u2500\u2500 manager\r\n\u2502  \u2502  \u2514\u2500\u2500 ROOT\r\n\u2502  \u2514\u2500\u2500 work\n"})}),"\n",(0,t.jsx)(n.h3,{id:"assigning-server-ports",children:"Assigning Server Ports"}),"\n",(0,t.jsxs)(n.p,{children:["Now we need to give each instance a unique set of ports to operate on. This can be set inside the ",(0,t.jsx)(n.code,{children:"./conf/server.xml"})," of each instance, e.g. ",(0,t.jsx)(n.code,{children:"nano /opt/tomcat/instance1/conf/server.xml"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:'<Server port="8105" shutdown="SHUTDOWN">\r\n\r\n...\r\n\r\n<Connector port="8180" protocol="HTTP/1.1" connectionTimeout="20000" />\r\n\r\n...\r\n\r\n\x3c!-- <Connector protocol="org.apache.coyote.http11.Http11NioProtocol"\r\n               port="8443" maxThreads="200"\r\n               scheme="https" secure="true" SSLEnabled="true"\r\n               keystoreFile="/opt/tomcat/ssl/sslKey.jks" keystorePass="instar"\r\n               clientAuth="false" sslProtocol="TLS"/> --\x3e\r\n\r\n...\r\n\r\n<Connector protocol="AJP/1.3" port="8109" />\n'})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"I am removing the self-signed certificate as I am going to use NGINX later to handle my CA certificate."}),"\n"]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Instance"}),(0,t.jsx)(n.th,{children:"Shutdown Port"}),(0,t.jsx)(n.th,{children:"HTTP Port"}),(0,t.jsx)(n.th,{children:"AJP Port"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Base"}),(0,t.jsx)(n.td,{children:"8005"}),(0,t.jsx)(n.td,{children:"8080"}),(0,t.jsx)(n.td,{children:"8009"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Instance1"}),(0,t.jsx)(n.td,{children:"8105"}),(0,t.jsx)(n.td,{children:"8180"}),(0,t.jsx)(n.td,{children:"8109"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Instance2"}),(0,t.jsx)(n.td,{children:"8205"}),(0,t.jsx)(n.td,{children:"8280"}),(0,t.jsx)(n.td,{children:"8209"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Instance3"}),(0,t.jsx)(n.td,{children:"8305"}),(0,t.jsx)(n.td,{children:"8380"}),(0,t.jsx)(n.td,{children:"8309"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"creating-startup-scripts",children:"Creating Startup Scripts"}),"\n",(0,t.jsxs)(n.p,{children:["Now we need a new ",(0,t.jsx)(n.code,{children:"scripts"})," folder inside the tomcat directory to create startup and stop scripts for our new instances - ",(0,t.jsx)(n.code,{children:"mkdir /opt/tomcat/scripts"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"nano /opt/tomcat/scripts/start-instance1.sh\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\r\n\r\nexport CATALINA_HOME="/opt/tomcat/latest"\r\nexport CATALINA_BASE="/opt/tomcat/instance1"\r\n\r\ncd $CATALINA_HOME/bin\r\n./startup.sh\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"nano /opt/tomcat/scripts/stop-instance1.sh\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\r\n\r\nexport CATALINA_HOME="/opt/tomcat/latest"\r\nexport CATALINA_BASE="/opt/tomcat/instance1"\r\n\r\ncd $CATALINA_HOME/bin\r\n./shutdown.sh\n'})}),"\n",(0,t.jsx)(n.p,{children:"Create both scripts for all your instances:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"scripts\r\n\u251c\u2500\u2500 start-instance1.sh\r\n\u251c\u2500\u2500 start-instance2.sh\r\n\u251c\u2500\u2500 start-instance3.sh\r\n\u251c\u2500\u2500 stop-instance1.sh\r\n\u251c\u2500\u2500 stop-instance2.sh\r\n\u2514\u2500\u2500 stop-instance3.sh\n"})}),"\n",(0,t.jsxs)(n.p,{children:["And make those scripts executable with ",(0,t.jsx)(n.code,{children:"chmod -R 755 /opt/tomcat/scripts"}),". You can now start all instances by running each startup script like:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"/opt/tomcat/scripts/start-instance1.sh\r\n\r\nUsing CATALINA_BASE:   /opt/tomcat/instance1\r\nUsing CATALINA_HOME:   /opt/tomcat/latest\r\nUsing CATALINA_TMPDIR: /opt/tomcat/instance1/temp\r\nUsing JRE_HOME:        /usr\r\nUsing CLASSPATH:       /opt/tomcat/latest/bin/bootstrap.jar:/opt/tomcat/latest/bin/tomcat-juli.jar\r\nUsing CATALINA_OPTS:\r\nTomcat started.\n"})}),"\n",(0,t.jsxs)(n.p,{children:["After making sure that the ports you specified for those 3 instances: ",(0,t.jsx)(n.code,{children:"ufw allow 8180/tcp"}),", ",(0,t.jsx)(n.code,{children:"ufw allow 8280/tcp"}),", ",(0,t.jsx)(n.code,{children:"ufw allow 8380/tcp"})," - try accessing the 4 different versions of the virtual host we created earlier with your browser:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"http://virtual-host1.com:8180/\r\nhttp://virtual-host1.com:8280/\r\nhttp://virtual-host1.com:8380/\n"})}),"\n",(0,t.jsx)(n.h2,{id:"loadbalancing---vertical-cluster",children:"Loadbalancing - Vertical Cluster"}),"\n",(0,t.jsx)(n.p,{children:"I now have 3 virtual hosts (instances) that I can target by a unique port:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Port 8180 -> Instance 1"}),"\n",(0,t.jsx)(n.li,{children:"Port 8280 -> Instance 2"}),"\n",(0,t.jsx)(n.li,{children:"Port 8380 -> Instance 3"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Each of them hosts 3 web applications that will respond to one of the following addresses:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"virtual-host1.com"}),"\n",(0,t.jsx)(n.li,{children:"virtual-host2.com"}),"\n",(0,t.jsx)(n.li,{children:"virtual-host3.com"}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Before I only added these addresses to the PC I am working on. I now also have to add them to ",(0,t.jsx)(n.code,{children:"/etc/hosts"})," on my LINUX server and resolve them to ",(0,t.jsx)(n.code,{children:"127.0.0.1"}),". Verify that you can reach your virtual host before proceeding:"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'curl virtual-host1.com:8180\r\n\r\n<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\r\n<html>\r\n<head>\r\n<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">\r\n<title>Tomcat Boilerplate</title>\r\n</head>\r\n<body>\r\n\r\n<h1>Hello from Virtual Host 1</h1>\r\n<h3>Virtual Host Address: http://virtual-host1.com:8180/</h3>\r\n</body>\r\n</html>#\n'})}),"\n",(0,t.jsx)(n.h3,{id:"setting-up-nginx",children:"Setting Up NGINX"}),"\n",(0,t.jsxs)(n.p,{children:["I am going to use the ",(0,t.jsx)(n.a,{href:"http://nginx.org/en/docs/http/ngx_http_upstream_module.html",children:"NGINX Upstream Module"})," to set up a Round-Robin traffic balancing for the 3 virtual hosts that we just created:"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"NGINX Loadbalancer",src:r(4521).Z+"",width:"751",height:"768"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cfg",children:"server {\r\n    listen 80;\r\n    listen [::]:80;\r\n\r\n    server_name virtual-host1.com virtual-host2.com virtual-host3.com;\r\n\r\n    return 301 https://$server_name$request_uri;\r\n}\r\n\r\n\r\nupstream tc1_servlets {\r\n    server virtual-host1.com:8180;\r\n    server virtual-host1.com:8280;\r\n    server virtual-host1.com:8380;\r\n}\r\n\r\nserver {\r\n    listen      443 ssl http2;\r\n    listen      [::]:443 ssl http2;\r\n    include     conf.d/self-signed.conf;\r\n    include     conf.d/ssl-params.conf;\r\n    include     conf.d/header.conf;\r\n\r\n    server_name virtual-host1.com;\r\n\r\n    location = / {\r\n        proxy_pass http://tc1_servlets;\r\n    }\r\n\r\n    error_page  404              /404.html;\r\n    error_page  500 502 503 504  /50x.html;\r\n    location = /50x.html {\r\n        root   /usr/share/nginx/html;\r\n    }\r\n}\r\n\r\n\r\nupstream tc2_servlets {\r\n    server virtual-host2.com:8180;\r\n    server virtual-host2.com:8280;\r\n    server virtual-host2.com:8380;\r\n}\r\n\r\nserver {\r\n    listen      443 ssl http2;\r\n    listen      [::]:443 ssl http2;\r\n    include     conf.d/self-signed.conf;\r\n    include     conf.d/ssl-params.conf;\r\n    include     conf.d/header.conf;\r\n\r\n    server_name virtual-host2.com;\r\n\r\n    location = / {\r\n        proxy_pass http://tc2_servlets;\r\n    }\r\n\r\n    error_page  404              /404.html;\r\n    error_page  500 502 503 504  /50x.html;\r\n    location = /50x.html {\r\n        root   /usr/share/nginx/html;\r\n    }\r\n}\r\n\r\n\r\nupstream tc3_servlets {\r\n    server virtual-host3.com:8180;\r\n    server virtual-host3.com:8280;\r\n    server virtual-host3.com:8380;\r\n}\r\n\r\nserver {\r\n    listen      443 ssl http2;\r\n    listen      [::]:443 ssl http2;\r\n    include     conf.d/self-signed.conf;\r\n    include     conf.d/ssl-params.conf;\r\n    include     conf.d/header.conf;\r\n\r\n    server_name virtual-host3.com;\r\n\r\n    location = / {\r\n        proxy_pass http://tc3_servlets;\r\n    }\r\n\r\n    error_page  404              /404.html;\r\n    error_page  500 502 503 504  /50x.html;\r\n    location = /50x.html {\r\n        root   /usr/share/nginx/html;\r\n    }\r\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.ah)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},603905:(e,n,r)=>{r.d(n,{ah:()=>l});var t=r(667294);function s(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){s(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,s=function(e,n){if(null==e)return{};var r,t,s={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(s[r]=e[r]);return s}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var i=t.createContext({}),l=function(e){var n=t.useContext(i),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},h=t.forwardRef((function(e,n){var r=e.components,s=e.mdxType,a=e.originalType,i=e.parentName,h=c(e,["components","mdxType","originalType","parentName"]),p=l(r),u=s,m=p["".concat(i,".").concat(u)]||p[u]||d[u]||a;return r?t.createElement(m,o(o({ref:n},h),{},{components:r})):t.createElement(m,o({ref:n},h))}));h.displayName="MDXCreateElement"},4521:(e,n,r)=>{r.d(n,{Z:()=>t});const t=r.p+"assets/images/NGINX_Loadbalancer_01-4cbb51c6b0ab080065e73e289bba2091.png"},515655:(e,n,r)=>{r.d(n,{Z:()=>t});const t=r.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-dbec03b1535301c8b293ac3087af0dd4.jpg"}}]);