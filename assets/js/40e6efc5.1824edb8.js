"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[65975],{823955:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=s(474848),t=s(28453);const i={sidebar_position:7e3,slug:"2021-08-25",title:"Hashicorp Vault - Logging",authors:"mpolinowski",tags:["Vault","Linux"]},a=void 0,l={id:"DevOps/Hashicorp/2021-08-25--hashicorp-vault-logging/index",title:"Hashicorp Vault - Logging",description:"Shenzhen, China",source:"@site/docs/DevOps/Hashicorp/2021-08-25--hashicorp-vault-logging/index.md",sourceDirName:"DevOps/Hashicorp/2021-08-25--hashicorp-vault-logging",slug:"/DevOps/Hashicorp/2021-08-25--hashicorp-vault-logging/2021-08-25",permalink:"/docs/DevOps/Hashicorp/2021-08-25--hashicorp-vault-logging/2021-08-25",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DevOps/Hashicorp/2021-08-25--hashicorp-vault-logging/index.md",tags:[{label:"Vault",permalink:"/docs/tags/vault"},{label:"Linux",permalink:"/docs/tags/linux"}],version:"current",sidebarPosition:7e3,frontMatter:{sidebar_position:7e3,slug:"2021-08-25",title:"Hashicorp Vault - Logging",authors:"mpolinowski",tags:["Vault","Linux"]},sidebar:"tutorialSidebar",previous:{title:"Hashicorp Terraform - Setup",permalink:"/docs/DevOps/Hashicorp/2021-09-05--hashicorp-terraform-setup/2021-09-05"},next:{title:"Hashicorp Vault - Rest API",permalink:"/docs/DevOps/Hashicorp/2021-08-23--hashicorp-vault-rest-api/2021-08-23"}},o={},c=[{value:"Configure Logging",id:"configure-logging",level:2},{value:"Override",id:"override",level:3},{value:"Verify",id:"verify",level:3},{value:"Log Auditing",id:"log-auditing",level:2},{value:"Log Backup",id:"log-backup",level:3},{value:"Testing",id:"testing",level:4},{value:"Setting up Auto-Sync",id:"setting-up-auto-sync",level:3},{value:"Debugging",id:"debugging",level:4}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Shenzhen, China",src:s(785969).A+"",width:"1500",height:"344"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#configure-logging",children:"Configure Logging"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#override",children:"Override"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#verify",children:"Verify"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#log-auditing",children:"Log Auditing"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#log-backup",children:"Log Backup"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#testing",children:"Testing"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#setting-up-auto-sync",children:"Setting up Auto-Sync"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#debugging",children:"Debugging"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"configure-logging",children:"Configure Logging"}),"\n",(0,r.jsxs)(n.p,{children:["Define the desired ",(0,r.jsx)(n.code,{children:"log_level"})," (",(0,r.jsx)(n.strong,{children:"Trace"}),", ",(0,r.jsx)(n.strong,{children:"Debug"}),", ",(0,r.jsx)(n.strong,{children:"Info"}),", ",(0,r.jsx)(n.strong,{children:"Warn"})," or ",(0,r.jsx)(n.strong,{children:"Error"}),") in your Vault server config:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"nano /etc/vault.d/config.hcl\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'storage "consul" {\r\n    address = "192.168.2.110:8500"\r\n    path = "vault/"\r\n}\r\nlistener "tcp" {\r\n    address = "192.168.2.110:8200"\r\n    tls_disable = 1\r\n}\r\napi_addr = "http://192.168.2.110:8200"\r\ncluster_addr = "https://192.168.2.110:8201"\r\nlog_level = "Debug"\r\nui = true\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"service vault restart\r\nservice vault status\n"})}),"\n",(0,r.jsx)(n.h3,{id:"override",children:"Override"}),"\n",(0,r.jsx)(n.p,{children:"You can set an environment variable to override the log level set in the Vault config - either add it to your bash config or export it directly so it only remains active for the running session:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"export VAULT_LOG_LEVEL=trace\n"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["So far I have been using the Vault UI to unseal Vault after every system reboot. To do it with the CLI run the command ",(0,r.jsx)(n.code,{children:"vault operator unseal"})," three times with three different operator keys."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"verify",children:"Verify"}),"\n",(0,r.jsxs)(n.p,{children:["I can verify that logging is enabled by following along with ",(0,r.jsx)(n.code,{children:"journalctl"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo journalctl -f -b --no-pager -u vault\r\n\r\n-- Logs begin at Sat 2021-09-18 09:32:14 HKT. --\r\nSep 18 12:15:06 consul-master vault[20295]: 2021-09-18T12:15:06.177+0800 [DEBUG] identity: groups collected: num_existing=0\r\nSep 18 12:15:06 consul-master vault[20295]: 2021-09-18T12:15:06.177+0800 [INFO]  identity: groups restored\r\nSep 18 12:15:06 consul-master vault[20295]: 2021-09-18T12:15:06.177+0800 [DEBUG] expiration: leases collected: num_existing=5\r\nSep 18 12:15:06 consul-master vault[20295]: 2021-09-18T12:15:06.180+0800 [INFO]  expiration: lease restore complete\r\nSep 18 12:15:06 consul-master vault[20295]: 2021-09-18T12:15:06.180+0800 [DEBUG] core: request forwarding setup function\r\nSep 18 12:15:06 consul-master vault[20295]: 2021-09-18T12:15:06.180+0800 [DEBUG] core: clearing forwarding clients\r\nSep 18 12:15:06 consul-master vault[20295]: 2021-09-18T12:15:06.180+0800 [DEBUG] core: done clearing forwarding clients\r\nSep 18 12:15:06 consul-master vault[20295]: 2021-09-18T12:15:06.180+0800 [DEBUG] core: leaving request forwarding setup function\r\nSep 18 12:15:06 consul-master vault[20295]: 2021-09-18T12:15:06.181+0800 [INFO]  core: usage gauge collection is disabled\r\nSep 18 12:15:06 consul-master vault[20295]: 2021-09-18T12:15:06.182+0800 [INFO]  core: post-unseal setup complete\n"})}),"\n",(0,r.jsx)(n.h2,{id:"log-auditing",children:"Log Auditing"}),"\n",(0,r.jsx)(n.p,{children:"To collect those logs on a separate server I can enable the Vault audit function:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo mkdir /var/log/vault\r\nvault audit enable file file_path=/var/log/vault/audit.log\r\nSuccess! Enabled the file audit device at: file/\n"})}),"\n",(0,r.jsx)(n.p,{children:"Verify that the log file is being written to:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cat /var/log/vault/audit.log | jq\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\r\n  "time": "2021-09-18T05:02:41.431179781Z",\r\n  "type": "request",\r\n  "auth": {\r\n    "token_type": "default"\r\n  },\r\n  "request": {\r\n    "id": "fe5f6943-0a7b-4a21-05f3-5c5bb47e94e3",\r\n    "operation": "update",\r\n    "namespace": {\r\n      "id": "root"\r\n    },\r\n    "path": "sys/audit/test"\r\n  }\r\n}\r\n{\r\n  "time": "2021-09-18T05:02:41.447768489Z",\r\n  "type": "response",\r\n  "auth": {\r\n    "client_token": "hmac-sha256:b4ff29e865438f90b797f4cad389faf79c6a8093fc61f5b0f300b9568afa1524",\r\n    "accessor": "hmac-sha256:79961a93a15a45e8e6b556f67c3003b9eebc809b52d4f1d2364394c3651b2c79",\r\n    "display_name": "root",\r\n    "policies": [\r\n      "root"\r\n    ],\r\n    "token_policies": [\r\n      "root"\r\n    ],\r\n    "token_type": "service",\r\n    "token_issue_time": "2021-09-12T19:18:36+08:00"\r\n  },\r\n  "request": {\r\n    "id": "d4590f68-9598-f870-39cd-ba3e42ed6a02",\r\n    "operation": "update",\r\n    "mount_type": "system",\r\n    "client_token": "hmac-sha256:b4ff29e865438f90b797f4cad389faf79c6a8093fc61f5b0f300b9568afa1524",\r\n    "client_token_accessor": "hmac-sha256:79961a93a15a45e8e6b556f67c3003b9eebc809b52d4f1d2364394c3651b2c79",\r\n    "namespace": {\r\n      "id": "root"\r\n    },\r\n    "path": "sys/audit/file",\r\n    "data": {\r\n      "description": "hmac-sha256:d3a21d3083e102f9231bf9946addf6bbf3ae4611e46b88d81698cb6f322dc3df",\r\n      "local": false,\r\n      "options": {\r\n        "file_path": "hmac-sha256:c3ca67685459c365d181c445c3203c314b0d33150b71f94261f1a13cd4abbbca"\r\n      },\r\n      "type": "hmac-sha256:a8f9437a7116d5b9d0ba1ebb1ad9e836337bf24d4eccff441e49475c41c3c702"\r\n    },\r\n    "remote_address": "192.168.2.110"\r\n  },\r\n  "response": {\r\n    "mount_type": "system"\r\n  }\r\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Now I could use ",(0,r.jsx)(n.a,{href:"/docs/DevOps/Elasticsearch/2021-03-21-logstash-digesting-data/2021-03-21",children:"Logstash"})," or ",(0,r.jsx)(n.a,{href:"/docs/DevOps/Elasticsearch/2021-03-30-elasticsearch7-and-filebeats/2021-03-30",children:"Elastic Filebeat"})," to consume the logfile. Or just copy it to another server to be ingested on demand."]}),"\n",(0,r.jsx)(n.h3,{id:"log-backup",children:"Log Backup"}),"\n",(0,r.jsxs)(n.p,{children:["I will need an SSH keypair to be able to setup ",(0,r.jsx)(n.code,{children:"rsync"})," to synchronize the logfile on my ",(0,r.jsx)(n.strong,{children:"Vault Server"})," (",(0,r.jsx)(n.code,{children:"192.168.2.110"}),") with an identical file on the ",(0,r.jsx)(n.strong,{children:"Logging Server"})," (",(0,r.jsx)(n.code,{children:"192.168.2.111"}),"):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo ssh-keygen\r\n\r\nGenerating public/private rsa key pair.\r\nEnter file in which to save the key (/root/.ssh/id_rsa):\r\nEnter passphrase (empty for no passphrase):\r\nEnter same passphrase again:\r\nYour identification has been saved in /root/.ssh/id_rsa.\r\nYour public key has been saved in /root/.ssh/id_rsa.pub.\n"})}),"\n",(0,r.jsx)(n.p,{children:"And copy the content of the public key:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cat ~/.ssh/id_rsa.pub\r\n\r\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC7+KtKrz1OcGqfR6yCf/iWMkyva7cJNEEWF8axAZPQ4Y0p1A1dgkk2Tj2WZ5yskcGB8p7f2k1fCrelTnIOCemeVoxEZJcYmWvFyzt30Ih0XzGJWa3LuCWOxbyB5lALlwRhWKMxzeAGPeDQwsBgo5U3M3vS3mZ400fhodg56+P7/VM2GGxQIY4QWkqNZeb1xbkymYWpfnUiqa867kZoGslGAU8sGpODxSjCccsAXV70OtaYA2eNHXkjkznWxFs9SjeESyEApKn0WwTkF38iSuCvdLl1VpjXqrV7tr5nZhB4IShLTpjJgpOT2QTQICDDB4lu9LB4BUwR6E+k9ijpjU7cCflOnz89t7UZExFM1b8zhF1do4/6zvNJECvGoNZq5W105BNEXrN8m9HcU4IUzIvRq4FISLt+5wCJnnN8cQ4Atkj97Xc3qeBRT+2z8bv5oDCheA8rfjxFC5Nw+RwEELMHgVH8tkFUcmKoid3ZhBNs+CgQs01aA+Zm0phvrdc2AsU= myuser@consul-master\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Into the authorized keys on the ",(0,r.jsx)(n.strong,{children:"Logging Server"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"nano ~/.ssh/authorized_keys\r\nchmod 700 ~/.ssh\r\nchmod 644 ~/.ssh/authorized_keys\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Or us ",(0,r.jsx)(n.code,{children:"ssh_copy"})," to add your users public key:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'sudo ssh-copy-id root@192.168.2.111\r\n/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/root/.ssh/id_rsa.pub"\r\n/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed\r\n/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys\r\nroot@192.168.2.111\'s password:\r\n\r\nNumber of key(s) added: 1\r\n\r\nNow try logging into the machine, with:   "ssh \'root@192.168.2.111\'"\r\nand check to make sure that only the key(s) you wanted were added.\n'})}),"\n",(0,r.jsxs)(n.p,{children:["And uncomment the line ",(0,r.jsx)(n.code,{children:"PubkeyAuthentication yes"})," in the:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"nano /etc/ssh/sshd_config\r\nsystemctl restart sshd\n"})}),"\n",(0,r.jsx)(n.h4,{id:"testing",children:"Testing"}),"\n",(0,r.jsxs)(n.p,{children:["To test the connection I can simply run ",(0,r.jsx)(n.code,{children:"ssh root@192.168.2.111"})," and this now logs me in to my logging server without asking for a password. But when testing ",(0,r.jsx)(n.code,{children:"rsync"})," by creating a file ",(0,r.jsx)(n.code,{children:"test.txt"})," on the Vault server I ran into 2 error messages:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"sudo rsync -a ~/test.txt root@192.168.2.111:/opt/test.txt\r\nzsh:1: command not found: rsync\r\nrsync: connection unexpectedly closed (0 bytes received so far) [sender]\r\nrsync error: error in rsync protocol data stream (code 12) at io.c(226) [sender=3.1.3]\n"})}),"\n",(0,r.jsxs)(n.p,{children:["For the ",(0,r.jsx)(n.code,{children:"rsync"})," Error I checked ",(0,r.jsx)(n.code,{children:"rsync --version"})," on my logging server and saw that the software was not installed:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"apt-get install rsync\r\n\r\nrsync --version\r\nrsync  version 3.2.3  protocol version 31\n"})}),"\n",(0,r.jsx)(n.p,{children:"Re-running the test now was successful:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo rsync -a ~/test.txt root@192.168.2.111:/opt/test.txt\n"})}),"\n",(0,r.jsx)(n.p,{children:"And the text file appeared on my logging server:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cat /opt/test.txt\r\nhello\n"})}),"\n",(0,r.jsx)(n.h3,{id:"setting-up-auto-sync",children:"Setting up Auto-Sync"}),"\n",(0,r.jsxs)(n.p,{children:["To use ",(0,r.jsx)(n.code,{children:"rsync"})," to update the logfile on our logging server whenever Vault adds a line to it we can use ",(0,r.jsx)(n.code,{children:"incron"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"apt install incron\r\nservice incrond start\r\nservice incrond status\n"})}),"\n",(0,r.jsx)(n.p,{children:"And configure it:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo nano /etc/incron.allow\n"})}),"\n",(0,r.jsx)(n.p,{children:"Using incrontab commands you can list (-l), edit (-e), and remove (-r) incrontab entries:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"incrontab -l"}),"\n",(0,r.jsx)(n.li,{children:"incrontab -e"}),"\n",(0,r.jsx)(n.li,{children:"incrontab -r"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["And add the user you are going to use - in my case just ",(0,r.jsx)(n.code,{children:"root"}),". Now I can create the ",(0,r.jsx)(n.code,{children:"crontab"})," for the watch task:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo incrontab -e\n"})}),"\n",(0,r.jsx)(n.p,{children:"Syntax:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"<path>  <mask>  <command>\n"})}),"\n",(0,r.jsx)(n.p,{children:"Here:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"path"})," is absolute path of the directory to watch."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"mask"})," is event mask(in symbolic or numerical form)."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Event Symbols (Masks):"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"IN_ACCESS"}),": File was accessed (read)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"IN_ATTRIB"}),": Metadata changed (permissions, timestamps, extended attributes, etc.)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"IN_CLOSE_WRITE"}),": File opened for writing was closed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"IN_CLOSE_NOWRITE"}),": File not opened for writing was closed."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"IN_CREATE"}),": File/directory created in watched directory."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"IN_DELETE"}),": File/directory deleted from watched directory."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"IN_DELETE_SELF"}),": Watched file/directory was itself deleted."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"IN_MODIFY"}),": File was modified."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"IN_MOVE_SELF"}),": Watched file/directory was itself moved."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"IN_MOVED_FROM"}),": File moved out of watched directory."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"IN_MOVED_TO"}),": File moved into watched directory."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"IN_OPEN"}),": File was opened."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"command"})," is executable file (or script) with its arguments."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The following wildcards may be used inside the command specification.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"$$"})," Prints a dollar sign"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"$@"})," Add the watched filesystem path"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"$#"})," Add the event-related file name"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"$%"})," Add the event flags (textually)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"$&"})," Add the event flags (numerically)"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"/var/log/vault/audit.log        IN_MODIFY       rsync -a /var/log/vault/audit.log root@192.168.2.111:/opt/vault/audit.log\n"})}),"\n",(0,r.jsx)(n.p,{children:"Make sure the job was saved:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo incrontab -l\r\n/var/log/vault/audit.log        IN_MODIFY       rsync -a /var/log/vault/audit.log root@192.168.2.111:/opt/vault/audit.log\n"})}),"\n",(0,r.jsx)(n.h4,{id:"debugging",children:"Debugging"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"It works... I just had a typo in my cron job... I keep the debugging section below ~ it lead me to the issue."})}),"\n",(0,r.jsx)(n.p,{children:"This did not work at first. So I checked the configuration file:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cat /etc/incron.conf\n"})}),"\n",(0,r.jsx)(n.p,{children:"The allowed users were set correctly:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cfg",children:"# Parameter:   allowed_users\r\n# Meaning:     allowed users list file\r\n# Description: This file contains users allowed to use incron.\r\n# Default:     /etc/incron.allow\n"})}),"\n",(0,r.jsxs)(n.p,{children:["I read that you have to create an empty file with your user name as file name in ",(0,r.jsx)(n.code,{children:"/etc/incron/allow"})," but this seems to be happening automatically when you added your username to ",(0,r.jsx)(n.code,{children:"/etc/incron.allow"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Then I re-checked the service status:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"service incrond status\r\n\r\nSep 18 16:28:13 consul-master systemd[1]: Starting Inotify System Scheduler...\r\nSep 18 16:28:13 consul-master incrond[64272]: loading system tables\r\nSep 18 16:28:13 consul-master systemd[1]: Started Inotify System Scheduler.\r\nSep 18 16:28:13 consul-master incrond[64272]: loading user tables\r\nSep 18 16:28:13 consul-master incrond[64272]: loading table for user root\r\nSep 18 16:28:13 consul-master incrond[64272]: access denied on /var/log/vault_audit.log - events will be discarded silently\r\nSep 18 16:28:13 consul-master incrond[64272]: cannot create watch for user root: (2) No such file or directory\r\nSep 18 16:28:13 consul-master incrond[64272]: ready to process filesystem events\n"})}),"\n",(0,r.jsxs)(n.p,{children:["And saw that the access to ",(0,r.jsx)(n.code,{children:"/var/log/vault_audit.log"})," was denied. I made sure that the root user had access to this file and even set it to ",(0,r.jsx)(n.code,{children:"mode 777"})," - no chance."]}),"\n",(0,r.jsxs)(n.p,{children:["So I created a second job for the ",(0,r.jsx)(n.code,{children:"test.txt"})," file from earlier ",(0,r.jsx)(n.code,{children:"sudo incrontab -e"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"/home/myuser/test.txt   IN_MODIFY    rsync -a /home/myuser/test.txt root@192.168.2.111:/opt/test.txt\n"})}),"\n",(0,r.jsxs)(n.p,{children:["After restarting the service ",(0,r.jsx)(n.code,{children:"service incrond restart"})," I was able to edit this file and see the changes in ",(0,r.jsx)(n.code,{children:"/opt/test.txt"})," on my logging server - so it is working after all."]}),"\n",(0,r.jsx)(n.p,{children:"So I decided to change the log folder for Vault:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"vault audit disable file\r\nSuccess! Disabled audit device (if it was enabled) at: file/\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"mkdir /opt/vault\r\nvault audit enable file file_path=/opt/vault/audit.log\r\nSuccess! Enabled the file audit device at: file/\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo incrontab -l\r\n/opt/vault/audit.log        IN_MODIFY       sudo rsync -a /opt/vault/audit.log root@192.168.2.111:/opt/vault/audit.log\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},785969:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-d0a359bd3026ecf28cc169f54ea98351.jpg"},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var r=s(296540);const t={},i=r.createContext(t);function a(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);