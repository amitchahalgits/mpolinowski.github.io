"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[75671],{836879:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>d});var a=r(785893),i=r(603905);const t={sidebar_position:4650,slug:"2023-02-23",title:"Tensorflow 2 - Neural Network Regression",authors:"mpolinowski",tags:["Python","Machine Learning","Tensorflow"],description:"Building a Regression Model and Improving it's Performance"},o="Tensorflow Neural Network Regression",s={id:"IoT-and-Machine-Learning/ML/2023-02-23-tensorflow-neural-network-regression/index",title:"Tensorflow 2 - Neural Network Regression",description:"Building a Regression Model and Improving it's Performance",source:"@site/docs/IoT-and-Machine-Learning/ML/2023-02-23-tensorflow-neural-network-regression/index.md",sourceDirName:"IoT-and-Machine-Learning/ML/2023-02-23-tensorflow-neural-network-regression",slug:"/IoT-and-Machine-Learning/ML/2023-02-23-tensorflow-neural-network-regression/2023-02-23",permalink:"/docs/IoT-and-Machine-Learning/ML/2023-02-23-tensorflow-neural-network-regression/2023-02-23",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IoT-and-Machine-Learning/ML/2023-02-23-tensorflow-neural-network-regression/index.md",tags:[{label:"Python",permalink:"/docs/tags/python"},{label:"Machine Learning",permalink:"/docs/tags/machine-learning"},{label:"Tensorflow",permalink:"/docs/tags/tensorflow"}],version:"current",sidebarPosition:4650,frontMatter:{sidebar_position:4650,slug:"2023-02-23",title:"Tensorflow 2 - Neural Network Regression",authors:"mpolinowski",tags:["Python","Machine Learning","Tensorflow"],description:"Building a Regression Model and Improving it's Performance"},sidebar:"tutorialSidebar",previous:{title:"Tensorflow 2 - Neural Network Regression",permalink:"/docs/IoT-and-Machine-Learning/ML/2023-02-24-tensorflow-neural-network-regression-evaluation/2023-02-24"},next:{title:"Tensorflow 2 - An (Re)Introduction 2023 (3)",permalink:"/docs/IoT-and-Machine-Learning/ML/2023-02-22-tensorflow-tensors-3/2023-02-22"}},l={},d=[{value:"Create a Dataset",id:"create-a-dataset",level:2},{value:"Input and Output Shapes",id:"input-and-output-shapes",level:2},{value:"Building the Model",id:"building-the-model",level:2},{value:"Making Predictions",id:"making-predictions",level:3},{value:"Improving the Model",id:"improving-the-model",level:2},{value:"Making Predictions",id:"making-predictions-1",level:3}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.ah)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Mong Kok, Hong Kong",src:r(694298).Z+"",width:"2830",height:"1272"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"#tensorflow-neural-network-regression",children:"Tensorflow Neural Network Regression"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#create-a-dataset",children:"Create a Dataset"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#input-and-output-shapes",children:"Input and Output Shapes"})}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"#building-the-model",children:"Building the Model"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#making-predictions",children:"Making Predictions"})}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"#improving-the-model",children:"Improving the Model"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"#making-predictions-1",children:"Making Predictions"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://github.com/mpolinowski/tf-2023",children:"Github Repository"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.em,{children:"See also:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Fun, fun, tensors: ",(0,a.jsx)(n.a,{href:"/docs/IoT-and-Machine-Learning/ML/2023-02-19-tensorflow-introduction/2023-02-19",children:"Tensor Constants, Variables and Attributes"}),", ",(0,a.jsx)(n.a,{href:"/docs/IoT-and-Machine-Learning/ML/2023-02-21-tensorflow-tensors-2/2023-02-21",children:"Tensor Indexing, Expanding and Manipulations"}),", ",(0,a.jsx)(n.a,{href:"/docs/IoT-and-Machine-Learning/ML/2023-02-22-tensorflow-tensors-3/2023-02-22",children:"Matrix multiplications, Squeeze, One-hot and Numpy"})]}),"\n",(0,a.jsxs)(n.li,{children:["Tensorflow 2 - Neural Network Regression: ",(0,a.jsx)(n.a,{href:"/docs/IoT-and-Machine-Learning/ML/2023-02-23-tensorflow-neural-network-regression/2023-02-23",children:"Building a Regression Model"}),", ",(0,a.jsx)(n.a,{href:"/docs/IoT-and-Machine-Learning/ML/2023-02-24-tensorflow-neural-network-regression-evaluation/2023-02-24",children:"Model Evaluation"}),", ",(0,a.jsx)(n.a,{href:"/docs/IoT-and-Machine-Learning/ML/2023-02-25-tensorflow-neural-network-regression-experiments/2023-02-25",children:"Model Optimization"}),", ",(0,a.jsx)(n.a,{href:"/docs/IoT-and-Machine-Learning/ML/2023-02-26-tensorflow-neural-network-regression-real-dataset/2023-02-26",children:'Working with a "Real" Dataset'}),", ",(0,a.jsx)(n.a,{href:"/docs/IoT-and-Machine-Learning/ML/2023-02-26-tensorflow-neural-network-regression-data-preprocessing/2023-02-26",children:"Feature Scaling"})]}),"\n",(0,a.jsxs)(n.li,{children:["Tensorflow 2 - Neural Network Classification: ",(0,a.jsx)(n.a,{href:"/docs/IoT-and-Machine-Learning/ML/2023-02-27-tensorflow-neural-network-classification/2023-02-27",children:"Non-linear Data and Activation Functions"}),", ",(0,a.jsx)(n.a,{href:"/docs/IoT-and-Machine-Learning/ML/2023-02-28-tensorflow-neural-network-classification-model-evaluation/2023-02-28",children:"Model Evaluation and Performance Improvement"}),", ",(0,a.jsx)(n.a,{href:"/docs/IoT-and-Machine-Learning/ML/2023-03-02-tensorflow-neural-network-multi-classification/2023-03-02",children:"Multiclass Classification Problems"})]}),"\n",(0,a.jsxs)(n.li,{children:["Tensorflow 2 - Convolutional Neural Networks: ",(0,a.jsx)(n.a,{href:"/docs/IoT-and-Machine-Learning/ML/2023-03-03-tensorflow-convolutional-neural-network-binary-classifications/2023-03-03",children:"Binary Image Classification"}),", ",(0,a.jsx)(n.a,{href:"/docs/IoT-and-Machine-Learning/ML/2023-03-05-tensorflow-convolutional-neural-network-multiclass-classifications/2023-03-05",children:"Multiclass Image Classification"})]}),"\n",(0,a.jsxs)(n.li,{children:["Tensorflow 2 - Transfer Learning: ",(0,a.jsx)(n.a,{href:"/docs/IoT-and-Machine-Learning/ML/2023-03-06-tensorflow-transfer-learning-feature-extraction/2023-03-06",children:"Feature Extraction"}),", ",(0,a.jsx)(n.a,{href:"/docs/IoT-and-Machine-Learning/ML/2023-03-11-tensorflow-transfer-learning-fine-tuning/2023-03-11",children:"Fine-Tuning"}),", ",(0,a.jsx)(n.a,{href:"/docs/IoT-and-Machine-Learning/ML/2023-03-16-tensorflow-transfer-learning-scaling/2023-03-16",children:"Scaling"})]}),"\n",(0,a.jsxs)(n.li,{children:["Tensorflow 2 - Unsupervised Learning: ",(0,a.jsx)(n.a,{href:"/docs/IoT-and-Machine-Learning/ML/2023-03-24-tensorflow-unsupervised-learning-autoencoders/2023-03-24",children:"Autoencoder Feature Detection"}),", ",(0,a.jsx)(n.a,{href:"/docs/IoT-and-Machine-Learning/ML/2023-03-26-tensorflow-unsupervised-learning-autoencoders-super-resolution/2023-03-26",children:"Autoencoder Super-Resolution"}),", ",(0,a.jsx)(n.a,{href:"/docs/IoT-and-Machine-Learning/ML/2023-03-26-tensorflow-unsupervised-learning-generative-adversial-networks/2023-03-26",children:"Generative Adverserial Networks"})]}),"\n"]}),"\n",(0,a.jsx)(n.h1,{id:"tensorflow-neural-network-regression",children:"Tensorflow Neural Network Regression"}),"\n",(0,a.jsx)(n.p,{children:"Using Tensorflow to predict a numerical variable based on other combination of variables."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"import tensorflow as tf\n# print(tf.__version__)\n# 2.11.0\nfrom tensorflow.keras import Sequential, layers, optimizers\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"import numpy as np\nimport matplotlib.pyplot as plt\n"})}),"\n",(0,a.jsx)(n.h2,{id:"create-a-dataset",children:"Create a Dataset"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"## create features\nX = np.array([-140., -110., -80., -50., -20., 10., 40., 70., 100., 130., 160., 190., 220., 250,])\n## create labels\ny = np.array([1., 4., 7., 10., 13., 16., 19., 22., 25., 28., 31., 34., 37., 40,])\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"## visualize dataset\nplt.scatter(X, y)\nplt.show\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Tensorflow Neural Network Regression",src:r(611832).Z+"",width:"543",height:"413"})}),"\n",(0,a.jsx)(n.h2,{id:"input-and-output-shapes",children:"Input and Output Shapes"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"# create tensors from np arrays\nX = tf.cast(tf.constant(X), dtype=tf.float32)\ny = tf.cast(tf.constant(y), dtype=tf.float32)\n\n# test shape\ninput_shape = X.shape\noutput_shape = y.shape\ninput_shape, output_shape\n## (TensorShape([8]), TensorShape([8]))\n"})}),"\n",(0,a.jsx)(n.h2,{id:"building-the-model",children:"Building the Model"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'# set random seed\ntf.random.set_seed(42)\n\n# build a sequential model with Keras\nmodel = Sequential([\n    layers.Dense(1)\n])\n\n# compile the model\nmodel.compile(\n    loss="mae",\n    optimizer="sgd",\n    metrics=["mae"])\n\n# model training\n## error message: "Input 0 of layer "dense_3" is incompatible with the layer: expected min_ndim=2, found ndim=1. Full shape received: (None,)"\n# => needed to expand input shape\nmodel.fit(tf.expand_dims(X, axis=-1), y, epochs=99)\n## Epoch 99/99\n## 1/1 [==============================] - 0s 4ms/step - loss: 14.8669 - mae: 14.8669\n'})}),"\n",(0,a.jsx)(n.h3,{id:"making-predictions",children:"Making Predictions"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"model.predict([70.])\n# a X value of 100 would correspond to a y value of 25.0\n# with an mae: 17.4613 we can expect to be around 17.5 points of with our prediction:\n## array([[29.203451]], dtype=float32)\n# we get 29.2 instead of the expected 25.0\n"})}),"\n",(0,a.jsx)(n.h2,{id:"improving-the-model",children:"Improving the Model"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Creation"}),": add more layers / change activation function / prevent overfitting with dropouts"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Compilation"}),": change optimization function / adjusting the learning rate"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Fitting"}),": add more epochs / add more data / training-testing split validation"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"# train / test split\nX_Split = np.array_split(X,2)\nX_train = tf.cast(tf.constant(X_Split[0]), dtype=tf.float32)\nx_test = tf.cast(tf.constant(X_Split[1]), dtype=tf.float32)\n\nY_Split = np.array_split(y,2)\nY_train = tf.cast(tf.constant(Y_Split[0]), dtype=tf.float32)\ny_test = tf.cast(tf.constant(Y_Split[1]), dtype=tf.float32)\n\nX_train.shape, x_test.shape\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'# set random seed\ntf.random.set_seed(42)\n\n# build a sequential model with Keras\nmodel_improved = Sequential([\n    layers.Dense(128, activation="relu"),\n    layers.Dense(128, activation="relu"),\n    layers.Dropout(.2),\n    layers.Dense(64, activation="relu"),\n    layers.Dense(1)\n])\n\n# compile the model\nmodel_improved.compile(\n    loss="mae",\n    optimizer=optimizers.Adam(learning_rate=0.01),\n    metrics=["mae"])\n\n# model training\nmodel_improved.fit(tf.expand_dims(X_train, axis=-1), Y_Split, validation_data=(x_test, y_test), epochs=99)\n# Epoch 99/99\n# 1/1 [==============================] - 0s 27ms/step - loss: 4.0467 - mae: 4.0467 - val_loss: 2.8862 - val_mae: 2.8862\n'})}),"\n",(0,a.jsx)(n.h3,{id:"making-predictions-1",children:"Making Predictions"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"model_improved.predict([160.])\n# expected y=31 for X value of 160 and got:\n## array([[28.041351]], dtype=float32)\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.ah)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},603905:(e,n,r)=>{r.d(n,{ah:()=>d});var a=r(667294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function t(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?t(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):t(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,a,i=function(e,n){if(null==e)return{};var r,a,i={},t=Object.keys(e);for(a=0;a<t.length;a++)r=t[a],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(a=0;a<t.length;a++)r=t[a],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=a.createContext({}),d=function(e){var n=a.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},h=a.forwardRef((function(e,n){var r=e.components,i=e.mdxType,t=e.originalType,l=e.parentName,h=s(e,["components","mdxType","originalType","parentName"]),p=d(r),u=i,f=p["".concat(l,".").concat(u)]||p[u]||c[u]||t;return r?a.createElement(f,o(o({ref:n},h),{},{components:r})):a.createElement(f,o({ref:n},h))}));h.displayName="MDXCreateElement"},611832:(e,n,r)=>{r.d(n,{Z:()=>a});const a=r.p+"assets/images/01a_Tensorflow_Regressions_01-4f2f97075ffa23e79537e07c5f0d6194.png"},694298:(e,n,r)=>{r.d(n,{Z:()=>a});const a=r.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-f80e63ee872dae25129198058ac93b4e.jpg"}}]);