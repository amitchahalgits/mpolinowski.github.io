"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[83465],{904323:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=s(785893),t=s(603905);const a={sidebar_position:5889,slug:"2023-12-31",title:"Typescript for Web APIs",authors:"mpolinowski",tags:["Javascript","Cheating"],description:"Using Typescript 5 to consume Web Application Programming Interfaces"},o=void 0,i={id:"Development/Javascript/2023-12-31-js-typescript-rest/index",title:"Typescript for Web APIs",description:"Using Typescript 5 to consume Web Application Programming Interfaces",source:"@site/docs/Development/Javascript/2023-12-31-js-typescript-rest/index.md",sourceDirName:"Development/Javascript/2023-12-31-js-typescript-rest",slug:"/Development/Javascript/2023-12-31-js-typescript-rest/2023-12-31",permalink:"/docs/Development/Javascript/2023-12-31-js-typescript-rest/2023-12-31",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Development/Javascript/2023-12-31-js-typescript-rest/index.md",tags:[{label:"Javascript",permalink:"/docs/tags/javascript"},{label:"Cheating",permalink:"/docs/tags/cheating"}],version:"current",sidebarPosition:5889,frontMatter:{sidebar_position:5889,slug:"2023-12-31",title:"Typescript for Web APIs",authors:"mpolinowski",tags:["Javascript","Cheating"],description:"Using Typescript 5 to consume Web Application Programming Interfaces"},sidebar:"tutorialSidebar",previous:{title:"Javascript",permalink:"/docs/category/javascript"},next:{title:"React Query AsyncState Management",permalink:"/docs/Development/Javascript/2023-12-19-react-query-typescript/2023-12-19"}},l={},c=[{value:"Typescript Setup",id:"typescript-setup",level:2},{value:"Typescript Basics",id:"typescript-basics",level:2},{value:"Typescript Data Type Annotation",id:"typescript-data-type-annotation",level:3},{value:"Boolean",id:"boolean",level:4},{value:"Number",id:"number",level:4},{value:"String",id:"string",level:4},{value:"Array",id:"array",level:4},{value:"Tuple",id:"tuple",level:4},{value:"Enums",id:"enums",level:4},{value:"Any",id:"any",level:4},{value:"Void",id:"void",level:4},{value:"Null",id:"null",level:4},{value:"Never",id:"never",level:4},{value:"Unknown",id:"unknown",level:4},{value:"Type Assertion",id:"type-assertion",level:3},{value:"Type Casting",id:"type-casting",level:3},{value:"Interfaces",id:"interfaces",level:3},{value:"Namespaces",id:"namespaces",level:3},{value:"Fetch API",id:"fetch-api",level:2},{value:"Mock Web API",id:"mock-web-api",level:3},{value:"Fetch Request",id:"fetch-request",level:3},{value:"Query Parameter",id:"query-parameter",level:4},{value:"Posting Data",id:"posting-data",level:4},{value:"Authorization Header",id:"authorization-header",level:4},{value:"UPDATE :: Auto-fetch Auth-Token",id:"update--auto-fetch-auth-token",level:4},{value:"Using Local Storage",id:"using-local-storage",level:3},{value:"Pagination for API Responses",id:"pagination-for-api-responses",level:3}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.ah)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"TST, Hongkong",src:s(592945).Z+"",width:"2359",height:"864"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#typescript-setup",children:"Typescript Setup"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#typescript-basics",children:"Typescript Basics"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#typescript-data-type-annotation",children:"Typescript Data Type Annotation"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#boolean",children:"Boolean"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#number",children:"Number"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#string",children:"String"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#array",children:"Array"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#tuple",children:"Tuple"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#enums",children:"Enums"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#any",children:"Any"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#void",children:"Void"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#null",children:"Null"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#never",children:"Never"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#unknown",children:"Unknown"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#type-assertion",children:"Type Assertion"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#type-casting",children:"Type Casting"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#interfaces",children:"Interfaces"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#namespaces",children:"Namespaces"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#fetch-api",children:"Fetch API"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#mock-web-api",children:"Mock Web API"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#fetch-request",children:"Fetch Request"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#query-parameter",children:"Query Parameter"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#posting-data",children:"Posting Data"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#authorization-header",children:"Authorization Header"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#update--auto-fetch-auth-token",children:"UPDATE :: Auto-fetch Auth-Token"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#using-local-storage",children:"Using Local Storage"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#pagination-for-api-responses",children:"Pagination for API Responses"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"typescript-setup",children:"Typescript Setup"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm install typescript\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"touch HelloWorld.ts\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"let message: string = 'Hello World!'\nconsole.log(message)\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"tsc HelloWorld.ts --watch\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"node ./HelloWorld.js\n\nHello World!\n"})}),"\n",(0,r.jsx)(n.p,{children:"Or test the script inside an HTML page:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Hello World</title>\n  </head>\n  <body>\n    <header></header>\n    <main></main>\n    <footer></footer>\n    <script src='HelloWorld.js'><\/script>\n    <script>\n      let heading = document.createElement('h1');\n      heading.textContent = message;\n      document.body.appendChild(heading)\n    <\/script>\n  </body>\n</html>\n"})}),"\n",(0,r.jsx)(n.h2,{id:"typescript-basics",children:"Typescript Basics"}),"\n",(0,r.jsx)(n.h3,{id:"typescript-data-type-annotation",children:"Typescript Data Type Annotation"}),"\n",(0,r.jsx)(n.h4,{id:"boolean",children:"Boolean"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"let isAvailable: boolean = true;\nlet isHidden: boolean = false;\n\nconsole.log(isAvailable, isHidden)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"number",children:"Number"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"let decimalNumber: number = 101;\nlet binaryNumber: number = 0b1010;\nlet octalNumber: number = 0o777;\nlet hexdecimalNumber: number = 0x1F;\n\nlet x: number = 45\nlet y: number = 111\n\nfunction add(x: number, y: number): number {\n    return x + y;\n}\n\nlet addedValues = (x: number, y: number): number => {\n    return x + y;\n}\n\nconsole.log(decimalNumber, binaryNumber, octalNumber, hexdecimalNumber, add(x,y), addedValues)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"string",children:"String"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"let scope: string = 'World'\nlet message: string = `Hello ${scope}!`;\nconsole.log(message)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"array",children:"Array"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"let places: Array<string> =['Hong Kong','Phnom Penh','Albany']\nlet numbers: number[] = [22,66,198]\nconsole.log(places,numbers)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"tuple",children:"Tuple"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"let employee: [string, number] =['Mathew Cort\xe8ge', 819034]\nlet numbers: number[] = [22,66,198]\nconsole.log(places,numbers)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"enums",children:"Enums"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"enum AItems {\n    ItemA, //0\n    ItemB, //1\n    ItemC //2\n}\n\nenum BItems {\n    ItemA = 1,\n    ItemB = 2,\n    ItemC = 3\n}\n\nlet selectedAItem: string = AItem[1]\nlet selectedBItem: string = BItem[1]\n\nconsole.log(selectedAItem,selectedBItem)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"any",children:"Any"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"let dynamicValue: any = 'A string value'\nconsole.log(dynamicValue.length)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"void",children:"Void"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"function logger(): void {\n    console.log('INFO :: Logger was called')\n}\n\nconst result: void = logger()\n\nconsole.log(result) // undefined\n"})}),"\n",(0,r.jsx)(n.h4,{id:"null",children:"Null"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"let data: string | null = null;  // data is null unless assigned a string\nlet value: number; // value is undefined by default\n\nconsole.log(data, value)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"never",children:"Never"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"function throwError(message: string): never {\n    trow new Error(message);\n}\n\nfunction infiniteLoop(): never {\n    while(true) {}\n}\n\nfunction checkNever(x: string | number): never {\n    throw new Error('ERROR :: Unexpected value: ' + x);\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"unknown",children:"Unknown"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"let input: unknown;\n\ninput = 44;\nconsole.log(input);\n\ninput = 'Test';\nconsole.log(input);\n\ninput = false;\nconsole.log(input);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"type-assertion",children:"Type Assertion"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"let anyValue: any = '101';\nlet num: number = <number>anyValue;\n\nconsole.log(num*2, typeof num); // 202 string\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"let anyValue: any = '303';\nlet num: number = anyValue as number;\n\nconsole.log(num*2, typeof num); // 606 string\n"})}),"\n",(0,r.jsx)(n.h3,{id:"type-casting",children:"Type Casting"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const userId = Number(post.userId)\nconst userName = String(post.userName)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"interfaces",children:"Interfaces"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface Shape {\n    calculateArea(): number;\n}\n\nclass Circle implements Shape {\n    constructor(private radius: number) {}\n\n    calculateArea(): number {\n        return Math.PI * Math.pow(this.radius, 2);\n    }\n}\n\nconst circle = new Circle(5);\nconsole.log(circle.calculateArea())\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface TextApiResponse {\n    text: string\n}\n\n...\nconst textData = await response.text()\n\nconst response: TextApiResponse = {\n    text: textData\n}\n\nsetUserState(response)\n...\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface JsonApiResponse {\n    data: UserDataNamespace.UserData\n}\n\nconst fetchJSONDataFromServer = async() => {\n    try {\n        const apiResponse = await fetch(`http://localhost:8080/status?userId=${userId}`, {\n            method: 'GET'\n        })\n\n        if (!apiResponse.ok) {\n            throw new Error(`ERROR :: Request failed with status code: ${apiResponse.status}`)\n        }\n\n        const jsonData = await apiResponse.json()\n\n        const response: JsonApiResponse = {\n            data: jsonData\n        }\n\n        setUserStatus(response)\n    } catch (error) {\n        console.error('Error :: ', error)\n    }\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"namespaces",children:"Namespaces"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"namespace StringUtilities\n{\n    function ToUppercase(str: string): string {\n        return str.toUpperCase();\n    }\n\n    export function SubString(str: string, from: number, length: number=0): string {\n        return ToUppercase(str.slice(from, length))\n    }\n}\n\nlet str: string = 'Hello there!';\nlet from: number = 1;\nlet len: number = 5;\n\nconsole.log(StringUtilities.SubString(str, from, len)); //ELLO\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"namespace FlightDataNamespace {\n    export interface FlightData {\n        states: StateData[];\n    }\n\n    export interface StateData {\n        icao24: string;\n        callsign: string;\n        country: string;\n        longitude: number;\n        latitude: number;\n        altitude: number;\n        trueTrack: number;\n    }\n}\n\nexport default FlightDataNamespace\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"type HistoryElement = {\n    latitude: number;\n    longitude: number;\n    timestamp: number;\n}\n\nimport { FlightData, StateData } from './flightData';\nimport FlightDataNamespace from './flightData';\n\nconst initialFlightData: FlightDataNamespace.FlightData = { states: [] };\n"})}),"\n",(0,r.jsx)(n.h2,{id:"fetch-api",children:"Fetch API"}),"\n",(0,r.jsx)(n.h3,{id:"mock-web-api",children:"Mock Web API"}),"\n",(0,r.jsxs)(n.p,{children:["Use ",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/json-server",children:"json-server"})," to mock a Web API:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo npm install -g json-server\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"json-server --watch api.json --port 8080 --delay 200\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"api.json"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "users": [\n    {\n      "id": "1",\n      "name": "Julia Ortega",\n      "username": "jutega1337",\n      "email": "jutega@email.com"\n    },\n    {\n      "id": "2",\n      "name": "William Wong",\n      "username": "will69",\n      "email": "wwill@email.com"\n    }\n  ]\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Test the API using a ",(0,r.jsx)(n.code,{children:"curl"})," request:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'curl http://localhost:8080/users/1\n{\n  "id": "1",\n  "name": "Julia Ortega",\n  "username": "jutega1337",\n  "email": "jutega@email.com"\n}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'curl \'http://localhost:8080/users?username=will69\'\n[\n  {\n    "id": "2",\n    "name": "William Wong",\n    "username": "will69",\n    "email": "wwill@email.com"\n  }\n]\n'})}),"\n",(0,r.jsx)(n.h3,{id:"fetch-request",children:"Fetch Request"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface UserProfile {\n    id: number\n    name: string\n    email: string\n}\n\nconst userId: number = 1\nconst userApi: string = 'http://localhost:8080/users'\n\n\nasync function fetchUserProfile(userId: number, userApi: string): Promise<UserProfile> {\n\n    const response = await fetch(`${userApi}/${userId}/`)\n\n    if (!response.ok) {\n        throw new Error('ERROR :: Failed to fetch user profile')\n    }\n\n    const userProfile = await response.json()\n\n    console.log('User Profile: ', userProfile)\n\n    return userProfile\n}\n\n\nfetchUserProfile(userId, userApi)\n    .then((userProfile) => {\n        console.log('User ID: ', userProfile.id)\n        console.log('Username: ', userProfile.name)\n        console.log('User Email: ', userProfile.email)\n    })\n    .catch((error) => {\n        console.error('Error :: ', error)\n    })\n"})}),"\n",(0,r.jsx)(n.h4,{id:"query-parameter",children:"Query Parameter"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface UserProfile {\n    id: number\n    name: string\n    email: string\n}\n\nconst userName: string = 'will69'\nconst userApi: string = 'http://localhost:8080/users'\n\n\nasync function fetchUserProfileByQuery(userName: string, userApi: string): Promise<UserProfile> {\n\n    const response = await fetch(`${userApi}/?username=${userName}`)\n\n    if (!response.ok) {\n        throw new Error('ERROR :: Failed to fetch user profile')\n    }\n\n    const userProfiles = await response.json()\n    \n    return userProfiles\n}\n\n\nfetchUserProfileByQuery(userName, userApi)\n    .then((userProfiles) => {\n        console.log('User ID: ', userProfiles[0].id)\n        console.log('Username: ', userProfiles[0].name)\n        console.log('User Email: ', userProfiles[0].email)\n    })\n    .catch((error) => {\n        console.error('Error :: ', error)\n    })\n"})}),"\n",(0,r.jsx)(n.h4,{id:"posting-data",children:"Posting Data"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface UserProfile {\n    id: number\n    name: string\n    email: string\n}\n\nconst userData: UserProfile = {\n    id: 3,\n    name: 'Daemon Swenska',\n    email: 'dswe@gmail.com'\n}\n\nconst userApi: string = 'http://localhost:8080/users'\n\nfunction createUserProfile(userData: UserProfile, userApi: string): void {\n\n    fetch(userApi, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n    })\n        .then(response => response.json())\n        .then(data => {\n            console.log('INFO :: User registration: ', data)\n        })\n        .catch(error => {\n            console.error('ERROR :: User registration: ', error)\n        })\n}\n\n\ncreateUserProfile(userData, userApi)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"authorization-header",children:"Authorization Header"}),"\n",(0,r.jsxs)(n.p,{children:["Accessing an ",(0,r.jsx)(n.a,{href:"https://wiki.instar.com/de/1440p_Serie_CGI_Befehle/",children:"INSTAR IP camera CGI web interface"})," can be done using token authentication. Start by retrieving a valid access token using the following CGI command:"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"/param.cgi?cmd=gettoken"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'cmd="gettoken";\ntoken="7PZv8N63c7wYYRxBw39pnRYNRnbdaBTTaK";\nvalidity="1706973422";\nresponse="200";\n'})}),"\n",(0,r.jsx)(n.p,{children:"Now use the token to create a custom request header that gives you access to the secured API:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"interface GetRequest {\n    cgiGetCommand: string,\n    cameraIp: string,\n    cameraPort: string,\n    authToken: string\n}\n\nconst getRequest: GetRequest = {\n    cgiGetCommand: 'getmqttattr',\n    cameraIp: '192.168.2.125',\n    cameraPort: '80',\n    authToken: '7PZv8N63c7wYYRxBw39pnRYNRnbdaBTTaK'\n}\n\ninterface GetMqttApiResponse {\n    mq_enable: string,\n    mq_broker: string,\n    mq_broker_ws: string,\n    mq_broker_ws_port: string,\n    mq_broker_ws_portssl: string,\n    mq_broker_min_tls: string,\n    mq_host: string,\n    mq_port: string,\n    mq_portssl: string,\n    mq_ssl: string,\n    mq_auth: string,\n    mq_user: string,\n    mq_insecure: string,\n    mq_prefix: string,\n    mq_lwt: string,\n    mq_lwmon: string,\n    mq_lwmoff: string,\n    mq_clientid: string,\n    mq_qos: string\n}\n\n\nconst fetchDataWithAuthHeader = async (getRequest: GetRequest) => {\n    try {\n        const customHeaders = new Headers()\n\n        customHeaders.append('Authorization', 'Bearer ' + getRequest.authToken)\n\n        const response = await fetch(\n            'http://' + getRequest.cameraIp + ':' + getRequest.cameraPort + '/' + 'param.cgi?cmd=' + getRequest.cgiGetCommand,\n             {\n                method: 'GET',\n                headers: customHeaders\n             }\n        )\n        if (!response.ok) {\n            throw new Error(`ERROR :: Request failed with status ${response.status}`)\n        }\n\n        const textResponse: string = await response.text()\n        \n        const cleanedTextResponse: string = textResponse\n            .replace('cmd=\"getmqttattr\";', '{\"')\n            .replace('response=\"200\";', '}')\n            .replace(/=/g, '\":')\n            .replace(/\";/g, '\",\"')\n            .replace(/\\s/g, '')\n            .replace(/\",\"}/g, '\"}');\n            \n        const jsonData: GetMqttApiResponse = JSON.parse(cleanedTextResponse)\n\n        \n\n        return jsonData\n    }\n\n    catch (error) {\n        console.log('ERROR :: ', error.message)\n        return null\n    }\n}\n\nfetchDataWithAuthHeader(getRequest).then((jsonData) => {\n    if (jsonData) {\n        console.log(`BROKER CONFIGURATION:\\n\\nEnable Broker: ${jsonData.mq_enable},\\nWebsocket Support: ${jsonData.mq_broker_ws},\\nWebsocket Port: ${jsonData.mq_broker_ws_port},\\nWebsocket Port SSL: ${jsonData.mq_broker_ws_portssl},\\nTLS Version: ${jsonData.mq_broker_min_tls},\\nExternal Broker IP: ${jsonData.mq_host},\\nBroker Port: ${jsonData.mq_port},\\nBroker Port SSL: ${jsonData.mq_portssl},\\nEnable Encryption: ${jsonData.mq_ssl},\\nEnable Authentication: ${jsonData.mq_auth},\\nUsername: ${jsonData.mq_user},\\nTLS Certificate Verification: ${jsonData.mq_insecure},\\nMQTT Prefix: ${jsonData.mq_prefix},\\nMQTT LWT: ${jsonData.mq_lwt},\\nMQTT LWT on: ${jsonData.mq_lwmon},\\nMQTT LWT off: ${jsonData.mq_lwmoff},\\nMQTT Client ID: ${jsonData.mq_clientid},\\nMQTT QoS Level: ${jsonData.mq_qos}`)\n    } else {\n        console.log('ERROR :: Fetching MQTT configuration failed.')\n    }\n}).catch((error) => {\n    console.error('ERROR :: Authentication failed: ', error)\n})\n"})}),"\n",(0,r.jsx)(n.h4,{id:"update--auto-fetch-auth-token",children:"UPDATE :: Auto-fetch Auth-Token"}),"\n",(0,r.jsxs)(n.p,{children:["Use ",(0,r.jsx)(n.code,{children:"dotenv"})," to be able to read in ",(0,r.jsx)(n.code,{children:".env"})," environment variables:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm install dotenv --save\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Fetch the token using basic authentication and write it to an ",(0,r.jsx)(n.code,{children:".env"})," file:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const fs = require('fs')\n\nconst getToken = {\n    cgiGetCommand: 'gettoken',\n    cameraIp: '192.168.2.125',\n    cameraPort: '80',\n    userName: 'admin',\n    userPass: 'instar'\n}\n\nconst fetchAuthToken = async (getToken) => {\n    try {\n        const response = await fetch(\n            'http://' + getToken.cameraIp + ':' + getToken.cameraPort + '/' + 'param.cgi?cmd=' + getToken.cgiGetCommand + '&user=' + getToken.userName + '&pwd=' + getToken.userPass\n        )\n\n        if (!response.ok) {\n            throw new Error(`ERROR :: Request failed with status ${response.status}`)\n        }\n\n        const textResponse = await response.text()\n\n        console.log(textResponse)\n\n        const cleanedTextResponse = textResponse\n            .replace('cmd=\"gettoken\";', '{\"')\n            .replace('response=\"200\";', '}')\n            .replace(/=/g, '\":')\n            .replace(/\";/g, '\",\"')\n            .replace(/\\s/g, '')\n            .replace(/\",\"}/g, '\"}');\n\n        const jsonData = JSON.parse(cleanedTextResponse)\n\n        console.log(`Access Token: ${jsonData.token}`)\n\n        return jsonData\n    }\n\n    catch (error) {\n        console.log('ERROR :: ', error.message)\n        return null\n    }\n}\n\nfetchAuthToken(getToken).then((jsonData) => {\n    if (jsonData) {\n        fs.writeFile('.env', 'AUTH_TOKEN=' + jsonData.token, (err) => { if (err) throw err })\n    } else {\n        console.log('ERROR :: Fetching auth token failed.')\n    }\n}).catch((error) => {\n    console.error('ERROR :: Authentication failed: ', error)\n})\n"})}),"\n",(0,r.jsx)(n.p,{children:"Run the script:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'node getToken.js\n\ncmd="gettoken";\ntoken="4rOdPAFuUlTDcvEQQLrZTEPSBDUNrlObyy";\nvalidity="1707044442";\nresponse="200";\n\nAccess Token: 4rOdPAFuUlTDcvEQQLrZTEPSBDUNrlObyy\n'})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:".env"})," file will now contain the token ",(0,r.jsx)(n.code,{children:"AUTH_TOKEN=4rOdPAFuUlTDcvEQQLrZTEPSBDUNrlObyy"}),". and the file can be used like:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"require('dotenv').config()\nconsole.log(`Database name is ${process.env.AUTH_TOKEN}`);\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"useEnvFileForAuth.ts"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"require('dotenv').config()\n\ninterface GetRequest {\n    cgiGetCommand: string,\n    cameraIp: string,\n    cameraPort: string,\n    authToken: string\n}\n\nconst getMqttAttr: GetRequest = {\n    cgiGetCommand: 'getmqttattr',\n    cameraIp: '192.168.2.125',\n    cameraPort: '80',\n    authToken: process.env.AUTH_TOKEN\n}\n\ninterface GetMqttApiResponse {\n    mq_enable: string,\n    mq_broker: string,\n    mq_broker_ws: string,\n    mq_broker_ws_port: string,\n    mq_broker_ws_portssl: string,\n    mq_broker_min_tls: string,\n    mq_host: string,\n    mq_port: string,\n    mq_portssl: string,\n    mq_ssl: string,\n    mq_auth: string,\n    mq_user: string,\n    mq_insecure: string,\n    mq_prefix: string,\n    mq_lwt: string,\n    mq_lwmon: string,\n    mq_lwmoff: string,\n    mq_clientid: string,\n    mq_qos: string\n}\n\n\nconst fetchMqttAttrWithAuthHeader = async (getRequest: GetRequest) => {\n    try {\n        const customHeaders = new Headers()\n\n        customHeaders.append('Authorization', 'Bearer ' + getRequest.authToken)\n\n        const response = await fetch(\n            'http://' + getRequest.cameraIp + ':' + getRequest.cameraPort + '/' + 'param.cgi?cmd=' + getRequest.cgiGetCommand,\n             {\n                method: 'GET',\n                headers: customHeaders\n             }\n        )\n        if (!response.ok) {\n            throw new Error(`ERROR :: Request failed with status ${response.status}`)\n        }\n\n        const textResponse: string = await response.text()\n        \n        const cleanedTextResponse: string = textResponse\n            .replace('cmd=\"getmqttattr\";', '{\"')\n            .replace('response=\"200\";', '}')\n            .replace(/=/g, '\":')\n            .replace(/\";/g, '\",\"')\n            .replace(/\\s/g, '')\n            .replace(/\",\"}/g, '\"}');\n            \n        const jsonData: GetMqttApiResponse = JSON.parse(cleanedTextResponse)\n\n        \n\n        return jsonData\n    }\n\n    catch (error) {\n        console.log('ERROR :: ', error.message)\n        return null\n    }\n}\n\nfetchMqttAttrWithAuthHeader(getRequest).then((jsonData) => {\n    if (jsonData) {\n        console.log(`BROKER CONFIGURATION:\\n\\nEnable Broker: ${jsonData.mq_enable},\\nWebsocket Support: ${jsonData.mq_broker_ws},\\nWebsocket Port: ${jsonData.mq_broker_ws_port},\\nWebsocket Port SSL: ${jsonData.mq_broker_ws_portssl},\\nTLS Version: ${jsonData.mq_broker_min_tls},\\nExternal Broker IP: ${jsonData.mq_host},\\nBroker Port: ${jsonData.mq_port},\\nBroker Port SSL: ${jsonData.mq_portssl},\\nEnable Encryption: ${jsonData.mq_ssl},\\nEnable Authentication: ${jsonData.mq_auth},\\nUsername: ${jsonData.mq_user},\\nTLS Certificate Verification: ${jsonData.mq_insecure},\\nMQTT Prefix: ${jsonData.mq_prefix},\\nMQTT LWT: ${jsonData.mq_lwt},\\nMQTT LWT on: ${jsonData.mq_lwmon},\\nMQTT LWT off: ${jsonData.mq_lwmoff},\\nMQTT Client ID: ${jsonData.mq_clientid},\\nMQTT QoS Level: ${jsonData.mq_qos}`)\n    } else {\n        console.log('ERROR :: Fetching MQTT configuration failed.')\n    }\n}).catch((error) => {\n    console.error('ERROR :: Authentication failed: ', error)\n}) \n"})}),"\n",(0,r.jsx)(n.p,{children:"Compile the Javascript file and run it in Node.js:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"tsc useEnvFileForAuth.ts --lib es2020,dom,es2015.collection,es2015.promise\nnode useEnvFileForAuth.js\n"})}),"\n",(0,r.jsx)(n.h3,{id:"using-local-storage",children:"Using Local Storage"}),"\n",(0,r.jsxs)(n.p,{children:["Only available when executed inside a web browser ",(0,r.jsx)(n.code,{children:"localStorage"})," allows you to cache an API response and check if the information was already retrieved before running an API request:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const username: string = 'admin'\nconst password: string = 'instar'\nconst loggedIn: boolean = false\n\nconst saveLoginCredentials = () => {\n    if (typeof window !== 'undefined') {\n        localStorage.setItem(`username`, username)\n        localStorage.setItem(`password`, password)\n    }\n}\n\nconst fillLogin = (user, pass) => {\n    console.log('INFO :: Active user credentials ', user, pass)\n}\n\nconst handleCredentialInput = () => {\n    if (typeof window !== 'undefined') {\n        const savedUsername = localStorage.getItem('username')\n        const savedPassword = localStorage.getItem('password')\n        // If username and password exist fill out login form\n        if (savedUsername && savedPassword) {\n            fillLogin(savedUsername, savedPassword)\n        }\n    } else fillLogin(username, password)\n}\n\nconst setIsLoggedIn = (bool) => {\n    const loggedIn: boolean = bool\n    console.log('INFO :: User logged in: ', loggedIn)\n    handleCredentialInput()\n}\n\nconst handleLogin = async (username: string, password: string) => {\n    try {\n        const response =await fetch('http://localhost:8080/logins', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ username, password })\n        })\n        if (response.ok) {\n            if (typeof window !== 'undefined') {\n                localStorage.setItem('username', username)\n                localStorage.setItem('password', password)\n    \n                setIsLoggedIn(true)\n            } else setIsLoggedIn(true)\n        }\n        else {\n            console.error('ERROR :: Login failed!')\n        }\n    } catch (error) {\n        console.error('ERROR :: Login error ', error)\n    }\n}\n\nconst checkStoredCredentials = () => {\n    if (typeof window !== 'undefined') {\n        const storedUsername = localStorage.getItem('username')\n        const storedPassword = localStorage.getItem('password')\n        // If username and password exist fill out login form\n        if (storedUsername && storedPassword) {\n            handleLogin(storedUsername, storedPassword)\n        }\n    } else handleLogin(username, password)\n}\n\n\ncheckStoredCredentials()\n"})}),"\n",(0,r.jsx)(n.p,{children:"Another example using the Star Wars API:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"async function fetchJediMindMelt(): Promise<any> {\n    // check if data has already been cached\n    const cacheKey = 'forceData'\n    \n    const cachedData = localStorage.getItem(cacheKey)\n\n    if (cachedData) {\n        return JSON.parse(cachedData)\n\n    // else fetch fresh data\n    } else {\n        const response = await fetch('https://swapi.dev/api/people/1/?format=json')\n        const data = await response.json()\n        localStorage.setItem(cacheKey, JSON.stringify(data))\n\n        return data\n    }\n}\n\nasync function returnLukeSkywalker() {\n    try {\n        const forceData = await fetchJediMindMelt()\n        // return Luke Skywalker from API response\n        console.log(forceData.name)\n        // return Luke Skywalker from local storage\n        console.log(JSON.parse(localStorage.getItem('forceData')).name)\n        \n    } catch (error) {\n        console.error(error)\n    }\n}\n\nreturnLukeSkywalker()\n"})}),"\n",(0,r.jsx)(n.h3,{id:"pagination-for-api-responses",children:"Pagination for API Responses"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const indexurl: string = 'https://reqres.in/api/users?page='\nconst totalPages: number = 2\n\nasync function fetchUserData(url: string, page: number): Promise<string[]> {\n\n    console.log(url+page)\n\n    const response = await fetch(url+page)\n\n    if(!response.ok) {\n        throw new Error('ERROR :: Data could not be fetched from: ' + url)\n    }\n\n    const data = await response.json()\n\n    console.log(data)\n\n    const emails = data.data.map((user: any) => user.email)\n    \n    console.log(emails)\n\n    return emails\n}\n\nasync function fetchUserEmails(pages: number): Promise<string[][]> {\n    const userEmailsByPage: string[][] = []\n\n    for (let page = 1; page <= pages; page++) {\n        const emails = await fetchUserData(indexurl, page)\n        userEmailsByPage.push(emails)\n        \n        console.log(userEmailsByPage)\n    }\n\n    return userEmailsByPage\n}\n\nfetchUserEmails(totalPages)\n    .then((userEmailsByPage) => {\n        userEmailsByPage.forEach((emails, page) => {\n            console.log('INFO :: Email addresses from page ', page+1, ': ', emails)\n        })\n    })\n    .catch((error) => {\n        console.error('ERROR :: ', error)\n    })\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"INFO :: Email addresses from page  1 :  [\n  'george.bluth@reqres.in',\n  'janet.weaver@reqres.in',\n  'emma.wong@reqres.in',\n  'eve.holt@reqres.in',\n  'charles.morris@reqres.in',\n  'tracey.ramos@reqres.in'\n]\nINFO :: Email addresses from page  2 :  [\n  'michael.lawson@reqres.in',\n  'lindsay.ferguson@reqres.in',\n  'tobias.funke@reqres.in',\n  'byron.fields@reqres.in',\n  'george.edwards@reqres.in',\n  'rachel.howell@reqres.in'\n]\n"})})]})}function u(e={}){const{wrapper:n}={...(0,t.ah)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},603905:(e,n,s)=>{s.d(n,{ah:()=>c});var r=s(667294);function t(e,n,s){return n in e?Object.defineProperty(e,n,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[n]=s,e}function a(e,n){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),s.push.apply(s,r)}return s}function o(e){for(var n=1;n<arguments.length;n++){var s=null!=arguments[n]?arguments[n]:{};n%2?a(Object(s),!0).forEach((function(n){t(e,n,s[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):a(Object(s)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(s,n))}))}return e}function i(e,n){if(null==e)return{};var s,r,t=function(e,n){if(null==e)return{};var s,r,t={},a=Object.keys(e);for(r=0;r<a.length;r++)s=a[r],n.indexOf(s)>=0||(t[s]=e[s]);return t}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)s=a[r],n.indexOf(s)>=0||Object.prototype.propertyIsEnumerable.call(e,s)&&(t[s]=e[s])}return t}var l=r.createContext({}),c=function(e){var n=r.useContext(l),s=n;return e&&(s="function"==typeof e?e(n):o(o({},n),e)),s},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var s=e.components,t=e.mdxType,a=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),h=c(s),p=t,m=h["".concat(l,".").concat(p)]||h[p]||d[p]||a;return s?r.createElement(m,o(o({ref:n},u),{},{components:s})):r.createElement(m,o({ref:n},u))}));u.displayName="MDXCreateElement"},592945:(e,n,s)=>{s.d(n,{Z:()=>r});const r=s.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-c3aedc7eed015cc5372c21f9c394693d.jpg"}}]);