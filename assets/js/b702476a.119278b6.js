"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[31365],{465246:(e,d,n)=>{n.r(d),n.d(d,{assets:()=>c,contentTitle:()=>r,default:()=>x,frontMatter:()=>i,metadata:()=>l,toc:()=>h});var t=n(785893),s=n(603905);const i={sidebar_position:4610,slug:"2023-06-23",title:"AutoML with AutoGluon for Timeseries Forecasts",authors:"mpolinowski",tags:["Python","Machine Learning","AutoGluon","Cheating"],description:"Using Amazon SageMaker / AutoGluon to find your perfect model fit."},r="AutoML with AutoGluon for Timeseries Forecasts",l={id:"IoT-and-Machine-Learning/AIOps/2023-06-23-automl-with-autogluon-timeseries-forecast/index",title:"AutoML with AutoGluon for Timeseries Forecasts",description:"Using Amazon SageMaker / AutoGluon to find your perfect model fit.",source:"@site/docs/IoT-and-Machine-Learning/AIOps/2023-06-23-automl-with-autogluon-timeseries-forecast/index.md",sourceDirName:"IoT-and-Machine-Learning/AIOps/2023-06-23-automl-with-autogluon-timeseries-forecast",slug:"/IoT-and-Machine-Learning/AIOps/2023-06-23-automl-with-autogluon-timeseries-forecast/2023-06-23",permalink:"/docs/IoT-and-Machine-Learning/AIOps/2023-06-23-automl-with-autogluon-timeseries-forecast/2023-06-23",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IoT-and-Machine-Learning/AIOps/2023-06-23-automl-with-autogluon-timeseries-forecast/index.md",tags:[{label:"Python",permalink:"/docs/tags/python"},{label:"Machine Learning",permalink:"/docs/tags/machine-learning"},{label:"AutoGluon",permalink:"/docs/tags/auto-gluon"},{label:"Cheating",permalink:"/docs/tags/cheating"}],version:"current",sidebarPosition:4610,frontMatter:{sidebar_position:4610,slug:"2023-06-23",title:"AutoML with AutoGluon for Timeseries Forecasts",authors:"mpolinowski",tags:["Python","Machine Learning","AutoGluon","Cheating"],description:"Using Amazon SageMaker / AutoGluon to find your perfect model fit."},sidebar:"tutorialSidebar",previous:{title:"Serving your SciKit Image Model as a Prediction API",permalink:"/docs/IoT-and-Machine-Learning/AIOps/2023-07-10-scikit-image-model-deployment-part1/2023-07-10"},next:{title:"AutoML with AutoGluon for Multi-Modal Data NLP",permalink:"/docs/IoT-and-Machine-Learning/AIOps/2023-06-21-automl-with-autogluon-multiclass-nlp/2023-06-21"}},c={},h=[{value:"Installation",id:"installation",level:2},{value:"Single Variate Forecasting",id:"single-variate-forecasting",level:2},{value:"Data Preprocessing",id:"data-preprocessing",level:3},{value:"Model Training",id:"model-training",level:3},{value:"Model Evaluation",id:"model-evaluation",level:3},{value:"Visualization",id:"visualization",level:4},{value:"Multi Variate Forecasting - Future Covariants",id:"multi-variate-forecasting---future-covariants",level:2},{value:"Data Preprocessing",id:"data-preprocessing-1",level:3},{value:"Model Training",id:"model-training-1",level:3},{value:"Model Predictions",id:"model-predictions",level:3},{value:"Visualization",id:"visualization-1",level:4},{value:"Multi Variate Forecasting - Past Covariants",id:"multi-variate-forecasting---past-covariants",level:2},{value:"Data Preprocessing",id:"data-preprocessing-2",level:3},{value:"Model Training",id:"model-training-2",level:3},{value:"Model Predictions",id:"model-predictions-1",level:3},{value:"Visualization",id:"visualization-2",level:4}];function j(e){const d={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.ah)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(d.p,{children:(0,t.jsx)(d.img,{alt:"TST, HongKong",src:n(899684).Z+"",width:"1500",height:"575"})}),"\n",(0,t.jsx)(d.h1,{id:"automl-with-autogluon-for-timeseries-forecasts",children:"AutoML with AutoGluon for Timeseries Forecasts"}),"\n",(0,t.jsxs)(d.ul,{children:["\n",(0,t.jsxs)(d.li,{children:["Part 1: ",(0,t.jsx)(d.a,{href:"/docs/IoT-and-Machine-Learning/AIOps/2023-06-18-automl-with-autogluon-tabular-data/2023-06-18",children:"AutoML with AutoGluon for Tabular Data"})]}),"\n",(0,t.jsxs)(d.li,{children:["Part 2: ",(0,t.jsx)(d.a,{href:"/docs/IoT-and-Machine-Learning/AIOps/2023-06-21-automl-with-autogluon-multiclass-nlp/2023-06-21",children:"AutoML with AutoGluon for Multi-Modal Data"})]}),"\n",(0,t.jsx)(d.li,{children:"Part 3: AutoML with AutoGluon for Timeseries Forecasts"}),"\n"]}),"\n",(0,t.jsxs)(d.p,{children:[(0,t.jsx)(d.a,{href:"https://github.com/autogluon/autogluon",children:"AutoGluon"})," automates machine learning tasks enabling you to easily achieve strong predictive performance in your applications. With just a few lines of code, you can train and deploy high-accuracy machine learning and deep learning models on image, text, time series, and tabular data."]}),"\n",(0,t.jsx)(d.p,{children:(0,t.jsx)(d.a,{href:"https://github.com/mpolinowski/automl-gluon-tabular-data/tree/master/04_Time_Series_Predictions",children:"Github Repository"})}),"\n",(0,t.jsxs)(d.ul,{children:["\n",(0,t.jsxs)(d.li,{children:[(0,t.jsx)(d.a,{href:"#automl-with-autogluon-for-timeseries-forecasts",children:"AutoML with AutoGluon for Timeseries Forecasts"}),"\n",(0,t.jsxs)(d.ul,{children:["\n",(0,t.jsx)(d.li,{children:(0,t.jsx)(d.a,{href:"#installation",children:"Installation"})}),"\n",(0,t.jsxs)(d.li,{children:[(0,t.jsx)(d.a,{href:"#single-variate-forecasting",children:"Single Variate Forecasting"}),"\n",(0,t.jsxs)(d.ul,{children:["\n",(0,t.jsx)(d.li,{children:(0,t.jsx)(d.a,{href:"#data-preprocessing",children:"Data Preprocessing"})}),"\n",(0,t.jsx)(d.li,{children:(0,t.jsx)(d.a,{href:"#model-training",children:"Model Training"})}),"\n",(0,t.jsxs)(d.li,{children:[(0,t.jsx)(d.a,{href:"#model-evaluation",children:"Model Evaluation"}),"\n",(0,t.jsxs)(d.ul,{children:["\n",(0,t.jsx)(d.li,{children:(0,t.jsx)(d.a,{href:"#visualization",children:"Visualization"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(d.li,{children:[(0,t.jsx)(d.a,{href:"#multi-variate-forecasting---future-covariants",children:"Multi Variate Forecasting - Future Covariants"}),"\n",(0,t.jsxs)(d.ul,{children:["\n",(0,t.jsx)(d.li,{children:(0,t.jsx)(d.a,{href:"#data-preprocessing-1",children:"Data Preprocessing"})}),"\n",(0,t.jsx)(d.li,{children:(0,t.jsx)(d.a,{href:"#model-training-1",children:"Model Training"})}),"\n",(0,t.jsxs)(d.li,{children:[(0,t.jsx)(d.a,{href:"#model-predictions",children:"Model Predictions"}),"\n",(0,t.jsxs)(d.ul,{children:["\n",(0,t.jsx)(d.li,{children:(0,t.jsx)(d.a,{href:"#visualization-1",children:"Visualization"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(d.li,{children:[(0,t.jsx)(d.a,{href:"#multi-variate-forecasting---past-covariants",children:"Multi Variate Forecasting - Past Covariants"}),"\n",(0,t.jsxs)(d.ul,{children:["\n",(0,t.jsx)(d.li,{children:(0,t.jsx)(d.a,{href:"#data-preprocessing-2",children:"Data Preprocessing"})}),"\n",(0,t.jsx)(d.li,{children:(0,t.jsx)(d.a,{href:"#model-training-2",children:"Model Training"})}),"\n",(0,t.jsxs)(d.li,{children:[(0,t.jsx)(d.a,{href:"#model-predictions-1",children:"Model Predictions"}),"\n",(0,t.jsxs)(d.ul,{children:["\n",(0,t.jsx)(d.li,{children:(0,t.jsx)(d.a,{href:"#visualization-2",children:"Visualization"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(d.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsxs)(d.p,{children:[(0,t.jsx)(d.a,{href:"https://auto.gluon.ai/stable/install.html",children:"Installing AutoGluon"})," with GPU support:"]}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-bash",children:'pip install -U pip\npip install -U setuptools wheel\npip install torch==1.13.1+cu117 torchvision==0.14.1+cu117 --extra-index-url https://download.pytorch.org/whl/cu117\npip install autogluon\n# for visualizations\npip install bokeh==2.0.1"\n'})}),"\n",(0,t.jsx)(d.h2,{id:"single-variate-forecasting",children:"Single Variate Forecasting"}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"# get dataset\n!wget https://raw.githubusercontent.com/databricks/Spark-The-Definitive-Guide/master/data/retail-data/all/online-retail-dataset.csv -P dataset\n"})}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"from autogluon.timeseries import TimeSeriesDataFrame, TimeSeriesPredictor\nimport matplotlib.pyplot as plt\nfrom datetime import datetime as dt\nimport pandas as pd\nimport seaborn as sns\n"})}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"SEED = 42\nMODEL_PATH = 'model'\n"})}),"\n",(0,t.jsx)(d.h3,{id:"data-preprocessing",children:"Data Preprocessing"}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"df = pd.read_csv('dataset/online-retail-dataset.csv')\ndf.head(5)\n"})}),"\n",(0,t.jsxs)(d.table,{children:[(0,t.jsx)(d.thead,{children:(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.th,{}),(0,t.jsx)(d.th,{children:"InvoiceNo"}),(0,t.jsx)(d.th,{children:"StockCode"}),(0,t.jsx)(d.th,{children:"Description"}),(0,t.jsx)(d.th,{children:"Quantity"}),(0,t.jsx)(d.th,{children:"InvoiceDate"}),(0,t.jsx)(d.th,{children:"UnitPrice"}),(0,t.jsx)(d.th,{children:"CustomerID"}),(0,t.jsx)(d.th,{children:"Country"})]})}),(0,t.jsxs)(d.tbody,{children:[(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"536365"}),(0,t.jsx)(d.td,{children:"85123A"}),(0,t.jsx)(d.td,{children:"WHITE HANGING HEART T-LIGHT HOLDER"}),(0,t.jsx)(d.td,{children:"6"}),(0,t.jsx)(d.td,{children:"12/1/2010 8:26"}),(0,t.jsx)(d.td,{children:"2.55"}),(0,t.jsx)(d.td,{children:"17850.0"}),(0,t.jsx)(d.td,{children:"United Kingdom"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"1"}),(0,t.jsx)(d.td,{children:"536365"}),(0,t.jsx)(d.td,{children:"71053"}),(0,t.jsx)(d.td,{children:"WHITE METAL LANTERN"}),(0,t.jsx)(d.td,{children:"6"}),(0,t.jsx)(d.td,{children:"12/1/2010 8:26"}),(0,t.jsx)(d.td,{children:"3.39"}),(0,t.jsx)(d.td,{children:"17850.0"}),(0,t.jsx)(d.td,{children:"United Kingdom"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"2"}),(0,t.jsx)(d.td,{children:"536365"}),(0,t.jsx)(d.td,{children:"84406B"}),(0,t.jsx)(d.td,{children:"CREAM CUPID HEARTS COAT HANGER"}),(0,t.jsx)(d.td,{children:"8"}),(0,t.jsx)(d.td,{children:"12/1/2010 8:26"}),(0,t.jsx)(d.td,{children:"2.75"}),(0,t.jsx)(d.td,{children:"17850.0"}),(0,t.jsx)(d.td,{children:"United Kingdom"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"3"}),(0,t.jsx)(d.td,{children:"536365"}),(0,t.jsx)(d.td,{children:"84029G"}),(0,t.jsx)(d.td,{children:"KNITTED UNION FLAG HOT WATER BOTTLE"}),(0,t.jsx)(d.td,{children:"6"}),(0,t.jsx)(d.td,{children:"12/1/2010 8:26"}),(0,t.jsx)(d.td,{children:"3.39"}),(0,t.jsx)(d.td,{children:"17850.0"}),(0,t.jsx)(d.td,{children:"United Kingdom"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"4"}),(0,t.jsx)(d.td,{children:"536365"}),(0,t.jsx)(d.td,{children:"84029E"}),(0,t.jsx)(d.td,{children:"RED WOOLLY HOTTIE WHITE HEART."}),(0,t.jsx)(d.td,{children:"6"}),(0,t.jsx)(d.td,{children:"12/1/2010 8:26"}),(0,t.jsx)(d.td,{children:"3.39"}),(0,t.jsx)(d.td,{children:"17850.0"}),(0,t.jsx)(d.td,{children:"United Kingdom"})]})]})]}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"df.info()\n# <class 'pandas.core.frame.DataFrame'>\n# RangeIndex: 541909 entries, 0 to 541908\n# Data columns (total 8 columns):\n#  #   Column       Non-Null Count   Dtype  \n# ---  ------       --------------   -----  \n#  0   InvoiceNo    541909 non-null  object \n#  1   StockCode    541909 non-null  object \n#  2   Description  540455 non-null  object \n#  3   Quantity     541909 non-null  int64  \n#  4   InvoiceDate  541909 non-null  object \n#  5   UnitPrice    541909 non-null  float64\n#  6   CustomerID   406829 non-null  float64\n#  7   Country      541909 non-null  object \n# dtypes: float64(2), int64(1), object(5)\n# memory usage: 33.1+ MB\n"})}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"# only sample last 10.000 items\n# df_sample = df.iloc[-10000:]\n# take all items\ndf_sample = df.copy()\n\n# renaming columns\ndf_sample.rename(columns={'InvoiceNo': 'item_id', 'InvoiceDate': 'timestamp'}, inplace=True)\n# create sale total price\ndf_sample['target'] = df_sample['Quantity'] * df_sample['UnitPrice']\ndf_sample['item_id'] = 'online_sales'\n# create single variant timeseries\ndf_sample.drop(\n    ['StockCode', 'Description', 'CustomerID', 'Country', 'Quantity', 'UnitPrice'],\n    axis=1, inplace=True)\ndf_sample.head(5)\n"})}),"\n",(0,t.jsxs)(d.table,{children:[(0,t.jsx)(d.thead,{children:(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.th,{}),(0,t.jsx)(d.th,{children:"item_id"}),(0,t.jsx)(d.th,{children:"timestamp"}),(0,t.jsx)(d.th,{children:"target"})]})}),(0,t.jsxs)(d.tbody,{children:[(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"online_sales"}),(0,t.jsx)(d.td,{children:"12/1/2010 8:26"}),(0,t.jsx)(d.td,{children:"20.40"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"1"}),(0,t.jsx)(d.td,{children:"online_sales"}),(0,t.jsx)(d.td,{children:"12/1/2010 8:26"}),(0,t.jsx)(d.td,{children:"27.80"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"2"}),(0,t.jsx)(d.td,{children:"online_sales"}),(0,t.jsx)(d.td,{children:"12/1/2010 8:26"}),(0,t.jsx)(d.td,{children:"2.60"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"3"}),(0,t.jsx)(d.td,{children:"online_sales"}),(0,t.jsx)(d.td,{children:"12/1/2010 8:26"}),(0,t.jsx)(d.td,{children:"5.85"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"4"}),(0,t.jsx)(d.td,{children:"online_sales"}),(0,t.jsx)(d.td,{children:"12/1/2010 8:26"}),(0,t.jsx)(d.td,{children:"19.90"})]})]})]}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"# reformat timestamp to remove time from date\ndf_sample['timestamp'] = pd.to_datetime(df_sample['timestamp']).dt.strftime('%m/%d/%Y')\ndf_sample.head(5)\n"})}),"\n",(0,t.jsxs)(d.table,{children:[(0,t.jsx)(d.thead,{children:(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.th,{}),(0,t.jsx)(d.th,{children:"item_id"}),(0,t.jsx)(d.th,{children:"target"}),(0,t.jsx)(d.th,{children:"timestamp"})]})}),(0,t.jsxs)(d.tbody,{children:[(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"online_sales"}),(0,t.jsx)(d.td,{children:"16.6"}),(0,t.jsx)(d.td,{children:"12/23/2010"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"1"}),(0,t.jsx)(d.td,{children:"online_sales"}),(0,t.jsx)(d.td,{children:"8.5"}),(0,t.jsx)(d.td,{children:"12/23/2010"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"2"}),(0,t.jsx)(d.td,{children:"online_sales"}),(0,t.jsx)(d.td,{children:"20.8"}),(0,t.jsx)(d.td,{children:"12/23/2010"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"3"}),(0,t.jsx)(d.td,{children:"online_sales"}),(0,t.jsx)(d.td,{children:"20.8"}),(0,t.jsx)(d.td,{children:"12/23/2010"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"4"}),(0,t.jsx)(d.td,{children:"online_sales"}),(0,t.jsx)(d.td,{children:"20.8"}),(0,t.jsx)(d.td,{children:"12/23/2010"})]})]})]}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"# groupby date and sum() up the sales\ndf_sample = df_sample.groupby(\n    ['item_id', 'timestamp']).sum()\n\nprint(df_sample.info())\n# MultiIndex: 305 entries, ('online_sales', '01/04/2011') to ('online_sales', '12/23/2010')\ndf_sample.head(5)\n"})}),"\n",(0,t.jsxs)(d.table,{children:[(0,t.jsx)(d.thead,{children:(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.th,{children:"item_id"}),(0,t.jsx)(d.th,{children:"timestamp"}),(0,t.jsx)(d.th,{children:"target"})]})}),(0,t.jsxs)(d.tbody,{children:[(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"online_sales"}),(0,t.jsx)(d.td,{children:"01/04/2011"}),(0,t.jsx)(d.td,{children:"15584.29"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"01/05/2011"}),(0,t.jsx)(d.td,{children:"75076.22"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"01/07/2011"}),(0,t.jsx)(d.td,{children:"81417.78"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"01/09/2011"}),(0,t.jsx)(d.td,{children:"32131.53"})]})]})]}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"df_sample.loc['online_sales']['target'].plot(\n    title='Sales Volume by Date',\n    figsize=(10,5),\n    rot=45,\n    legend=True\n)\nplt.savefig('assets/AutoGluon_AutoML_TimeSeries_01.webp', bbox_inches='tight')\n"})}),"\n",(0,t.jsx)(d.p,{children:(0,t.jsx)(d.img,{alt:"AutoML with AutoGluon for Timeseries Data",src:n(63293).Z+"",width:"857",height:"522"})}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"df_sample.to_csv('dataset/single_variant_ts.csv', index=True)\n"})}),"\n",(0,t.jsx)(d.h3,{id:"model-training",children:"Model Training"}),"\n",(0,t.jsxs)(d.blockquote,{children:["\n",(0,t.jsxs)(d.p,{children:["ValueError: Frequency not provided and cannot be inferred. This is often due to the time index of the data being\nirregularly sampled. Please ensure that the data set used has a uniform time index, or create the\n",(0,t.jsx)(d.code,{children:"TimeSeriesPredictor"})," setting ",(0,t.jsx)(d.code,{children:"ignore_time_index=True"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(d.p,{children:["AutoGluon does not like irregular timeseries ",(0,t.jsx)(d.strong,{children:"AT ALL"}),"... I manually fixed the ",(0,t.jsx)(d.code,{children:"timestamp"})," column with regular, daily interval. Docs recommend auto-filling for missing data before model training."]}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"train_data = TimeSeriesDataFrame('dataset/single_variant_ts.csv')\ntrain_data.describe()\n"})}),"\n",(0,t.jsxs)(d.table,{children:[(0,t.jsx)(d.thead,{children:(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.th,{}),(0,t.jsx)(d.th,{children:"target"})]})}),(0,t.jsxs)(d.tbody,{children:[(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"count"}),(0,t.jsx)(d.td,{children:"305.000000"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"mean"}),(0,t.jsx)(d.td,{children:"31959.829292"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"std"}),(0,t.jsx)(d.td,{children:"17414.261664"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"min"}),(0,t.jsx)(d.td,{children:"-1566.230000"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"25%"}),(0,t.jsx)(d.td,{children:"20728.140000"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"50%"}),(0,t.jsx)(d.td,{children:"27978.410000"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"75%"}),(0,t.jsx)(d.td,{children:"42912.400000"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"max"}),(0,t.jsx)(d.td,{children:"112141.110000"})]})]})]}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"# create a predictor for 30 days (30 row in dataset) forcast\nsv_predictor = TimeSeriesPredictor(\n    prediction_length=30,\n    path=MODEL_PATH,\n    target='target',\n    eval_metric='sMAPE'\n)\n"})}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"sv_predictor.fit(\n    train_data,\n    time_limit=800,\n    presets=\"medium_quality\"\n)\n\n# Training complete. Models trained: ['Naive', 'SeasonalNaive', 'Theta', 'AutoETS', 'RecursiveTabular', 'DeepAR', 'WeightedEnsemble']\n# Total runtime: 146.36 s\n# Best model: WeightedEnsemble\n# Best model score: -0.2301\n"})}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"sv_predictor.fit_summary()\n"})}),"\n",(0,t.jsx)(d.p,{children:"Estimated performance of each model:"}),"\n",(0,t.jsxs)(d.table,{children:[(0,t.jsx)(d.thead,{children:(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.th,{}),(0,t.jsx)(d.th,{children:"model"}),(0,t.jsx)(d.th,{children:"score_val"}),(0,t.jsx)(d.th,{children:"pred_time_val"}),(0,t.jsx)(d.th,{children:"fit_time_marginal"}),(0,t.jsx)(d.th,{children:"fit_order"})]})}),(0,t.jsxs)(d.tbody,{children:[(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"WeightedEnsemble"}),(0,t.jsx)(d.td,{children:"-0.321595"}),(0,t.jsx)(d.td,{children:"1.042651"}),(0,t.jsx)(d.td,{children:"1.881647"}),(0,t.jsx)(d.td,{children:"7"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"1"}),(0,t.jsx)(d.td,{children:"RecursiveTabular"}),(0,t.jsx)(d.td,{children:"-0.321595"}),(0,t.jsx)(d.td,{children:"1.042651"}),(0,t.jsx)(d.td,{children:"0.757291"}),(0,t.jsx)(d.td,{children:"5"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"2"}),(0,t.jsx)(d.td,{children:"DeepAR"}),(0,t.jsx)(d.td,{children:"-0.384756"}),(0,t.jsx)(d.td,{children:"0.095033"}),(0,t.jsx)(d.td,{children:"69.751811"}),(0,t.jsx)(d.td,{children:"6"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"3"}),(0,t.jsx)(d.td,{children:"AutoETS"}),(0,t.jsx)(d.td,{children:"-0.385364"}),(0,t.jsx)(d.td,{children:"22.865800"}),(0,t.jsx)(d.td,{children:"0.012004"}),(0,t.jsx)(d.td,{children:"4"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"4"}),(0,t.jsx)(d.td,{children:"Theta"}),(0,t.jsx)(d.td,{children:"-0.397785"}),(0,t.jsx)(d.td,{children:"24.269135"}),(0,t.jsx)(d.td,{children:"0.009619"}),(0,t.jsx)(d.td,{children:"3"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"5"}),(0,t.jsx)(d.td,{children:"SeasonalNaive"}),(0,t.jsx)(d.td,{children:"-0.403544"}),(0,t.jsx)(d.td,{children:"5.162711"}),(0,t.jsx)(d.td,{children:"0.010179"}),(0,t.jsx)(d.td,{children:"2"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"6"}),(0,t.jsx)(d.td,{children:"Naive"}),(0,t.jsx)(d.td,{children:"-0.403544"}),(0,t.jsx)(d.td,{children:"5.572433"}),(0,t.jsx)(d.td,{children:"0.009085"}),(0,t.jsx)(d.td,{children:"1"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.em,{children:"Number of models trained: 7"})}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.em,{children:"Types of models trained:"})}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"{'MultiWindowBacktestingModel', 'TimeSeriesGreedyEnsemble'}"})}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{})]})]})]}),"\n",(0,t.jsx)(d.h3,{id:"model-evaluation",children:"Model Evaluation"}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"# return a 1 month forcast on the training data\nsv_predictions = sv_predictor.predict(train_data, random_seed=SEED)\n"})}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"sv_predictions\n"})}),"\n",(0,t.jsxs)(d.table,{children:[(0,t.jsx)(d.thead,{children:(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.th,{}),(0,t.jsx)(d.th,{}),(0,t.jsx)(d.th,{children:"mean"}),(0,t.jsx)(d.th,{children:"0.1"}),(0,t.jsx)(d.th,{children:"0.2"}),(0,t.jsx)(d.th,{children:"0.3"}),(0,t.jsx)(d.th,{children:"0.4"}),(0,t.jsx)(d.th,{children:"0.5"}),(0,t.jsx)(d.th,{children:"0.6"}),(0,t.jsx)(d.th,{children:"0.7"}),(0,t.jsx)(d.th,{children:"0.8"}),(0,t.jsx)(d.th,{children:"0.9"})]})}),(0,t.jsxs)(d.tbody,{children:[(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"item_id"}),(0,t.jsx)(d.td,{children:"timestamp"}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"online_sales"}),(0,t.jsx)(d.td,{children:"2011-10-16"}),(0,t.jsx)(d.td,{children:"35231.549892"}),(0,t.jsx)(d.td,{children:"14821.287291"}),(0,t.jsx)(d.td,{children:"21889.080854"}),(0,t.jsx)(d.td,{children:"26885.810628"}),(0,t.jsx)(d.td,{children:"31139.108555"}),(0,t.jsx)(d.td,{children:"35389.176845"}),(0,t.jsx)(d.td,{children:"39525.311786"}),(0,t.jsx)(d.td,{children:"43747.076754"}),(0,t.jsx)(d.td,{children:"48715.574839"}),(0,t.jsx)(d.td,{children:"55619.827997"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2011-10-17"}),(0,t.jsx)(d.td,{children:"37319.098400"}),(0,t.jsx)(d.td,{children:"9315.489680"}),(0,t.jsx)(d.td,{children:"18992.518673"}),(0,t.jsx)(d.td,{children:"25927.428089"}),(0,t.jsx)(d.td,{children:"31800.990269"}),(0,t.jsx)(d.td,{children:"37256.964611"}),(0,t.jsx)(d.td,{children:"42685.962390"}),(0,t.jsx)(d.td,{children:"48685.278476"}),(0,t.jsx)(d.td,{children:"55741.918605"}),(0,t.jsx)(d.td,{children:"65278.986905"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2011-10-18"}),(0,t.jsx)(d.td,{children:"38623.633612"}),(0,t.jsx)(d.td,{children:"5142.371285"}),(0,t.jsx)(d.td,{children:"16610.764052"}),(0,t.jsx)(d.td,{children:"24909.974641"}),(0,t.jsx)(d.td,{children:"32018.253338"}),(0,t.jsx)(d.td,{children:"38569.692694"}),(0,t.jsx)(d.td,{children:"45201.922577"}),(0,t.jsx)(d.td,{children:"52390.855571"}),(0,t.jsx)(d.td,{children:"60646.930906"}),(0,t.jsx)(d.td,{children:"72387.928409"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2011-10-19"}),(0,t.jsx)(d.td,{children:"40741.301758"}),(0,t.jsx)(d.td,{children:"1946.154973"}),(0,t.jsx)(d.td,{children:"15539.068760"}),(0,t.jsx)(d.td,{children:"25137.953113"}),(0,t.jsx)(d.td,{children:"33223.044572"}),(0,t.jsx)(d.td,{children:"40765.606934"}),(0,t.jsx)(d.td,{children:"48463.165389"}),(0,t.jsx)(d.td,{children:"56628.990736"}),(0,t.jsx)(d.td,{children:"66077.743741"}),(0,t.jsx)(d.td,{children:"79722.836483"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2011-10-20"}),(0,t.jsx)(d.td,{children:"49296.101707"}),(0,t.jsx)(d.td,{children:"6303.232915"}),(0,t.jsx)(d.td,{children:"21458.815514"}),(0,t.jsx)(d.td,{children:"31910.941266"}),(0,t.jsx)(d.td,{children:"40964.792632"}),(0,t.jsx)(d.td,{children:"49394.712059"}),(0,t.jsx)(d.td,{children:"57908.461563"}),(0,t.jsx)(d.td,{children:"66841.601504"}),(0,t.jsx)(d.td,{children:"77474.686240"}),(0,t.jsx)(d.td,{children:"92186.915812"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2011-10-21"}),(0,t.jsx)(d.td,{children:"42399.179004"}),(0,t.jsx)(d.td,{children:"-4222.418692"}),(0,t.jsx)(d.td,{children:"11966.114749"}),(0,t.jsx)(d.td,{children:"23324.147218"}),(0,t.jsx)(d.td,{children:"33287.622759"}),(0,t.jsx)(d.td,{children:"42457.754199"}),(0,t.jsx)(d.td,{children:"51587.049946"}),(0,t.jsx)(d.td,{children:"61400.403661"}),(0,t.jsx)(d.td,{children:"72842.296970"}),(0,t.jsx)(d.td,{children:"88931.093472"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2011-10-22"}),(0,t.jsx)(d.td,{children:"33619.926637"}),(0,t.jsx)(d.td,{children:"-17087.154419"}),(0,t.jsx)(d.td,{children:"364.144617"}),(0,t.jsx)(d.td,{children:"12901.404480"}),(0,t.jsx)(d.td,{children:"23491.862364"}),(0,t.jsx)(d.td,{children:"33662.238893"}),(0,t.jsx)(d.td,{children:"43520.884464"}),(0,t.jsx)(d.td,{children:"54164.964907"}),(0,t.jsx)(d.td,{children:"66630.573647"}),(0,t.jsx)(d.td,{children:"84037.471194"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2011-10-23"}),(0,t.jsx)(d.td,{children:"39042.384772"}),(0,t.jsx)(d.td,{children:"-14703.540432"}),(0,t.jsx)(d.td,{children:"3853.552955"}),(0,t.jsx)(d.td,{children:"17218.430626"}),(0,t.jsx)(d.td,{children:"28519.710014"}),(0,t.jsx)(d.td,{children:"39090.598639"}),(0,t.jsx)(d.td,{children:"49763.392538"}),(0,t.jsx)(d.td,{children:"60939.668264"}),(0,t.jsx)(d.td,{children:"74324.111121"}),(0,t.jsx)(d.td,{children:"92676.374673"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2011-10-24"}),(0,t.jsx)(d.td,{children:"37314.733017"}),(0,t.jsx)(d.td,{children:"-19270.824930"}),(0,t.jsx)(d.td,{children:"233.744114"}),(0,t.jsx)(d.td,{children:"14092.680263"}),(0,t.jsx)(d.td,{children:"26011.109933"}),(0,t.jsx)(d.td,{children:"37258.663681"}),(0,t.jsx)(d.td,{children:"48286.522116"}),(0,t.jsx)(d.td,{children:"60254.494754"}),(0,t.jsx)(d.td,{children:"74152.628169"}),(0,t.jsx)(d.td,{children:"93725.394967"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2011-10-25"}),(0,t.jsx)(d.td,{children:"40035.277581"}),(0,t.jsx)(d.td,{children:"-19730.031575"}),(0,t.jsx)(d.td,{children:"823.364529"}),(0,t.jsx)(d.td,{children:"15754.378083"}),(0,t.jsx)(d.td,{children:"28379.185360"}),(0,t.jsx)(d.td,{children:"40095.125237"}),(0,t.jsx)(d.td,{children:"51768.504080"}),(0,t.jsx)(d.td,{children:"64369.746415"}),(0,t.jsx)(d.td,{children:"78969.545369"}),(0,t.jsx)(d.td,{children:"99392.125068"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2011-10-26"}),(0,t.jsx)(d.td,{children:"43809.551647"}),(0,t.jsx)(d.td,{children:"-18581.300915"}),(0,t.jsx)(d.td,{children:"2831.155428"}),(0,t.jsx)(d.td,{children:"18233.929143"}),(0,t.jsx)(d.td,{children:"31493.221895"}),(0,t.jsx)(d.td,{children:"43799.325572"}),(0,t.jsx)(d.td,{children:"56059.960500"}),(0,t.jsx)(d.td,{children:"69262.074053"}),(0,t.jsx)(d.td,{children:"84846.687611"}),(0,t.jsx)(d.td,{children:"106247.592685"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2011-10-27"}),(0,t.jsx)(d.td,{children:"40978.233969"}),(0,t.jsx)(d.td,{children:"-24604.018712"}),(0,t.jsx)(d.td,{children:"-2246.682396"}),(0,t.jsx)(d.td,{children:"14204.335705"}),(0,t.jsx)(d.td,{children:"28124.915072"}),(0,t.jsx)(d.td,{children:"41120.107016"}),(0,t.jsx)(d.td,{children:"53865.685435"}),(0,t.jsx)(d.td,{children:"67632.214997"}),(0,t.jsx)(d.td,{children:"83850.112737"}),(0,t.jsx)(d.td,{children:"106498.851884"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2011-10-28"}),(0,t.jsx)(d.td,{children:"41743.192227"}),(0,t.jsx)(d.td,{children:"-26024.978536"}),(0,t.jsx)(d.td,{children:"-2645.385307"}),(0,t.jsx)(d.td,{children:"14166.811130"}),(0,t.jsx)(d.td,{children:"28273.284258"}),(0,t.jsx)(d.td,{children:"41561.178311"}),(0,t.jsx)(d.td,{children:"54943.112404"}),(0,t.jsx)(d.td,{children:"69180.700278"}),(0,t.jsx)(d.td,{children:"86004.451402"}),(0,t.jsx)(d.td,{children:"109515.329421"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2011-10-29"}),(0,t.jsx)(d.td,{children:"38315.939169"}),(0,t.jsx)(d.td,{children:"-32037.733749"}),(0,t.jsx)(d.td,{children:"-7961.047361"}),(0,t.jsx)(d.td,{children:"9530.292590"}),(0,t.jsx)(d.td,{children:"24433.420394"}),(0,t.jsx)(d.td,{children:"38430.213583"}),(0,t.jsx)(d.td,{children:"52199.831968"}),(0,t.jsx)(d.td,{children:"67014.321833"}),(0,t.jsx)(d.td,{children:"84580.597330"}),(0,t.jsx)(d.td,{children:"108781.710477"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2011-10-30"}),(0,t.jsx)(d.td,{children:"40790.730787"}),(0,t.jsx)(d.td,{children:"-31714.294692"}),(0,t.jsx)(d.td,{children:"-6632.032918"}),(0,t.jsx)(d.td,{children:"11250.135692"}),(0,t.jsx)(d.td,{children:"26624.395493"}),(0,t.jsx)(d.td,{children:"40830.333814"}),(0,t.jsx)(d.td,{children:"55083.397136"}),(0,t.jsx)(d.td,{children:"70254.854690"}),(0,t.jsx)(d.td,{children:"88116.212266"}),(0,t.jsx)(d.td,{children:"113018.777994"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2011-10-31"}),(0,t.jsx)(d.td,{children:"39601.428364"}),(0,t.jsx)(d.td,{children:"-35269.325656"}),(0,t.jsx)(d.td,{children:"-9299.692907"}),(0,t.jsx)(d.td,{children:"9073.426874"}),(0,t.jsx)(d.td,{children:"24982.993094"}),(0,t.jsx)(d.td,{children:"39702.658833"}),(0,t.jsx)(d.td,{children:"54402.247423"}),(0,t.jsx)(d.td,{children:"70171.210127"}),(0,t.jsx)(d.td,{children:"88614.257154"}),(0,t.jsx)(d.td,{children:"114229.722423"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2011-11-01"}),(0,t.jsx)(d.td,{children:"43321.091336"}),(0,t.jsx)(d.td,{children:"-33495.290752"}),(0,t.jsx)(d.td,{children:"-7238.416761"}),(0,t.jsx)(d.td,{children:"11718.451027"}),(0,t.jsx)(d.td,{children:"27982.345746"}),(0,t.jsx)(d.td,{children:"43267.875515"}),(0,t.jsx)(d.td,{children:"58529.011730"}),(0,t.jsx)(d.td,{children:"74809.030961"}),(0,t.jsx)(d.td,{children:"93805.173651"}),(0,t.jsx)(d.td,{children:"120492.849400"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2011-11-02"}),(0,t.jsx)(d.td,{children:"39873.310897"}),(0,t.jsx)(d.td,{children:"-39638.237188"}),(0,t.jsx)(d.td,{children:"-12259.488831"}),(0,t.jsx)(d.td,{children:"7259.635658"}),(0,t.jsx)(d.td,{children:"24107.774345"}),(0,t.jsx)(d.td,{children:"39944.400252"}),(0,t.jsx)(d.td,{children:"55573.550817"}),(0,t.jsx)(d.td,{children:"72172.974172"}),(0,t.jsx)(d.td,{children:"91871.915068"}),(0,t.jsx)(d.td,{children:"119270.200045"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2011-11-03"}),(0,t.jsx)(d.td,{children:"38897.212691"}),(0,t.jsx)(d.td,{children:"-42509.220460"}),(0,t.jsx)(d.td,{children:"-14725.370733"}),(0,t.jsx)(d.td,{children:"5465.492686"}),(0,t.jsx)(d.td,{children:"22784.085743"}),(0,t.jsx)(d.td,{children:"38756.254195"}),(0,t.jsx)(d.td,{children:"54814.426553"}),(0,t.jsx)(d.td,{children:"72198.679766"}),(0,t.jsx)(d.td,{children:"92621.915745"}),(0,t.jsx)(d.td,{children:"120534.229094"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2011-11-04"}),(0,t.jsx)(d.td,{children:"45310.748490"}),(0,t.jsx)(d.td,{children:"-37919.694783"}),(0,t.jsx)(d.td,{children:"-9357.164960"}),(0,t.jsx)(d.td,{children:"11175.946162"}),(0,t.jsx)(d.td,{children:"28815.300995"}),(0,t.jsx)(d.td,{children:"45152.634721"}),(0,t.jsx)(d.td,{children:"61626.068300"}),(0,t.jsx)(d.td,{children:"79239.016639"}),(0,t.jsx)(d.td,{children:"99980.063552"}),(0,t.jsx)(d.td,{children:"128811.104239"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2011-11-05"}),(0,t.jsx)(d.td,{children:"40524.113111"}),(0,t.jsx)(d.td,{children:"-45095.463685"}),(0,t.jsx)(d.td,{children:"-15760.925828"}),(0,t.jsx)(d.td,{children:"5668.926472"}),(0,t.jsx)(d.td,{children:"23679.488279"}),(0,t.jsx)(d.td,{children:"40503.121411"}),(0,t.jsx)(d.td,{children:"57398.500638"}),(0,t.jsx)(d.td,{children:"75497.467474"}),(0,t.jsx)(d.td,{children:"96633.997752"}),(0,t.jsx)(d.td,{children:"126117.225307"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2011-11-06"}),(0,t.jsx)(d.td,{children:"40806.692620"}),(0,t.jsx)(d.td,{children:"-46676.736613"}),(0,t.jsx)(d.td,{children:"-16544.120931"}),(0,t.jsx)(d.td,{children:"5068.030397"}),(0,t.jsx)(d.td,{children:"23563.217104"}),(0,t.jsx)(d.td,{children:"40845.487542"}),(0,t.jsx)(d.td,{children:"58063.833664"}),(0,t.jsx)(d.td,{children:"76565.798203"}),(0,t.jsx)(d.td,{children:"98222.894111"}),(0,t.jsx)(d.td,{children:"128465.220975"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2011-11-07"}),(0,t.jsx)(d.td,{children:"43503.676450"}),(0,t.jsx)(d.td,{children:"-46255.703438"}),(0,t.jsx)(d.td,{children:"-15315.077993"}),(0,t.jsx)(d.td,{children:"6965.648074"}),(0,t.jsx)(d.td,{children:"25902.252457"}),(0,t.jsx)(d.td,{children:"43336.311215"}),(0,t.jsx)(d.td,{children:"61053.512552"}),(0,t.jsx)(d.td,{children:"80111.716545"}),(0,t.jsx)(d.td,{children:"102295.131332"}),(0,t.jsx)(d.td,{children:"133194.560977"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2011-11-08"}),(0,t.jsx)(d.td,{children:"39830.233893"}),(0,t.jsx)(d.td,{children:"-51545.615185"}),(0,t.jsx)(d.td,{children:"-20027.924158"}),(0,t.jsx)(d.td,{children:"2662.824619"}),(0,t.jsx)(d.td,{children:"21906.346012"}),(0,t.jsx)(d.td,{children:"39980.482428"}),(0,t.jsx)(d.td,{children:"58006.295602"}),(0,t.jsx)(d.td,{children:"77399.156839"}),(0,t.jsx)(d.td,{children:"99888.163672"}),(0,t.jsx)(d.td,{children:"131151.589197"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2011-11-09"}),(0,t.jsx)(d.td,{children:"36990.513044"}),(0,t.jsx)(d.td,{children:"-56523.526649"}),(0,t.jsx)(d.td,{children:"-24495.447993"}),(0,t.jsx)(d.td,{children:"-1066.945972"}),(0,t.jsx)(d.td,{children:"18732.001915"}),(0,t.jsx)(d.td,{children:"37151.279157"}),(0,t.jsx)(d.td,{children:"55520.419680"}),(0,t.jsx)(d.td,{children:"75331.859267"}),(0,t.jsx)(d.td,{children:"98382.970785"}),(0,t.jsx)(d.td,{children:"130468.262942"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2011-11-10"}),(0,t.jsx)(d.td,{children:"42656.625332"}),(0,t.jsx)(d.td,{children:"-52222.084277"}),(0,t.jsx)(d.td,{children:"-19714.514788"}),(0,t.jsx)(d.td,{children:"3802.223665"}),(0,t.jsx)(d.td,{children:"23887.046793"}),(0,t.jsx)(d.td,{children:"42525.441250"}),(0,t.jsx)(d.td,{children:"61225.057142"}),(0,t.jsx)(d.td,{children:"81332.468161"}),(0,t.jsx)(d.td,{children:"104820.044505"}),(0,t.jsx)(d.td,{children:"137808.305522"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2011-11-11"}),(0,t.jsx)(d.td,{children:"44756.329828"}),(0,t.jsx)(d.td,{children:"-52548.031615"}),(0,t.jsx)(d.td,{children:"-18656.197064"}),(0,t.jsx)(d.td,{children:"5288.754038"}),(0,t.jsx)(d.td,{children:"25734.360637"}),(0,t.jsx)(d.td,{children:"44828.240961"}),(0,t.jsx)(d.td,{children:"63986.351020"}),(0,t.jsx)(d.td,{children:"84378.816506"}),(0,t.jsx)(d.td,{children:"108611.618683"}),(0,t.jsx)(d.td,{children:"142140.108263"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2011-11-12"}),(0,t.jsx)(d.td,{children:"37905.655743"}),(0,t.jsx)(d.td,{children:"-60991.102805"}),(0,t.jsx)(d.td,{children:"-27099.347751"}),(0,t.jsx)(d.td,{children:"-2388.499412"}),(0,t.jsx)(d.td,{children:"18511.776221"}),(0,t.jsx)(d.td,{children:"38050.389629"}),(0,t.jsx)(d.td,{children:"57546.974229"}),(0,t.jsx)(d.td,{children:"78416.261580"}),(0,t.jsx)(d.td,{children:"102719.966853"}),(0,t.jsx)(d.td,{children:"136415.925032"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2011-11-13"}),(0,t.jsx)(d.td,{children:"44715.800505"}),(0,t.jsx)(d.td,{children:"-55633.323514"}),(0,t.jsx)(d.td,{children:"-20782.285358"}),(0,t.jsx)(d.td,{children:"3913.667987"}),(0,t.jsx)(d.td,{children:"24980.451031"}),(0,t.jsx)(d.td,{children:"44809.798552"}),(0,t.jsx)(d.td,{children:"64605.937576"}),(0,t.jsx)(d.td,{children:"85704.112222"}),(0,t.jsx)(d.td,{children:"110433.920792"}),(0,t.jsx)(d.td,{children:"144866.205041"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2011-11-14"}),(0,t.jsx)(d.td,{children:"38863.458282"}),(0,t.jsx)(d.td,{children:"-62877.590928"}),(0,t.jsx)(d.td,{children:"-28234.112477"}),(0,t.jsx)(d.td,{children:"-2844.261356"}),(0,t.jsx)(d.td,{children:"18802.531926"}),(0,t.jsx)(d.td,{children:"38951.660430"}),(0,t.jsx)(d.td,{children:"59170.908563"}),(0,t.jsx)(d.td,{children:"80678.533877"}),(0,t.jsx)(d.td,{children:"105966.185779"}),(0,t.jsx)(d.td,{children:"141098.465744"})]})]})]}),"\n",(0,t.jsx)(d.h4,{id:"visualization",children:"Visualization"}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"def plot_predictions(train_data, predictions, item_id, target_column, titel, ylabel):\n    plt.figure(figsize=(12,5))\n    plt.title(titel)\n    plt.xlabel('Date')\n    plt.ylabel(ylabel)\n    # timeseries data\n    y_train = train_data.loc[item_id][target_column]\n    plt.plot(y_train, label=\"Timeseries Data\")\n    # forcast data\n    y_pred = predictions.loc[item_id]\n    plt.plot(y_pred['mean'], label=\"Mean Forecast\")\n    # confidence intervals\n    plt.fill_between(\n        y_pred.index , y_pred['0.1'], y_pred['0.9'],\n        color='red', alpha=0.1, label='10%-90% Confidence Range'\n    )\n"})}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"plot_predictions(\n    train_data, sv_predictions,\n    item_id='online_sales', target_column='target',\n    titel='30 Days Sales Prediction with Confidence Interval',\n    ylabel = 'Sales Volume'\n)\nplt.savefig('assets/AutoGluon_AutoML_TimeSeries_02.webp', bbox_inches='tight')\n"})}),"\n",(0,t.jsx)(d.p,{children:(0,t.jsx)(d.img,{alt:"AutoML with AutoGluon for Timeseries Data",src:n(244067).Z+"",width:"1034",height:"470"})}),"\n",(0,t.jsx)(d.h2,{id:"multi-variate-forecasting---future-covariants",children:"Multi Variate Forecasting - Future Covariants"}),"\n",(0,t.jsx)(d.p,{children:"Add known factors that affected your time series data in the past to future prediction - e.g. holidays on restaurant revenues."}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"# get dataset\n!wget https://github.com/DaviRolim/datasets/raw/master/RestaurantVisitors.csv -P dataset\n"})}),"\n",(0,t.jsx)(d.h3,{id:"data-preprocessing-1",children:"Data Preprocessing"}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"df = pd.read_csv('dataset/RestaurantVisitors.csv')\ndf.tail(5)\n# dataset contains unknowns -> will be used for prediction\n"})}),"\n",(0,t.jsxs)(d.table,{children:[(0,t.jsx)(d.thead,{children:(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.th,{}),(0,t.jsx)(d.th,{children:"date"}),(0,t.jsx)(d.th,{children:"weekday"}),(0,t.jsx)(d.th,{children:"holiday"}),(0,t.jsx)(d.th,{children:"holiday_name"}),(0,t.jsx)(d.th,{children:"rest1"}),(0,t.jsx)(d.th,{children:"rest2"}),(0,t.jsx)(d.th,{children:"rest3"}),(0,t.jsx)(d.th,{children:"rest4"}),(0,t.jsx)(d.th,{children:"total"})]})}),(0,t.jsxs)(d.tbody,{children:[(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"512"}),(0,t.jsx)(d.td,{children:"5/27/2017"}),(0,t.jsx)(d.td,{children:"Saturday"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"na"}),(0,t.jsx)(d.td,{children:"NaN"}),(0,t.jsx)(d.td,{children:"NaN"}),(0,t.jsx)(d.td,{children:"NaN"}),(0,t.jsx)(d.td,{children:"NaN"}),(0,t.jsx)(d.td,{children:"NaN"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"513"}),(0,t.jsx)(d.td,{children:"5/28/2017"}),(0,t.jsx)(d.td,{children:"Sunday"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"na"}),(0,t.jsx)(d.td,{children:"NaN"}),(0,t.jsx)(d.td,{children:"NaN"}),(0,t.jsx)(d.td,{children:"NaN"}),(0,t.jsx)(d.td,{children:"NaN"}),(0,t.jsx)(d.td,{children:"NaN"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"514"}),(0,t.jsx)(d.td,{children:"5/29/2017"}),(0,t.jsx)(d.td,{children:"Monday"}),(0,t.jsx)(d.td,{children:"1"}),(0,t.jsx)(d.td,{children:"Memorial Day"}),(0,t.jsx)(d.td,{children:"NaN"}),(0,t.jsx)(d.td,{children:"NaN"}),(0,t.jsx)(d.td,{children:"NaN"}),(0,t.jsx)(d.td,{children:"NaN"}),(0,t.jsx)(d.td,{children:"NaN"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"515"}),(0,t.jsx)(d.td,{children:"5/30/2017"}),(0,t.jsx)(d.td,{children:"Tuesday"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"na"}),(0,t.jsx)(d.td,{children:"NaN"}),(0,t.jsx)(d.td,{children:"NaN"}),(0,t.jsx)(d.td,{children:"NaN"}),(0,t.jsx)(d.td,{children:"NaN"}),(0,t.jsx)(d.td,{children:"NaN"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"516"}),(0,t.jsx)(d.td,{children:"5/31/2017"}),(0,t.jsx)(d.td,{children:"Wednesday"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"na"}),(0,t.jsx)(d.td,{children:"NaN"}),(0,t.jsx)(d.td,{children:"NaN"}),(0,t.jsx)(d.td,{children:"NaN"}),(0,t.jsx)(d.td,{children:"NaN"}),(0,t.jsx)(d.td,{children:"NaN"})]})]})]}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"df.info()\n# there are `517` entries but only `478` have a total\n"})}),"\n",(0,t.jsxs)(d.table,{children:[(0,t.jsx)(d.thead,{children:(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.th,{}),(0,t.jsx)(d.th,{children:"Column"}),(0,t.jsx)(d.th,{children:"Non-Null Count"}),(0,t.jsx)(d.th,{children:"Dtype"})]})}),(0,t.jsxs)(d.tbody,{children:[(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"date"}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"517 non-null"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"1"}),(0,t.jsx)(d.td,{children:"weekday"}),(0,t.jsx)(d.td,{children:"517 non-null"}),(0,t.jsx)(d.td,{children:"object"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"2"}),(0,t.jsx)(d.td,{children:"holiday"}),(0,t.jsx)(d.td,{children:"517 non-null"}),(0,t.jsx)(d.td,{children:"int64"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"3"}),(0,t.jsx)(d.td,{children:"holiday_name"}),(0,t.jsx)(d.td,{children:"517 non-null"}),(0,t.jsx)(d.td,{children:"object"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"4"}),(0,t.jsx)(d.td,{children:"rest1"}),(0,t.jsx)(d.td,{children:"478 non-null"}),(0,t.jsx)(d.td,{children:"float64"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"5"}),(0,t.jsx)(d.td,{children:"rest2"}),(0,t.jsx)(d.td,{children:"478 non-null"}),(0,t.jsx)(d.td,{children:"float64"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"6"}),(0,t.jsx)(d.td,{children:"rest3"}),(0,t.jsx)(d.td,{children:"478 non-null"}),(0,t.jsx)(d.td,{children:"float64"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"7"}),(0,t.jsx)(d.td,{children:"rest4"}),(0,t.jsx)(d.td,{children:"478 non-null"}),(0,t.jsx)(d.td,{children:"float64"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"8"}),(0,t.jsx)(d.td,{children:"total"}),(0,t.jsx)(d.td,{children:"478 non-null"}),(0,t.jsx)(d.td,{children:"float64"})]})]})]}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"df_sample = df.copy()\n\n# renaming columns\ndf_sample.rename(columns={'total': 'target', 'date': 'timestamp'}, inplace=True)\ndf_sample['item_id'] = 'restaurant_visitors'\n\n# get numeric representation of weekday from timestamp\ndatetimes = pd.to_datetime(df_sample['timestamp'])\ndf_sample['timestamp'] = datetimes\ndf_sample['weekday'] = datetimes.dt.day_of_week\n\n# drop not needed\ndf_sample.drop(\n    ['rest1', 'rest2', 'rest3', 'rest4', 'holiday_name'],\n    axis=1, inplace=True)\n\ndf_sample.tail(5)\n"})}),"\n",(0,t.jsxs)(d.table,{children:[(0,t.jsx)(d.thead,{children:(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.th,{}),(0,t.jsx)(d.th,{children:"timestamp"}),(0,t.jsx)(d.th,{children:"weekday"}),(0,t.jsx)(d.th,{children:"holiday"}),(0,t.jsx)(d.th,{children:"target"}),(0,t.jsx)(d.th,{children:"item_id"})]})}),(0,t.jsxs)(d.tbody,{children:[(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"512"}),(0,t.jsx)(d.td,{children:"2017-05-27"}),(0,t.jsx)(d.td,{children:"5"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"NaN"}),(0,t.jsx)(d.td,{children:"restaurant_visitors"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"513"}),(0,t.jsx)(d.td,{children:"2017-05-28"}),(0,t.jsx)(d.td,{children:"6"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"NaN"}),(0,t.jsx)(d.td,{children:"restaurant_visitors"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"514"}),(0,t.jsx)(d.td,{children:"2017-05-29"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"1"}),(0,t.jsx)(d.td,{children:"NaN"}),(0,t.jsx)(d.td,{children:"restaurant_visitors"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"515"}),(0,t.jsx)(d.td,{children:"2017-05-30"}),(0,t.jsx)(d.td,{children:"1"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"NaN"}),(0,t.jsx)(d.td,{children:"restaurant_visitors"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"516"}),(0,t.jsx)(d.td,{children:"2017-05-31"}),(0,t.jsx)(d.td,{children:"2"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"NaN"}),(0,t.jsx)(d.td,{children:"restaurant_visitors"})]})]})]}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"# split missing data for prediction\ndf_sample.iloc[:478].to_csv('dataset/mv_known_series.csv', index=False)\ndf_sample.iloc[478:].drop('target',axis=1).to_csv('dataset/mv_unknown_series.csv', index=False)\n"})}),"\n",(0,t.jsx)(d.h3,{id:"model-training-1",children:"Model Training"}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"train_data = TimeSeriesDataFrame('dataset/mv_known_series.csv')\ntrain_data.head(5)\n"})}),"\n",(0,t.jsxs)(d.table,{children:[(0,t.jsx)(d.thead,{children:(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.th,{}),(0,t.jsx)(d.th,{}),(0,t.jsx)(d.th,{children:"weekday"}),(0,t.jsx)(d.th,{children:"holiday"}),(0,t.jsx)(d.th,{children:"target"})]})}),(0,t.jsxs)(d.tbody,{children:[(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"item_id"}),(0,t.jsx)(d.td,{children:"timestamp"}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"restaurant_visitors"}),(0,t.jsx)(d.td,{children:"2016-01-01"}),(0,t.jsx)(d.td,{children:"4"}),(0,t.jsx)(d.td,{children:"1"}),(0,t.jsx)(d.td,{children:"296.0"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2016-01-02"}),(0,t.jsx)(d.td,{children:"5"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"191.0"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2016-01-03"}),(0,t.jsx)(d.td,{children:"6"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"202.0"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2016-01-04"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"105.0"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2016-01-05"}),(0,t.jsx)(d.td,{children:"1"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"98.0"})]})]})]}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"# create a predictor for the length of the unknown series\nmv_predictor = TimeSeriesPredictor(\n    prediction_length=len(df_sample.iloc[478:]),\n    path=MODEL_PATH,\n    target='target',\n    known_covariates_names = ['weekday', 'holiday'],\n    eval_metric='sMAPE'\n)\n"})}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"mv_predictor.fit(\n    train_data,\n    time_limit=800,\n    presets=\"high_quality\"\n)\n\n# Training complete. Models trained: ['Naive', 'SeasonalNaive', 'Theta', 'AutoETS', 'RecursiveTabular', 'DeepAR', 'TemporalFusionTransformer', 'PatchTST', 'AutoARIMA', 'WeightedEnsemble']\n# Total runtime: 470.02 s\n# Best model: WeightedEnsemble\n# Best model score: -0.1501\n"})}),"\n",(0,t.jsx)(d.h3,{id:"model-predictions",children:"Model Predictions"}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"future_series = TimeSeriesDataFrame('dataset/mv_unknown_series.csv')\n"})}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"future_series.head(5)\n"})}),"\n",(0,t.jsxs)(d.table,{children:[(0,t.jsx)(d.thead,{children:(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.th,{}),(0,t.jsx)(d.th,{}),(0,t.jsx)(d.th,{children:"weekday"}),(0,t.jsx)(d.th,{children:"holiday"})]})}),(0,t.jsxs)(d.tbody,{children:[(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"item_id"}),(0,t.jsx)(d.td,{children:"timestamp"}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"restaurant_visitors"}),(0,t.jsx)(d.td,{children:"2017-04-23"}),(0,t.jsx)(d.td,{children:"6"}),(0,t.jsx)(d.td,{children:"0"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2017-04-24"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"0"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2017-04-25"}),(0,t.jsx)(d.td,{children:"1"}),(0,t.jsx)(d.td,{children:"0"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2017-04-26"}),(0,t.jsx)(d.td,{children:"2"}),(0,t.jsx)(d.td,{children:"0"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2017-04-27"}),(0,t.jsx)(d.td,{children:"3"}),(0,t.jsx)(d.td,{children:"0"})]})]})]}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"mv_predictions = mv_predictor.predict(train_data, known_covariates=future_series, random_seed=SEED)\n"})}),"\n",(0,t.jsx)(d.h4,{id:"visualization-1",children:"Visualization"}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"plot_predictions(\n    train_data, mv_predictions,\n    item_id='restaurant_visitors', target_column='target',\n    titel='Restaurant Visitors 39 Days Predictions with Confidence Interval',\n    ylabel = 'Restaurant Revenue'\n)\nplt.savefig('assets/AutoGluon_AutoML_TimeSeries_03.webp', bbox_inches='tight')\n"})}),"\n",(0,t.jsx)(d.p,{children:(0,t.jsx)(d.img,{alt:"AutoML with AutoGluon for Timeseries Data",src:n(104990).Z+"",width:"1005",height:"470"})}),"\n",(0,t.jsx)(d.h2,{id:"multi-variate-forecasting---past-covariants",children:"Multi Variate Forecasting - Past Covariants"}),"\n",(0,t.jsx)(d.p,{children:"The Air Quality dataset reports on the weather and the level of pollution each hour for five years at the US embassy in Beijing, China. The data includes the date-time, the PM2.5 concentration, and the weather information including dew point, temperature, pressure, wind direction, wind speed and the cumulative number of hours of snow and rain."}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"# get dataset\n!wget https://raw.githubusercontent.com/jyoti0225/Air-Pollution-Forecasting/master/AirPollution.csv -P dataset\n"})}),"\n",(0,t.jsx)(d.h3,{id:"data-preprocessing-2",children:"Data Preprocessing"}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"# datetime is split up into 4 columns => combine\ndef parse(x):\n    return dt.strptime(x, '%Y %m %d %H')\n"})}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"df = pd.read_csv('dataset/AirPollution.csv', date_parser=parse,parse_dates=[\n    ['year', 'month', 'day', 'hour']\n])\n\ndf.head(5)\n"})}),"\n",(0,t.jsxs)(d.table,{children:[(0,t.jsx)(d.thead,{children:(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.th,{}),(0,t.jsx)(d.th,{children:"year_month_day_hour"}),(0,t.jsx)(d.th,{children:"No"}),(0,t.jsx)(d.th,{children:"pm2.5"}),(0,t.jsx)(d.th,{children:"DEWP"}),(0,t.jsx)(d.th,{children:"TEMP"}),(0,t.jsx)(d.th,{children:"PRES"}),(0,t.jsx)(d.th,{children:"cbwd"}),(0,t.jsx)(d.th,{children:"Iws"}),(0,t.jsx)(d.th,{children:"Is"}),(0,t.jsx)(d.th,{children:"Ir"})]})}),(0,t.jsxs)(d.tbody,{children:[(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"2010-01-01 00:00:00"}),(0,t.jsx)(d.td,{children:"1"}),(0,t.jsx)(d.td,{children:"NaN"}),(0,t.jsx)(d.td,{children:"-21"}),(0,t.jsx)(d.td,{children:"-11.0"}),(0,t.jsx)(d.td,{children:"1021.0"}),(0,t.jsx)(d.td,{children:"NW"}),(0,t.jsx)(d.td,{children:"1.79"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"0"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"1"}),(0,t.jsx)(d.td,{children:"2010-01-01 01:00:00"}),(0,t.jsx)(d.td,{children:"2"}),(0,t.jsx)(d.td,{children:"NaN"}),(0,t.jsx)(d.td,{children:"-21"}),(0,t.jsx)(d.td,{children:"-12.0"}),(0,t.jsx)(d.td,{children:"1020.0"}),(0,t.jsx)(d.td,{children:"NW"}),(0,t.jsx)(d.td,{children:"4.92"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"0"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"2"}),(0,t.jsx)(d.td,{children:"2010-01-01 02:00:00"}),(0,t.jsx)(d.td,{children:"3"}),(0,t.jsx)(d.td,{children:"NaN"}),(0,t.jsx)(d.td,{children:"-21"}),(0,t.jsx)(d.td,{children:"-11.0"}),(0,t.jsx)(d.td,{children:"1019.0"}),(0,t.jsx)(d.td,{children:"NW"}),(0,t.jsx)(d.td,{children:"6.71"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"0"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"3"}),(0,t.jsx)(d.td,{children:"2010-01-01 03:00:00"}),(0,t.jsx)(d.td,{children:"4"}),(0,t.jsx)(d.td,{children:"NaN"}),(0,t.jsx)(d.td,{children:"-21"}),(0,t.jsx)(d.td,{children:"-14.0"}),(0,t.jsx)(d.td,{children:"1019.0"}),(0,t.jsx)(d.td,{children:"NW"}),(0,t.jsx)(d.td,{children:"9.84"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"0"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"4"}),(0,t.jsx)(d.td,{children:"2010-01-01 04:00:00"}),(0,t.jsx)(d.td,{children:"5"}),(0,t.jsx)(d.td,{children:"NaN"}),(0,t.jsx)(d.td,{children:"-20"}),(0,t.jsx)(d.td,{children:"-12.0"}),(0,t.jsx)(d.td,{children:"1018.0"}),(0,t.jsx)(d.td,{children:"NW"}),(0,t.jsx)(d.td,{children:"12.97"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"0"})]})]})]}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"df.info()\n# dataset contains missing pm2.5 values\n\n#  #   Column               Non-Null Count  Dtype         \n# ---  ------               --------------  -----         \n#  0   year_month_day_hour  43824 non-null  datetime64[ns]\n#  1   No                   43824 non-null  int64         \n#  2   pm2.5                41757 non-null  float64       \n#  3   DEWP                 43824 non-null  int64         \n#  4   TEMP                 43824 non-null  float64       \n#  5   PRES                 43824 non-null  float64       \n#  6   cbwd                 43824 non-null  object        \n#  7   Iws                  43824 non-null  float64       \n#  8   Is                   43824 non-null  int64         \n#  9   Ir                   43824 non-null  int64 \n"})}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"df_sample = df.copy()\n\n# one-hot encode wind direction\none_hot_wind = pd.get_dummies(df['cbwd'], drop_first=True)\ndf_sample = pd.concat([df, one_hot_wind], axis=1, join=\"inner\")\n\n# renaming columns\ndf_sample.rename(columns={\n    'year_month_day_hour': 'timestamp',\n    'pm2.5': 'target',\n    'DEWP': 'dew_point',\n    'TEMP': 'temperature',\n    'PRES': 'pressure',\n    'NW': 'wind_direction_nw',\n    'SE': 'wind_direction_se',\n    'cv': 'wind_direction_cv',\n    'Iws': 'wind_speed',\n    'Is': 'snow',\n    'Ir': 'rain'}, inplace=True)\n\n# add item_id\ndf_sample['item_id'] = 'pm2_pollution'\n\n# fill missing targets with mean()\ndf_sample['target'] = df_sample['target'].fillna(df_sample['target'].mean())\n\n# make datetime object\ndatetimes = pd.to_datetime(df_sample['timestamp'])\ndf_sample['timestamp'] = datetimes\ndf_sample['weekday'] = datetimes.dt.day_of_week\n\n# drop not needed\ndf_sample.drop(['No', 'cbwd'], axis=1, inplace=True)\n\ndf_sample.head(5)\n"})}),"\n",(0,t.jsxs)(d.table,{children:[(0,t.jsx)(d.thead,{children:(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.th,{}),(0,t.jsx)(d.th,{children:"timestamp"}),(0,t.jsx)(d.th,{children:"target"}),(0,t.jsx)(d.th,{children:"dew_point"}),(0,t.jsx)(d.th,{children:"temperature"}),(0,t.jsx)(d.th,{children:"pressure"}),(0,t.jsx)(d.th,{children:"wind_speed"}),(0,t.jsx)(d.th,{children:"snow"}),(0,t.jsx)(d.th,{children:"rain"}),(0,t.jsx)(d.th,{children:"wind_direction_nw"}),(0,t.jsx)(d.th,{children:"wind_direction_se"}),(0,t.jsx)(d.th,{children:"wind_direction_cv"}),(0,t.jsx)(d.th,{children:"item_id"}),(0,t.jsx)(d.th,{children:"weekday"})]})}),(0,t.jsxs)(d.tbody,{children:[(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"2010-01-01 00:00:00"}),(0,t.jsx)(d.td,{children:"98.613215"}),(0,t.jsx)(d.td,{children:"-21"}),(0,t.jsx)(d.td,{children:"-11.0"}),(0,t.jsx)(d.td,{children:"1021.0"}),(0,t.jsx)(d.td,{children:"1.79"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"1"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"pm2_pollution"}),(0,t.jsx)(d.td,{children:"4"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"1"}),(0,t.jsx)(d.td,{children:"2010-01-01 01:00:00"}),(0,t.jsx)(d.td,{children:"98.613215"}),(0,t.jsx)(d.td,{children:"-21"}),(0,t.jsx)(d.td,{children:"-12.0"}),(0,t.jsx)(d.td,{children:"1020.0"}),(0,t.jsx)(d.td,{children:"4.92"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"1"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"pm2_pollution"}),(0,t.jsx)(d.td,{children:"4"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"2"}),(0,t.jsx)(d.td,{children:"2010-01-01 02:00:00"}),(0,t.jsx)(d.td,{children:"98.613215"}),(0,t.jsx)(d.td,{children:"-21"}),(0,t.jsx)(d.td,{children:"-11.0"}),(0,t.jsx)(d.td,{children:"1019.0"}),(0,t.jsx)(d.td,{children:"6.71"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"1"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"pm2_pollution"}),(0,t.jsx)(d.td,{children:"4"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"3"}),(0,t.jsx)(d.td,{children:"2010-01-01 03:00:00"}),(0,t.jsx)(d.td,{children:"98.613215"}),(0,t.jsx)(d.td,{children:"-21"}),(0,t.jsx)(d.td,{children:"-14.0"}),(0,t.jsx)(d.td,{children:"1019.0"}),(0,t.jsx)(d.td,{children:"9.84"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"1"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"pm2_pollution"}),(0,t.jsx)(d.td,{children:"4"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"4"}),(0,t.jsx)(d.td,{children:"2010-01-01 04:00:00"}),(0,t.jsx)(d.td,{children:"98.613215"}),(0,t.jsx)(d.td,{children:"-20"}),(0,t.jsx)(d.td,{children:"-12.0"}),(0,t.jsx)(d.td,{children:"1018.0"}),(0,t.jsx)(d.td,{children:"12.97"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"1"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"pm2_pollution"}),(0,t.jsx)(d.td,{children:"4"})]})]})]}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"df_sample.to_csv('dataset/bj_airpollution.csv', index=False)\n"})}),"\n",(0,t.jsx)(d.h3,{id:"model-training-2",children:"Model Training"}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"train_data = TimeSeriesDataFrame('dataset/bj_airpollution.csv')\ntrain_data.head(5)\n"})}),"\n",(0,t.jsxs)(d.table,{children:[(0,t.jsx)(d.thead,{children:(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.th,{}),(0,t.jsx)(d.th,{}),(0,t.jsx)(d.th,{children:"target"}),(0,t.jsx)(d.th,{children:"dew_point"}),(0,t.jsx)(d.th,{children:"temperature"}),(0,t.jsx)(d.th,{children:"pressure"}),(0,t.jsx)(d.th,{children:"wind_speed"}),(0,t.jsx)(d.th,{children:"snow"}),(0,t.jsx)(d.th,{children:"rain"}),(0,t.jsx)(d.th,{children:"wind_direction_nw"}),(0,t.jsx)(d.th,{children:"wind_direction_se"}),(0,t.jsx)(d.th,{children:"wind_direction_cv"}),(0,t.jsx)(d.th,{children:"weekday"})]})}),(0,t.jsxs)(d.tbody,{children:[(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"item_id"}),(0,t.jsx)(d.td,{children:"timestamp"}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"pm2_pollution"}),(0,t.jsx)(d.td,{children:"2010-01-01 00:00:00"}),(0,t.jsx)(d.td,{children:"98.613215"}),(0,t.jsx)(d.td,{children:"-21"}),(0,t.jsx)(d.td,{children:"-11.0"}),(0,t.jsx)(d.td,{children:"1021.0"}),(0,t.jsx)(d.td,{children:"1.79"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"1"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"4"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2010-01-01 01:00:00"}),(0,t.jsx)(d.td,{children:"98.613215"}),(0,t.jsx)(d.td,{children:"-21"}),(0,t.jsx)(d.td,{children:"-12.0"}),(0,t.jsx)(d.td,{children:"1020.0"}),(0,t.jsx)(d.td,{children:"4.92"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"1"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"4"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2010-01-01 02:00:00"}),(0,t.jsx)(d.td,{children:"98.613215"}),(0,t.jsx)(d.td,{children:"-21"}),(0,t.jsx)(d.td,{children:"-11.0"}),(0,t.jsx)(d.td,{children:"1019.0"}),(0,t.jsx)(d.td,{children:"6.71"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"1"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"4"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2010-01-01 03:00:00"}),(0,t.jsx)(d.td,{children:"98.613215"}),(0,t.jsx)(d.td,{children:"-21"}),(0,t.jsx)(d.td,{children:"-14.0"}),(0,t.jsx)(d.td,{children:"1019.0"}),(0,t.jsx)(d.td,{children:"9.84"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"1"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"4"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{}),(0,t.jsx)(d.td,{children:"2010-01-01 04:00:00"}),(0,t.jsx)(d.td,{children:"98.613215"}),(0,t.jsx)(d.td,{children:"-20"}),(0,t.jsx)(d.td,{children:"-12.0"}),(0,t.jsx)(d.td,{children:"1018.0"}),(0,t.jsx)(d.td,{children:"12.97"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"1"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"0"}),(0,t.jsx)(d.td,{children:"4"})]})]})]}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"# 30-day predictor\nbj_predictor = TimeSeriesPredictor(\n    prediction_length=24*30,\n    path=MODEL_PATH,\n    target='target',\n    eval_metric='sMAPE'\n)\n"})}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"bj_predictor.fit(\n    train_data,\n    presets=\"high_quality\"\n)\n\n# Fitting simple weighted ensemble.\n# \t-0.8465       = Validation score (-sMAPE)\n# \t3.16    s     = Training runtime\n# \t40.20   s     = Validation (prediction) runtime\n# Training complete. Models trained: ['Naive', 'SeasonalNaive', 'Theta', 'AutoETS', 'RecursiveTabular', 'DeepAR', 'PatchTST', 'AutoARIMA', 'WeightedEnsemble']\n# Total runtime: 693.53 s\n# Best model: WeightedEnsemble\n# Best model score: -0.8465\n"})}),"\n",(0,t.jsx)(d.h3,{id:"model-predictions-1",children:"Model Predictions"}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"bj_predictions = bj_predictor.predict(train_data, random_seed=SEED)\n"})}),"\n",(0,t.jsx)(d.h4,{id:"visualization-2",children:"Visualization"}),"\n",(0,t.jsx)(d.pre,{children:(0,t.jsx)(d.code,{className:"language-python",children:"plot_predictions(\n    train_data, bj_predictions,\n    item_id='pm2_pollution', target_column='target',\n    titel='Beijing PM2 Air Pollution 30 Days Predictions with Confidence Interval',\n    ylabel = 'PM2 Measurement'\n)\nplt.savefig('assets/AutoGluon_AutoML_TimeSeries_04.webp', bbox_inches='tight')\n"})}),"\n",(0,t.jsx)(d.p,{children:(0,t.jsx)(d.img,{alt:"AutoML with AutoGluon for Timeseries Data",src:n(930736).Z+"",width:"1017",height:"470"})})]})}function x(e={}){const{wrapper:d}={...(0,s.ah)(),...e.components};return d?(0,t.jsx)(d,{...e,children:(0,t.jsx)(j,{...e})}):j(e)}},603905:(e,d,n)=>{n.d(d,{ah:()=>h});var t=n(667294);function s(e,d,n){return d in e?Object.defineProperty(e,d,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[d]=n,e}function i(e,d){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);d&&(t=t.filter((function(d){return Object.getOwnPropertyDescriptor(e,d).enumerable}))),n.push.apply(n,t)}return n}function r(e){for(var d=1;d<arguments.length;d++){var n=null!=arguments[d]?arguments[d]:{};d%2?i(Object(n),!0).forEach((function(d){s(e,d,n[d])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(d){Object.defineProperty(e,d,Object.getOwnPropertyDescriptor(n,d))}))}return e}function l(e,d){if(null==e)return{};var n,t,s=function(e,d){if(null==e)return{};var n,t,s={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],d.indexOf(n)>=0||(s[n]=e[n]);return s}(e,d);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],d.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var c=t.createContext({}),h=function(e){var d=t.useContext(c),n=d;return e&&(n="function"==typeof e?e(d):r(r({},d),e)),n},j={inlineCode:"code",wrapper:function(e){var d=e.children;return t.createElement(t.Fragment,{},d)}},x=t.forwardRef((function(e,d){var n=e.components,s=e.mdxType,i=e.originalType,c=e.parentName,x=l(e,["components","mdxType","originalType","parentName"]),a=h(n),o=s,u=a["".concat(c,".").concat(o)]||a[o]||j[o]||i;return n?t.createElement(u,r(r({ref:d},x),{},{components:n})):t.createElement(u,r({ref:d},x))}));x.displayName="MDXCreateElement"},63293:(e,d,n)=>{n.d(d,{Z:()=>t});const t=n.p+"assets/images/AutoGluon_AutoML_TimeSeries_01-897999e02086dcfece28d3066e10d4dd.webp"},244067:(e,d,n)=>{n.d(d,{Z:()=>t});const t=n.p+"assets/images/AutoGluon_AutoML_TimeSeries_02-1848d2219529894b6ca6a0d6e85dbbe2.webp"},104990:(e,d,n)=>{n.d(d,{Z:()=>t});const t=n.p+"assets/images/AutoGluon_AutoML_TimeSeries_03-759ebab1c1c6f6ee0e9c27ac915ab541.webp"},930736:(e,d,n)=>{n.d(d,{Z:()=>t});const t=n.p+"assets/images/AutoGluon_AutoML_TimeSeries_04-48cb0da72d8f75a8fad003ff1afc4328.webp"},899684:(e,d,n)=>{n.d(d,{Z:()=>t});const t=n.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-a15d7463fa71afd7563b41d830022879.jpg"}}]);