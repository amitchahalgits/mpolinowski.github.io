"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[71379],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>u});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var l=n.createContext({}),m=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},c=function(e){var t=m(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=m(a),u=i,h=d["".concat(l,".").concat(u)]||d[u]||p[u]||o;return a?n.createElement(h,r(r({ref:t},c),{},{components:a})):n.createElement(h,r({ref:t},c))}));function u(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=a.length,r=new Array(o);r[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,r[1]=s;for(var m=2;m<o;m++)r[m]=a[m];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},22244:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>m});var n=a(87462),i=(a(67294),a(3905));const o={sidebar_position:7020,slug:"2022-07-10",title:"Home Assistant - MQTT Auto-Discovery",authors:"mpolinowski",tags:["IoT"]},r=void 0,s={unversionedId:"IoT-and-Machine-Learning/Home_Automation/2022-07-10-home-assistant-mqtt-autodiscovery/index",id:"IoT-and-Machine-Learning/Home_Automation/2022-07-10-home-assistant-mqtt-autodiscovery/index",title:"Home Assistant - MQTT Auto-Discovery",description:"Guangzhou, China",source:"@site/docs/IoT-and-Machine-Learning/Home_Automation/2022-07-10-home-assistant-mqtt-autodiscovery/index.md",sourceDirName:"IoT-and-Machine-Learning/Home_Automation/2022-07-10-home-assistant-mqtt-autodiscovery",slug:"/IoT-and-Machine-Learning/Home_Automation/2022-07-10-home-assistant-mqtt-autodiscovery/2022-07-10",permalink:"/docs/IoT-and-Machine-Learning/Home_Automation/2022-07-10-home-assistant-mqtt-autodiscovery/2022-07-10",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IoT-and-Machine-Learning/Home_Automation/2022-07-10-home-assistant-mqtt-autodiscovery/index.md",tags:[{label:"IoT",permalink:"/docs/tags/io-t"}],version:"current",sidebarPosition:7020,frontMatter:{sidebar_position:7020,slug:"2022-07-10",title:"Home Assistant - MQTT Auto-Discovery",authors:"mpolinowski",tags:["IoT"]},sidebar:"tutorialSidebar",previous:{title:"Home Automation",permalink:"/docs/category/home-automation"},next:{title:"OpenHab Version 3 - Refresher",permalink:"/docs/IoT-and-Machine-Learning/Home_Automation/2022-06-30-openhab3-refresher/2022-06-25"}},l={},m=[{value:"Discovery Topic",id:"discovery-topic",level:2},{value:"Discovery Payload",id:"discovery-payload",level:2},{value:"Testing",id:"testing",level:2},{value:"Example :: Motion detection (binary sensor)",id:"example--motion-detection-binary-sensor",level:3},{value:"Example :: Sensors",id:"example--sensors",level:3},{value:"Example :: Entities with Command Topics",id:"example--entities-with-command-topics",level:3}],c={toc:m};function p(e){let{components:t,...o}=e;return(0,i.kt)("wrapper",(0,n.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Guangzhou, China",src:a(21401).Z,width:"1500",height:"516"})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#discovery-topic"},"Discovery Topic")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#discovery-payload"},"Discovery Payload")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#testing"},"Testing"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#example--motion-detection-binary-sensor"},"Example :: Motion detection (binary sensor)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#example--sensors"},"Example :: Sensors")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#example--entities-with-command-topics"},"Example :: Entities with Command Topics"))))),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"https://www.home-assistant.io/docs/mqtt/discovery/"},"discovery of MQTT devices")," will enable one to use MQTT devices with only minimal configuration effort on the side of Home Assistant. Two parts are required on the device side: The configuration topic which contains the necessary device type and unique identifier, and the remaining device configuration without the device type."),(0,i.kt)("h2",{id:"discovery-topic"},"Discovery Topic"),(0,i.kt)("p",null,"The discovery topic needs to follow a specific format:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},"<discovery_prefix>/<component>/[<node_id>/]<object_id>/config\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<component>"),": One of the supported MQTT components, eg. ",(0,i.kt)("a",{parentName:"li",href:"https://www.home-assistant.io/integrations/binary_sensor.mqtt/"},"binary_sensor"),", ",(0,i.kt)("a",{parentName:"li",href:"https://www.home-assistant.io/integrations/button.mqtt/"},"button"),", ",(0,i.kt)("a",{parentName:"li",href:"https://www.home-assistant.io/integrations/camera.mqtt/"},"camera"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<node_id>")," (Optional): ID of the node providing the topic, this is not used by Home Assistant but may be used to structure the MQTT topic. The ID of the node must only consist of characters from the character class ",(0,i.kt)("inlineCode",{parentName:"li"},"[a-zA-Z0-9_-]")," (alphanumerics, underscore and hyphen)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<object_id>"),": The ID of the device. This is only to allow for separate topics for each device and is not used for the entity",(0,i.kt)("em",{parentName:"li"},"id. The ID of the device must only consist of characters from the character class [a-zA-Z0-9"),"-] (alphanumerics, underscore and hyphen).")),(0,i.kt)("h2",{id:"discovery-payload"},"Discovery Payload"),(0,i.kt)("p",null,"The payload must be a serialized JSON dictionary and will be checked like an entry in your configuration.yaml file if a new device is added, with the exception that unknown configuration keys are allowed but ignored. This means that missing variables will be filled with the platform\u2019s default values. All configuration variables which are required must be present in the payload."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Subsequent messages on a topic where a valid payload has been received will be handled as a configuration update, and a configuration update with an empty payload will cause a previously discovered device to be deleted.")),(0,i.kt)("h2",{id:"testing"},"Testing"),(0,i.kt)("h3",{id:"example--motion-detection-binary-sensor"},"Example :: Motion detection (binary sensor)"),(0,i.kt)("p",null,"Using a camera alarm server to trigger an alert."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Configuration topic"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"homeassistant/binary_sensor/camera1/config")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Payload"),": ",(0,i.kt)("inlineCode",{parentName:"li"},'{"name": "camera1", "device_class": "motion", "state_topic": "cameras/camera1/alarm"}'))),(0,i.kt)("p",null,"Update the ",(0,i.kt)("strong",{parentName:"p"},"State Topic")," ",(0,i.kt)("inlineCode",{parentName:"p"},"cameras/camera1/alarm")," with the payload ",(0,i.kt)("inlineCode",{parentName:"p"},"ON")," to trigger the alarm (and ",(0,i.kt)("inlineCode",{parentName:"p"},"OFF")," to release it again):"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Home Assistant - MQTT Auto-Discovery",src:a(67081).Z,width:"1301",height:"587"})),(0,i.kt)("p",null,"The sensor can be deleted again by by sending an empty message to the ",(0,i.kt)("strong",{parentName:"p"},"Configuration Topic"),"."),(0,i.kt)("h3",{id:"example--sensors"},"Example :: Sensors"),(0,i.kt)("p",null,"Setting up a sensor with multiple measurement values requires multiple consecutive configuration topic submissions."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Configuration topic")," #1: ",(0,i.kt)("inlineCode",{parentName:"li"},"homeassistant/sensor/cameraGardenTemp/config")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Configuration payload")," #1: ",(0,i.kt)("inlineCode",{parentName:"li"},'{"device_class": "temperature", "name": "Garden Temperature", "state_topic": "cameras/garden/status/sensors", "unit_of_measurement": "\xb0C", "value_template": "{{ value_json.temperature}}" }')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Configuration topic")," #2: ",(0,i.kt)("inlineCode",{parentName:"li"},"homeassistant/sensor/cameraGardenHum/config")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Configuration payload")," #2: ",(0,i.kt)("inlineCode",{parentName:"li"},'{"device_class": "humidity", "name": "Garden Humidity", "state_topic": "cameras/garden/status/sensors", "unit_of_measurement": "%", "value_template": "{{ value_json.humidity}}" }'))),(0,i.kt)("p",null,"Now we can update the ",(0,i.kt)("strong",{parentName:"p"},"State Topic")," ",(0,i.kt)("inlineCode",{parentName:"p"},"cameras/garden/status/sensors")," with the ",(0,i.kt)("strong",{parentName:"p"},"Payload")," ",(0,i.kt)("inlineCode",{parentName:"p"},'{ "temperature": 38.20, "humidity": 92.70 }'),"."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Home Assistant - MQTT Auto-Discovery",src:a(60).Z,width:"1206",height:"574"})),(0,i.kt)("p",null,"The sensor can be deleted again by by sending an empty message to the ",(0,i.kt)("strong",{parentName:"p"},"Configuration Topics"),"."),(0,i.kt)("h3",{id:"example--entities-with-command-topics"},"Example :: Entities with Command Topics"),(0,i.kt)("p",null,"Activating or deactivating camera functions, e.g. a ",(0,i.kt)("strong",{parentName:"p"},"Privacy Mask")," ",(0,i.kt)("inlineCode",{parentName:"p"},"multimedia/privacy/region1/enable")," is similar but additionally requires a ",(0,i.kt)("strong",{parentName:"p"},"Command Topic"),". And we will need to handle the formatting - as by default Home Assistant will expect an ",(0,i.kt)("inlineCode",{parentName:"p"},"ON")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"OFF")," as switch values:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Configuration topic"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"homeassistant/switch/in9408_garden/config")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Payload"),": ")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "device": {\n        "identifiers": "in9408_garden",\n        "manufacturer": "INSTAR",\n        "model": "INSTAR IP WQHD Outdoor Camera",\n        "name": "IN-9408 2k+ Garden"\n    },\n    "object_id":"in9408_privacy",\n    "unique_id": "in9408_privacy",\n    "name": "IN-9408 2k+ Garden Privacy Mask",\n    "command_topic": "cameras/115/multimedia/privacy/region1/enable",\n    "payload_on": "{\\"val\\":\\"1\\"}",\n    "payload_off": "{\\"val\\":\\"0\\"}",\n    "state_topic": "cameras/115/status/multimedia/privacy/region1/enable",\n    "state_on": 1,\n    "state_off": 0,\n    "value_template": "{{ value_json.val }}",\n    "qos": 1\n}\n')),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Home Assistant - MQTT Auto-Discovery",src:a(77293).Z,width:"1652",height:"641"})))}p.isMDXComponent=!0},67081:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/Home_Assistant_MQTT_Auto-Discovery_01-390e605cf27d2c5f394722fdbc52e205.png"},60:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/Home_Assistant_MQTT_Auto-Discovery_02-f90005a005c45d8cd714750564bd07f9.png"},77293:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/Home_Assistant_MQTT_Auto-Discovery_03-8fd1fff639fd457c9b99a8e612da0959.png"},21401:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-155e3666db02195caa838d2d6d5dc4bf.jpg"}}]);