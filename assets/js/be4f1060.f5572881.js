"use strict";(self.webpackChunkmikes_dev_notebook=self.webpackChunkmikes_dev_notebook||[]).push([[51707],{568888:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var r=t(474848),i=t(28453);const a={sidebar_position:7030,slug:"2021-11-15",title:"Introduction into FB Prophet",authors:"mpolinowski",tags:["Machine Learning","Python"]},o=void 0,s={id:"IoT-and-Machine-Learning/ML/2021-11-15--facebook-prophet-introduction/index",title:"Introduction into FB Prophet",description:"Shenzhen, China",source:"@site/docs/IoT-and-Machine-Learning/ML/2021-11-15--facebook-prophet-introduction/index.md",sourceDirName:"IoT-and-Machine-Learning/ML/2021-11-15--facebook-prophet-introduction",slug:"/IoT-and-Machine-Learning/ML/2021-11-15--facebook-prophet-introduction/2021-11-15",permalink:"/docs/IoT-and-Machine-Learning/ML/2021-11-15--facebook-prophet-introduction/2021-11-15",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IoT-and-Machine-Learning/ML/2021-11-15--facebook-prophet-introduction/index.md",tags:[{label:"Machine Learning",permalink:"/docs/tags/machine-learning"},{label:"Python",permalink:"/docs/tags/python"}],version:"current",sidebarPosition:7030,frontMatter:{sidebar_position:7030,slug:"2021-11-15",title:"Introduction into FB Prophet",authors:"mpolinowski",tags:["Machine Learning","Python"]},sidebar:"tutorialSidebar",previous:{title:"OpenCV and Images",permalink:"/docs/IoT-and-Machine-Learning/ML/2021-12-01--opencv-with-images/2021-12-01"},next:{title:"Tensorflow.js React App",permalink:"/docs/IoT-and-Machine-Learning/ML/2021-11-14--tensorflow-model-for-tfjs/2021-11-14"}},l={},d=[{value:"Working with multiple Python Versions on Arch Linux",id:"working-with-multiple-python-versions-on-arch-linux",level:2},{value:"Setting up an Virtual Environment",id:"setting-up-an-virtual-environment",level:3},{value:"Installation",id:"installation",level:3},{value:"Jupyter Notebook",id:"jupyter-notebook",level:2},{value:"Importing Data",id:"importing-data",level:2},{value:"Using Prophet",id:"using-prophet",level:2},{value:"Fit a Model",id:"fit-a-model",level:3},{value:"Make Prediction",id:"make-prediction",level:3},{value:"Model Performance",id:"model-performance",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Shenzhen, China",src:t(871150).A+"",width:"2385",height:"825"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#working-with-multiple-python-versions-on-arch-linux",children:"Working with multiple Python Versions on Arch Linux"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#setting-up-an-virtual-environment",children:"Setting up an Virtual Environment"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#installation",children:"Installation"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#jupyter-notebook",children:"Jupyter Notebook"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#importing-data",children:"Importing Data"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#using-prophet",children:"Using Prophet"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#fit-a-model",children:"Fit a Model"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#make-prediction",children:"Make Prediction"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#model-performance",children:"Model Performance"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"working-with-multiple-python-versions-on-arch-linux",children:"Working with multiple Python Versions on Arch Linux"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Issues with PyStan"})," cannot get it - as a FBProphet dependency - installed on ",(0,r.jsx)(n.strong,{children:"Python v3.9"}),". So I had to add an older version:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo pacman -S yay\r\nyay -S python37\n"})}),"\n",(0,r.jsx)(n.p,{children:"Verify that you can use it - and your main version is not broken:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"python --version\r\nPython 3.9.7\r\n\r\npython3.7 --version\r\nPython 3.7.12\n"})}),"\n",(0,r.jsx)(n.h3,{id:"setting-up-an-virtual-environment",children:"Setting up an Virtual Environment"}),"\n",(0,r.jsx)(n.p,{children:"Create a virtual environment using the Python version:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"python3.7 -m venv venv\r\nsource venv/bin/activate\n"})}),"\n",(0,r.jsx)(n.p,{children:"Verify that you get the older version from inside the environment:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"python --version\r\nPython 3.7.12\n"})}),"\n",(0,r.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(n.p,{children:"I created a dependency file to install everything in one go - but this would install the incorrect version of PyStan for FBProphet. Just pre-install the correct version by hand and the Prophet installer will skip this step and continue it's work:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"pip install pystan==2.19.1.1\n"})}),"\n",(0,r.jsx)(n.p,{children:"Since I am going to work in a jupyter notebook I also need to install and to make some preparation to have it use the old version of Python:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"pip install ipykernel\r\npython3.7 -m ipykernel install --user --name=prophet\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Now I can create the ",(0,r.jsx)(n.code,{children:"dependencies.txt"})," file:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"jupyter\r\npandas\r\nplotly\r\nmatplotlib\r\nfbprophet\n"})}),"\n",(0,r.jsx)(n.p,{children:"And install it:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"pip install -r dependencies.txt\n"})}),"\n",(0,r.jsx)(n.p,{children:"Success! Getting to work now :)"}),"\n",(0,r.jsx)(n.h2,{id:"jupyter-notebook",children:"Jupyter Notebook"}),"\n",(0,r.jsx)(n.p,{children:"Start the environment:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"jupyter notebook\n"})}),"\n",(0,r.jsx)(n.p,{children:"And create a new notebook using the iPyKernel created earlier:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Introduction into FB Prophet",src:t(451424).A+"",width:"1152",height:"200"})}),"\n",(0,r.jsx)(n.p,{children:"Now I can check if my environment actually works by importing all the libraries I am going to need into my notebook:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"import pandas as pd\r\nimport matplotlib.pyplot as pp\r\nfrom fbprophet import Prophet\r\nfrom fbprophet.diagnostics import cross_validation\r\nfrom fbprophet.diagnostics import performance_metrics\r\nfrom fbprophet.plot import plot_cross_validation_metric\n"})}),"\n",(0,r.jsx)(n.p,{children:"When this cell runs without errors - you are good to go!"}),"\n",(0,r.jsx)(n.h2,{id:"importing-data",children:"Importing Data"}),"\n",(0,r.jsxs)(n.p,{children:["I want to use the ",(0,r.jsx)(n.a,{href:"https://www.ecdc.europa.eu/en/publications-data/data-daily-new-cases-covid-19-eueea-country",children:"Data on the daily number of new reported COVID-19 cases and deaths by EU/EEA country"}),". I extracted countries of interest from the available Excel file and saved them into ",(0,r.jsx)(n.strong,{children:"data/*.csv"})," files. I can import them into the notebook with:"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Introduction into FB Prophet",src:t(806459).A+"",width:"1055",height:"442"})}),"\n",(0,r.jsx)(n.p,{children:"I brought in all columns into the Panda data frame. But for now I want to concentrate only on the mortality rate of covid - how many people have died from this disease that has changed all of our life as a percentage to the entire population of the country:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Introduction into FB Prophet",src:t(541106).A+"",width:"1065",height:"668"})}),"\n",(0,r.jsx)(n.p,{children:"Prophet requires us to rename the columns:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Rename date and value column names for Facebook Prophet\r\ndf.rename(columns = {\r\n    "dateRep": "ds",\r\n    "MortPercentage": "y"\r\n}, inplace = True)\n'})}),"\n",(0,r.jsx)(n.p,{children:"And we can take a look at our data by plotting it:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'pp.style.use("ggplot")\r\ngraph = df.set_index("ds").plot(figsize=(20,10))\r\ngraph.set_title("Relative Mortality - COVID19")\r\ngraph.set_xlabel("Date")\r\ngraph.set_ylabel("Death rel. to Population [%]")\r\npp.show()\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Introduction into FB Prophet",src:t(922669).A+"",width:"981",height:"499"})}),"\n",(0,r.jsx)(n.p,{children:"The data is almost a flat line for most of the pandemic with a stark increase at the beginning of 2022 (delayed deaths after the holidays? Early Omicron effect?). And it looks identical to the graph I am getting for all the EU countries I tested. It is not ideal to train a prediction model on."}),"\n",(0,r.jsx)(n.p,{children:"So I added a column to my data where I added up all deaths and re-plotted:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Introduction into FB Prophet",src:t(396516).A+"",width:"995",height:"499"})}),"\n",(0,r.jsx)(n.p,{children:"Now I can see a steady increase. There is still this explosion at the end that will throw off the prediction model. But let's see what Prophet does with this data set."}),"\n",(0,r.jsx)(n.h2,{id:"using-prophet",children:"Using Prophet"}),"\n",(0,r.jsx)(n.h3,{id:"fit-a-model",children:"Fit a Model"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"# Fit a model with Prophet\r\nINTERVAL_WIDTH = 0.9\r\nmodel = Prophet(interval_width = INTERVAL_WIDTH,\r\n                daily_seasonality=True)\r\n\r\nmodel.fit(df)\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"Iter      log prob        ||dx||      ||grad||       alpha      alpha0  # evals  Notes \r\n      99       724.378    0.00718031       139.315      0.3324           1      135   \r\n    Iter      log prob        ||dx||      ||grad||       alpha      alpha0  # evals  Notes \r\n     124       725.949   0.000456015       117.735   3.512e-06       0.001      214  LS failed, Hessian reset \r\n     187       727.661   0.000866116        167.82   1.014e-05       0.001      346  LS failed, Hessian reset \r\n     199       727.942    0.00199099       72.1614           1           1      363   \r\n    Iter      log prob        ||dx||      ||grad||       alpha      alpha0  # evals  Notes \r\n     214       728.179   0.000101734       24.5358   2.882e-06       0.001      421  LS failed, Hessian reset \r\n     256         728.5   0.000721259       107.772   7.301e-06       0.001      510  LS failed, Hessian reset \r\n     299        728.54   5.93182e-06       68.6047           1           1      566   \r\n    Iter      log prob        ||dx||      ||grad||       alpha      alpha0  # evals  Notes \r\n     317       728.541   1.73007e-05       56.2555   1.914e-07       0.001      635  LS failed, Hessian reset \r\n     338       728.542   7.27887e-08       37.9324      0.2247           1      671   \r\nOptimization terminated normally: \r\n  Convergence detected: relative gradient magnitude is below tolerance\n"})}),"\n",(0,r.jsx)(n.h3,{id:"make-prediction",children:"Make Prediction"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Make predictions with Prophet\r\nNUMBER_OF_PERIODS = 100\r\npred_df = model.make_future_dataframe(periods = NUMBER_OF_PERIODS)\r\n\r\nprediction = model.predict(pred_df)\r\npred_100_days = prediction[["yhat"]].iloc[[-1]]\r\npred_100_days\n'})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{}),(0,r.jsx)(n.th,{children:"yhat"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"411"}),(0,r.jsx)(n.td,{children:"-849.961226"})]})})]}),"\n",(0,r.jsx)(n.h3,{id:"model-performance",children:"Model Performance"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Analyze model performance\r\ndf_xeval = cross_validation(model,\r\n                            initial="100 days",\r\n                            period="50 days",\r\n                            horizon="10 days")\r\ndf_xeval\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Introduction into FB Prophet",src:t(310079).A+"",width:"1011",height:"302"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"## mean-square-error(mse),root-mean-square-error(rmse),\r\n## model-absolute-error(mae),mean-absolute-percentage-error(mape),\r\n## median-absolute-percentage-error(mdape), coverage\r\ndf_perf = performance_metrics(df_xeval)\r\ndf_perf\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Introduction into FB Prophet",src:t(531990).A+"",width:"1065",height:"441"})}),"\n",(0,r.jsx)(n.p,{children:"Print different error messages:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'plot_cross_validation_metric(df_xeval, metric="mse")\r\n\r\nplot_cross_validation_metric(df_xeval, metric="rmse")\r\n\r\nplot_cross_validation_metric(df_xeval, metric="mae")\r\n\r\nplot_cross_validation_metric(df_xeval, metric="mape")\r\n\r\nplot_cross_validation_metric(df_xeval, metric="mdape")\r\n\r\nplot_cross_validation_metric(df_xeval, metric="coverage")\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},451424:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/jupyter_prophet_01-90f982173a6ff0805072ef3fd87cede8.png"},806459:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/jupyter_prophet_02-ee513062f98df7b0a1f0abcb098ce37f.png"},541106:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/jupyter_prophet_03-4e8b0dbdb2861c0738990643a6d2f3ad.png"},922669:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/jupyter_prophet_04-95596acf6e6ca75cf20e199d6df5c7e7.png"},396516:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/jupyter_prophet_05-fc65cc18812c89c03e2d6edd474847f7.png"},310079:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/jupyter_prophet_06-d9b3ca3bea2a520a23adf5a728127047.png"},531990:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/jupyter_prophet_07-f6040444cf64f34879be7faca4ea6140.png"},871150:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/photo-kt443t6d_64hdh43hfh6dgjdfhg4_d-08bdf1674ecb1534111947a5d55c314a.jpg"},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var r=t(296540);const i={},a=r.createContext(i);function o(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);